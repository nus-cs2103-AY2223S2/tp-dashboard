[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"# AutoM8","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-W17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103-W17-4/tp/actions)","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-W17-4/tp/branch/master/graph/badge.svg?token\u003dXXJ15FVPPS)](https://codecov.io/gh/AY2223S2-CS2103-W17-4/tp)","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"*UI Image to be added soon*","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"AutoM8 is a desktop app for an auto repair shop, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"* For the detailed documentation of this project, see our [website](https://ay2223s2-cs2103-w17-4.github.io/tp/)","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"* This project is based on the AddressBook-Level3 project created by the SE-Education initiative. See [se-education.org](https://se-education.org#https://se-education.org) for more info.","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"kimberlybp":7,"junlee1991":1,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"junlee1991"},"content":"    archiveFileName \u003d \u0027autom8.jar\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"junlee1991":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"### Leow Li Yong","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"\u003cimg src\u003d\"images/ginloy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"[[github](http://github.com/ginloy)] [[portfolio](team/ginloy.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"### Kimberly Barcelon Pontanares","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"\u003cimg src\u003d\"images/kimberlybp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"[[github](http://github.com/kimberlybp)]","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"[[portfolio](team/kimberlybp.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Julio Harjo","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"\u003cimg src\u003d\"images/junlee1991.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"[[github](https://github.com/junlee1991)]","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"[[portfolio](team/junlee1991.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"### Edwin Lim","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"\u003cimg src\u003d\"images/9fc70c892.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"[[github](https://github.com/9fc70c892)]","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"[[portfolio](team/edwin.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"* Responsibilities: Dev Ops","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"kimberlybp":5,"ginloy":3,"9fc70c892":9,"junlee1991":3,"-":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103-W17-4/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103-W17-4/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103-W17-4/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user attempts to delete a customer/service/appointment/part/technician who has the id of 1  (i.e. `deletecustomer 1`).","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"This diagram is applicable also for other commands such as the add equivalent.","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"Omitted from this image is that the `XCommand`, being an  instance of`RedoableCommand`, methods related to it is handled here. For more information, scroll down to the relevant section below.","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103-W17-4/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `XListPanel` (`X` is a placeholder for a specific model list panel  e.g., `CustomerListPanel`, `VehicleListPanel`), `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103-W17-4/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103-W17-4/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"* depends on some classes in the `Model` component, as it displays specific objects residing in the `Model` such as the `Customer`, `Vehicle`, `Service`, `Appointment` and `PartMap` objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"* also depends on some mapping classes in the `Model` component as certain objects have an integer array of object ids that refer to another object. One example is the Customer class, which has a `HashSet\u003cInteger\u003e` of `Vehicle` IDs. To associate each `Customer` object with the corresponding `Vehicle` objects, the Model uses an object called `CustomerVehicleMap`. The `UI` component then displays the relevant objects based on these mappings. In essence, the `Model` uses these mapping classes to ensure that objects with references to one another are properly connected and displayed in the user interface.","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"9fc70c892"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103-W17-4/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"9fc70c892"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCustomerCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"9fc70c892"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a customer).","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"9fc70c892"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"deletecustomer 1\")` API call.","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"9fc70c892"},"content":"This diagram is applicable to all `deleteXCommand` commands.","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"9fc70c892"},"content":"Omitted from this image is that the `XCommand`, being an  instance of `RedoableCommand`, methods related to it is handled here. For more information, scroll down to the relevant section below.","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XCommandParser` (`X` is a placeholder for the specific command name e.g., `AddCustomerCommandParser`) which uses the other classes shown above to parse the user command and create a `XCommand` object (e.g., `AddCustomerCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"* All `XCommandParser` classes (e.g., `AddCustomerCommandParser`, `DeleteCustomerCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103-W17-4/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"* stores the address book data i.e., all `X` objects (which are contained in a `UniqueXList` object) where X are Customer/Service/Appointments/Vehicles/Technicians, and all `Part` objects (which are contained in a `partMap` object).","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"* in the case of X, stores the currently \u0027selected\u0027 `X` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cX\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"* in the case of Part, stores the currently \u0027selected\u0027 `Part` objects (e.g., results of a search query) as a separate hashmap.","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"* in the case of ServiceList, it acts functionally the same as an `UniqueXList` except that the entry can be non-unique.","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"9fc70c892"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103-W17-4/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"* can save both AutoM8 shop data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"kimberlybp"},"content":"* inherits from both `ShopStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"### Add Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"### Current Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"The add function is facilitated by `AddXCommand` (`X` is a placeholder for the specific entity to be added e.g. `AddCustomerCommand`)","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"Here `X` can be `Customer/Appointment/Service/Vehicle/Part/Technician`.","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the `execute(\"addX args*\")` API call.","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"\u003cimg src\u003d\"images/AddXSequenceDiagram.png\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"The `addX(x)` method of `Model` adds the entity into the system via adding the entity into `Shop`.","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"9fc70c892"},"content":"### View Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"9fc70c892"},"content":"### Current Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"9fc70c892"},"content":"The view function is facilitated by `ViewXCommand` (`X` is a placeholder for the specific command name e.g., `ViewCustomerCommand`).","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"Here X can be appointment/customer/service/technician/vehicle.","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute(\"viewcustomer 1\") API call.","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"\u003cimg src\u003d\"images/ViewSequenceDiagram.png\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"9fc70c892"},"content":"This feature is implemented this way to best match how existing list and find function is done.","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"9fc70c892"},"content":"This is done this way so that the code is easily maintainable and readable if once the developer understands how `listX` functions works.","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"However, as you may have noticed, `ViewPartCommand`\u0027s diagram differs slightly.","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"The Sequence Diagram that illustrates the interactions within the Logic component for the execute(\"viewpartcommand 1\") API call is to be added.","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"9fc70c892"},"content":"* To add image *","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"junlee1991"},"content":"### TotalAppointmentCommand Feature","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"junlee1991"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"junlee1991"},"content":"The `totalAppointmentCommand` feature mainly involves iterating through the appointment list and checking if the specified date falls on the same date as the appointment. The way that the validation check is done is by setting the previous day to be the start date and the next day to be the end date. Finally, we check if the current appointment is within the start and end date.","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"junlee1991"},"content":"### Undo/Redo Feature","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"junlee1991"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"junlee1991"},"content":"The undo/redo mechanism is facilitated by `StackUndoRedo`. The implemented undo/redo feature would be best described as two stacks of commands that the user has performed:","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"junlee1991"},"content":"- `undoStack` serves to store a \"history\" of the commands they have performed.","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"junlee1991"},"content":"- `redoStack` is a collection of their commands that lead up to initial state at which they started performing the undo.","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"junlee1991"},"content":"The central concept is to store a stack of commands that essentially functions as a history-list of the commands. Essentially, we leverage on the stack\u0027s data structure which is a linear data structure based on the principle of Last In First Out (LIFO). Based on the implementation described above, `undoStack` is populated by pushing a user\u0027s command in the application.","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"junlee1991"},"content":"Then, when the user performs an undo, the command is firstly popped from `undoStack` and used to restore previous state, and then we store that command onto `redoStack`.","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"junlee1991"},"content":"`StackUndoRedo` contains 2 stacks, `undoStack` and `redoStack`. The `undoStack` and `redoStack` contain commands that are of type `RedoableCommand`. `RedoableCommand` extends Command and has the following attributes and methods.","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"junlee1991"},"content":"![UndoRedo0](images/UndoRedo0.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"junlee1991"},"content":"When a `RedoableCommand` is being executed, the methods `saveAddressBookSnapshot(Model model)` will be called. This ensures that the current states are stored within the command.","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"junlee1991"},"content":"After a command is executed, it will be added into the `StackUndoRedo`. The specific process is explained in the activity diagram below.","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"junlee1991"},"content":"![UndoRedo0](images/UndoRedo1.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"junlee1991"},"content":"Next, when undo is being performed, `undoStack` will remove the first command in its stack and add it to `redoStack`. It will then call `RedoableCommand` `undo()` of the command that is removed. The `undo()` method will then set the model to the previous snapshot of `saveAddressBookSnapshot`.","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"junlee1991"},"content":"Likewise, when redo is being performed, `redoStack` will remove the first command in its stack and add it to `undoStack`. It will then call `RedoableCommand` `redo()` of the command that is removed. The `redo()` method will then execute the command again.","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"junlee1991"},"content":"Given below is an example of a usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"junlee1991"},"content":"Step 1. The user launches the application. The `StackUndoRedo` will be initialized.","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"junlee1991"},"content":"![UndoRedo0](images/UndoRedo2.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"junlee1991"},"content":"Step 2. The user executes delete command. The delete command will be pushed into the `undoStack` of `StackUndoRedo`.","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"junlee1991"},"content":"![UndoRedo0](images/UndoRedo3.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"junlee1991"},"content":"Step 3. The user executes add customer command to add a new customer. Similarly, the add command will be pushed into the `undoStack` of `StackUndoRedo`.","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"junlee1991"},"content":"![UndoRedo0](images/UndoRedo4.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"junlee1991"},"content":"Step 4. The user now decides that adding of customer was a mistake, and decides to undo that action by executing the undo command.","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"junlee1991"},"content":"![UndoRedo0](images/UndoRedo5.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"junlee1991"},"content":"\u003e \u003cb\u003eNote:\u003c/b\u003e undoCommand will check if there is any command that can be undone by calling `StackUndoRedo` canUndo() method.","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"junlee1991"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"junlee1991"},"content":"![UndoRedo0](images/UndoRedo6.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"junlee1991"},"content":"\u003e \u003cb\u003eNote:\u003c/b\u003e The redo command will call `popRedo()` method in `StackUndoRedo`and `redo()` method in `RedoableCommand` .","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"junlee1991"},"content":"Step 5. The user executes listcustomers. Due to not being an `UndoCommand` or `RedoCommand`, it causes the `redoStack`","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"junlee1991"},"content":"to be cleared.  Commands that are not undoable are not added into the `undoStack`.","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"junlee1991"},"content":"![UndoRedo0](images/UndoRedo7.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"junlee1991"},"content":"    * Pros: Implementation is easy.","lastModifiedDate":"2023-03-15"},{"lineNumber":277,"author":{"gitId":"junlee1991"},"content":"    * Cons: Memory usage may cause performance issues.","lastModifiedDate":"2023-03-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":279,"author":{"gitId":"junlee1991"},"content":"* **Alternative 2:** Individual command has attached logic that allows it to undo/redo by itself.","lastModifiedDate":"2023-03-15"},{"lineNumber":280,"author":{"gitId":"junlee1991"},"content":"    * Pros: Will use less memory (e.g. just save what is being deleted).","lastModifiedDate":"2023-03-15"},{"lineNumber":281,"author":{"gitId":"junlee1991"},"content":"    * Cons: Must ensure that the implementation of each command is correct. Adds a lot of complexity that may not seem justified as it is to only accommodate the undo/redo feature.","lastModifiedDate":"2023-03-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":283,"author":{"gitId":"junlee1991"},"content":"**Aspect: Data structure to support the undo/redo commands:**","lastModifiedDate":"2023-03-15"},{"lineNumber":284,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":285,"author":{"gitId":"junlee1991"},"content":"* **Alternative 1 (current choice):** Use 2 stacks to store the history of the Models.","lastModifiedDate":"2023-03-15"},{"lineNumber":286,"author":{"gitId":"junlee1991"},"content":"    * Pros: Implementation is easier and the logic would be much more manageable to debug.","lastModifiedDate":"2023-03-15"},{"lineNumber":287,"author":{"gitId":"junlee1991"},"content":"    * Cons: Duplicated Logic.","lastModifiedDate":"2023-03-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"junlee1991"},"content":"* **Alternative 2:** Use `HistoryManager` for undo/redo.","lastModifiedDate":"2023-03-15"},{"lineNumber":290,"author":{"gitId":"junlee1991"},"content":"    * Pros: Does not need to maintain separate stacks and able to use what is in the codebase.","lastModifiedDate":"2023-03-15"},{"lineNumber":291,"author":{"gitId":"junlee1991"},"content":"    * Cons: Single Responsibility Principle and Separation of Concerns are violated as `HistoryManager` would need to handle more than one thing. For example, it would need to handle the undo and redo as well as the history of the application. This is in contrast with a HistoryManager which is only responsible for the history of the application.","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"junlee1991"},"content":"* Auto repair shop owners who want to keep track of their customers, vehicles, logistics and appointments","lastModifiedDate":"2023-03-07"},{"lineNumber":317,"author":{"gitId":"junlee1991"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2023-03-07"},{"lineNumber":318,"author":{"gitId":"junlee1991"},"content":"* fast typist","lastModifiedDate":"2023-03-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":320,"author":{"gitId":"junlee1991"},"content":"* is comfortable interacting with CLI apps","lastModifiedDate":"2023-03-07"},{"lineNumber":321,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":322,"author":{"gitId":"junlee1991"},"content":"**Value proposition**: AutoM8 provides a platform that allows auto repair shop owners to manage their customer information, service details and logistics","lastModifiedDate":"2023-03-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                  | So that I can…​                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"junlee1991"},"content":"| -------- |--------------------------------------------|-----------------------------------------------|------------------------------------------------------------------|","lastModifiedDate":"2023-03-07"},{"lineNumber":332,"author":{"gitId":"junlee1991"},"content":"| `* * *`  | Auto repair shop owner                     | add appointments I\u0027m attending                | Keep track of appointments for the day                           |","lastModifiedDate":"2023-03-07"},{"lineNumber":333,"author":{"gitId":"junlee1991"},"content":"| `* * *`  | Auto repair shop owner                     | add vehicle I want to fix                     | Keep track of vehicle                                            |","lastModifiedDate":"2023-03-07"},{"lineNumber":334,"author":{"gitId":"junlee1991"},"content":"| `* * *`  | Auto repair shop owner                     | add spare parts                               | Keep track of how many spare parts remaining                     |","lastModifiedDate":"2023-03-07"},{"lineNumber":335,"author":{"gitId":"junlee1991"},"content":"| `* * *`  | Auto repair shop owner                     | add customer                                  | Keep track of customer details                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":336,"author":{"gitId":"junlee1991"},"content":"| `* * *`  | Auto repair shop owner                     | map which car plate belongs to which customer | hand the right car to the appropriate owner                      |","lastModifiedDate":"2023-03-07"},{"lineNumber":337,"author":{"gitId":"junlee1991"},"content":"| `* * *`  | Auto repair shop owner                     | delete a contact                              | remove entries I no longer need                                  |","lastModifiedDate":"2023-03-07"},{"lineNumber":338,"author":{"gitId":"junlee1991"},"content":"| `* * *`  | Auto repair shop owner                     | find a contact                                | locate details of that contact without searching the entire list |","lastModifiedDate":"2023-03-07"},{"lineNumber":339,"author":{"gitId":"junlee1991"},"content":"| `* * *`  | Auto repair shop owner                     | sort vehicles by brand                        | divide the vehicles                                              |","lastModifiedDate":"2023-03-07"},{"lineNumber":340,"author":{"gitId":"junlee1991"},"content":"| `* * *`  | Auto repair shop owner                     | edit a contact                                | make changes in case of mistakes                                 |","lastModifiedDate":"2023-03-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"junlee1991"},"content":"AutoM8 provides the necessary features that support the management of customer, vehicle, servicing, appointment information such as adding, deleting, listing, sorting, finding and editing. The Use Cases listed below demonstrate their usages.","lastModifiedDate":"2023-03-07"},{"lineNumber":347,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":348,"author":{"gitId":"junlee1991"},"content":"(For all use cases below, the **System** is `AutoM8` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-07"},{"lineNumber":349,"author":{"gitId":"junlee1991"},"content":"\u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":350,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":351,"author":{"gitId":"junlee1991"},"content":"**Use case: UC01 - Listing all customers**","lastModifiedDate":"2023-03-07"},{"lineNumber":352,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":353,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":354,"author":{"gitId":"junlee1991"},"content":"1. User requests to list out all customers.","lastModifiedDate":"2023-03-07"},{"lineNumber":355,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of all customers.","lastModifiedDate":"2023-03-07"},{"lineNumber":356,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":357,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":358,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":359,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":360,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":361,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":362,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":363,"author":{"gitId":"junlee1991"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":364,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":365,"author":{"gitId":"junlee1991"},"content":"**Use case: UC02 - Listing all vehicles**","lastModifiedDate":"2023-03-07"},{"lineNumber":366,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":367,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":368,"author":{"gitId":"junlee1991"},"content":"1. User requests to list out all vehicles.","lastModifiedDate":"2023-03-07"},{"lineNumber":369,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of all vehicles.","lastModifiedDate":"2023-03-07"},{"lineNumber":370,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":371,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":372,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":373,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":374,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":375,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":376,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":377,"author":{"gitId":"junlee1991"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":379,"author":{"gitId":"junlee1991"},"content":"**Use case: UC03 - Listing all customer appointments**","lastModifiedDate":"2023-03-31"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":382,"author":{"gitId":"junlee1991"},"content":"1. User requests to list out all customer appointments.","lastModifiedDate":"2023-03-31"},{"lineNumber":383,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of all customer appointments.","lastModifiedDate":"2023-03-31"},{"lineNumber":384,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":385,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":386,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":387,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":388,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":389,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":390,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":391,"author":{"gitId":"junlee1991"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"junlee1991"},"content":"**Use case: UC04 - Listing all spare parts**","lastModifiedDate":"2023-03-31"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-31"},{"lineNumber":396,"author":{"gitId":"junlee1991"},"content":"1. User requests to list out all spare parts.","lastModifiedDate":"2023-03-31"},{"lineNumber":397,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of all spare parts.","lastModifiedDate":"2023-03-31"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":399,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-31"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-31"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":403,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-31"},{"lineNumber":404,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-31"},{"lineNumber":405,"author":{"gitId":"junlee1991"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":406,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":407,"author":{"gitId":"junlee1991"},"content":"**Use case: UC05 - Listing all service**","lastModifiedDate":"2023-03-31"},{"lineNumber":408,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":409,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-31"},{"lineNumber":410,"author":{"gitId":"junlee1991"},"content":"1. User requests to list out all service .","lastModifiedDate":"2023-03-31"},{"lineNumber":411,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of all service.","lastModifiedDate":"2023-03-31"},{"lineNumber":412,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":413,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-31"},{"lineNumber":414,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":415,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-31"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":417,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-31"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-03-31"},{"lineNumber":419,"author":{"gitId":"junlee1991"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":421,"author":{"gitId":"junlee1991"},"content":"**Use case: UC06 - Adding a customer**","lastModifiedDate":"2023-03-31"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":423,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":424,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":425,"author":{"gitId":"junlee1991"},"content":"1. User requests to add a customer as a contact.","lastModifiedDate":"2023-03-07"},{"lineNumber":426,"author":{"gitId":"junlee1991"},"content":"2. User inputs the information of the customer.","lastModifiedDate":"2023-03-07"},{"lineNumber":427,"author":{"gitId":"junlee1991"},"content":"3. AutoM8 adds the customer as a contact.","lastModifiedDate":"2023-03-07"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"junlee1991"},"content":"- 3a. The given name already exists in AutoM8.","lastModifiedDate":"2023-03-07"},{"lineNumber":434,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":436,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":438,"author":{"gitId":"junlee1991"},"content":"**Use case: UC07 - Adding a vehicle**","lastModifiedDate":"2023-03-31"},{"lineNumber":439,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":440,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"junlee1991"},"content":"1. User requests to add a vehicle into the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":443,"author":{"gitId":"junlee1991"},"content":"2. User inputs the information of the vehicle.","lastModifiedDate":"2023-03-07"},{"lineNumber":444,"author":{"gitId":"junlee1991"},"content":"3. AutoM8 adds the vehicle as a contact.","lastModifiedDate":"2023-03-07"},{"lineNumber":445,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":446,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":447,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":448,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":449,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":450,"author":{"gitId":"junlee1991"},"content":"- 3a. The given plate number already exists in AutoM8.","lastModifiedDate":"2023-03-07"},{"lineNumber":451,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"junlee1991"},"content":"**Use case: UC08 - Adding a customer appointment**","lastModifiedDate":"2023-03-31"},{"lineNumber":456,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":457,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":458,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":459,"author":{"gitId":"junlee1991"},"content":"1. User requests to add a customer appointment into a list.","lastModifiedDate":"2023-03-07"},{"lineNumber":460,"author":{"gitId":"junlee1991"},"content":"2. User inputs the information of the customer appointment.","lastModifiedDate":"2023-03-07"},{"lineNumber":461,"author":{"gitId":"junlee1991"},"content":"3. AutoM8 adds the customer appointment into the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":462,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":463,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":464,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":465,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":466,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":467,"author":{"gitId":"junlee1991"},"content":"- 3a. The given customer already has an appointment in AutoM8.","lastModifiedDate":"2023-03-07"},{"lineNumber":468,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":469,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":470,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":471,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":472,"author":{"gitId":"junlee1991"},"content":"**Use case: UC09 - Adding a service to a vehicle**","lastModifiedDate":"2023-03-31"},{"lineNumber":473,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":474,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":475,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":476,"author":{"gitId":"junlee1991"},"content":"1. User requests to add a service into a list.","lastModifiedDate":"2023-03-07"},{"lineNumber":477,"author":{"gitId":"junlee1991"},"content":"2. User inputs the information of the service.","lastModifiedDate":"2023-03-07"},{"lineNumber":478,"author":{"gitId":"junlee1991"},"content":"3. AutoM8 adds the service into the book.","lastModifiedDate":"2023-03-07"},{"lineNumber":479,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":480,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":481,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":482,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":483,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":484,"author":{"gitId":"junlee1991"},"content":"- 3a. The given vehicle plate number already has a service assigned in AutoM8.","lastModifiedDate":"2023-03-07"},{"lineNumber":485,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":486,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":487,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":488,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":489,"author":{"gitId":"junlee1991"},"content":"**Use case: UC10 - Adding a spare part**","lastModifiedDate":"2023-03-31"},{"lineNumber":490,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":491,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":492,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":493,"author":{"gitId":"junlee1991"},"content":"1. User requests to add a spare parts into a list.","lastModifiedDate":"2023-03-07"},{"lineNumber":494,"author":{"gitId":"junlee1991"},"content":"2. User inputs the information of the spare part.","lastModifiedDate":"2023-03-07"},{"lineNumber":495,"author":{"gitId":"junlee1991"},"content":"3. AutoM8 adds the spare part into the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":496,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":497,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":498,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":499,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":500,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":501,"author":{"gitId":"junlee1991"},"content":"- 3a. The specified spare part name already exist in the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":502,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 shows an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":503,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":504,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":505,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":506,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":507,"author":{"gitId":"junlee1991"},"content":"**Use case: UC11 - Editing a customer\u0027s details**","lastModifiedDate":"2023-03-31"},{"lineNumber":508,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":509,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":510,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":511,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":512,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of customers.","lastModifiedDate":"2023-03-07"},{"lineNumber":513,"author":{"gitId":"junlee1991"},"content":"3. User requests to edit a contact on the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":514,"author":{"gitId":"junlee1991"},"content":"4. User inputs the updated information.","lastModifiedDate":"2023-03-07"},{"lineNumber":515,"author":{"gitId":"junlee1991"},"content":"5. AutoM8 updates the contact\u0027s details.","lastModifiedDate":"2023-03-07"},{"lineNumber":516,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":517,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":518,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":519,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":520,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":521,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":522,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":523,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":524,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":525,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":526,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":527,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":528,"author":{"gitId":"junlee1991"},"content":"**Use case: UC12 - Editing a vehicle\u0027s details**","lastModifiedDate":"2023-03-31"},{"lineNumber":529,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":530,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":531,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":532,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist vehicle contacts (UC02)\u003c/u\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":533,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of vehicles.","lastModifiedDate":"2023-03-07"},{"lineNumber":534,"author":{"gitId":"junlee1991"},"content":"3. User requests to edit a vehicle on the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":535,"author":{"gitId":"junlee1991"},"content":"4. User inputs the updated information.","lastModifiedDate":"2023-03-07"},{"lineNumber":536,"author":{"gitId":"junlee1991"},"content":"5. AutoM8 updates the vehicle\u0027s details.","lastModifiedDate":"2023-03-07"},{"lineNumber":537,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":538,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":539,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":540,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":541,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":542,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":543,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":544,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":545,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":546,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":547,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":548,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":549,"author":{"gitId":"junlee1991"},"content":"**Use case: UC13 - Editing spare part\u0027s details**","lastModifiedDate":"2023-03-31"},{"lineNumber":550,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":551,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":552,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":553,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist spare parts as contacts (UC04)\u003c/u\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":554,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of spare parts.","lastModifiedDate":"2023-03-07"},{"lineNumber":555,"author":{"gitId":"junlee1991"},"content":"3. User requests to edit a spare part on the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":556,"author":{"gitId":"junlee1991"},"content":"4. User inputs the updated information.","lastModifiedDate":"2023-03-07"},{"lineNumber":557,"author":{"gitId":"junlee1991"},"content":"5. AutoM8 updates the spare part details.","lastModifiedDate":"2023-03-07"},{"lineNumber":558,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":559,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":560,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":561,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":562,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":563,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":564,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":565,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":566,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":567,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":568,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":569,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":570,"author":{"gitId":"junlee1991"},"content":"**Use case: UC14 - Editing an appointment detail**","lastModifiedDate":"2023-03-31"},{"lineNumber":571,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":572,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":573,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":574,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist appointment as contacts (UC03)\u003c/u\u003e.","lastModifiedDate":"2023-03-31"},{"lineNumber":575,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of appointments.","lastModifiedDate":"2023-03-31"},{"lineNumber":576,"author":{"gitId":"junlee1991"},"content":"3. User requests to edit an appointment on the list.","lastModifiedDate":"2023-03-31"},{"lineNumber":577,"author":{"gitId":"junlee1991"},"content":"4. User inputs the updated information.","lastModifiedDate":"2023-03-07"},{"lineNumber":578,"author":{"gitId":"junlee1991"},"content":"5. AutoM8 updates the appointment details.","lastModifiedDate":"2023-03-31"},{"lineNumber":579,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":580,"author":{"gitId":"junlee1991"},"content":"   Use case end.","lastModifiedDate":"2023-03-07"},{"lineNumber":581,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":582,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":583,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":584,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":585,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":586,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":587,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":588,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":589,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":590,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":591,"author":{"gitId":"junlee1991"},"content":"**Use case: UC15 - Editing a service detail**","lastModifiedDate":"2023-03-31"},{"lineNumber":592,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":593,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":594,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":595,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist of service as contacts (UC05)\u003c/u\u003e.","lastModifiedDate":"2023-03-31"},{"lineNumber":596,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of service.","lastModifiedDate":"2023-03-31"},{"lineNumber":597,"author":{"gitId":"junlee1991"},"content":"3. User requests to edit a service on the list.","lastModifiedDate":"2023-03-31"},{"lineNumber":598,"author":{"gitId":"junlee1991"},"content":"4. User inputs the updated information.","lastModifiedDate":"2023-03-31"},{"lineNumber":599,"author":{"gitId":"junlee1991"},"content":"5. AutoM8 updates the the appointment details.","lastModifiedDate":"2023-03-31"},{"lineNumber":600,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":601,"author":{"gitId":"junlee1991"},"content":"   Use case end.","lastModifiedDate":"2023-03-31"},{"lineNumber":602,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":603,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":604,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-31"},{"lineNumber":605,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":606,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-31"},{"lineNumber":607,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-31"},{"lineNumber":608,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":609,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-31"},{"lineNumber":610,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":611,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":612,"author":{"gitId":"junlee1991"},"content":"**Use case: UC16 - Deleting a customer**","lastModifiedDate":"2023-03-07"},{"lineNumber":613,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":614,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":615,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist customers (UC01)\u003c/u\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":616,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of customers.","lastModifiedDate":"2023-03-07"},{"lineNumber":617,"author":{"gitId":"junlee1991"},"content":"3. User requests to delete a customer at a given index.","lastModifiedDate":"2023-03-07"},{"lineNumber":618,"author":{"gitId":"junlee1991"},"content":"4. AutoM8 deletes the customer at the index.","lastModifiedDate":"2023-03-07"},{"lineNumber":619,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":620,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":621,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":622,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":623,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":624,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":625,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":626,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":627,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":628,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":629,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":630,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":631,"author":{"gitId":"junlee1991"},"content":"**Use case: UC17 - Deleting a vehicle**","lastModifiedDate":"2023-03-07"},{"lineNumber":632,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":633,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":634,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist of vehicles (UC02)\u003c/u\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":635,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of vehicle.","lastModifiedDate":"2023-03-07"},{"lineNumber":636,"author":{"gitId":"junlee1991"},"content":"3. User requests to delete a vehicle at a given index.","lastModifiedDate":"2023-03-07"},{"lineNumber":637,"author":{"gitId":"junlee1991"},"content":"4. AutoM8 deletes the contact at the index.","lastModifiedDate":"2023-03-07"},{"lineNumber":638,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":639,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":640,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":641,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":642,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":643,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":644,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":645,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":646,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":647,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":648,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":649,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":650,"author":{"gitId":"junlee1991"},"content":"**Use case: UC18 - Deleting a customer appointment**","lastModifiedDate":"2023-03-31"},{"lineNumber":651,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":652,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":653,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist of appointments (UC03)\u003c/u\u003e.","lastModifiedDate":"2023-03-31"},{"lineNumber":654,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of appointments.","lastModifiedDate":"2023-03-31"},{"lineNumber":655,"author":{"gitId":"junlee1991"},"content":"3. User requests to delete an appointment at a given index.","lastModifiedDate":"2023-03-31"},{"lineNumber":656,"author":{"gitId":"junlee1991"},"content":"4. AutoM8 deletes the appointment at the index.","lastModifiedDate":"2023-03-31"},{"lineNumber":657,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":658,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":659,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":660,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":661,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":662,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":663,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":664,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":665,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":666,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":667,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":668,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":669,"author":{"gitId":"junlee1991"},"content":"**Use case: UC19 - Deleting a spare part**","lastModifiedDate":"2023-03-07"},{"lineNumber":670,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":671,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":672,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist of spare parts (UC04)\u003c/u\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":673,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of spare parts.","lastModifiedDate":"2023-03-07"},{"lineNumber":674,"author":{"gitId":"junlee1991"},"content":"3. User requests to delete a spare part at a given index.","lastModifiedDate":"2023-03-07"},{"lineNumber":675,"author":{"gitId":"junlee1991"},"content":"4. AutoM8 deletes the contact at the index.","lastModifiedDate":"2023-03-07"},{"lineNumber":676,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":677,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":678,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":679,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":680,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":681,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":682,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":683,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":684,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":685,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":686,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":687,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":688,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":689,"author":{"gitId":"junlee1991"},"content":"**Use case: UC20 - Sorting vehicles**","lastModifiedDate":"2023-03-07"},{"lineNumber":690,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":691,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":692,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist vehicles (UC01)\u003c/u\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":693,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of vehicles.","lastModifiedDate":"2023-03-07"},{"lineNumber":694,"author":{"gitId":"junlee1991"},"content":"3. User requests to sort vehicles in list.","lastModifiedDate":"2023-03-07"},{"lineNumber":695,"author":{"gitId":"junlee1991"},"content":"4. AutoM8 sorts vehicles according to user\u0027s requirements.","lastModifiedDate":"2023-03-07"},{"lineNumber":696,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":697,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":698,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":699,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":700,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":701,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":702,"author":{"gitId":"junlee1991"},"content":"- 3a. No fields are specified.","lastModifiedDate":"2023-03-07"},{"lineNumber":703,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":704,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":705,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":706,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":707,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":708,"author":{"gitId":"junlee1991"},"content":"**Use case: UC21 - Find a customer**","lastModifiedDate":"2023-03-07"},{"lineNumber":709,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":710,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":711,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":712,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist of customer as contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":713,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of customer.","lastModifiedDate":"2023-03-07"},{"lineNumber":714,"author":{"gitId":"junlee1991"},"content":"3. User requests to find customer on the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":715,"author":{"gitId":"junlee1991"},"content":"4. AutoM8 find customer according to user\u0027s requirements.","lastModifiedDate":"2023-03-07"},{"lineNumber":716,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":717,"author":{"gitId":"junlee1991"},"content":"   Use case end.","lastModifiedDate":"2023-03-07"},{"lineNumber":718,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":719,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":720,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":721,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":722,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":723,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":724,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":725,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":726,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":727,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":728,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":729,"author":{"gitId":"junlee1991"},"content":"**Use case: UC22 - Find a vehicle**","lastModifiedDate":"2023-03-07"},{"lineNumber":730,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":731,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":732,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":733,"author":{"gitId":"junlee1991"},"content":"1. User requests to \u003cu\u003elist of vehicle as contacts (UC02)\u003c/u\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":734,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 shows a list of vehicle.","lastModifiedDate":"2023-03-07"},{"lineNumber":735,"author":{"gitId":"junlee1991"},"content":"3. User requests to find vehicle on the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":736,"author":{"gitId":"junlee1991"},"content":"4. AutoM8 find vehicle according to user\u0027s requirements.","lastModifiedDate":"2023-03-07"},{"lineNumber":737,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":738,"author":{"gitId":"junlee1991"},"content":"   Use case end.","lastModifiedDate":"2023-03-07"},{"lineNumber":739,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":740,"author":{"gitId":"junlee1991"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":741,"author":{"gitId":"junlee1991"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":742,"author":{"gitId":"junlee1991"},"content":"  Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":743,"author":{"gitId":"junlee1991"},"content":"- 3a. The provided index is invalid.","lastModifiedDate":"2023-03-07"},{"lineNumber":744,"author":{"gitId":"junlee1991"},"content":"    - 3a1. AutoM8 displays an error message.","lastModifiedDate":"2023-03-07"},{"lineNumber":745,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":746,"author":{"gitId":"junlee1991"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-07"},{"lineNumber":747,"author":{"gitId":"junlee1991"},"content":"      \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":748,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":749,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":750,"author":{"gitId":"junlee1991"},"content":"**Use case: UC23 - Exiting the application**","lastModifiedDate":"2023-03-07"},{"lineNumber":751,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":752,"author":{"gitId":"junlee1991"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":753,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":754,"author":{"gitId":"junlee1991"},"content":"1. User requests to exit AutoM8.","lastModifiedDate":"2023-03-07"},{"lineNumber":755,"author":{"gitId":"junlee1991"},"content":"2. AutoM8 closes.","lastModifiedDate":"2023-03-07"},{"lineNumber":756,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":757,"author":{"gitId":"junlee1991"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":758,"author":{"gitId":"junlee1991"},"content":"   \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"junlee1991"},"content":"1. The application should be _free_.","lastModifiedDate":"2023-03-06"},{"lineNumber":763,"author":{"gitId":"junlee1991"},"content":"2. It should be easy to understand and use, even for users with little to no experience.","lastModifiedDate":"2023-03-06"},{"lineNumber":764,"author":{"gitId":"junlee1991"},"content":"3. Offline application used by each person.","lastModifiedDate":"2023-03-06"},{"lineNumber":765,"author":{"gitId":"junlee1991"},"content":"4. The application should be able to operate on any _mainstream OS_ such as Linux, MacOS and Windows so long as Java 11 or above is installed.","lastModifiedDate":"2023-03-06"},{"lineNumber":766,"author":{"gitId":"junlee1991"},"content":"5. The product should be highly testable.","lastModifiedDate":"2023-03-06"},{"lineNumber":767,"author":{"gitId":"junlee1991"},"content":"6. Use of clear and concise English should be observed in the documentation","lastModifiedDate":"2023-03-06"},{"lineNumber":768,"author":{"gitId":"junlee1991"},"content":"7. This product does not necessarily need to be installed but can run as an executable.","lastModifiedDate":"2023-03-06"},{"lineNumber":769,"author":{"gitId":"junlee1991"},"content":"8. Contain clear and easy to understand error messages","lastModifiedDate":"2023-03-06"},{"lineNumber":770,"author":{"gitId":"junlee1991"},"content":"9. Should be able to support up to 1000 persons without any noticeable lag in performance for typical usage.","lastModifiedDate":"2023-03-06"},{"lineNumber":771,"author":{"gitId":"junlee1991"},"content":"10. A user that possess above average typing speed for regular text (i.e. not code, not system admin commands) should be able to achieve majority of the task faster using commands than using the mouse.","lastModifiedDate":"2023-03-06"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"junlee1991"},"content":"* **Vehicle**: A 4-wheel machine used to transport people","lastModifiedDate":"2023-03-07"},{"lineNumber":778,"author":{"gitId":"junlee1991"},"content":"* **Plate number**: An identifier put on the front and back of a vehicle","lastModifiedDate":"2023-03-07"},{"lineNumber":779,"author":{"gitId":"junlee1991"},"content":"* **Spare parts**: A duplicate part of a vehicle that can be used to replace a broken part in a car","lastModifiedDate":"2023-03-07"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kimberlybp":6,"ginloy":7,"9fc70c892":38,"junlee1991":466,"-":315}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"AutoM8 is a **desktop app for an auto repair shop, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AutoM8 can get your auto repair shop management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"2. Download the latest `autom8.jar` from [here](https://github.com/AY2223S2-CS2103-W17-4/tp/releases).","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for this application.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar autom8.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    [UI image to be added]","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"  e.g. in `add appointment c/CUSTOMER_ID d/DATE t/TIME`, `CUSTOMER_ID, DATE and Time` are parameters which can be used as `add appointment c/2 d/02/02/2023 t/2pm`.","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"### Add","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"### Adding a customer: `addcustomer`","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"Adds a customer to the system and assigns a unique customer ID.","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"Format: `addcustomer n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAGS]`","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"Example: `addcustomer n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"### Adding a technician: `addtechnician`","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"Adds a technician to the system and assigns a unique staff ID.","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"Format: `addtechnician n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAGS]`","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"Example: `addtechnician n/Robert Low p/90253789 e/roblow@gmail.com a/25 Bedok East Rd, #08-20, SG405100 t/Leader`","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"### Adding a technician to a specific service: `addservicetech`","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"Assigns an existing technician to an existing service","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"Format: `addservicetech s/SERVICE_ID t/TECHNICIAN_ID`","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"Example: `addservicetech s/1 t/3`","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"### Adding a vehicle: `addvehicle`","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"Adds a vehicle of specified type (i.e. motorbike, car) to the system and assigns a unique vehicle ID.","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"Format: `addvehicle p/PLATE_NUMBER b/BRAND c/CUSTOMER_ID t/TYPE`","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"Example: `addvehicle p/SBA1234A b/Toyota c/1 t/car`","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"### Adding a vehicle part: `addpart`","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"Adds a vehicle part to the system.","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"Format: `addpart n/NAME q/Quantity`","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"Example: `addpart n/Cylinder Head q/50`","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"### Adding a vehicle part to specific service: `addservicepart`","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"Adds a vehicle part to a specific service.","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"Service and part must be registered in the system and part must have sufficient quanity,","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"Format: `addservicepart s/SERVICE ID n/PART NAME q/QUANTITY`","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"Example: `addservicepart s/2 n/Cylinder Head q/20`","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"### Adding a service to a vehicle: `addservice`","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"Adds a service to perform on the specified vehicle plate number.","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"Format: `addservice v/VEHICLE_ID [l/SERIVCE LENGTH (days)] [s/STATUS] [d/DESCRIPTION]`","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"* `addservice v/10 s/in progress d/Customer says abc`","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"* `addservice v/10 t/standard l/10` \\","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"Note: Adding service without specifying the type of service will default to “to repair” \\","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"Note: Adding service without specifying the service length will default to 7 days","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"### Adding a customer appointment: `addappointment`","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"Adds a customer appointment to the system.","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"Format: `addappointment c/CUSTOMER_ID d/DATE t/TIME`","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"Example: `addappointment c/5 d/2023-03-05 t/14:00`","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"### Adding a technician to an appointment: `addappointmenttech`","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"Adds an existing technician to an exiting appointment.","lastModifiedDate":"2023-03-31"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"Format: `addappointmenttech a/APPOINTMENT_ID t/TECHNICIAN_ID`","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"Example: `addappointmenttech a/1 t/2` ","lastModifiedDate":"2023-03-31"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"### List/Sort","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"### Listing all vehicles/customers/parts/appointments: `list`","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"Shows all vehicles/customers/parts/appointments.","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"Format: `list(vehicles/customers/parts/appointments/services/technicians)`","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"* `listvehicles`","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"* `listcustomers`","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"* `listparts`","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"* `listappointments`","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"* `listtechnicians`","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"* `listservices`","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"kimberlybp"},"content":"### Sorting displayed lists: `sort`","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"Sorts all vehicles/customers/parts/appointments list in ascending or descending direction by a specific param. \\","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"kimberlybp"},"content":"*Note: Command is context-sensitive (i.e. can only be used after list command)*","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"kimberlybp"},"content":"Format: `sort(vehicles/customers/parts/appointments/services) by/OBJECT_PARAMS [r/]`","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"kimberlybp"},"content":"OBJECT_PARAMS are dependent on which object* and adding `r/` means to reverse the sort direction","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"kimberlybp"},"content":"Examples: ","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"kimberlybp"},"content":"* `sortcustomers by/id r/`","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"kimberlybp"},"content":"* `sortvehicles by/brand`","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"kimberlybp"},"content":"* `sortappointments by/date r/`","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"kimberlybp"},"content":"* `sortappointments by/date status`","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"kimberlybp"},"content":"### Find","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"kimberlybp"},"content":"### Finding specific vehicles/customers/services/appointments/technicians: `find`","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"kimberlybp"},"content":"Finds all entities whose attributes match the specified keywords (case-insensitive) or the given date, to filter and displays them in the relevant tab lists.","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"Format: `find KEYWORD [MORE SPACE-SEPERATED KEYWORDS]`","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"* `find alex alex@gmail.com`","lastModifiedDate":"2023-03-31"},{"lineNumber":171,"author":{"gitId":"kimberlybp"},"content":"* `find toyota`","lastModifiedDate":"2023-03-31"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"* `find completed Oil`","lastModifiedDate":"2023-03-31"},{"lineNumber":173,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"kimberlybp"},"content":"### View","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"kimberlybp"},"content":"### Viewing specific vehicles/customers/services/appointments/technicians: `view`","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"9fc70c892"},"content":"View a specific vehicle/customer/part/appointment/service detail. Id can be found by using the find or list command.","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"kimberlybp"},"content":"Format: `view(vehicle/customer/appointment/service/technician) ID`","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"kimberlybp"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"kimberlybp"},"content":"* `viewvehicle 12`","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"kimberlybp"},"content":"* `viewcustomer 2`","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"kimberlybp"},"content":"* `viewappointment 56`","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"9fc70c892"},"content":"* `viewservice 77`","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"kimberlybp"},"content":"### Edit","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"### Editing a vehicle/customer/appointment : `edit`","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"Updates the specified (Vehicle/Customer/Appointment) information","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"ginloy"},"content":"Format: `edit(vehicle/customer/appointment/service/technician) i/ID [?/PARAM] …​`","lastModifiedDate":"2023-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"kimberlybp"},"content":"* Edits the specified object at the specified `ID`. The id refers to the index number shown in the displayed list from the list or find command. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"*  `editcustomer i/1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the person with id 1 to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-31"},{"lineNumber":203,"author":{"gitId":"ginloy"},"content":"*  `editvehicle i/2 p/SBA9876G` Edits the plate number of the vehicle with id 2 to be `SBA9876G`.","lastModifiedDate":"2023-03-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"kimberlybp"},"content":"### Delete","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"kimberlybp"},"content":"### Deleting a vehicle/customer/appointment/service/technician : `delete`","lastModifiedDate":"2023-03-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"9fc70c892"},"content":"Deletes the specified vehicle/customer/part/appointment/service from the system and all its related records.","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"9fc70c892"},"content":"* Deletes the vehicle/customer/part/appointment/service at the specified `ID`.","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"kimberlybp"},"content":"* The id refers to the index number shown in the displayed list from the list or find command.","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"kimberlybp"},"content":"* The id **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"kimberlybp"},"content":"Format: `delete(vehicle/customer/appointment/service/technician) ID`","lastModifiedDate":"2023-03-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"kimberlybp"},"content":"Example: `deletecustomer 12` deletes the customer with id 12 and all their related records in the AutoM8 system.","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"9fc70c892"},"content":"### Deleting a part : `delete`","lastModifiedDate":"2023-03-17"},{"lineNumber":220,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":221,"author":{"gitId":"9fc70c892"},"content":"Deletes the specified part from the system and all its related records.","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"9fc70c892"},"content":"* Deletes the part with the specified `NAME`.","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":224,"author":{"gitId":"9fc70c892"},"content":"Format: `deletepart NAME`","lastModifiedDate":"2023-03-17"},{"lineNumber":225,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":226,"author":{"gitId":"9fc70c892"},"content":"Example: `deletepart Cylinder Head` deletes the part \u0027Cylinder Head\u0027 and all their related records in the AutoM8 system.","lastModifiedDate":"2023-03-17"},{"lineNumber":227,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":228,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":229,"author":{"gitId":"kimberlybp"},"content":"### Actions","lastModifiedDate":"2023-03-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"kimberlybp"},"content":"### Undo a previously executed command: `undo`","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"junlee1991"},"content":"Undoes certain previously typed command","lastModifiedDate":"2023-04-03"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":235,"author":{"gitId":"junlee1991"},"content":"_See below for a list of commands that `undo` applies to_","lastModifiedDate":"2023-04-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"kimberlybp"},"content":"Format: `undo`","lastModifiedDate":"2023-03-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"kimberlybp"},"content":"Example flow:","lastModifiedDate":"2023-03-05"},{"lineNumber":240,"author":{"gitId":"kimberlybp"},"content":"1. `add customer n/john p/91238765 e/john@gmail.com a/kent ridge street, block 123, #01-01`","lastModifiedDate":"2023-03-05"},{"lineNumber":241,"author":{"gitId":"kimberlybp"},"content":"2. `undo`","lastModifiedDate":"2023-03-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"junlee1991"},"content":"`undo` will reverse the add command, causing the system to delete previously added customer.","lastModifiedDate":"2023-03-31"},{"lineNumber":244,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":245,"author":{"gitId":"junlee1991"},"content":"### Redo a previously executed command: `redo`","lastModifiedDate":"2023-03-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"junlee1991"},"content":"Restores most recent command that was undone using undo. If you use a command that is not undo or redo, while in the midst of undoing, there will no longer be commands to redo.","lastModifiedDate":"2023-03-31"},{"lineNumber":248,"author":{"gitId":"junlee1991"},"content":"Format: `redo`","lastModifiedDate":"2023-03-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":252,"author":{"gitId":"junlee1991"},"content":"- `deletecustomer 3`  ","lastModifiedDate":"2023-03-31"},{"lineNumber":253,"author":{"gitId":"junlee1991"},"content":"  `undo`  ","lastModifiedDate":"2023-03-31"},{"lineNumber":254,"author":{"gitId":"junlee1991"},"content":"  `redo`","lastModifiedDate":"2023-03-31"},{"lineNumber":255,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":256,"author":{"gitId":"junlee1991"},"content":"After deleting a customer at Index 3 and using `undo` to reverse the deletion of the customer, using `redo` will restore the customer back into the list.","lastModifiedDate":"2023-03-31"},{"lineNumber":257,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":258,"author":{"gitId":"junlee1991"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":259,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":260,"author":{"gitId":"junlee1991"},"content":"**Commands that you can undo/redo:**\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":261,"author":{"gitId":"junlee1991"},"content":"* `add` after successfully adding a contact","lastModifiedDate":"2023-03-31"},{"lineNumber":262,"author":{"gitId":"junlee1991"},"content":"* `delete`","lastModifiedDate":"2023-03-31"},{"lineNumber":263,"author":{"gitId":"junlee1991"},"content":"* `edit`","lastModifiedDate":"2023-03-31"},{"lineNumber":264,"author":{"gitId":"junlee1991"},"content":"* `undo`/`redo` i.e. you can `undo` a `redo`, and you can `redo` an `undo`","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"junlee1991"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":266,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":267,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":268,"author":{"gitId":"kimberlybp"},"content":"### Others","lastModifiedDate":"2023-03-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":271,"author":{"gitId":"kimberlybp"},"content":"### Get number of appointments : `totalappointment`","lastModifiedDate":"2023-03-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":273,"author":{"gitId":"kimberlybp"},"content":"Finds the number of appointments on the specified date.","lastModifiedDate":"2023-03-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":275,"author":{"gitId":"junlee1991"},"content":"Format: `totalAppointment d\\DATE`","lastModifiedDate":"2023-03-31"},{"lineNumber":276,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":277,"author":{"gitId":"kimberlybp"},"content":"Example: `totalappointment d/2023-02-03`","lastModifiedDate":"2023-03-31"},{"lineNumber":278,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":279,"author":{"gitId":"junlee1991"},"content":"* The `DATE` must follow a YYYY-MM-DD format. The range of allowable years is 0001 to 9999.","lastModifiedDate":"2023-03-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"kimberlybp"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-03-05"},{"lineNumber":288,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":289,"author":{"gitId":"junlee1991"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-03-07"},{"lineNumber":290,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":291,"author":{"gitId":"kimberlybp"},"content":"Format: `help`","lastModifiedDate":"2023-03-05"},{"lineNumber":292,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"kimberlybp"},"content":"AutoM8 data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":299,"author":{"gitId":"kimberlybp"},"content":"AutoM8 data are saved as a JSON file `[JAR file location]/data/autom8.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":302,"author":{"gitId":"kimberlybp"},"content":"If your changes to the data file makes its format invalid, AutoM8 will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"kimberlybp"},"content":"to be updated","lastModifiedDate":"2023-03-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"kimberlybp"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-31"},{"lineNumber":316,"author":{"gitId":"kimberlybp"},"content":"Command summary may be using outdated syntax please refer to guide above","lastModifiedDate":"2023-03-31"},{"lineNumber":317,"author":{"gitId":"kimberlybp"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"kimberlybp"},"content":"| Action                                                  | Format, Examples                                                                                                                                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":320,"author":{"gitId":"ginloy"},"content":"|---------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":321,"author":{"gitId":"ginloy"},"content":"| **Add Customer**                                        | `addcustomer n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS` \u003cbr\u003e e.g., `addcustomer n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`     |","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"ginloy"},"content":"| **Add Technician**                                      | `addtechnician n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS` \u003cbr\u003e e.g., `addtechnician n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-03-27"},{"lineNumber":323,"author":{"gitId":"ginloy"},"content":"| **Add Technician to Service**                           | `addservicetech `addservicetech s/SERVICE_ID t/TECHNICIAN_ID` \u003cbr\u003e e.g., `addservicetech s/1 t/3`                                                                               |","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"kimberlybp"},"content":"| **Add Vehicle**                                         | `addvehicle p/PLATE_NUMBER b/BRAND c/CUSTOMER_ID t/TYPE` \u003cbr\u003e e.g., `addvehicle p/SBA1234A b/Toyota c/1 t/4wd`                                                                  |","lastModifiedDate":"2023-03-05"},{"lineNumber":325,"author":{"gitId":"kimberlybp"},"content":"| **Add Service**                                         | `addservice v/VEHICLE_ID t/SERVICE_TYPE [s/STATUS] [d/DESCRIPTION]`\u003cbr\u003e e.g., `addservice v/10 t/standard s/in progress d/Customer says abc`                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":326,"author":{"gitId":"kimberlybp"},"content":"| **Add Appointment**                                     | `addappointment c/CUSTOMER_ID d/DATE t/TIME`\u003cbr\u003e e.g.,`addappointment c/5 d/05/03/2023 t/5pm`                                                                                   |","lastModifiedDate":"2023-03-05"},{"lineNumber":327,"author":{"gitId":"ginloy"},"content":"| **Add Part**                                            | `addpart n/PART_NAME q/PART_QUANTITY` \u003cbr\u003e e.g. `addpart n/Cylinder Head q/50`                                                                                                  |","lastModifiedDate":"2023-03-27"},{"lineNumber":328,"author":{"gitId":"ginloy"},"content":"| **Add Part to Service**                                 | `addservicepart s/SERVICE_ID n/PART_NAME q/QUANTITY` \u003cbr\u003e e.g. `addservicepart s/2 n/Cylinder Head q/20`                                                                        |","lastModifiedDate":"2023-03-27"},{"lineNumber":329,"author":{"gitId":"kimberlybp"},"content":"| **List all Vehicles/Customers/Parts/Appointments**      | `list(vehicles/customers/parts/appointments)`\u003cbr\u003e e.g., `list customers`                                                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":330,"author":{"gitId":"kimberlybp"},"content":"| **Sort Displayed List**                                 | `sort by/BRAND d/DIRECTION`\u003cbr\u003e e.g., `list vehicles` then `sort by/brand d/asc`                                                                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":331,"author":{"gitId":"kimberlybp"},"content":"| **Find specific Vehicle/Customer/Part/Appointment**     | `find(vehicle/customer/part/appointment) KEYWORD`\u003cbr\u003e e.g., `find vehicle toyota`                                                                                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"kimberlybp"},"content":"| **View specific Vehicle/Customer/Part/Appointment**     | `view(vehicle/customer/part/appointment) ID`\u003cbr\u003e e.g., `view appointment 56`                                                                                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":333,"author":{"gitId":"kimberlybp"},"content":"| **Edit a specific Vehicle/Customer/Part/Appointment**   | `edit(vehicle/customer/part/appointment) ID [?/PARAM] …​`\u003cbr\u003e e.g., `edit customer 1 p/91234567 e/johndoe@example.com`                                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":334,"author":{"gitId":"kimberlybp"},"content":"| **Delete a specific Vehicle/Customer/Part/Appointment** | `delete(vehicle/customer/part/appointment) ID`\u003cbr\u003e e.g., `delete customer 12`                                                                                                   |","lastModifiedDate":"2023-03-05"},{"lineNumber":335,"author":{"gitId":"junlee1991"},"content":"| **Total appointment on a specified date**               | `TotalAppointment d/DATE`                                                                                                                                                       |","lastModifiedDate":"2023-03-31"},{"lineNumber":336,"author":{"gitId":"kimberlybp"},"content":"| **Undo**                                                | `undo`                                                                                                                                                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"kimberlybp"},"content":"| **Redo**                                                | `redo`                                                                                                                                                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":338,"author":{"gitId":"kimberlybp"},"content":"| **Exit**                                                | `exit`                                                                                                                                                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":339,"author":{"gitId":"kimberlybp"},"content":"| **Help**                                                | `help`                                                                                                                                                                          |","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"kimberlybp":129,"ginloy":48,"9fc70c892":15,"junlee1991":26,"-":121}},{"path":"docs/diagrams/AddXSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"participant \":AddXCommandParser\" as AddXCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"participant \"v:AddXCommand\" as AddXCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"[-\u003e LogicManager : execute(\"addX args*\")","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addX args*\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"create AddXCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"AddressBookParser -\u003e AddXCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"activate AddXCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"AddXCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"deactivate AddXCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"AddressBookParser -\u003e AddXCommandParser : parse(\"args*\")","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"activate AddXCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"create AddXCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"AddXCommandParser -\u003e AddXCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"activate AddXCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"AddXCommand --\u003e AddXCommandParser : x","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"deactivate AddXCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"AddXCommandParser --\u003e AddressBookParser : x","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"deactivate AddXCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"AddXCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"destroy AddXCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"AddressBookParser --\u003e LogicManager : x","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"LogicManager -\u003e AddXCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"activate AddXCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"AddXCommand -\u003e Model : addX(x)","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"Model --\u003e AddXCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"AddXCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"CommandResult --\u003e AddXCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"AddXCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"deactivate AddXCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ginloy":69}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"Participant \":ShopStorage\" as storage STORAGE_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"user -[USER_COLOR]\u003e ui : \"deleteX 1\"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"deleteX 1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteXCommand(1)","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveShop(shop)","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"9fc70c892":5,"-":33}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"AddressBook *-right-\u003e \"1\" UniqueCustomerList","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"AddressBook *-up-\u003e \"1\" UniqueVehicleList","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"UniqueTagList -[hidden]down- UniqueCustomerList","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"UniqueTagList -[hidden]down- UniqueCustomerList","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"UniqueCustomerList -right-\u003e Customer","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"UniqueVehicleList -right-\u003e \"*\" Vehicle","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"Customer -up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"Customer -up-\u003e \"*\" Vehicle","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"Customer *--\u003e Name","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"Customer *--\u003e Phone","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"Customer *--\u003e Email","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"Customer *--\u003e Address","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"9fc70c892":12,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"participant \":DeleteCustomerCommandParser\" as DeleteCustomerCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"participant \"d:DeleteCustomerCommand\" as DeleteCustomerCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"participant \":\u003cu\u003eIdGenerator\" as IdGenerator LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"[-\u003e LogicManager : execute(\"deletecustomer 1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deletecustomer 1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"create DeleteCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"AddressBookParser -\u003e DeleteCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"activate DeleteCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"deactivate DeleteCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"AddressBookParser -\u003e DeleteCustomerCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"activate DeleteCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"create DeleteCustomerCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommandParser -\u003e DeleteCustomerCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"activate DeleteCustomerCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommand --\u003e DeleteCustomerCommandParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"deactivate DeleteCustomerCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"deactivate DeleteCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"destroy DeleteCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"LogicManager -\u003e DeleteCustomerCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"activate DeleteCustomerCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"Model --\u003e DeleteCustomerCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommand -\u003e IdGenerator : setCustomerIdUnused(1)","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"activate IdGenerator","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommand \u003c-- IdGenerator","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"deactivate IdGenerator","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"CommandResult --\u003e DeleteCustomerCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"DeleteCustomerCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"deactivate DeleteCustomerCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"9fc70c892":35,"-":41}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"Class XCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"AddressBookParser ..\u003e XCommand : creates \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"XCommand -up-|\u003e Command","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"note right of XCommand: XCommand \u003d AddYCommand, \\nFindYCommand, etc","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"9fc70c892":4,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyShop\" as ReadOnlyShop","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"Class Shop","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"Class UniqueXList","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"Class X","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"Class Service","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"Class PartMap","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"\u0027Class Part","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"Class ServiceList","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"Shop .up.|\u003e ReadOnlyShop","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"Model .left.\u003e ReadOnlyShop","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"ModelManager -left-\u003e \"1\" Shop","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"Shop *--\u003e \"1\" UniqueXList","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"Shop *--\u003e \"1\" ServiceList","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"UniqueXList --\u003e \"~* all\" X","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"ModelManager --\u003e\"~* filtered\" X","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"Shop *--\u003e \"1\" PartMap","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"\u0027PartMap --\u003e \"~* all\" Part","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"ModelManager --\u003e\"1\" PartMap","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"ServiceList --\u003e \"~* all\" Service","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"ModelManager --\u003e\"~* filtered\" Service","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"9fc70c892":20,"-":27}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"Class XCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"Class XCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"AddressBookParser .down.\u003e XCommandParser: creates \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"XCommandParser ..\u003e XCommand : creates \u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"XCommandParser .up.|\u003e Parser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"XCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"XCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"XCommandParser ..\u003e CliSyntax","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"XCommandParser ..\u003e ParserUtil","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"XCommand -up-|\u003e Command","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"9fc70c892":10,"-":28}},{"path":"docs/diagrams/SetServicePrioritySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"participant \":XCommandParser\" as XCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"participant \"p:XServiceCommand\" as XServiceCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"[-\u003e LogicManager : execute(\"prioritise/deprioritise 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"prioritise/deprioritise 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"create XCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"AddressBookParser -\u003e XCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"activate XCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"XCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"deactivate XCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"AddressBookParser -\u003e XCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"activate XCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"create XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"XCommandParser -\u003e XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"activate XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"XServiceCommand --\u003e XCommandParser : p","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"deactivate XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"XCommandParser --\u003e AddressBookParser : p","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"deactivate XCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"XCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"destroy XCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"AddressBookParser --\u003e LogicManager : p","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"LogicManager -\u003e XServiceCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"activate XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"XServiceCommand -\u003e Model : getServiceList()","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"Model --\u003e XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"XServiceCommand -\u003e XServiceCommand : createAdjustedPriorityService(service)","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"activate XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"XServiceCommand --\u003e XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"deactivate XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"XServiceCommand -\u003e Model : setService(serviceToUpdate, updatedService)","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"Model --\u003e XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"XServiceCommand -\u003e Model : updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES)","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"Model --\u003e XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"XServiceCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"CommandResult --\u003e XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"XServiceCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"deactivate XServiceCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"kimberlybp":88}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"package \"Storage\" as Storage1{","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage2","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"package \"Shop Storage\" #F4F6F6{","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nShopStorage\" as ShopStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"Class JsonShopStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"Class JsonSerializableShop","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"Class JsonAdaptedCustomer","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"Class JsonAdaptedVehicle","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"Class JsonAdaptedService","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"Class JsonAdaptedPart","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"Class JsonAdaptedAppointment","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"Class JsonAdaptedTechnician","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"HiddenOutside ..\u003e Storage2","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"Storage2 -left-|\u003e UserPrefsStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"Storage2 -right-|\u003e ShopStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"StorageManager .up.|\u003e Storage2","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"StorageManager -up-\u003e \"1\" ShopStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"JsonShopStorage .up.|\u003e ShopStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"JsonShopStorage ..\u003e JsonSerializableShop","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"JsonAdaptedCustomer -up-|\u003e JsonAdaptedPerson","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"JsonSerializableShop --\u003e \"*\" JsonAdaptedCustomer","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"JsonSerializableShop ---\u003e \"*\" JsonAdaptedVehicle","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"JsonSerializableShop ---\u003e \"*\" JsonAdaptedService","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"JsonAdaptedService --\u003e \"*\" JsonAdaptedPart","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"JsonSerializableShop ---\u003e \"*\" JsonAdaptedPart","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"JsonSerializableShop --\u003e \"*\" JsonAdaptedAppointment","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"JsonSerializableShop ---\u003e \"*\" JsonAdaptedTechnician","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"\u0027Layout adjustments","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"JsonAdaptedCustomer -right[hidden]- JsonAdaptedVehicle","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kimberlybp":34,"-":28}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"Class XListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"Class XCard","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"MainWindow *-down-\u003e \"1\" XListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"XListPanel -down-\u003e \"*\" XCard","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"XListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"XCard --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"XCard ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"XListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kimberlybp":8,"-":52}},{"path":"docs/diagrams/UndoRedo0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"hide circle","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"Command \u003c|-- RedoableCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"StackUndoRedo *--\u003e \"2\" Stack","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"RedoableCommand \"*\" \u003c-left-  Stack","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"class Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"  # undoRedoStack: StackUndoRedo","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"  + execute(): CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"  + setData(): void","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"class RedoableCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":" {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"   - previousAddressBook: ReadOnlyShop","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"   - isSwapped: boolean","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"   - saveAddressBookSnapshot(): void","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"   # undo(): void","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"   # redo(): void","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"   + execute(): CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"class StackUndoRedo {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"    + push(): void","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"    + popUndo(): RedoableCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"    + popRedo(): RedoableCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"class Stack {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"class Stack {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"junlee1991":38}},{"path":"docs/diagrams/UndoRedo1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":":User inputs commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":":System pushes command onto StackUndoRedo;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"if () then ([Command is not a RedoableCommand])","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"    :Command will not be","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"    added to undoStack;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    if () then ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"        :Clear redoStack;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"    else ([is UndoCommand or RedoCommand])","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    endif","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    if () then ([is not a RedoableCommand])","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"        stop","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"        :Command push onto undoStack;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    endif","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"junlee1991":24}},{"path":"docs/diagrams/UndoRedo2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"object \"__:StackUndoRedo__\" as s1","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"object \"__undoStack:Stack__\" as s2","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"object \"__redoStack:Stack__\" as s3","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s2","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s3","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"junlee1991":8}},{"path":"docs/diagrams/UndoRedo3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"object \"__:StackUndoRedo__\" as s1","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"object \"__undoStack:Stack__\" as s2","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"object \"__redoStack:Stack__\" as s3","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"object \"__:DeleteCustomerCommand__\" as d1","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s2","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s3","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"s2 --\u003e d1","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"junlee1991":10}},{"path":"docs/diagrams/UndoRedo4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"object \"__:StackUndoRedo__\" as s1","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"object \"__undoStack:Stack__\" as s2","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"object \"__redoStack:Stack__\" as s3","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"object \"__:DeleteCustomerCommand__\" as d1","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"object \"__:AddCustomerCommand__\" as a1","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s2","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s3","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"s2 --\u003e d1","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"s2 --\u003e a1","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"junlee1991":12}},{"path":"docs/diagrams/UndoRedo5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"object \"__:StackUndoRedo__\" as s1","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"object \"__undoStack:Stack__\" as s2","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"object \"__redoStack:Stack__\" as s3","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"object \"__:DeleteCustomerCommand__\" as d1","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"object \"__:AddCustomerCommand__\" as a1","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s2","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s3","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"s2 --\u003e d1","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"s3 --\u003e a1","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"junlee1991":12}},{"path":"docs/diagrams/UndoRedo6.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"Participant \": LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"Participant \": AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"Participant \"u: UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"Participant \": StackUndoRedo\" as StackUndoRedo LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"Participant \": RedoableCommand\" as RedoableCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"user -[LOGIC_COLOR]\u003e LogicManager : execute(\"undo\")","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"LogicManager -[LOGIC_COLOR]\u003e AddressBookParser : ParseCommand(\"undo\")","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"AddressBookParser -[LOGIC_COLOR]\u003e UndoCommand :","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"activate UndoCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"UndoCommand --[LOGIC_COLOR]\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"deactivate UndoCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"AddressBookParser --[LOGIC_COLOR]\u003e LogicManager : u","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"LogicManager -[LOGIC_COLOR]\u003e UndoCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"activate UndoCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"UndoCommand -[LOGIC_COLOR]\u003e StackUndoRedo : popUndo()","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"activate StackUndoRedo LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"StackUndoRedo --[LOGIC_COLOR]\u003e UndoCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"deactivate StackUndoRedo","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"UndoCommand -[LOGIC_COLOR]\u003e RedoableCommand : undo()","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"activate RedoableCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"RedoableCommand --[LOGIC_COLOR]\u003e UndoCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"deactivate RedoableCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"UndoCommand --[LOGIC_COLOR]\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"deactivate UndoCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"LogicManager --[LOGIC_COLOR]\u003e user: result","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"junlee1991":47}},{"path":"docs/diagrams/UndoRedo7.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"object \"__:StackUndoRedo__\" as s1","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"object \"__undoStack:Stack__\" as s2","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"object \"__redoStack:Stack__\" as s3","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"object \"__:DeleteCustomerCommand__\" as d1","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s2","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"s1 *--\u003e s3","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"s2 --\u003e d1","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"junlee1991":11}},{"path":"docs/diagrams/ViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"participant \":ViewCustomerCommandParser\" as ViewCustomerCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"participant \"v:ViewCustomerCommand\" as ViewCustomerCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"[-\u003e LogicManager : execute(\"viewcustomer 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"viewcustomer 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"create ViewCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"AddressBookParser -\u003e ViewCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"activate ViewCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"ViewCustomerCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"deactivate ViewCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"AddressBookParser -\u003e ViewCustomerCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"activate ViewCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"create ViewCustomerCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"ViewCustomerCommandParser -\u003e ViewCustomerCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"activate ViewCustomerCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"ViewCustomerCommand --\u003e ViewCustomerCommandParser : v","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"deactivate ViewCustomerCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"ViewCustomerCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"deactivate ViewCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"ViewCustomerCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"destroy ViewCustomerCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"LogicManager -\u003e ViewCustomerCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"activate ViewCustomerCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"ViewCustomerCommand -\u003e Model : updateFilteredAppointmentList(predicate)","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"Model --\u003e ViewCustomerCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"ViewCustomerCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"CommandResult --\u003e ViewCustomerCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"ViewCustomerCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"deactivate ViewCustomerCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"9fc70c892":69}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"title: AutoM8","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-W17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103-W17-4/tp/actions)","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-W17-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103-W17-4/tp)","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"*UI to be added soon*","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"AutoM8 is a desktop application for an auto repair shop, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"* If you are interested in using AutoM8, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"* If you are interested about developing AutoM8, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kimberlybp":7,"-":12}},{"path":"docs/team/edwin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"title: Edwin\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"### Project: Autom8","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"TO BE UPDATED","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"  * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"9fc70c892":48}},{"path":"docs/team/ginloy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"title: Leow Li Yong\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ginloy":46}},{"path":"docs/team/junlee1991.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"---","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"layout: page","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"title: Julio\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"---","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"# Project Portfolio Page for Julio","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"### Project: AutoM8","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"AutoM8 is a **desktop app for an auto repair shop, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, AutoM8 can get your auto repair shop management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    * What it does: Allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    * Justification: This feature enhances the application significantly because a user might make mistakes in what command he or she keys in. It should not be needed by the user to do different commands to rectify each mistake. Hence, this feature provides a convenient way to rectify those errors.","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    * Consideration: This feature required numerous design and usability considerations due to how familiar most users are with this feature. In addition, the implementation as well required an in-depth analysis of design alternatives to determine the most optimal solution for this project.","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    * Credits: [zhixianggg](https://github.com/zhixianggg) - I reused and adapted some of his code to implement the UndoRedoStack.","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"               [bakano98](https://github.com/bakano98) - I reused and adapted some of his code to implement the undo redo test. ","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"* **New Feature**: Added the totalappointment command. ","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"  * What it does: Finds the number of appointments on a specified date.","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"  * Justification: This feature enhances the application significantly because users can keep track of the number of appointments they have on any single date.  ","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"  * Consideration: This feature required in depth understanding of localDatesTime API to determine the most optimal solution for this project.","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"  * Credits: [stackoverflow](https://stackoverflow.com/questions/494180/how-do-i-check-if-a-date-is-within-a-certain-range) - I reused and adapted the code to check if a date is within a certain range.","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djunlee\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17ional-code~test-code~other\u0026since\u003d2022-02-18)","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"**Project Management**:","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"* Set up [team repo](https://github.com/AY2223S2-CS2103-W17-4/tp) on github.","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"* Helped manage weekly milestones (ensure closing of issues, and milestone wrap-ups).","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"    * Fixed Bugs relating to undo and redo feature (Pull requests [\\#91](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/91))","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    * Added undo command test (Pull requests [\\#139](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/139))","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"    * Added redo command test (Pull requests [\\#141](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/141)) ","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    * User Guide:","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"        * Added documentation for the features `undo`, `redo` and `totalappointment` [\\#117](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/117)","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"    * Developer Guide:","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"        * Added implementation details of the `undo` and `redo` feature [(PR #52)](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/52).","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"        * Added UML diagrams of the `undo` and `redo` feature [(PR #85)](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/85)","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"        * Added implementation details of the `totalappointment` feature [(PR #102)](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/102).","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"        * Added Product Scope, User Stories and NFRs [(PR #34)](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/34) ","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"* **Community**:","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#88](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/88), [\\#73](https://github.com/AY2223S2-CS2103-W17-4/tp/pull/73) ","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [\\#90](https://github.com/AY2223S2-CS2103-W17-4/tp/issues/90), [\\#86](https://github.com/AY2223S2-CS2103-W17-4/tp/issues/86)","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"junlee1991":54}},{"path":"docs/team/kimberlybp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"title: Kimberly\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"### Project: AutoM8","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"To be updated* \\","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"  * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"kimberlybp":47}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"junlee1991"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/autom8.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-03-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"junlee1991":1,"-":400}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.storage.JsonShopStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.storage.ShopStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        ShopStorage shopStorage \u003d new JsonShopStorage(Paths.get(\"data\" , \"autom8.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, shopStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        Optional\u003cReadOnlyShop\u003e shopOptional;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        ReadOnlyShop shopInitialData;","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"            shopOptional \u003d storage.readShop();","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"            if (!shopOptional.isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Shop\");","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"            shopInitialData \u003d shopOptional.orElseGet(SampleDataUtil::getSampleShop);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"            //TODO: saveShop here is for testing purposes, Remove in the future","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"            //storage.saveShop(shopInitialData);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook, Shop\");","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"            shopInitialData \u003d new Shop();","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook, Shop\");","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"            shopInitialData \u003d new Shop();","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        return new ModelManager(initialData, userPrefs, shopInitialData);","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"kimberlybp":22,"9fc70c892":1,"-":179}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_UNSUPPORTED_COMMAND \u003d \"Command is not supported currently\";","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"    public static final String MESSAGE_DATE_APPOINTMENT_OVERVIEW \u003d \"%1$d appointments on date %2$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    //---","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_VEHICLE_VIEW_OVERVIEW \u003d \"Viewing Vehicle ID %1$d\";","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_SERVICE_VIEW_OVERVIEW \u003d \"Viewing Service ID %1$d\";","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_CUSTOMER_VIEW_OVERVIEW \u003d \"Viewing Customer ID %1$d\";","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_PART_VIEW_OVERVIEW \u003d \"Part listed.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_APPOINTMENT_VIEW_OVERVIEW \u003d \"Customer listed.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_INVAID_PART_REQUESTED \u003d \"Part does not exist.\";","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"    //    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"    //    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kimberlybp":3,"ginloy":1,"9fc70c892":8,"junlee1991":1,"-":13}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ginloy":1,"-":82}},{"path":"src/main/java/seedu/address/commons/util/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":" * Pair of 2 objects","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":" * @param \u003cT\u003e Type of first object","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":" * @param \u003cU\u003e Type of second object","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    private final T first;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private final U second;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"     * @param first  First object","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"     * @param second Second object","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public Pair(T first, U second) {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        this.first \u003d first;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        this.second \u003d second;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @return First object","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public T first() {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        return this.first;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * @return Second object","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    public U second() {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        return this.second;","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        return String.format(\"\u003c%s, %s\u003e\",","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"                this.first.toString(),","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                this.second.toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"ginloy":42}},{"path":"src/main/java/seedu/address/commons/util/SharedComparatorsUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":" * Utils class to store shared comparators","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"public class SharedComparatorsUtil {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    public static Comparator\u003cAppointment\u003e getDefaultAppointmentSort() {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"        return Comparator.comparing(Appointment::getDateStatus)","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"                .thenComparing(Appointment::getTimeDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":15}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public static final String NEWLINE \u003d System.lineSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    private static final List\u003cCharacter\u003e WS \u003d List.of(\u0027 \u0027,","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            \u0027\\n\u0027,","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            \u0027\\t\u0027,","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            \u0027\\r\u0027);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private StringUtil() {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        String[] wordsInPreppedSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     * Splits string into list of strings by whitespace.","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"     * @param str String to be split","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"     * @return List of strings","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"    public static List\u003cString\u003e splitWhitespace(String str) {","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"        for (int i \u003d 0; i \u003c str.length(); ++i) {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"            char c \u003d str.charAt(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"            if (WS.contains(c) \u0026\u0026 !temp.isEmpty()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"                res.add(temp);","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"                temp \u003d \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"            } else if (!WS.contains(c)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"                temp +\u003d c;","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"        if (!temp.isEmpty()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"            res.add(temp);","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"        return res;","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"     * Clears whitespace at beginning and end of string","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"     * @param str String to process","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"     * @return Resultant string","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"    public static String cleanup(String str) {","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"        int start \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"        int end \u003d str.length();","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"        while (start \u003c str.length() \u0026\u0026 WS.contains(str.charAt(start))) {","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"            ++start;","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"        while (end \u003e 0 \u0026\u0026 WS.contains(str.charAt(end - 1))) {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"            --end;","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"        if (start \u003e end) {","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"            return \"\";","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"        return str.substring(start,","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"                end);","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"     * Fuses list of characters into a single string","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"     * @param s List of characters","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"     * @return Resultant string","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"    public static String listToString(List\u003cCharacter\u003e s) {","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"        return s.stream()","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"                .map(Object::toString)","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"     * Joins strings using a specified delimiter","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"     * @param delimiter Delimiter string","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"     * @param lines     Strings to join","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"     * @return Joined string","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"    public static String join(String delimiter, String... lines) {","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"        return Stream.of(lines)","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + delimiter + b)","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"                .substring(delimiter.length());","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"     * Multiline String indentation","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"     * @param string Lines to be indented","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"     * @param spaces Amount of spaces to indent with","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"     * @return Indented multiline string","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"    public static String indent(String string, int spaces) {","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"        String prepend \u003d Stream.generate(() -\u003e \" \")","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"                .limit(spaces)","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"        if (string.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"            return prepend;","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"ginloy"},"content":"        return string.lines()","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"                .map(s -\u003e prepend + s)","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + NEWLINE + b)","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"                .substring(1);","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ginloy":107,"9fc70c892":1,"-":65}},{"path":"src/main/java/seedu/address/commons/util/monad/Either.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.commons.util.monad;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":" * Algebraic sum data type.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" * Can be either a valid left result","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" * or an invalid right error.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" * @param \u003cL\u003e Type of valid result","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" * @param \u003cR\u003e Type of invalid result","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"public interface Either\u003cL, R\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"     * Construct left object","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * @param \u003cL\u003e Type of left object","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     * @param \u003cR\u003e Type of right object","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * @param l   Wrapped object","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * @return Left(l)","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    static \u003cL, R\u003e Either\u003cL, R\u003e left(L l) {","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        return new Either\u003c\u003e() {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            private final L left \u003d l;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                return String.format(\"Left(%s)\",","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                        this.left.toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            public boolean isLeft() {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            public L fromLeft(L def) {","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                return this.left;","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"            public R fromRight(R def) {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"                return def;","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e map(Function\u003c? super L, ? extends T\u003e f) {","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"                return Either.left(f.apply(this.left));","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e flatMap(Function\u003c? super L, ? extends Either\u003c? extends T, ? extends R\u003e\u003e f) {","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"                return f.apply(this.left)","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"                        .match(","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"                                Either::left,","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"                                Either::right);","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"            public Either\u003cL, R\u003e filterOrElse(Predicate\u003c? super L\u003e tester, R failRes) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"                return tester.test(this.left) ? this : Either.right(failRes);","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e T match(Function\u003c? super L, ? extends T\u003e l, Function\u003c? super R, ? extends T\u003e r) {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"                return l.apply(this.left);","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"     * Construct right object","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"     * @param \u003cL\u003e Type of left object","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"     * @param \u003cR\u003e Type of right object","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"     * @param r   Inner object","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"     * @return Right(r)","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"    static \u003cL, R\u003e Either\u003cL, R\u003e right(R r) {","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"        return new Either\u003c\u003e() {","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"            private final R right \u003d r;","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"            public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"                return String.format(\"Right(%s)\",","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"                        this.right.toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"            public boolean isRight() {","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"                return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"            public L fromLeft(L def) {","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"                return def;","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"            public R fromRight(R def) {","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"                return this.right;","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e map(Function\u003c? super L, ? extends T\u003e f) {","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"                return Either.right(this.right);","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e Either\u003cT, R\u003e flatMap(Function\u003c? super L, ? extends Either\u003c? extends T, ? extends R\u003e\u003e f) {","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"                return Either.right(this.right);","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"            public Either\u003cL, R\u003e filterOrElse(Predicate\u003c? super L\u003e tester, R failRes) {","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"                return this;","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"            public \u003cT\u003e T match(Function\u003c? super L, ? extends T\u003e l, Function\u003c? super R, ? extends T\u003e r) {","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"                return r.apply(this.right);","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"    default boolean isLeft() {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"        return !isRight();","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"    default boolean isRight() {","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"        return !isLeft();","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"     * Extracts the left value if it is left, otherwise returns default value","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"     * @param def Default value","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"    L fromLeft(L def);","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"     * Extracts the right value if it is right, otherwise returns default value","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"     * @param def Default value","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"    R fromRight(R def);","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"     * If isLeft, maps the function over the wrapped object, otherwise returns","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"     * original right object","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"     * @param \u003cT\u003e Left type of resultant Either","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"     * @param f   Mapping function","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"     * @return new Either object","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"    \u003cT\u003e Either\u003cT, R\u003e map(Function\u003c? super L, ? extends T\u003e f);","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"     * Allows user to chain multiple methods that return Either objects.","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"     * If right object is returned within the chain, chaining will stop and right","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"     * object will be","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"     * returned at the end.","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"     * @param \u003cT\u003e left type of resultant Either","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"     * @param f   Function that accepts left object and returns another Either","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"ginloy"},"content":"     *            object","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"    \u003cT\u003e Either\u003cT, R\u003e flatMap(Function\u003c? super L, ? extends Either\u003c? extends T, ? extends R\u003e\u003e f);","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"     * Checks if left object satisfies predicate","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"     * @param tester  Predicate to test left object","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"     * @param failRes Object if left object fails predicate","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"ginloy"},"content":"     * @return Left if original left object satisfies predicate, Right(failRes) if","lastModifiedDate":"2023-02-17"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"     *         not and the original right object if Either is originally right","lastModifiedDate":"2023-02-17"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"    Either\u003cL, R\u003e filterOrElse(Predicate\u003c? super L\u003e tester, R failRes);","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"ginloy"},"content":"     * Matches the appropriate function to produce new output","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":185,"author":{"gitId":"ginloy"},"content":"     * @param \u003cT\u003e Type of the new object","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"     * @param l   Function to match if this is left","lastModifiedDate":"2023-02-17"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"     * @param r   Function to match if this is right","lastModifiedDate":"2023-02-17"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"     * @return new object","lastModifiedDate":"2023-02-17"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":190,"author":{"gitId":"ginloy"},"content":"    \u003cT\u003e T match(Function\u003c? super L, ? extends T\u003e l, Function\u003c? super R, ? extends T\u003e r);","lastModifiedDate":"2023-02-17"},{"lineNumber":191,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"ginloy":191}},{"path":"src/main/java/seedu/address/commons/util/monad/parsec/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.commons.util.monad.parsec;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * Wrapper around a function from a string input to a","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" * parsed object plus remaining input, or if parsing fails,","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" * an error message.","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":" * @param \u003cT\u003e Type of parsed object","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":" * @see Result","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"public class Parser\u003cT\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    private static final List\u003cCharacter\u003e WS \u003d List.of(\u0027 \u0027, \u0027\\n\u0027, \u0027\\t\u0027, \u0027\\r\u0027);","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private final Function\u003cString, Result\u003cT\u003e\u003e fn;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     * @param fn Function from string to Result","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     * @see Result","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public Parser(Function\u003cString, Result\u003cT\u003e\u003e fn) {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        this.fn \u003d fn;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     * @param amt Number of characters to parse","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a string of a certain number of characters","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e take(int amt) {","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            if (inp.length() \u003c amt) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"                return Result.error(\"Input size too low.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            return Result.ok(inp.substring(0, amt), inp.substring(amt));","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     * @param pred Condition that characters must satisfy","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a string of characters that satisfy a condition","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e takeWhile(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"                .satisfyOrElse(pred, \"\")","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"                .many()","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"                .map(StringUtil::listToString);","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"     * @param pred Ending condition","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a string of characters until an ending condition is satisfied","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e takeTill(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"                .satisfyOrElse(pred.negate(), \"\")","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"                .many()","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"                .map(StringUtil::listToString);","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"     * @param amt Number of characters to skip","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     * @return Parser that skips over input. Result must be ignored.","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skip(int amt) {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        return take(amt).map(s -\u003e null);","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"     * @param pred Condition that characters must satisfy","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"     * @return Parser that skips over characters while characters satisfy condition.","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     *         Result must be ignored.","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skipWhile(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"        return takeWhile(pred).map(s -\u003e null);","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"     * @param pred Condition that ends the parsing","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"     * @return Parser that skips over characters until condition is satisfied.","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"     *         Result must be ignored.","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skipTill(Predicate\u003cCharacter\u003e pred) {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"        return takeTill(pred).map(s -\u003e null);","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"     * @param res Result to be returned","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"     * @return Parser that returns a fixed value, regardless of input.","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"     *         Does not consume input.","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"    public static \u003cU\u003e Parser\u003cU\u003e retn(U res) {","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e Result.ok(res, inp));","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse any character","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCharacter\u003e anyChar() {","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"            if (inp.isEmpty()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"                return Result.error(\"End of input.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"            return Result.ok(inp.charAt(0), inp.substring(1));","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"     * @param c Character to be parsed","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a certain character","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cCharacter\u003e charParser(char c) {","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"        return anyChar().satisfyOrElse(x -\u003e x \u003d\u003d c, String.format(\"Character %s not found.\", c));","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"     * @param str String to be parsed","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a certain string","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e strParser(String str) {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"        return take(str.length()).satisfyOrElse(s -\u003e s.equals(str), String.format(\"String %s not found.\", str));","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"     * @return strParser except case is ignored","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"     * @see #strParser(String)","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e strParserIgnoreCase(String str) {","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"        return take(str.length()).satisfyOrElse(s -\u003e s.equalsIgnoreCase(str),","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"                String.format(\"String %s not found. (case ignored).\", str));","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses the next string without spaces","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e nextStr() {","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"        return skipSpace()","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(takeTill(WS::contains))","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"                .satisfyOrElse(s -\u003e !s.isEmpty(), \"No next string found.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"     * @param str String to be parsed","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses specific string ignoring leading spaces","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e nextStr(String str) {","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"        return skipSpace().ignoreThen(strParser(str));","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"     * @param str String to be parsed","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses specific string ignoring leading spaces and case","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e nextStrIgnoreCase(String str) {","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"        return skipSpace().ignoreThen(strParserIgnoreCase(str));","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"     * @param p Parser to compare against","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a string before another parse succeeds","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"    public static \u003cT\u003e Parser\u003cString\u003e strUntil(Parser\u003cT\u003e p) {","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"                .someUntil(p)","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"                .map(StringUtil::listToString)","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"ginloy"},"content":"                .map(StringUtil::cleanup);","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses until EOL","lastModifiedDate":"2023-02-17"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cString\u003e nextLine() {","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"        return anyChar()","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"ginloy"},"content":"                .someUntil(endOfLine())","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"ginloy"},"content":"                .map(StringUtil::listToString)","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"End of input.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":185,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses an unsigned integer","lastModifiedDate":"2023-02-17"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":190,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e positiveDecimal() {","lastModifiedDate":"2023-02-17"},{"lineNumber":191,"author":{"gitId":"ginloy"},"content":"        return takeWhile(c -\u003e c \u003e\u003d 48 \u0026\u0026 c \u003c 58)","lastModifiedDate":"2023-02-17"},{"lineNumber":192,"author":{"gitId":"ginloy"},"content":"                .satisfyOrElse(s -\u003e !s.isEmpty(), \"No parsable integers.\")","lastModifiedDate":"2023-02-17"},{"lineNumber":193,"author":{"gitId":"ginloy"},"content":"                .map(Integer::parseInt)","lastModifiedDate":"2023-02-17"},{"lineNumber":194,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"Failed to parse unsigned integer.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a negative integer","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":200,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e negativeDecimal() {","lastModifiedDate":"2023-02-17"},{"lineNumber":201,"author":{"gitId":"ginloy"},"content":"        return charParser(\u0027-\u0027)","lastModifiedDate":"2023-02-17"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"                .ignoreThen(positiveDecimal())","lastModifiedDate":"2023-02-17"},{"lineNumber":203,"author":{"gitId":"ginloy"},"content":"                .map(x -\u003e -x)","lastModifiedDate":"2023-02-17"},{"lineNumber":204,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"Failed to parse signed integer.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":206,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":207,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":208,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a signed integer","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":210,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e decimal() {","lastModifiedDate":"2023-02-17"},{"lineNumber":211,"author":{"gitId":"ginloy"},"content":"        return positiveDecimal()","lastModifiedDate":"2023-02-17"},{"lineNumber":212,"author":{"gitId":"ginloy"},"content":"                .or(negativeDecimal())","lastModifiedDate":"2023-02-17"},{"lineNumber":213,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(\"Failed to parse integer\");","lastModifiedDate":"2023-02-17"},{"lineNumber":214,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":215,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":216,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":217,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses next integer ignoring leading spaces","lastModifiedDate":"2023-02-17"},{"lineNumber":218,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":219,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cInteger\u003e nextInt() {","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"ginloy"},"content":"        return skipSpace().ignoreThen(decimal());","lastModifiedDate":"2023-02-17"},{"lineNumber":221,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":222,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":223,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"ginloy"},"content":"     * @return Parser that skips over spaces.","lastModifiedDate":"2023-02-17"},{"lineNumber":225,"author":{"gitId":"ginloy"},"content":"     *         Result must be ignored.","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":227,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e skipSpace() {","lastModifiedDate":"2023-02-17"},{"lineNumber":228,"author":{"gitId":"ginloy"},"content":"        return skipWhile(WS::contains);","lastModifiedDate":"2023-02-17"},{"lineNumber":229,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":230,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":231,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":232,"author":{"gitId":"ginloy"},"content":"     * @return Parser that succeeds if input is at EOL.","lastModifiedDate":"2023-02-17"},{"lineNumber":233,"author":{"gitId":"ginloy"},"content":"     *         Result must be ignored.","lastModifiedDate":"2023-02-17"},{"lineNumber":234,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":235,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cVoid\u003e endOfLine() {","lastModifiedDate":"2023-02-17"},{"lineNumber":236,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":237,"author":{"gitId":"ginloy"},"content":"            if (inp.isEmpty()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":238,"author":{"gitId":"ginloy"},"content":"                return Result.ok(null, inp);","lastModifiedDate":"2023-02-17"},{"lineNumber":239,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":240,"author":{"gitId":"ginloy"},"content":"            if (inp.charAt(0) \u003d\u003d \u0027\\n\u0027) {","lastModifiedDate":"2023-02-17"},{"lineNumber":241,"author":{"gitId":"ginloy"},"content":"                return Result.ok(null, inp.substring(1));","lastModifiedDate":"2023-02-17"},{"lineNumber":242,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":243,"author":{"gitId":"ginloy"},"content":"            return Result.error(\"Not EOL yet.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":244,"author":{"gitId":"ginloy"},"content":"        });","lastModifiedDate":"2023-02-17"},{"lineNumber":245,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":246,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":247,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":248,"author":{"gitId":"ginloy"},"content":"     * @return Parser that can parse dates","lastModifiedDate":"2023-02-17"},{"lineNumber":249,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":250,"author":{"gitId":"ginloy"},"content":"    public static Parser\u003cLocalDate\u003e dateParser() {","lastModifiedDate":"2023-02-17"},{"lineNumber":251,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e take(10).parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":252,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-17"},{"lineNumber":253,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":254,"author":{"gitId":"ginloy"},"content":"                            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":255,"author":{"gitId":"ginloy"},"content":"                                return Result.ok(LocalDate.parse(pr.first()), pr.second());","lastModifiedDate":"2023-02-17"},{"lineNumber":256,"author":{"gitId":"ginloy"},"content":"                            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":257,"author":{"gitId":"ginloy"},"content":"                                return Result.error(\"Failed to parse date.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":258,"author":{"gitId":"ginloy"},"content":"                            }","lastModifiedDate":"2023-02-17"},{"lineNumber":259,"author":{"gitId":"ginloy"},"content":"                        },","lastModifiedDate":"2023-02-17"},{"lineNumber":260,"author":{"gitId":"ginloy"},"content":"                        Result::error));","lastModifiedDate":"2023-02-17"},{"lineNumber":261,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":262,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":263,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":264,"author":{"gitId":"ginloy"},"content":"     * Parses input string","lastModifiedDate":"2023-02-17"},{"lineNumber":265,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":266,"author":{"gitId":"ginloy"},"content":"     * @param input Input string","lastModifiedDate":"2023-02-17"},{"lineNumber":267,"author":{"gitId":"ginloy"},"content":"     * @return Result of parse","lastModifiedDate":"2023-02-17"},{"lineNumber":268,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":269,"author":{"gitId":"ginloy"},"content":"    public Result\u003cT\u003e parse(String input) {","lastModifiedDate":"2023-02-17"},{"lineNumber":270,"author":{"gitId":"ginloy"},"content":"        return fn.apply(input);","lastModifiedDate":"2023-02-17"},{"lineNumber":271,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":272,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":273,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":274,"author":{"gitId":"ginloy"},"content":"     * Chain multiple parsers together, while keeping","lastModifiedDate":"2023-02-17"},{"lineNumber":275,"author":{"gitId":"ginloy"},"content":"     * parse result within scope","lastModifiedDate":"2023-02-17"},{"lineNumber":276,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":277,"author":{"gitId":"ginloy"},"content":"     * @param \u003cU\u003e Type of new object to parse","lastModifiedDate":"2023-02-17"},{"lineNumber":278,"author":{"gitId":"ginloy"},"content":"     * @param f   Function from original parse result to new parser","lastModifiedDate":"2023-02-17"},{"lineNumber":279,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-17"},{"lineNumber":280,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":281,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cU\u003e bind(Function\u003cT, Parser\u003cU\u003e\u003e f) {","lastModifiedDate":"2023-02-17"},{"lineNumber":282,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":283,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-17"},{"lineNumber":284,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e f.apply(pr.first())","lastModifiedDate":"2023-02-17"},{"lineNumber":285,"author":{"gitId":"ginloy"},"content":"                                .parse(pr.second()),","lastModifiedDate":"2023-02-17"},{"lineNumber":286,"author":{"gitId":"ginloy"},"content":"                        Result::error));","lastModifiedDate":"2023-02-17"},{"lineNumber":287,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":288,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":289,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":290,"author":{"gitId":"ginloy"},"content":"     * Chain 2 parsers, ignoring result from first parse.","lastModifiedDate":"2023-02-17"},{"lineNumber":291,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":292,"author":{"gitId":"ginloy"},"content":"     * @param p Next parser in chain","lastModifiedDate":"2023-02-17"},{"lineNumber":293,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-17"},{"lineNumber":294,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":295,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cU\u003e ignoreThen(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-17"},{"lineNumber":296,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":297,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-17"},{"lineNumber":298,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e p.parse(pr.second()),","lastModifiedDate":"2023-02-17"},{"lineNumber":299,"author":{"gitId":"ginloy"},"content":"                        Result::error));","lastModifiedDate":"2023-02-17"},{"lineNumber":300,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":301,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":302,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":303,"author":{"gitId":"ginloy"},"content":"     * Chain 2 parsers, ignoring result form second parse.","lastModifiedDate":"2023-02-17"},{"lineNumber":304,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":305,"author":{"gitId":"ginloy"},"content":"     * @param p Next Parser in chain","lastModifiedDate":"2023-02-17"},{"lineNumber":306,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-17"},{"lineNumber":307,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":308,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cT\u003e thenIgnore(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-17"},{"lineNumber":309,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":310,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-17"},{"lineNumber":311,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e p.parse(pr.second())","lastModifiedDate":"2023-02-17"},{"lineNumber":312,"author":{"gitId":"ginloy"},"content":"                                .match(","lastModifiedDate":"2023-02-17"},{"lineNumber":313,"author":{"gitId":"ginloy"},"content":"                                        pr2 -\u003e Result.ok(pr.first(), pr2.second()),","lastModifiedDate":"2023-02-17"},{"lineNumber":314,"author":{"gitId":"ginloy"},"content":"                                        Result::error),","lastModifiedDate":"2023-02-17"},{"lineNumber":315,"author":{"gitId":"ginloy"},"content":"                        Result::error));","lastModifiedDate":"2023-02-17"},{"lineNumber":316,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":317,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":318,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":319,"author":{"gitId":"ginloy"},"content":"     * Chain 2 parsers, result will be whichever parser succeeds first.","lastModifiedDate":"2023-02-17"},{"lineNumber":320,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":321,"author":{"gitId":"ginloy"},"content":"     * @param p Other parser to try","lastModifiedDate":"2023-02-17"},{"lineNumber":322,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-17"},{"lineNumber":323,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":324,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cT\u003e or(Parser\u003cT\u003e p) {","lastModifiedDate":"2023-02-17"},{"lineNumber":325,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":326,"author":{"gitId":"ginloy"},"content":"                .match(","lastModifiedDate":"2023-02-17"},{"lineNumber":327,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e Result.ok(pr.first(), pr.second()),","lastModifiedDate":"2023-02-17"},{"lineNumber":328,"author":{"gitId":"ginloy"},"content":"                        msg -\u003e p.parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":329,"author":{"gitId":"ginloy"},"content":"                                .match(","lastModifiedDate":"2023-02-17"},{"lineNumber":330,"author":{"gitId":"ginloy"},"content":"                                        pr -\u003e Result.ok(pr.first(), pr.second()),","lastModifiedDate":"2023-02-17"},{"lineNumber":331,"author":{"gitId":"ginloy"},"content":"                                        msg2 -\u003e Result.error(msg + \u0027\\n\u0027 + msg2))));","lastModifiedDate":"2023-02-17"},{"lineNumber":332,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":333,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":334,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":335,"author":{"gitId":"ginloy"},"content":"     * Tries this parser as many times as possible","lastModifiedDate":"2023-02-17"},{"lineNumber":336,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":337,"author":{"gitId":"ginloy"},"content":"     * @return Parser that parses a list of the original type.","lastModifiedDate":"2023-02-17"},{"lineNumber":338,"author":{"gitId":"ginloy"},"content":"     *         Empty list returned if no parse succeeds.","lastModifiedDate":"2023-02-17"},{"lineNumber":339,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":340,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cList\u003cT\u003e\u003e many() {","lastModifiedDate":"2023-02-17"},{"lineNumber":341,"author":{"gitId":"ginloy"},"content":"        Function\u003cString, Result\u003cStream\u003cT\u003e\u003e\u003e f \u003d new Function\u003c\u003e() {","lastModifiedDate":"2023-02-17"},{"lineNumber":342,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":343,"author":{"gitId":"ginloy"},"content":"            public Result\u003cStream\u003cT\u003e\u003e apply(String inp) {","lastModifiedDate":"2023-02-17"},{"lineNumber":344,"author":{"gitId":"ginloy"},"content":"                return parse(inp).match(","lastModifiedDate":"2023-02-17"},{"lineNumber":345,"author":{"gitId":"ginloy"},"content":"                        pr -\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":346,"author":{"gitId":"ginloy"},"content":"                            Result\u003cStream\u003cT\u003e\u003e prev \u003d this.apply(pr.second());","lastModifiedDate":"2023-02-17"},{"lineNumber":347,"author":{"gitId":"ginloy"},"content":"                            return prev.map(s -\u003e Stream.concat(Stream.of(pr.first()), s));","lastModifiedDate":"2023-02-17"},{"lineNumber":348,"author":{"gitId":"ginloy"},"content":"                        },","lastModifiedDate":"2023-02-17"},{"lineNumber":349,"author":{"gitId":"ginloy"},"content":"                        msg -\u003e Result.ok(Stream.of(), inp));","lastModifiedDate":"2023-02-17"},{"lineNumber":350,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":351,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-02-17"},{"lineNumber":352,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e f.apply(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":353,"author":{"gitId":"ginloy"},"content":"                .map(s -\u003e s.collect(Collectors.toList())));","lastModifiedDate":"2023-02-17"},{"lineNumber":354,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":355,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":356,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":357,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":358,"author":{"gitId":"ginloy"},"content":"     * Many until another parser succeeds. Other parser result ignored.","lastModifiedDate":"2023-02-17"},{"lineNumber":359,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":360,"author":{"gitId":"ginloy"},"content":"     * @param \u003cU\u003e Type of other parser","lastModifiedDate":"2023-02-17"},{"lineNumber":361,"author":{"gitId":"ginloy"},"content":"     * @param p   Other parser that ends attempt to parse","lastModifiedDate":"2023-02-17"},{"lineNumber":362,"author":{"gitId":"ginloy"},"content":"     * @return New parser","lastModifiedDate":"2023-02-17"},{"lineNumber":363,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":364,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cList\u003cT\u003e\u003e manyUntil(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-17"},{"lineNumber":365,"author":{"gitId":"ginloy"},"content":"        Function\u003cString, Result\u003cStream\u003cT\u003e\u003e\u003e f \u003d new Function\u003c\u003e() {","lastModifiedDate":"2023-02-17"},{"lineNumber":366,"author":{"gitId":"ginloy"},"content":"            @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":367,"author":{"gitId":"ginloy"},"content":"            public Result\u003cStream\u003cT\u003e\u003e apply(String inp) {","lastModifiedDate":"2023-02-17"},{"lineNumber":368,"author":{"gitId":"ginloy"},"content":"                return p.parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":369,"author":{"gitId":"ginloy"},"content":"                        .match(","lastModifiedDate":"2023-02-17"},{"lineNumber":370,"author":{"gitId":"ginloy"},"content":"                                pr -\u003e Result.ok(Stream.of(), pr.second()),","lastModifiedDate":"2023-02-17"},{"lineNumber":371,"author":{"gitId":"ginloy"},"content":"                                e -\u003e parse(inp).match(","lastModifiedDate":"2023-02-17"},{"lineNumber":372,"author":{"gitId":"ginloy"},"content":"                                        pr -\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":373,"author":{"gitId":"ginloy"},"content":"                                            Result\u003cStream\u003cT\u003e\u003e prev \u003d this.apply(pr.second());","lastModifiedDate":"2023-02-17"},{"lineNumber":374,"author":{"gitId":"ginloy"},"content":"                                            return prev.map(s -\u003e Stream.concat(Stream.of(pr.first()), s));","lastModifiedDate":"2023-02-17"},{"lineNumber":375,"author":{"gitId":"ginloy"},"content":"                                        },","lastModifiedDate":"2023-02-17"},{"lineNumber":376,"author":{"gitId":"ginloy"},"content":"                                        msg -\u003e Result.error(String.format(\"Ending Flag: %s\", e))));","lastModifiedDate":"2023-02-17"},{"lineNumber":377,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":378,"author":{"gitId":"ginloy"},"content":"        };","lastModifiedDate":"2023-02-17"},{"lineNumber":379,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e f.apply(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":380,"author":{"gitId":"ginloy"},"content":"                .map(s -\u003e s.collect(Collectors.toList())));","lastModifiedDate":"2023-02-17"},{"lineNumber":381,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":382,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":383,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":384,"author":{"gitId":"ginloy"},"content":"     * Same as many except that result must have at least 1 element.","lastModifiedDate":"2023-02-17"},{"lineNumber":385,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":386,"author":{"gitId":"ginloy"},"content":"     * @see #many()","lastModifiedDate":"2023-02-17"},{"lineNumber":387,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":388,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cList\u003cT\u003e\u003e some() {","lastModifiedDate":"2023-02-17"},{"lineNumber":389,"author":{"gitId":"ginloy"},"content":"        return many().satisfyOrElse(s -\u003e !s.isEmpty(), \"some: Less than 1 parse successful.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":390,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":391,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":392,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":393,"author":{"gitId":"ginloy"},"content":"     * Same as manyUntil except that result must have at least 1 element.","lastModifiedDate":"2023-02-17"},{"lineNumber":394,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":395,"author":{"gitId":"ginloy"},"content":"     * @param \u003cU\u003e Type of other parser","lastModifiedDate":"2023-02-17"},{"lineNumber":396,"author":{"gitId":"ginloy"},"content":"     * @param p   Other parser that ends attempt to parse","lastModifiedDate":"2023-02-17"},{"lineNumber":397,"author":{"gitId":"ginloy"},"content":"     * @see #manyUntil(Parser)","lastModifiedDate":"2023-02-17"},{"lineNumber":398,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":399,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cList\u003cT\u003e\u003e someUntil(Parser\u003cU\u003e p) {","lastModifiedDate":"2023-02-17"},{"lineNumber":400,"author":{"gitId":"ginloy"},"content":"        return manyUntil(p).satisfyOrElse(s -\u003e !s.isEmpty(), \"some: Less than 1 parse successful.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":401,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":402,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":403,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":404,"author":{"gitId":"ginloy"},"content":"     * Replaces error message if result is an error.","lastModifiedDate":"2023-02-17"},{"lineNumber":405,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":406,"author":{"gitId":"ginloy"},"content":"     * @param errorMsg Message to replace with","lastModifiedDate":"2023-02-17"},{"lineNumber":407,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":408,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cT\u003e overrideMsg(String errorMsg) {","lastModifiedDate":"2023-02-17"},{"lineNumber":409,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":410,"author":{"gitId":"ginloy"},"content":"                .overrideMsg(errorMsg));","lastModifiedDate":"2023-02-17"},{"lineNumber":411,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":412,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":413,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":414,"author":{"gitId":"ginloy"},"content":"     * Parser fails if result does not satisfy condition","lastModifiedDate":"2023-02-17"},{"lineNumber":415,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":416,"author":{"gitId":"ginloy"},"content":"     * @see Result#filterOrElse(Predicate, String)","lastModifiedDate":"2023-02-17"},{"lineNumber":417,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":418,"author":{"gitId":"ginloy"},"content":"    public Parser\u003cT\u003e satisfyOrElse(Predicate\u003cT\u003e condition, String failMsg) {","lastModifiedDate":"2023-02-17"},{"lineNumber":419,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":420,"author":{"gitId":"ginloy"},"content":"                .filterOrElse(condition, failMsg));","lastModifiedDate":"2023-02-17"},{"lineNumber":421,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":422,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":423,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":424,"author":{"gitId":"ginloy"},"content":"     * Maps parser to new parser of new type","lastModifiedDate":"2023-02-17"},{"lineNumber":425,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":426,"author":{"gitId":"ginloy"},"content":"     * @see Result#map(Function)","lastModifiedDate":"2023-02-17"},{"lineNumber":427,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":428,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Parser\u003cU\u003e map(Function\u003c? super T, ? extends U\u003e f) {","lastModifiedDate":"2023-02-17"},{"lineNumber":429,"author":{"gitId":"ginloy"},"content":"        return new Parser\u003c\u003e(inp -\u003e this.parse(inp)","lastModifiedDate":"2023-02-17"},{"lineNumber":430,"author":{"gitId":"ginloy"},"content":"                .map(f));","lastModifiedDate":"2023-02-17"},{"lineNumber":431,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":432,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"ginloy":432}},{"path":"src/main/java/seedu/address/commons/util/monad/parsec/Result.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.commons.util.monad.parsec;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.commons.util.Pair;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import seedu.address.commons.util.monad.Either;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" * Result of a parse by a Parser","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" *","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * @param \u003cT\u003e Wrapped type","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * @see Parser","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"public class Result\u003cT\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    private final Either\u003cPair\u003cT, String\u003e, String\u003e result;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    private Result(Either\u003cPair\u003cT, String\u003e, String\u003e result) {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        this.result \u003d result;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * @param res    Parse result","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     * @param remain Remaining input after parse","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     * @return Ok result","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    static \u003cT\u003e Result\u003cT\u003e ok(T res, String remain) {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(Either.left(new Pair\u003c\u003e(res, remain)));","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * @param error Error message","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @return Error result","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    static \u003cT\u003e Result\u003cT\u003e error(String error) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(Either.right(error));","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     * Checks if wrapped object satisfies condition","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"     * @param condition Condition to test","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     * @param errorMsg  Error message if condition unsatisfied","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     * @return New filtered result","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    public Result\u003cT\u003e filterOrElse(Predicate\u003c? super T\u003e condition, String errorMsg) {","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(this.result.filterOrElse(pr -\u003e condition.test(pr.first()), errorMsg));","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     * Overrides message if this is Error","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     * @param errorMsg Message to override with","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     * @return New result","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    public Result\u003cT\u003e overrideMsg(String errorMsg) {","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        return this.result.match(","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"                pr -\u003e this,","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"                msg -\u003e error(errorMsg));","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"     * @return true if this is ok","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    public boolean isOk() {","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        return this.result.isLeft();","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     * @return true if this is error","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    public boolean isError() {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        return this.result.isRight();","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"     * Converts result to new object based on 2 mapping functions","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     * @param \u003cU\u003e           Type of new object","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"     * @param okFunction    Function to convert pair of (parsedObject, remainingInput)","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"     *                      to new object if this is ok","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"     * @param errorFunction Function to convert error message to new object if this","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"     *                      is error","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"     * @return New object","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e U match(Function\u003c? super Pair\u003c? extends T, ? extends String\u003e, ? extends U\u003e okFunction,","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"                       Function\u003c? super String, ? extends U\u003e errorFunction) {","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"        return this.result.match(okFunction, errorFunction);","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"     * Maps parsed object to new wrapped object if this is ok","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"     * @param f Mapping function","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"     * @return New result","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"    public \u003cU\u003e Result\u003cU\u003e map(Function\u003c? super T, ? extends U\u003e f) {","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"        return new Result\u003c\u003e(this.result.map(pr -\u003e new Pair\u003c\u003e(f.apply(pr.first()), pr.second())));","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"        return this.result.match(","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"                pr -\u003e String.format(\"Ok(%s, %s)\", pr.first(), pr.second()),","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"                msg -\u003e String.format(\"Error(%s)\", msg));","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"ginloy":108}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.AppointmentDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.CustomerVehicleMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.ServiceDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.TechnicianDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.VehicleDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     * Returns the user prefs\u0027 shop file path.","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    Path getShopFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    //// AutoM8","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    /** Returns an unmodifiable view of the filtered list of customers */","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"    /** Returns an unmodifiable view of the filtered list of vehicles */","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cVehicle\u003e getFilteredVehicleList();","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"    /** Returns an unmodifiable view of the filtered list of services */","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cService\u003e getFilteredServiceList();","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"     * @return Unmodifiable view of the filtered list of appointments","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     * @return Unmodifiable view of the filtered list of technicians","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"    ObservableList\u003cTechnician\u003e getFilteredTechnicianList();","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"     * @return parts","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"    PartMap getPartMap();","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    /** Returns a map of customers and their respective vehicle(s) */","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    CustomerVehicleMap getCustomerVehicleMap();","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"    /** Returns maps of vehicles and their respective owner or services */","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"    VehicleDataMap getVehicleDataMap();","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    /** Returns maps of services and their respective vehicle or technicians */","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"    ServiceDataMap getServiceDataMap();","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"    /** Returns maps of appointments and their respective staff and customers */","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"    AppointmentDataMap getAppointmentDataMap();","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    /** Returns maps of technicians and their respective services and appointments */","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"    TechnicianDataMap getTechnicianDataMap();","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"    /** Returns currently selected customer*/","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"    Customer getSelectedCustomer();","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"    /** Returns currently selected vehicle*/","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"    Vehicle getSelectedVehicle();","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"    /** Returns currently selected service*/","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"    Service getSelectedService();","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"    /** Returns currently selected appointment*/","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"    Appointment getSelectedAppointment();","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"    /** Returns currently selected technician*/","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"    Technician getSelectedTechnician();","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kimberlybp":58,"ginloy":12,"9fc70c892":1,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"import seedu.address.logic.commands.StackUndoRedo;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.AppointmentDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.CustomerVehicleMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.ServiceDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.TechnicianDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.VehicleDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"    private final StackUndoRedo undoRedoStack;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"        this.undoRedoStack \u003d new StackUndoRedo();","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"        command.setData(undoRedoStack);","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"            storage.saveShop(model.getShop());","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"            undoRedoStack.push(command);","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"    public Path getShopFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"        return model.getShopFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        return model.getFilteredCustomerList();","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cVehicle\u003e getFilteredVehicleList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"        return model.getFilteredVehicleList();","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cService\u003e getFilteredServiceList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"        return model.getFilteredServiceList();","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"     * @return Unmodifiable view of the filtered list of appointments","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"     * @return Unmodifiable view of the filtered list of technicians","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"    public ObservableList\u003cTechnician\u003e getFilteredTechnicianList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"        return model.getFilteredTechnicianList();","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"    public PartMap getPartMap() {","lastModifiedDate":"2023-03-31"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"        return model.getPartMap();","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"    public CustomerVehicleMap getCustomerVehicleMap() {","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"        return model.getCustomerVehicleMap();","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"    public VehicleDataMap getVehicleDataMap() {","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"        return model.getVehicleDataMap();","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"    public ServiceDataMap getServiceDataMap() {","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"        return model.getServiceDataMap();","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"    public AppointmentDataMap getAppointmentDataMap() {","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"kimberlybp"},"content":"        return model.getAppointmentDataMap();","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"kimberlybp"},"content":"    public TechnicianDataMap getTechnicianDataMap() {","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"kimberlybp"},"content":"        return model.getTechnicianDataMap();","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"kimberlybp"},"content":"    public Customer getSelectedCustomer() {","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"kimberlybp"},"content":"        return model.getSelectedCustomer();","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"kimberlybp"},"content":"    public Vehicle getSelectedVehicle() {","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"        return model.getSelectedVehicle();","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":169,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"kimberlybp"},"content":"    public Service getSelectedService() {","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"kimberlybp"},"content":"        return model.getSelectedService();","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":174,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"kimberlybp"},"content":"    public Appointment getSelectedAppointment() {","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"kimberlybp"},"content":"        return model.getSelectedAppointment();","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":179,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":180,"author":{"gitId":"kimberlybp"},"content":"    public Technician getSelectedTechnician() {","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"kimberlybp"},"content":"        return model.getSelectedTechnician();","lastModifiedDate":"2023-03-31"},{"lineNumber":182,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kimberlybp":82,"ginloy":18,"9fc70c892":1,"junlee1991":5,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CUSTOMER_ID;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * Manages adding appointments","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"public class AddAppointmentCommand extends RedoableCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addappointment\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds appointment with customer. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + PREFIX_CUSTOMER_ID + \"CUSTOMER ID \"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_TIME + \"TIME\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            + PREFIX_CUSTOMER_ID + \"5 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            + PREFIX_DATE + \"2023-02-03 \"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TIME + \"17:00\";","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_CUSTOMER_NOT_FOUND \u003d \"Customer not registered\";","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     * Constructs command that adds appointment to the model","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"     * @param appointment Appointment to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        this.toAdd \u003d appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     * Execution of command","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * @return Result of command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If error occurs during command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        if (!model.hasCustomer(toAdd.getCustomerId())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            IdGenerator.setAppointmentIdUnused(toAdd.getId());","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_CUSTOMER_NOT_FOUND);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), Tab.APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"                || (other instanceof AddAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 toAdd.equals(((AddAppointmentCommand) other).toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":1,"ginloy":63,"9fc70c892":1,"junlee1991":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"public class AddCommand extends RedoableCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    protected final Person toAdd;","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ginloy":1,"9fc70c892":1,"junlee1991":2,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/AddCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * Manages adding of customers","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"public class AddCustomerCommand extends AddCommand {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addcustomer\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Registers a customer with the shop. \"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TAG + \"No insurance \"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New customer added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already registered\";","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     * Constructs command that adds customer to the model","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * @param customer Customer to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    public AddCustomerCommand(Customer customer) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        super(customer);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * Execution of command","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     * @return Result of command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If error occurs during command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        Customer toAdd \u003d (Customer) this.toAdd;","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        if (model.hasCustomer(toAdd.getId())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        model.addCustomer(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), Tab.CUSTOMERS);","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"                || (other instanceof AddCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 toAdd.equals(((AddCustomerCommand) other).toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":1,"ginloy":69,"junlee1991":1}},{"path":"src/main/java/seedu/address/logic/commands/AddPartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PART_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" * Command that manages adding parts","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"public class AddPartCommand extends RedoableCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addpart\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a part to the shop. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PART_NAME + \"PART NAME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"            + PREFIX_QUANTITY + \"PART QUANTITY \"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PART_NAME + \"Cylinder Head \"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + PREFIX_QUANTITY + \"50\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New part added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_INCREASE_PART_QUANTITY \u003d \"%s quantity increased\";","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    private final String partName;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private final int quantity;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * Constructs command that adds part to the model","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Name of the part to add","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * @param quantity Quantity of the part to add","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    public AddPartCommand(String partName, int quantity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        this.partName \u003d partName;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     * Execution of command","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     * @return Result of command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If error occurs during command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        if (model.hasPart(partName)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"            model.addPart(partName, quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"            return new CommandResult(String.format(MESSAGE_INCREASE_PART_QUANTITY, partName));","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        model.addPart(partName, quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, partName), Tab.PARTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"                || (other instanceof AddPartCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 partName.equalsIgnoreCase((((AddPartCommand) other).partName)));","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":15,"ginloy":49,"junlee1991":2}},{"path":"src/main/java/seedu/address/logic/commands/AddPartToServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PART_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_ID;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" * Manages adding of parts to services","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"public class AddPartToServiceCommand extends RedoableCommand {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addservicepart\";","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"%d x (%s) added to service %d\";","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SERVICE_NOT_FOUND \u003d \"Service %d does not exist\";","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_PART_NOT_FOUND \u003d \"Part %s not in system\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_INSUFFICIENT_PART \u003d \"Not enough parts to assign to service\";","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a part to the service. \"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        + PREFIX_SERVICE_ID + \"SERVICE ID \"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        + PREFIX_PART_NAME + \"PART NAME \"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        + PREFIX_QUANTITY + \"PART QUANTITY \"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        + PREFIX_SERVICE_ID + \"1 \"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        + PREFIX_PART_NAME + \"Cylinder Head \"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        + PREFIX_QUANTITY + \"50\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    private final int serviceId;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    private final String partName;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    private final int quantity;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @param serviceId ID of service","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     * @param partName  Name of part","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"     * @param quantity  Quantity of part","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    public AddPartToServiceCommand(int serviceId, String partName, int quantity) {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        this.serviceId \u003d serviceId;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        this.partName \u003d partName;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        if (!model.hasService(this.serviceId)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_SERVICE_NOT_FOUND, this.serviceId));","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        if (!model.getPartMap().contains(this.partName)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_PART_NOT_FOUND, this.partName));","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        if (model.getPartMap().getPartQuantity(this.partName) \u003c this.quantity) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_INSUFFICIENT_PART);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        model.addPartToService(this.serviceId, this.partName, this.quantity);","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_FORMAT, this.quantity, this.partName, this.serviceId),","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"            Tab.SERVICES);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"kimberlybp":1,"ginloy":65}},{"path":"src/main/java/seedu/address/logic/commands/AddServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_DESCRIPTION;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_DURATION;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_STATUS;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_ID;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * Manages adding services","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"public class AddServiceCommand extends RedoableCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addservice\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a service to the shop. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + PREFIX_VEHICLE_ID + \"VEHICLE ID \"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + \"Optional: \" + PREFIX_SERVICE_DURATION + \"SERVICE DURATION \"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + \"Optional: \" + PREFIX_SERVICE_STATUS + \"STATUS \"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + \"Optional: \" + PREFIX_SERVICE_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            + PREFIX_VEHICLE_ID + \"10 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            + PREFIX_SERVICE_DURATION + \"8 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            + PREFIX_SERVICE_STATUS + \"in progress \"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            + PREFIX_SERVICE_DESCRIPTION + \"Customer says abc\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New service added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_VEHICLE_NOT_FOUND \u003d \"Vehicle %d not in system\";","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_DUPLICATE_SERVICE \u003d \"Service %d already in system\";","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    private final Service toAdd;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     * Constructs command that adds service to the model","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * @param service Service to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    public AddServiceCommand(Service service) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        this.toAdd \u003d service;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * Execution of command","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     * @return Result of command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If error occurs during command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        if (!model.hasVehicle(toAdd.getVehicleId())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            IdGenerator.setServiceIdUnused(toAdd.getId());","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_VEHICLE_NOT_FOUND, toAdd.getVehicleId()));","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        if (model.hasService(toAdd.getId())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_SERVICE, toAdd.getId()));","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        model.addService(toAdd.getVehicleId(), toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), Tab.SERVICES);","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"                || (other instanceof AddServiceCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 toAdd.equals(((AddServiceCommand) other).toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":1,"ginloy":70,"junlee1991":2}},{"path":"src/main/java/seedu/address/logic/commands/AddStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNSUPPORTED_COMMAND;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Staff;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * Manages adding of Staff","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"public class AddStaffCommand extends AddCommand {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addstaff\";","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a staff to the shop. \"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TAG + \"temp intern \"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TAG + \"leaving 2nd march\";","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New staff added: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_DUPLICATE_STAFF \u003d \"This staff already registered\";","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     * Constructs command that adds staff to the model","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * @param staff Staff to be added","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    public AddStaffCommand(Staff staff) {","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        super(staff);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * Execution of command","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     * @return Result of command execution","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If error occurs during command execution","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        throw new CommandException(MESSAGE_UNSUPPORTED_COMMAND);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"                || (other instanceof AddStaffCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 toAdd.equals(((AddStaffCommand) other).toAdd));","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"ginloy":64}},{"path":"src/main/java/seedu/address/logic/commands/AddTechnicianCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * Manages adding of technicians","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"public class AddTechnicianCommand extends AddStaffCommand {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addtechnician\";","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a technician to the shop. \"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TAG + \"leader \"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TAG + \"leaving 2nd march\";","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New technician added: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_DUPLICATE_TECHNICIAN \u003d \"This technician already registered\";","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     * Constructs command that adds technician to the model","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * @param technician Technician to be added","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    public AddTechnicianCommand(Technician technician) {","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        super(technician);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * Execution of command","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     * @return Result of command execution","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If error occurs during command execution","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        Technician toAdd \u003d (Technician) this.toAdd;","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        if (model.hasTechnician(toAdd.getId())) {","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TECHNICIAN);","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        model.addTechnician(toAdd);","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), Tab.TECHNICIANS);","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"                || (other instanceof AddTechnicianCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 toAdd.equals(((AddTechnicianCommand) other).toAdd));","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":1,"ginloy":70}},{"path":"src/main/java/seedu/address/logic/commands/AddTechnicianToAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_ID;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICIAN_ID;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" * Manages the adding of an exiting technician to a specific appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"public class AddTechnicianToAppointmentCommand extends RedoableCommand {","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addappointmenttech\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_TECHNICIAN_NOT_FOUND \u003d \"Technician %d does not exist\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_APPOINTMENT_NOT_FOUND \u003d \"Appointment %d does not exist\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"Technician %d added to Appointment %d\";","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        COMMAND_WORD + \": Assigns an existing technician to an existing appointment. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TECHNICIAN_ID + \"TECHNICIAN_ID \"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + PREFIX_APPOINTMENT_ID + \"APPOINTMENT_ID \"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + \"Example Usage: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TECHNICIAN_ID + \"2 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + PREFIX_APPOINTMENT_ID + \"3\";","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    private final int techId;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    private final int appointmentId;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * @param techId    ID of technician","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     * @param appointmentId ID of appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public AddTechnicianToAppointmentCommand(int techId, int appointmentId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        this.techId \u003d techId;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        this.appointmentId \u003d appointmentId;","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        if (!model.hasTechnician(this.techId)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_TECHNICIAN_NOT_FOUND, this.techId));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        if (!model.hasAppointment(this.appointmentId)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_APPOINTMENT_NOT_FOUND, this.appointmentId));","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        model.addTechnicianToAppointment(this.techId, this.appointmentId);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_FORMAT, this.techId, this.appointmentId),","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"                Tab.APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":2,"ginloy":51}},{"path":"src/main/java/seedu/address/logic/commands/AddTechnicianToServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_ID;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICIAN_ID;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":" * Manages the adding of a technician to a specific service","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"public class AddTechnicianToServiceCommand extends RedoableCommand {","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addservicetech\";","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_TECHNICIAN_NOT_FOUND \u003d \"Technician %d does not exist\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SERVICE_NOT_FOUND \u003d \"Service %d does not exist\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"Technician %d added to Service %d\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_USAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        COMMAND_WORD + \": Assigns an existing technician to an existing service. \"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TECHNICIAN_ID + \"TECHNICIAN_ID \"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + PREFIX_SERVICE_ID + \"SERVICE_ID \"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + \"Example Usage: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TECHNICIAN_ID + \"2 \"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + PREFIX_SERVICE_ID + \"3\";","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    private final int techId;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    private final int serviceId;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * @param techId    ID of technician","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     * @param serviceId ID of service","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public AddTechnicianToServiceCommand(int techId, int serviceId) {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        this.techId \u003d techId;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        this.serviceId \u003d serviceId;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        if (!model.hasTechnician(this.techId)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_TECHNICIAN_NOT_FOUND, this.techId));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        if (!model.hasService(this.serviceId)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_SERVICE_NOT_FOUND, this.serviceId));","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        model.addTechnicianToService(this.serviceId, this.techId);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_FORMAT, this.techId, this.serviceId),","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"                Tab.SERVICES);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"kimberlybp":1,"ginloy":52}},{"path":"src/main/java/seedu/address/logic/commands/AddVehicleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BRAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CUSTOMER_ID;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATE_NUM;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_COLOR;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_TYPE;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" * Manages adding vehicles","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"public class AddVehicleCommand extends RedoableCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"addvehicle\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a vehicle to the shop. \"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PLATE_NUM + \"PLATE NUMBER \"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + PREFIX_BRAND + \"VEHICLE BRAND \"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + PREFIX_CUSTOMER_ID + \"OWNER ID \"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            + PREFIX_VEHICLE_COLOR + \"COLOR \"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            + PREFIX_VEHICLE_TYPE + \"VEHICLE TYPE \"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            + PREFIX_PLATE_NUM + \"SBA1234A \"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            + PREFIX_BRAND + \"Toyota \"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            + PREFIX_VEHICLE_COLOR + \"red\"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            + PREFIX_CUSTOMER_ID + \"1 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"            + PREFIX_VEHICLE_TYPE + \"4wd \";","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New vehicle added: %1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_DUPLICATE_VEHICLE \u003d \"This vechicle already registered\";","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_CUSTOMER_NOT_FOUND \u003d \"Customer not registered\";","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    private final Vehicle toAdd;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     * Constructs command that adds vehicle to the model","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"     * @param vehicle Customer to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    public AddVehicleCommand(Vehicle vehicle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        this.toAdd \u003d vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     * Execution of command","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"     * @return Result of command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If error occurs during command execution","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        if (!model.hasCustomer(toAdd.getOwnerId())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"            IdGenerator.setVehicleIdUnused(toAdd.getId());","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_CUSTOMER_NOT_FOUND);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        if (model.hasVehicle(toAdd.getId())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_VEHICLE);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        model.addVehicle(toAdd.getOwnerId(), toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), Tab.VEHICLES);","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"                || (other instanceof AddVehicleCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 toAdd.equals(((AddVehicleCommand) other).toAdd));","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":1,"ginloy":74,"junlee1991":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"public class ClearCommand extends RedoableCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"junlee1991":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"    protected StackUndoRedo undoRedoStack;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    public void setData(StackUndoRedo undoRedoStack) {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"junlee1991":3,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private final Tab type;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a {@code CommandResult}.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, Tab type) {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        this.type \u003d Tab.UNCHANGED;","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and {@code type},","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    public CommandResult(String feedbackToUser, Tab type) {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        this(feedbackToUser, false, false, type);","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    public Tab getType() {","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        return this.type;","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kimberlybp":25,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":" * Deletes a vehicle identified using it\u0027s displayed index from viewvehicle.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"public class DeleteAppointmentCommand extends RedoableCommand {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"deleteappointment\";","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \": Deletes the appointment identified by the id number displayed by the list command.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_APPOINTMENT_NOT_FOUND \u003d \"Appointment not found\";","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private final int id;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    public DeleteAppointmentCommand(int id) {","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        Appointment appointmentToDelete \u003d lastShownList.stream().filter(appointment -\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"                id \u003d\u003d appointment.getId()).findFirst().orElse(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        if (appointmentToDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"            throw new CommandException(MESSAGE_APPOINTMENT_NOT_FOUND);","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"        IdGenerator.setAppointmentIdUnused(id);","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS, appointmentToDelete),","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                Tab.APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof DeleteAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 id \u003d\u003d ((DeleteAppointmentCommand) other).id); // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":15,"9fc70c892":43}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"public class DeleteCommand extends RedoableCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"9fc70c892":1,"junlee1991":2,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":" * Deletes a vehicle identified using it\u0027s displayed index from viewcustomer.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"public class DeleteCustomerCommand extends RedoableCommand {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"deletecustomer\";","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \": Deletes the customer identified by the id number displayed by the list command.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_DELETE_CUSTOMER_SUCCESS \u003d \"Deleted Customer: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_CUSTOMER_NOT_FOUND \u003d \"Customer is not registered\";","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"    private static final Customer CUSTOMER_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    public DeleteCustomerCommand(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        Customer customerToDelete \u003d lastShownList.stream().filter(customer-\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"                id \u003d\u003d customer.getId()).findFirst().orElse(CUSTOMER_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"        if (customerToDelete \u003d\u003d CUSTOMER_DOES_NOT_EXIST) {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"            throw new CommandException(MESSAGE_CUSTOMER_NOT_FOUND);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"        model.deleteCustomer(customerToDelete);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        IdGenerator.setCustomerIdUnused(id);","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete), Tab.CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof DeleteCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 id \u003d\u003d ((DeleteCustomerCommand) other).id); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":1,"9fc70c892":58}},{"path":"src/main/java/seedu/address/logic/commands/DeletePartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVAID_PART_REQUESTED;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":" * Deletes a vehicle identified using it\u0027s displayed index from viewpart.","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"public class DeletePartCommand extends RedoableCommand {","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"deletepart\";","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"            + \": Deletes the part identified by the part name.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: STRING\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS-2103-T\";","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_DELETE_PART_SUCCESS \u003d \"Deleted Part: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"    private final String userString;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    public DeletePartCommand(String userString) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"        this.userString \u003d userString;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        PartMap pm \u003d model.getPartMap();","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"        // This is here due to not implementing parser","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"        if (pm.contains(userString) \u003d\u003d false) {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"            throw new CommandException(String.format(MESSAGE_INVAID_PART_REQUESTED, DeletePartCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"            pm.removePart(userString);","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PART_SUCCESS, userString), Tab.PARTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof DeletePartCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 userString.equals(((DeletePartCommand) other).userString)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":1,"9fc70c892":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":" * Deletes a vehicle identified using it\u0027s displayed index from viewvehicle.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"public class DeleteServiceCommand extends RedoableCommand {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"deleteservice\";","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \": Deletes the vehicle identified by the id number displayed by the list command.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_DELETE_SERVICE_SUCCESS \u003d \"Deleted Service: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_SERVICE_NOT_FOUND \u003d \"Deleted Service: %1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"    public static final Service SERVICE_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    public DeleteServiceCommand(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        List\u003cService\u003e lastShownList \u003d model.getFilteredServiceList();","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        Service serviceToDeletes \u003d lastShownList.stream().filter(service-\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"                id \u003d\u003d service.getId()).findFirst().orElse(null);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"        if (serviceToDeletes \u003d\u003d SERVICE_DOES_NOT_EXIST) {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"            throw new CommandException(MESSAGE_SERVICE_NOT_FOUND);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"        model.deleteService(serviceToDeletes);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        IdGenerator.setServiceIdUnused(id);","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SERVICE_SUCCESS, serviceToDeletes), Tab.SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof DeleteServiceCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 id \u003d\u003d (((DeleteServiceCommand) other).id)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":1,"9fc70c892":58}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTechnicianCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":" * Deletes a vehicle identified using it\u0027s displayed index from viewcustomer.","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"public class DeleteTechnicianCommand extends RedoableCommand {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"deletetechnician\";","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \": Deletes the technician identified by the id number displayed by the list command.\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_DELETE_TECHNICIAN_SUCCESS \u003d \"Deleted Technician: %1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_TECHNICIAN_NOT_FOUND \u003d \"Technician is not registered\";","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"    private static final Technician TECHNICIAN_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    public DeleteTechnicianCommand(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        List\u003cTechnician\u003e lastShownList \u003d model.getFilteredTechnicianList();","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        Technician technicianToDelete \u003d lastShownList.stream().filter(technician-\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"                id \u003d\u003d technician.getId()).findFirst().orElse(TECHNICIAN_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"        if (technicianToDelete \u003d\u003d TECHNICIAN_DOES_NOT_EXIST) {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"            throw new CommandException(MESSAGE_TECHNICIAN_NOT_FOUND);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"        model.deleteTechnician(technicianToDelete);","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        IdGenerator.setStaffIdUnused(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TECHNICIAN_SUCCESS, technicianToDelete), Tab.TECHNICIANS);","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof DeleteTechnicianCommand // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 id \u003d\u003d ((DeleteTechnicianCommand) other).id); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":1,"9fc70c892":58}},{"path":"src/main/java/seedu/address/logic/commands/DeleteVehicleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":" * Deletes a vehicle identified using it\u0027s displayed index from viewvehicle.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"public class DeleteVehicleCommand extends RedoableCommand {","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"deletevehicle\";","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \": Deletes the vehicle identified by the id number displayed by the list command.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_DELETE_VEHICLE_SUCCESS \u003d \"Deleted Vehicle: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_VEHICLE_NOT_FOUND \u003d \"Vehicle not in AutoM8\";","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"    private static final Vehicle VEHICLE_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    public DeleteVehicleCommand(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        List\u003cVehicle\u003e lastShownList \u003d model.getFilteredVehicleList();","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        // Get vehicle based on given id","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"        Vehicle vehicleToDelete \u003d lastShownList.stream().filter(vehicle-\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"                id \u003d\u003d vehicle.getId()).findFirst().orElse(VEHICLE_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"        if (vehicleToDelete \u003d\u003d VEHICLE_DOES_NOT_EXIST) {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"            throw new CommandException(MESSAGE_VEHICLE_NOT_FOUND);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        model.deleteVehicle(vehicleToDelete);","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"        IdGenerator.setVehicleIdUnused(id);","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_VEHICLE_SUCCESS, vehicleToDelete), Tab.VEHICLES);","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof DeleteVehicleCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 this.id \u003d\u003d ((DeleteVehicleCommand) other).id); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":2,"9fc70c892":58}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CUSTOMER_ID;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"public class EditAppointmentCommand extends RedoableCommand {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"editappointment\";","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the appointment identified \"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"            + \"by the id number displayed by listappointments. \"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"            + \"Note that if \" + PREFIX_DATE + \" is used, then \" + PREFIX_TIME + \" must accompany it, and vice versa.\"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"            + PREFIX_INTERNAL_ID + \"APPOINTMENT_ID \"","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_CUSTOMER_ID + \"CUSTOMER ID] \"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_DATE + \"DATE  \"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_TIME + \"TIME]\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_CUSTOMER_ID + \"5 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_DATE + \"2023-02-03 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_TIME + \"17:00\";","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Edited Appointment: %1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_APPOINTMENT_NOT_FOUND \u003d \"Appointment %d does not exist\";","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_CUSTOMER_NOT_FOUND \u003d \"Customer %d does not exist\";","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    private static final Appointment APPOINTMENT_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"    private int id;","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"     * @param editAppointmentDescriptor details to edit the person with","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"    public EditAppointmentCommand(EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"        // Locate Appointment containing id. By right each ID is unique.","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"        Appointment appointmentToEdit \u003d lastShownList.stream().filter(appointment -\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"                        editAppointmentDescriptor.getId() \u003d\u003d appointment.getId()).findAny()","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"                .orElse(APPOINTMENT_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"        // If appointment doesn\u0027t exist","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"        if (appointmentToEdit \u003d\u003d APPOINTMENT_DOES_NOT_EXIST) {","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_APPOINTMENT_NOT_FOUND,","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"                this.editAppointmentDescriptor.getId()));","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"        if (!model.hasCustomer(editedAppointment.getCustomerId())) {","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_CUSTOMER_NOT_FOUND, editedAppointment.getCustomerId()));","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"        if (editedAppointment.getCustomerId() !\u003d appointmentToEdit.getCustomerId()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"            Customer oldCustomer \u003d model.getFilteredCustomerList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"                .filter(c -\u003e c.getId() \u003d\u003d appointmentToEdit.getCustomerId())","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"                .findFirst().orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"            Customer newCustomer \u003d model.getFilteredCustomerList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"                .filter(c -\u003e c.getId() \u003d\u003d editedAppointment.getCustomerId())","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"                .findFirst().orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"            oldCustomer.removeAppointment(appointmentToEdit);","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"            newCustomer.addAppointment(editedAppointment);","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"9fc70c892"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"        //model.selectAppointment(editedAppointment);","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"9fc70c892"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment), Tab.APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"9fc70c892"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"9fc70c892"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"9fc70c892"},"content":"    private static Appointment createEditedAppointment(Appointment appointmentToEdit,","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"9fc70c892"},"content":"                                                       EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"9fc70c892"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"9fc70c892"},"content":"        int id \u003d appointmentToEdit.getId(); // Can\u0027t have them custom inserting id.","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"9fc70c892"},"content":"        int customerId \u003d editAppointmentDescriptor.getCustomerId().orElse(appointmentToEdit.getCustomerId());","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"9fc70c892"},"content":"        LocalDateTime timeDate \u003d editAppointmentDescriptor.getTimeDate().orElse(appointmentToEdit.getTimeDate());","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"        Set\u003cInteger\u003e staffIds \u003d editAppointmentDescriptor.getStaffIds().orElse(","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"            new HashSet\u003c\u003e(appointmentToEdit.getStaffIds()));","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"        return new Appointment(id, customerId, timeDate, staffIds);","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"9fc70c892"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"9fc70c892"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"9fc70c892"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"        // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"        EditAppointmentCommand e \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"        return editAppointmentDescriptor.equals(e.editAppointmentDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"9fc70c892"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"9fc70c892"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"9fc70c892"},"content":"        // This is basically a copy of Appointment","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"9fc70c892"},"content":"        private int id;","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"        private int customerId \u003d -1;","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"9fc70c892"},"content":"        private LocalDateTime timeDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"9fc70c892"},"content":"        private Set\u003cInteger\u003e staffIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"9fc70c892"},"content":"        public EditAppointmentDescriptor() {}","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"9fc70c892"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"9fc70c892"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"9fc70c892"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"9fc70c892"},"content":"            setId(toCopy.id);","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"9fc70c892"},"content":"            setCustomerId(toCopy.customerId);","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"9fc70c892"},"content":"            setTimeDate(toCopy.timeDate);","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"9fc70c892"},"content":"            setStaffIds(toCopy.staffIds);","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"9fc70c892"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"9fc70c892"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"9fc70c892"},"content":"            return CollectionUtil.isAnyNonNull(customerId, timeDate, staffIds);","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"9fc70c892"},"content":"        // Users should not be allowed to run this, but is needed for creating the class","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"9fc70c892"},"content":"        public void setId(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"9fc70c892"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"9fc70c892"},"content":"        public int getId() {","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"9fc70c892"},"content":"            return id;","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"        public void setCustomerId(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"9fc70c892"},"content":"            this.customerId \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cInteger\u003e getCustomerId() {","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"            if (this.customerId \u003d\u003d -1) {","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"            return Optional.of(this.customerId);","lastModifiedDate":"2023-03-31"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"9fc70c892"},"content":"        public void setTimeDate(LocalDateTime timeDate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"            this.timeDate \u003d timeDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cLocalDateTime\u003e getTimeDate() {","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(timeDate);","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"9fc70c892"},"content":"        public void setStaffIds(Set\u003cInteger\u003e staffIds) {","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"9fc70c892"},"content":"            this.staffIds \u003d (staffIds !\u003d null) ? new HashSet\u003c\u003e(staffIds) : null;;","lastModifiedDate":"2023-03-18"},{"lineNumber":203,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":204,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":205,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cSet\u003cInteger\u003e\u003e getStaffIds() {","lastModifiedDate":"2023-03-18"},{"lineNumber":206,"author":{"gitId":"9fc70c892"},"content":"            return (staffIds !\u003d null) ? Optional.of(Collections.unmodifiableSet(staffIds)) : Optional.empty();","lastModifiedDate":"2023-03-18"},{"lineNumber":207,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":208,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":209,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"9fc70c892"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"9fc70c892"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"9fc70c892"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":213,"author":{"gitId":"9fc70c892"},"content":"                return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":214,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":216,"author":{"gitId":"9fc70c892"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":217,"author":{"gitId":"9fc70c892"},"content":"            if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":218,"author":{"gitId":"9fc70c892"},"content":"                return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":219,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":220,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":221,"author":{"gitId":"9fc70c892"},"content":"            // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":222,"author":{"gitId":"9fc70c892"},"content":"            EditAppointmentDescriptor e \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":223,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":224,"author":{"gitId":"9fc70c892"},"content":"            return getId() \u003d\u003d (e.getId()) //not sure if need this id checking","lastModifiedDate":"2023-03-18"},{"lineNumber":225,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getCustomerId().equals(e.getCustomerId())","lastModifiedDate":"2023-03-18"},{"lineNumber":226,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getTimeDate().equals(e.getTimeDate())","lastModifiedDate":"2023-03-18"},{"lineNumber":227,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getStaffIds().equals(e.getStaffIds());","lastModifiedDate":"2023-03-18"},{"lineNumber":228,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":229,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":230,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":1,"ginloy":28,"9fc70c892":201}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"public class EditCommand extends RedoableCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"9fc70c892":5,"junlee1991":2,"-":219}},{"path":"src/main/java/seedu/address/logic/commands/EditCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_VEHICLES;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"public class EditCustomerCommand extends RedoableCommand {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"editcustomer\";","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the customer identified \"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"        + \"by the id number displayed by listcustomer. \"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        + PREFIX_INTERNAL_ID + \"CUSTOMER_ID \"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited customer: %1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_CUSTOMER_NOT_FOUND \u003d \"This customer does not exist.\";","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"    private static final Customer CUSTOMER_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    private final EditCustomerDescriptor editPersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"    public EditCustomerCommand(EditCustomerDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"        this.editPersonDescriptor \u003d new EditCustomerDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"        // Locate entry containing id. By right each ID is unique.","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"        Customer personToEdit \u003d lastShownList.stream().filter(person -\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"                editPersonDescriptor.getId() \u003d\u003d person.getId()).findAny()","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"            .orElse(CUSTOMER_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"        if (personToEdit \u003d\u003d null) {","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"            throw new CommandException(MESSAGE_CUSTOMER_NOT_FOUND);","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"        Customer editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"        model.setCustomer(personToEdit, editedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"        model.selectCustomer(editedPerson);","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredVehicleList(PREDICATE_SHOW_ALL_VEHICLES);","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), Tab.CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"9fc70c892"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"9fc70c892"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"9fc70c892"},"content":"    private static Customer createEditedPerson(Customer personToEdit, EditCustomerDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"9fc70c892"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"9fc70c892"},"content":"        int id \u003d personToEdit.getId();","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"9fc70c892"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"9fc70c892"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"9fc70c892"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"9fc70c892"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"9fc70c892"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"        Customer newCustomer \u003d new Customer(id, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"        personToEdit.getVehicleIds().forEach(newCustomer::addVehicle);","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"        return newCustomer;","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"9fc70c892"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"9fc70c892"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"9fc70c892"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"9fc70c892"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"9fc70c892"},"content":"        if (!(other instanceof EditCustomerCommand)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"        // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"        EditCustomerCommand e \u003d (EditCustomerCommand) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"        return editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"9fc70c892"},"content":"    public static class EditCustomerDescriptor {","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"9fc70c892"},"content":"        private int id;","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"9fc70c892"},"content":"        private Name name;","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"9fc70c892"},"content":"        private Phone phone;","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"        private Email email;","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"        private Address address;","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"        public EditCustomerDescriptor() {","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"9fc70c892"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"9fc70c892"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"9fc70c892"},"content":"        public EditCustomerDescriptor(EditCustomerDescriptor toCopy) {","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"9fc70c892"},"content":"            setId(toCopy.id);","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"9fc70c892"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"9fc70c892"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"9fc70c892"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"9fc70c892"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"9fc70c892"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"9fc70c892"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"9fc70c892"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"9fc70c892"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"9fc70c892"},"content":"        public void setId(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"9fc70c892"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"9fc70c892"},"content":"        public int getId() {","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"9fc70c892"},"content":"            return id;","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"9fc70c892"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"9fc70c892"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"9fc70c892"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"9fc70c892"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"9fc70c892"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"9fc70c892"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"9fc70c892"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-18"},{"lineNumber":203,"author":{"gitId":"9fc70c892"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-18"},{"lineNumber":204,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":205,"author":{"gitId":"9fc70c892"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-18"},{"lineNumber":206,"author":{"gitId":"9fc70c892"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-18"},{"lineNumber":207,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":208,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":209,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"9fc70c892"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"9fc70c892"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"9fc70c892"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-18"},{"lineNumber":213,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":214,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-18"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-03-18"},{"lineNumber":216,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":217,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":218,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":219,"author":{"gitId":"9fc70c892"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":220,"author":{"gitId":"9fc70c892"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":221,"author":{"gitId":"9fc70c892"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":222,"author":{"gitId":"9fc70c892"},"content":"                return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":223,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":224,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":225,"author":{"gitId":"9fc70c892"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":226,"author":{"gitId":"9fc70c892"},"content":"            if (!(other instanceof EditCustomerDescriptor)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":227,"author":{"gitId":"9fc70c892"},"content":"                return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":228,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":229,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":230,"author":{"gitId":"9fc70c892"},"content":"            // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":231,"author":{"gitId":"9fc70c892"},"content":"            EditCustomerDescriptor e \u003d (EditCustomerDescriptor) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":232,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":233,"author":{"gitId":"9fc70c892"},"content":"            return getId() \u003d\u003d e.getId() //not sure if need this id checking","lastModifiedDate":"2023-03-18"},{"lineNumber":234,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2023-03-18"},{"lineNumber":235,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-18"},{"lineNumber":236,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-18"},{"lineNumber":237,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2023-03-18"},{"lineNumber":238,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2023-03-18"},{"lineNumber":239,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":240,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":241,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":1,"ginloy":14,"9fc70c892":226}},{"path":"src/main/java/seedu/address/logic/commands/EditServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_DESCRIPTION;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_DURATION;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_END;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_START;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_STATUS;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_ID;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SERVICES;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_VEHICLES;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.ServiceStatus;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"public class EditServiceCommand extends RedoableCommand {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"editservice\";","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the service identified \"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"            + \"by the id number displayed by listservice. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            + PREFIX_INTERNAL_ID + \"SERVICE_INDEX \"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_VEHICLE_ID + \" VEHICLE ID]\"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_SERVICE_START + \" SERVICE START DATE]\"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_SERVICE_END + \" SERVICE END DATE]\"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_SERVICE_STATUS + \" STATUS]\"","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_SERVICE_DESCRIPTION + \" DESCRIPTION]\"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_VEHICLE_ID + \"10 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_SERVICE_DURATION + \"8 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_SERVICE_STATUS + \"in progress \"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_SERVICE_DESCRIPTION + \"Customer says abc\";","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_EDIT_SERVICE_SUCCESS \u003d \"Edited service: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_VEHICLE_NOT_FOUND \u003d \"Vehicle %d does not exist\";","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SERVICE_NOT_FOUND \u003d \"Service %d does not exist.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"    private static final Service SERVICE_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"    private final EditServiceDescriptor editServiceDescriptor;","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"     * @param editServiceDescriptor details to edit the person with","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"    public EditServiceCommand(EditServiceDescriptor editServiceDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(editServiceDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"        this.editServiceDescriptor \u003d new EditServiceDescriptor(editServiceDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"        List\u003cService\u003e lastShownList \u003d model.getFilteredServiceList();","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"        // Locate entry containing id. By right each ID is unique.","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"        Service serviceToEdit \u003d lastShownList.stream().filter(service -\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"                        editServiceDescriptor.getId() \u003d\u003d service.getId()).findAny()","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"                .orElse(SERVICE_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"        if (serviceToEdit \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_SERVICE_NOT_FOUND, this.editServiceDescriptor.getId()));","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"        Service editService \u003d createEditedService(serviceToEdit, editServiceDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"        if (!model.hasVehicle(editService.getVehicleId())) {","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_VEHICLE_NOT_FOUND, editService.getVehicleId()));","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"        if (serviceToEdit.getVehicleId() !\u003d editService.getVehicleId()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"            Vehicle prevVehicle \u003d model.getFilteredVehicleList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"                .filter(v -\u003e v.getId() \u003d\u003d serviceToEdit.getVehicleId())","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"                .findFirst().orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"            Vehicle newVehicle \u003d model.getFilteredVehicleList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"                .filter(v -\u003e v.getId() \u003d\u003d editService.getVehicleId())","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"                .findFirst().orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"            prevVehicle.removeService(serviceToEdit);","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"            newVehicle.addService(editService);","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"9fc70c892"},"content":"        model.setService(serviceToEdit, editService);","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"        model.selectService(editService);","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"9fc70c892"},"content":"        model.updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredVehicleList(PREDICATE_SHOW_ALL_VEHICLES);","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SERVICE_SUCCESS, editService), Tab.SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"9fc70c892"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"9fc70c892"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"9fc70c892"},"content":"    private static Service createEditedService(Service serviceToEdit, EditServiceDescriptor editServiceDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"9fc70c892"},"content":"        assert serviceToEdit !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"9fc70c892"},"content":"        int id \u003d serviceToEdit.getId();","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"9fc70c892"},"content":"        int vehicleId \u003d editServiceDescriptor.getVehicleId().orElse(serviceToEdit.getVehicleId());","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"        LocalDate entryDate \u003d editServiceDescriptor.getEntryDate().orElse(serviceToEdit.getEntryDate());","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"9fc70c892"},"content":"        PartMap requiredParts \u003d serviceToEdit.getRequiredParts();","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"        String description \u003d editServiceDescriptor.getDescription().orElse(serviceToEdit.getDescription());","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"        LocalDate estimatedFinishDate \u003d editServiceDescriptor.getFinishDate().orElse(","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"                serviceToEdit.getEstimatedFinishDate());","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"        Set\u003cInteger\u003e assignedToIds \u003d serviceToEdit.getAssignedToIdsSet();","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"        ServiceStatus status \u003d editServiceDescriptor.getStatus().orElse(serviceToEdit.getStatus());","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"        return new Service(id, vehicleId, entryDate, requiredParts, description, estimatedFinishDate, status,","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"                assignedToIds);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"9fc70c892"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"9fc70c892"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"9fc70c892"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"        if (!(other instanceof EditServiceCommand)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"9fc70c892"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"        // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"9fc70c892"},"content":"        EditServiceCommand e \u003d (EditServiceCommand) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"9fc70c892"},"content":"        return editServiceDescriptor.equals(e.editServiceDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"9fc70c892"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"9fc70c892"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"9fc70c892"},"content":"    public static class EditServiceDescriptor {","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"9fc70c892"},"content":"        private int id;","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"        private Integer vehicleId;","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"9fc70c892"},"content":"        private LocalDate entryDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"9fc70c892"},"content":"        private PartMap requiredParts;","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"9fc70c892"},"content":"        private String description;","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"9fc70c892"},"content":"        private LocalDate estimatedFinishDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"9fc70c892"},"content":"        private Set\u003cInteger\u003e assignedToIds;","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"9fc70c892"},"content":"        private ServiceStatus status;","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"9fc70c892"},"content":"        public EditServiceDescriptor() {}","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"9fc70c892"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"9fc70c892"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"9fc70c892"},"content":"        public EditServiceDescriptor(EditServiceDescriptor toCopy) {","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"9fc70c892"},"content":"            // I\u0027ve a feeling PartMap and Assigned are always null since no input.","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"9fc70c892"},"content":"            setId(toCopy.id);","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"9fc70c892"},"content":"            setVehicleId(toCopy.vehicleId);","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"9fc70c892"},"content":"            setEntryDate(toCopy.entryDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"9fc70c892"},"content":"            setRequiredParts(toCopy.requiredParts);","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"9fc70c892"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"9fc70c892"},"content":"            setFinishDate(toCopy.estimatedFinishDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"9fc70c892"},"content":"            setAssignedToIds(toCopy.assignedToIds);","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"9fc70c892"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"9fc70c892"},"content":"            return CollectionUtil.isAnyNonNull(vehicleId, entryDate, requiredParts, description, estimatedFinishDate,","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"                    assignedToIds, status);","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"9fc70c892"},"content":"        public void setId(int id) {","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"9fc70c892"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"9fc70c892"},"content":"        public int getId() {","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"            return id;","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"ginloy"},"content":"        public void setVehicleId(Integer id) {","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"9fc70c892"},"content":"            this.vehicleId \u003d id;","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cInteger\u003e getVehicleId() {","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(vehicleId);","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"9fc70c892"},"content":"        public void setEntryDate(LocalDate entryDate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"9fc70c892"},"content":"            this.entryDate \u003d entryDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cLocalDate\u003e getEntryDate() {","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(entryDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"9fc70c892"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"9fc70c892"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"9fc70c892"},"content":"        public void setFinishDate(LocalDate estimatedFinishDate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"9fc70c892"},"content":"            this.estimatedFinishDate \u003d estimatedFinishDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cLocalDate\u003e getFinishDate() {","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(estimatedFinishDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"9fc70c892"},"content":"        public void setStatus(ServiceStatus status) {","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"9fc70c892"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cServiceStatus\u003e getStatus() {","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"9fc70c892"},"content":"        public void setAssignedToIds(Set\u003cInteger\u003e ids) {","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"9fc70c892"},"content":"            this.assignedToIds \u003d (ids !\u003d null) ? new HashSet\u003c\u003e(ids) : null;","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cSet\u003cInteger\u003e\u003e getAssignedToIds() {","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"9fc70c892"},"content":"            return (assignedToIds !\u003d null) ? Optional.of(Collections.unmodifiableSet(assignedToIds)) : Optional.empty();","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"9fc70c892"},"content":"        public void setRequiredParts(PartMap parts) {","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"9fc70c892"},"content":"            this.requiredParts \u003d parts;","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"9fc70c892"},"content":"        public PartMap getRequiredParts() {","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"9fc70c892"},"content":"            return requiredParts;","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":252,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"9fc70c892"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":255,"author":{"gitId":"9fc70c892"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"9fc70c892"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"9fc70c892"},"content":"                return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"9fc70c892"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":261,"author":{"gitId":"9fc70c892"},"content":"            if (!(other instanceof EditServiceDescriptor)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"9fc70c892"},"content":"                return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"9fc70c892"},"content":"            // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"9fc70c892"},"content":"            EditServiceDescriptor e \u003d (EditServiceDescriptor) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"9fc70c892"},"content":"            return getId() \u003d\u003d e.getId() //not sure if need this id checking","lastModifiedDate":"2023-03-30"},{"lineNumber":269,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getVehicleId().equals(e.getVehicleId())","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getEntryDate().equals(e.getEntryDate())","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getRequiredParts().equals(e.getRequiredParts())","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getFinishDate().equals(e.getFinishDate())","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getAssignedToIds().equals(e.getAssignedToIds())","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus());","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":1,"ginloy":25,"9fc70c892":252}},{"path":"src/main/java/seedu/address/logic/commands/EditTechnicianCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TECHNICIANS;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"public class EditTechnicianCommand extends RedoableCommand {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"edittechnician\";","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the technician identified \"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"            + \"by the id number. \"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            + PREFIX_INTERNAL_ID + \"TECHNICIAN_ID \"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited technician: %1$s\";","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_TECHNICIAN_NOT_FOUND \u003d \"Technician %d does not exist\";","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"    private static final Technician TECHNICIAN_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    private final EditTechnicianDescriptor editTechnicianDescriptor;","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"     * @param editTechnicianDescriptor details to edit the person with","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"    public EditTechnicianCommand(EditTechnicianDescriptor editTechnicianDescriptor) {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(editTechnicianDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"        this.editTechnicianDescriptor \u003d new EditTechnicianDescriptor(editTechnicianDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"        List\u003cTechnician\u003e lastShownList \u003d model.getFilteredTechnicianList();","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"        // Locate entry containing id. By right each ID is unique.","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"        Technician personToEdit \u003d lastShownList.stream().filter(person -\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"                        editTechnicianDescriptor.getId() \u003d\u003d person.getId()).findAny()","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"                .orElse(TECHNICIAN_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"        if (personToEdit \u003d\u003d TECHNICIAN_DOES_NOT_EXIST) {","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_TECHNICIAN_NOT_FOUND,","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"                this.editTechnicianDescriptor.getId()));","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"        Technician editedPerson \u003d createEditedPerson(personToEdit, editTechnicianDescriptor);","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"        model.setTechnician(personToEdit, editedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"        //model.selectTechnician(editedPerson);","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"9fc70c892"},"content":"        model.updateFilteredTechnicianList(PREDICATE_SHOW_ALL_TECHNICIANS);","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), Tab.TECHNICIANS);","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"9fc70c892"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"9fc70c892"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"9fc70c892"},"content":"    private static Technician createEditedPerson(Technician personToEdit,","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"9fc70c892"},"content":"                                                 EditTechnicianDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"9fc70c892"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"9fc70c892"},"content":"        int id \u003d personToEdit.getId();","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"9fc70c892"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"9fc70c892"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"9fc70c892"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"9fc70c892"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"9fc70c892"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"9fc70c892"},"content":"        return new Technician(id, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"9fc70c892"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"9fc70c892"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"9fc70c892"},"content":"            return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"9fc70c892"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"9fc70c892"},"content":"        if (!(other instanceof EditTechnicianCommand)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"        // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"        EditTechnicianCommand e \u003d (EditTechnicianCommand) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"        return editTechnicianDescriptor.equals(e.editTechnicianDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"9fc70c892"},"content":"    public static class EditTechnicianDescriptor {","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"9fc70c892"},"content":"        private int id;","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"9fc70c892"},"content":"        private Name name;","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"9fc70c892"},"content":"        private Phone phone;","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"        private Email email;","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"        private Address address;","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"9fc70c892"},"content":"        public EditTechnicianDescriptor() {}","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"9fc70c892"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"9fc70c892"},"content":"        public EditTechnicianDescriptor(EditTechnicianDescriptor toCopy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"9fc70c892"},"content":"            setId(toCopy.id);","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"9fc70c892"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"9fc70c892"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"9fc70c892"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"9fc70c892"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"9fc70c892"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"9fc70c892"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"9fc70c892"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"9fc70c892"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"9fc70c892"},"content":"        public void setId(int id) {","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"9fc70c892"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"9fc70c892"},"content":"        public int getId() {","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"9fc70c892"},"content":"            return id;","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"9fc70c892"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"9fc70c892"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"9fc70c892"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"9fc70c892"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"9fc70c892"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"9fc70c892"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"9fc70c892"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"9fc70c892"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"9fc70c892"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"9fc70c892"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"9fc70c892"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"9fc70c892"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"9fc70c892"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"9fc70c892"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"9fc70c892"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"9fc70c892"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"9fc70c892"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"9fc70c892"},"content":"                return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"9fc70c892"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"9fc70c892"},"content":"            if (!(other instanceof EditTechnicianDescriptor)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"9fc70c892"},"content":"                return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"9fc70c892"},"content":"            // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"9fc70c892"},"content":"            EditTechnicianDescriptor e \u003d (EditTechnicianDescriptor) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"9fc70c892"},"content":"            return getId() \u003d\u003d e.getId() //not sure if need this id checking","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"kimberlybp":1,"ginloy":12,"9fc70c892":227}},{"path":"src/main/java/seedu/address/logic/commands/EditVehicleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BRAND;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CUSTOMER_ID;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATE_NUM;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_COLOR;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_TYPE;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_VEHICLES;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.VehicleType;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"public class EditVehicleCommand extends RedoableCommand {","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"editvehicle\";","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the customer identified \"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"            + \"by the id number displayed by listvehicle. \"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"            + PREFIX_INTERNAL_ID + \"VEHICLE_ID \"","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_PLATE_NUM + \"PLATE NUMBER] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_BRAND + \"VEHICLE BRAND] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_CUSTOMER_ID + \"OWNER ID] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_VEHICLE_COLOR + \"COLOR]\"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"            + \"[\" + PREFIX_VEHICLE_TYPE + \"VEHICLE TYPE]\"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_PLATE_NUM + \"SBA1234A \"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"            + PREFIX_VEHICLE_COLOR + \"blue\";","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_EDIT_VEHICLE_SUCCESS \u003d \"Edited vehicle: %1$s\";","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_CUSTOMER_NOT_FOUND \u003d \"Customer %d does not exist.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_VEHICLE_NOT_FOUND \u003d \"Vehicle %d does not exist.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    private static final Vehicle VEHICLE_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"    private static final Customer CUSTOMER_DOES_NOT_EXIST \u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    private final EditVehicleDescriptor editVehicleDescriptor;","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"    public EditVehicleCommand(EditVehicleDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"        this.editVehicleDescriptor \u003d new EditVehicleDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"        List\u003cVehicle\u003e lastShownList \u003d model.getFilteredVehicleList();","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"        // Locate entry containing id. By right each ID is unique.","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"        Vehicle vehicleToEdit \u003d lastShownList.stream().filter(vehicle -\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"                        editVehicleDescriptor.getId() \u003d\u003d vehicle.getId()).findAny()","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"                .orElse(VEHICLE_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        if (vehicleToEdit \u003d\u003d VEHICLE_DOES_NOT_EXIST) {","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_VEHICLE_NOT_FOUND, this.editVehicleDescriptor.getId()));","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"        Vehicle editedVehicle \u003d createEditedVehicle(vehicleToEdit, editVehicleDescriptor);","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"        Customer customer \u003d model.getFilteredCustomerList().stream().filter(person -\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"                editedVehicle.getOwnerId() \u003d\u003d person.getId()).findAny().orElse(CUSTOMER_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"        if (customer \u003d\u003d CUSTOMER_DOES_NOT_EXIST) {","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_CUSTOMER_NOT_FOUND, editedVehicle.getOwnerId()));","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"        if (editedVehicle.getOwnerId() !\u003d vehicleToEdit.getOwnerId()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"            Customer prevOwner \u003d model.getFilteredCustomerList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"                .filter(c -\u003e c.getId() \u003d\u003d vehicleToEdit.getOwnerId())","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"                .findFirst().orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"            prevOwner.removeVehicle(vehicleToEdit);","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"            Customer newOwner \u003d model.getFilteredCustomerList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"                .filter(c -\u003e c.getId() \u003d\u003d editedVehicle.getOwnerId())","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"                .findFirst().orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"            newOwner.addVehicle(editedVehicle.getId());","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"9fc70c892"},"content":"        model.setVehicle(vehicleToEdit, editedVehicle);","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"        model.selectVehicle(editedVehicle);","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredVehicleList(PREDICATE_SHOW_ALL_VEHICLES);","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_VEHICLE_SUCCESS, editedVehicle), Tab.VEHICLES);","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"9fc70c892"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"9fc70c892"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"9fc70c892"},"content":"    private static Vehicle createEditedVehicle(Vehicle vehicleToEdit, EditVehicleDescriptor editVehicleDescriptor) {","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"9fc70c892"},"content":"        assert vehicleToEdit !\u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"9fc70c892"},"content":"        int id \u003d vehicleToEdit.getId();","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"9fc70c892"},"content":"        String plateNumber \u003d editVehicleDescriptor.getPlateNumber().orElse(vehicleToEdit.getPlateNumber());","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"9fc70c892"},"content":"        String brand \u003d editVehicleDescriptor.getBrand().orElse(vehicleToEdit.getBrand());","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"9fc70c892"},"content":"        int ownerId \u003d editVehicleDescriptor.getOwnerId().orElse(vehicleToEdit.getOwnerId());","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"        VehicleType vehicleType \u003d editVehicleDescriptor.getType().orElse(vehicleToEdit.getType());","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"9fc70c892"},"content":"        String vehicleColor \u003d editVehicleDescriptor.getColor().orElse(vehicleToEdit.getColor());","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"        Set\u003cInteger\u003e serviceIds \u003d editVehicleDescriptor.getServiceIdsSet().orElse(vehicleToEdit.getServiceIdsSet());","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"        return new Vehicle(id, ownerId, plateNumber, vehicleColor, brand, vehicleType, serviceIds);","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"9fc70c892"},"content":"            return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"9fc70c892"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"9fc70c892"},"content":"        if (!(other instanceof EditVehicleCommand)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"        // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"9fc70c892"},"content":"        EditVehicleCommand e \u003d (EditVehicleCommand) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"9fc70c892"},"content":"        return editVehicleDescriptor.equals(e.editVehicleDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"9fc70c892"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"9fc70c892"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"9fc70c892"},"content":"    public static class EditVehicleDescriptor {","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"9fc70c892"},"content":"        private int id;","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"        private int ownerId \u003d -1;","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"9fc70c892"},"content":"        private String plateNumber;","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"9fc70c892"},"content":"        private String color;","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"9fc70c892"},"content":"        private String brand;","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"9fc70c892"},"content":"        private VehicleType type;","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"        private Set\u003cInteger\u003e serviceIds;","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"9fc70c892"},"content":"        public EditVehicleDescriptor() {}","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"9fc70c892"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"9fc70c892"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"9fc70c892"},"content":"        public EditVehicleDescriptor(EditVehicleDescriptor toCopy) {","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"9fc70c892"},"content":"            setId(toCopy.id);","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"9fc70c892"},"content":"            setOwnerId(toCopy.ownerId);","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"9fc70c892"},"content":"            setPlateNumber(toCopy.plateNumber);","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"9fc70c892"},"content":"            setColor(toCopy.color);","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"9fc70c892"},"content":"            setBrand(toCopy.brand);","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"9fc70c892"},"content":"            setType(toCopy.type);","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"9fc70c892"},"content":"            setServiceIds(toCopy.serviceIds);","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"9fc70c892"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"9fc70c892"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"9fc70c892"},"content":"            return","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"9fc70c892"},"content":"                    CollectionUtil.isAnyNonNull(ownerId, plateNumber, color, brand, type, serviceIds);","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"9fc70c892"},"content":"        public void setId(int id) {","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"9fc70c892"},"content":"        public int getId() {","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"            return id;","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"9fc70c892"},"content":"        public void setOwnerId(int ownerId) {","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"9fc70c892"},"content":"            this.ownerId \u003d ownerId;","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cInteger\u003e getOwnerId() {","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"ginloy"},"content":"            if (this.ownerId \u003d\u003d -1) {","lastModifiedDate":"2023-03-31"},{"lineNumber":194,"author":{"gitId":"ginloy"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-31"},{"lineNumber":195,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":196,"author":{"gitId":"ginloy"},"content":"            return Optional.of(this.ownerId);","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"9fc70c892"},"content":"        public void setPlateNumber(String plateNumber) {","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"9fc70c892"},"content":"            this.plateNumber \u003d plateNumber;","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cString\u003e getPlateNumber() {","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(plateNumber);","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"9fc70c892"},"content":"        public void setColor(String color) {","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"9fc70c892"},"content":"            this.color \u003d color;","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cString\u003e getColor() {","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(color);","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"        public void setBrand(String brand) {","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"9fc70c892"},"content":"            this.brand \u003d brand;","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cString\u003e getBrand() {","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(brand);","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"9fc70c892"},"content":"        public void setType(VehicleType vehicleType) {","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"9fc70c892"},"content":"            this.type \u003d vehicleType;","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cVehicleType\u003e getType() {","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"9fc70c892"},"content":"            return Optional.ofNullable(type);","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"9fc70c892"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"9fc70c892"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"9fc70c892"},"content":"        public void setServiceIds(Set\u003cInteger\u003e ints) {","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"9fc70c892"},"content":"            this.serviceIds \u003d (ints !\u003d null) ? new HashSet\u003c\u003e(ints) : null;","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"9fc70c892"},"content":"        /**","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"9fc70c892"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"9fc70c892"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"9fc70c892"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"9fc70c892"},"content":"         */","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"9fc70c892"},"content":"        public Optional\u003cSet\u003cInteger\u003e\u003e getServiceIdsSet() {","lastModifiedDate":"2023-03-24"},{"lineNumber":246,"author":{"gitId":"9fc70c892"},"content":"            return (serviceIds !\u003d null)","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"9fc70c892"},"content":"                    ? Optional.of(Collections.unmodifiableSet(serviceIds)) : Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"9fc70c892"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"9fc70c892"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"9fc70c892"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"9fc70c892"},"content":"                return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"9fc70c892"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"9fc70c892"},"content":"            if (!(other instanceof EditVehicleDescriptor)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"9fc70c892"},"content":"                return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"9fc70c892"},"content":"            // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"9fc70c892"},"content":"            EditVehicleDescriptor e \u003d (EditVehicleDescriptor) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"9fc70c892"},"content":"            return getId() \u003d\u003d e.getId() //not sure if need this id checking","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getOwnerId().equals(e.getOwnerId())","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getPlateNumber().equals(e.getPlateNumber())","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getColor().equals(e.getColor())","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getBrand().equals(e.getBrand())","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getType().equals(e.getType())","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"9fc70c892"},"content":"                    \u0026\u0026 getServiceIdsSet().equals(e.getServiceIdsSet());","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"kimberlybp":1,"ginloy":34,"9fc70c892":239}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Findable;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" * Keyword matching is case in-sensitive.","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"public class FindCommand extends RedoableCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all entities whose attributes match \"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        + \"the specified keywords (case-insensitive) or the given date and displays them in the tab lists.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        + \"Parameters: KEYWORD [MORE SPACE-SEPERATED KEYWORDS] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        + \"Example: \" + COMMAND_WORD + \" James james@gmail.com\";","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%d customers, %d vehicles, %d services, %d appointments, \"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        + \"%d technicians found\";","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    private final Predicate\u003cFindable\u003e predicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public FindCommand(Predicate\u003cFindable\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"    public CommandResult executeUndoableCommand(Model model) {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredCustomerList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredVehicleList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredServiceList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredTechnicianList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            String.format(MESSAGE_SUCCESS, model.getFilteredCustomerList().size(),","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"                model.getFilteredVehicleList().size(), model.getFilteredServiceList().size(),","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                model.getFilteredAppointmentList().size(), model.getFilteredTechnicianList().size()), Tab.ALL);","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kimberlybp":1,"ginloy":21,"junlee1991":2,"-":30}},{"path":"src/main/java/seedu/address/logic/commands/ListAppointmentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":" * Lists all appointments in the AutoM8 system to the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"public class ListAppointmentsCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    public static final String COMMAND_WORD \u003d \"listappointments\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Currently listing all appointments.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.APPOINTMENTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":33}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SERVICES;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TECHNICIANS;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_VEHICLES;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Currently listing everything\";","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredVehicleList(PREDICATE_SHOW_ALL_VEHICLES);","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredTechnicianList(PREDICATE_SHOW_ALL_TECHNICIANS);","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.ALL);","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ginloy":12,"9fc70c892":10,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCustomersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":" * Lists all customers in the AutoM8 system to the user.","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"public class ListCustomersCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    public static final String COMMAND_WORD \u003d \"listcustomers\";","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Currently listing all customers.\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        model.selectCustomer(model.getFilteredCustomerList().get(0));","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.CUSTOMERS);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":34}},{"path":"src/main/java/seedu/address/logic/commands/ListPartsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":" * Lists all customers in the AutoM8 system to the user.","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"public class ListPartsCommand extends Command {","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    public static final String COMMAND_WORD \u003d \"listparts\";","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Currently listing all parts.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.PARTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":31}},{"path":"src/main/java/seedu/address/logic/commands/ListServicesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SERVICES;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":" * Lists all services in the AutoM8 system to the user.","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"public class ListServicesCommand extends Command {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    public static final String COMMAND_WORD \u003d \"listservices\";","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Currently listing all services.\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        model.updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.SERVICES);","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":33}},{"path":"src/main/java/seedu/address/logic/commands/ListTechniciansCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TECHNICIANS;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":" * Lists all customers in the AutoM8 system to the user.","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"public class ListTechniciansCommand extends Command {","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    public static final String COMMAND_WORD \u003d \"listtechnicians\";","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Currently listing all technicians.\";","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        model.updateFilteredTechnicianList(PREDICATE_SHOW_ALL_TECHNICIANS);","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.TECHNICIANS);","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":33}},{"path":"src/main/java/seedu/address/logic/commands/ListVehiclesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_VEHICLES;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":" * Lists all vehicles in the AutoM8 system to the user.","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"public class ListVehiclesCommand extends Command {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    public static final String COMMAND_WORD \u003d \"listvehicles\";","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Currently listing all vehicles.\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        model.updateFilteredVehicleList(PREDICATE_SHOW_ALL_VEHICLES);","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.VEHICLES);","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":33}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":" * Redo the previously undone command.","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo success!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to redo!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"        requireAllNonNull(model, undoRedoStack);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"        if (!undoRedoStack.canRedo()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"        undoRedoStack.popRedo().redo(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"    public void setData(seedu.address.logic.commands.StackUndoRedo undoRedoStack) {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"        this.undoRedoStack \u003d undoRedoStack;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"junlee1991":34}},{"path":"src/main/java/seedu/address/logic/commands/RedoableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":" * This class enables command to be able to undo / redo","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"public abstract class RedoableCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    private ReadOnlyShop previousShop;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    private String saveSuccessMessage \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    protected abstract CommandResult executeUndoableCommand(Model model) throws CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"     * Stores the current state of {@code model#addressBook}.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"    private void saveShopSnapshot(Model model) {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"        this.previousShop \u003d new Shop(model.getShop());","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"     * Reverts the Shop to the state before this command","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"     * was executed and updates the filtered person list to","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"     * show all persons.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    protected final void undo(Model model) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        requireAllNonNull(model, this.previousShop);","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        model.setShop(this.previousShop);","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"     * Executes the command and updates the filtered person","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"     * list to show all persons.","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"    protected final void redo(Model model) {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"            executeUndoableCommand(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"            throw new AssertionError(\"The command has been successfully executed previously; \"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"                                             + \"it should not fail now\");","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"    public final CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"        saveShopSnapshot(model);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"        return executeUndoableCommand(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"junlee1991":63}},{"path":"src/main/java/seedu/address/logic/commands/RemovePartFromServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PART_NAME;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" * Manages adding of parts to services","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"public class RemovePartFromServiceCommand extends RedoableCommand {","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"removeservicepart\";","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"%s (x %d) removed from service\";","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SERVICE_NOT_FOUND \u003d \"Service does not exist\";","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_PART_NOT_FOUND \u003d \"Part not in system\";","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_INSUFFICIENT_PART \u003d \"Not enough parts to remove from service\";","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        + \": Removes parts reserved for service and puts it back into global part storage. \"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        + PREFIX_SERVICE_ID + \"SERVICE ID \"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        + PREFIX_PART_NAME + \"PART NAME \"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        + PREFIX_QUANTITY + \"PART QUANTITY \"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        + PREFIX_SERVICE_ID + \"1 \"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        + PREFIX_PART_NAME + \"Cylinder Head \"","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        + PREFIX_QUANTITY + \"50\";","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    private final int serviceId;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    private final String partName;","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    private final int quantity;","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"     * @param serviceId ID of service","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"     * @param partName  Name of part","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"     * @param quantity  Quantity of part","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    public RemovePartFromServiceCommand(int serviceId, String partName, int quantity) {","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        this.serviceId \u003d serviceId;","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        this.partName \u003d partName;","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        if (!model.hasService(this.serviceId)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_SERVICE_NOT_FOUND);","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        if (!model.getPartMap().contains(this.partName)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_PART_NOT_FOUND);","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        Service service \u003d model.getFilteredServiceList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"            .filter(s -\u003e s.getId() \u003d\u003d this.serviceId)","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"            .findFirst()","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"            .orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"        if (service.getRequiredParts().getPartQuantity(this.partName) \u003c this.quantity) {","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_INSUFFICIENT_PART);","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"        service.getRequiredParts().decreasePartQuantity(this.partName, this.quantity);","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        model.resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_FORMAT, this.partName, this.quantity,","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"                this.serviceId), Tab.SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":2,"ginloy":71}},{"path":"src/main/java/seedu/address/logic/commands/RemoveTechnicianFromAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICIAN_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":" * Manages the adding of a technician to a specific service","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"public class RemoveTechnicianFromAppointmentCommand extends RedoableCommand {","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"removeappointmenttech\";","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_TECHNICIAN_NOT_FOUND \u003d \"Technician not assigned to appointment\";","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_APPOINTMENT_NOT_FOUND \u003d \"Appointment does not exist\";","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"Technician %d unassigned from Appointment %d\";","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_USAGE \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        COMMAND_WORD + \": Unassigns an existing technician from an existing appointment. \"","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TECHNICIAN_ID + \"TECHNICIAN_ID \"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + PREFIX_SERVICE_ID + \"SERVICE_ID \"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + \"Example Usage: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TECHNICIAN_ID + \"2 \"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            + PREFIX_SERVICE_ID + \"3\";","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    private final int techId;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    private final int appointmentId;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     * @param techId    ID of technician","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @param appointmentId ID of appointment","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    public RemoveTechnicianFromAppointmentCommand(int techId, int appointmentId) {","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        this.techId \u003d techId;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        this.appointmentId \u003d appointmentId;","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        if (!model.hasAppointment(this.appointmentId)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_APPOINTMENT_NOT_FOUND);","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        Appointment appointment \u003d model.getFilteredAppointmentList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"            .filter(a -\u003e a.getId() \u003d\u003d this.appointmentId)","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"            .findFirst()","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"            .orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"        if (!appointment.getStaffIds().contains(this.techId)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_TECHNICIAN_NOT_FOUND);","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        appointment.removeTechnician(this.techId);","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        model.resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_FORMAT, this.techId, this.appointmentId),","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                Tab.APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":1,"ginloy":58}},{"path":"src/main/java/seedu/address/logic/commands/RemoveTechnicianFromServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICIAN_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" * Manages the adding of a technician to a specific service","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"public class RemoveTechnicianFromServiceCommand extends RedoableCommand {","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"removeservicetech\";","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_TECHNICIAN_NOT_FOUND \u003d \"Technician not assigned to service\";","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SERVICE_NOT_FOUND \u003d \"Service does not exist\";","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS_FORMAT \u003d \"Technician %d unassigned from Service %d\";","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_USAGE \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        COMMAND_WORD + \": Unassigns an existing technician from an existing service. \"","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TECHNICIAN_ID + \"TECHNICIAN_ID \"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"            + PREFIX_SERVICE_ID + \"SERVICE_ID \"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            + \"Example Usage: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            + PREFIX_TECHNICIAN_ID + \"2 \"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            + PREFIX_SERVICE_ID + \"3\";","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    private final int techId;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    private final int serviceId;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @param techId    ID of technician","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * @param serviceId ID of service","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    public RemoveTechnicianFromServiceCommand(int techId, int serviceId) {","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        this.techId \u003d techId;","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        this.serviceId \u003d serviceId;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        if (!model.hasService(this.serviceId)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_SERVICE_NOT_FOUND);","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        Service service \u003d model.getFilteredServiceList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"            .filter(s -\u003e s.getId() \u003d\u003d this.serviceId)","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"            .findFirst()","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            .orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        if (!service.getAssignedToIds().contains(this.techId)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(MESSAGE_TECHNICIAN_NOT_FOUND);","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        Technician technician \u003d model.getFilteredTechnicianList().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"            .filter(t -\u003e t.getId() \u003d\u003d this.techId)","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            .findFirst()","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"            .orElseThrow();","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        service.removeTechnician(technician);","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        model.resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_FORMAT, this.techId, this.serviceId),","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"                Tab.SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"ginloy":64}},{"path":"src/main/java/seedu/address/logic/commands/SortAppointmentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * Manages Sorting of appointments","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class SortAppointmentsCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"sortappointments\";","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted appointments\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Sorts appointments by attribute. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        + PREFIX_SORT_BY + \"[id | customer id | date | date status] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        + \"Optional: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        + PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private final Comparator\u003cAppointment\u003e cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public SortAppointmentsCommand(Comparator\u003cAppointment\u003e cmp) {","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.cmp \u003d cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        model.updateAppointmentComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.APPOINTMENTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ginloy":41}},{"path":"src/main/java/seedu/address/logic/commands/SortCustomersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * Manages Sorting of customers","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class SortCustomersCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"sortcustomers\";","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted customers\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Sorts customers by attribute. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        + PREFIX_SORT_BY + \"[id | name | email | phone | address] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        + \"Optional: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        + PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private final Comparator\u003cCustomer\u003e cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public SortCustomersCommand(Comparator\u003cCustomer\u003e cmp) {","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.cmp \u003d cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        model.updateCustomerComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.CUSTOMERS);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ginloy":41}},{"path":"src/main/java/seedu/address/logic/commands/SortServicesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * Manages Sorting of services","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class SortServicesCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"sortservices\";","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted services\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Sorts services by attribute. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        + PREFIX_SORT_BY + \"[id | vehicle id | start date | end date | desc | status] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        + \"Optional: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        + PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private final Comparator\u003cService\u003e cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public SortServicesCommand(Comparator\u003cService\u003e cmp) {","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.cmp \u003d cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        model.updateServiceComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.SERVICES);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ginloy":41}},{"path":"src/main/java/seedu/address/logic/commands/SortTechniciansCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * Manages Sorting of technicians","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class SortTechniciansCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"sorttechnicians\";","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted technicians\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Sorts technicians by attribute. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        + PREFIX_SORT_BY + \"[id | name | phone | email | address] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        + \"Optional: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        + PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private final Comparator\u003cTechnician\u003e cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public SortTechniciansCommand(Comparator\u003cTechnician\u003e cmp) {","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.cmp \u003d cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        model.updateTechnicianComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.TECHNICIANS);","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"kimberlybp":1,"ginloy":40}},{"path":"src/main/java/seedu/address/logic/commands/SortVehiclesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * Manages Sorting of vehicles","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class SortVehiclesCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_WORD \u003d \"sortvehicles\";","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted Vehicles\";","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \": Sorts vehicles by attribute. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        + PREFIX_SORT_BY + \"[id | owner id | plate | brand | color | type | service qty] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        + \"Optional: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"        + PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private final Comparator\u003cVehicle\u003e cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public SortVehiclesCommand(Comparator\u003cVehicle\u003e cmp) {","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.cmp \u003d cmp;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        model.updateVehicleComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        return new CommandResult(MESSAGE_SUCCESS, Tab.VEHICLES);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ginloy":41}},{"path":"src/main/java/seedu/address/logic/commands/StackUndoRedo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import java.util.Stack;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":" * @@author zhixianggg reused","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":" * Solution adapted from","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":" * https://github.com/AY1920S1-CS2103T-T09-4/main/pull/161/commits/094fbe26c9917afa2cf3e6a4e2fc5808166e4f79","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"public class StackUndoRedo {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"    private Stack\u003cRedoableCommand\u003e undoStack;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"    private Stack\u003cRedoableCommand\u003e redoStack;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"     * StackUndoRedo Class to enable storing of commands FIFO","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    public StackUndoRedo() {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"        undoStack \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"        redoStack \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"     * Pushes {@code command} onto the undo-stack if it is of type {@code UndoableCommand}. Clears the redo-stack","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"     * if {@code command} is not of type {@code UndoCommand} or {@code RedoCommand}.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"    public void push(Command command) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"        if (!(command instanceof UndoCommand) \u0026\u0026 !(command instanceof RedoCommand)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"            redoStack \u003d new Stack();","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"        if (!(command instanceof RedoableCommand)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"            return;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        undoStack.add((RedoableCommand) command);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"     * Pops and returns the next {@code UndoableCommand} to be undone in the stack.","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"    public RedoableCommand popUndo() {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"        redoStack.push(undoStack.pop());","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"        return redoStack.peek();","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"     * Pops and returns the next {@code UndoableCommand} to be redone in the stack.","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"    public RedoableCommand popRedo() {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"        undoStack.push(redoStack.pop());","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"        return undoStack.peek();","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"     * Returns true if there are more commands that can be undone.","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"        return !undoStack.empty();","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"     * Returns true if there are more commands that can be redone.","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"junlee1991"},"content":"        return !redoStack.empty();","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"junlee1991"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"junlee1991"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"junlee1991"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"junlee1991"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"junlee1991"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"junlee1991"},"content":"        if (!(other instanceof StackUndoRedo)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"junlee1991"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"junlee1991"},"content":"        StackUndoRedo stack \u003d (StackUndoRedo) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"junlee1991"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"junlee1991"},"content":"        return undoStack.equals(stack.undoStack)","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"junlee1991"},"content":"                       \u0026\u0026 redoStack.equals(stack.redoStack);","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"junlee1991":87}},{"path":"src/main/java/seedu/address/logic/commands/Tab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Represents the Tabs that AutoM8 can display to the user.","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" * This helps to identify which UI component to update based on CommandResult\u0027s executions","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"public enum Tab {","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    CUSTOMERS,","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    VEHICLES,","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    SERVICES,","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    APPOINTMENTS,","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    TECHNICIANS,","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    PARTS,","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    ALL,","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    UNCHANGED;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        return name();","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"kimberlybp":21}},{"path":"src/main/java/seedu/address/logic/commands/TotalAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":" ** Finds the number of appointments on the specified date.","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"public class TotalAppointmentCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    public static final String COMMAND_WORD \u003d \"totalappointment\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Total cars on date xxx displayed\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display number of customer appointments given a date.\"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"                                                       + \"Parameters: d/DATE\"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"                                                       + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"                                                       + PREFIX_DATE + \"2023-02-03\";","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"    private int count \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"    private LocalDateTime date;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"     * constructor for TotalAppointmentCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"     * @param date","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    public TotalAppointmentCommand(LocalDateTime date) {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"        for (Appointment appointment : lastShownList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"            if (appointment.isWithinRange(date)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"                count++;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                String.format(Messages.MESSAGE_DATE_APPOINTMENT_OVERVIEW, count, date.toLocalDate()), Tab.APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"                       || (other instanceof TotalAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"                                   \u0026\u0026 date.equals(((TotalAppointmentCommand) other).date)); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":2,"junlee1991":56}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":" * Undo the previous {@code UndoableCommand}.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"    public static final String MESSAGE_USAGE_SUCCESS \u003d \"Undo success!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"    public static final String MESSAGE_USAGE_FAILURE \u003d \"No more commands to undo!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    public static final String MESSAGE_ERROR \u003d \"Unable to undo the last comamand.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"    public static final String MESSAGE_NO_ACTION \u003d \"Nothing to undo\";","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"        requireAllNonNull(model, undoRedoStack);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"        if (!undoRedoStack.canUndo()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"            throw new CommandException(MESSAGE_USAGE_FAILURE);","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"        undoRedoStack.popUndo().undo(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"        return new CommandResult(MESSAGE_USAGE_SUCCESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"    public void setData(StackUndoRedo undoRedoStack) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        this.undoRedoStack \u003d undoRedoStack;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"junlee1991":35}},{"path":"src/main/java/seedu/address/logic/commands/ViewAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":" * Finds and returns the appointment details of the provided id.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"public class ViewAppointmentCommand extends RedoableCommand {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"viewappointment\";","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_APPOINTMENT_NOT_FOUND \u003d \"Appointment %d not in system\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display appointment details given appointment id.\"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: ID\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 8\";","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    private final int appointmentId;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public ViewAppointmentCommand(int appointmentId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        this.appointmentId \u003d appointmentId;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public CommandResult executeUndoableCommand(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        if (!model.hasAppointment(this.appointmentId)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_APPOINTMENT_NOT_FOUND, this.appointmentId));","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredAppointmentList(a -\u003e a.getId() \u003d\u003d this.appointmentId);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        Appointment current \u003d model.getFilteredAppointmentList().get(0);","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        model.selectAppointment(current);","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"                String.format(Messages.MESSAGE_APPOINTMENT_VIEW_OVERVIEW));","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof ViewAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 this.appointmentId \u003d\u003d ((ViewAppointmentCommand) other).appointmentId); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"kimberlybp":3,"ginloy":12,"9fc70c892":33}},{"path":"src/main/java/seedu/address/logic/commands/ViewCustomerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":" * Finds and returns the customer details of the provided id.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"public class ViewCustomerCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"viewcustomer\";","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_CUSTOMER_NOT_FOUND \u003d \"Customer %d not in system\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display customer details given the customer id.\"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: ID\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 8\";","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    private final int customerId;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public ViewCustomerCommand(int customerId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        if (!model.hasCustomer(this.customerId)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_CUSTOMER_NOT_FOUND, this.customerId));","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredCustomerList(c -\u003e c.getId() \u003d\u003d this.customerId);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        Customer current \u003d model.getFilteredCustomerList().get(0);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        model.selectCustomer(current);","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"                String.format(Messages.MESSAGE_CUSTOMER_VIEW_OVERVIEW, current.getId()), Tab.CUSTOMERS);","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof ViewCustomerCommand // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 this.customerId \u003d\u003d ((ViewCustomerCommand) other).customerId); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"kimberlybp":4,"ginloy":12,"9fc70c892":31,"junlee1991":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewPartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVAID_PART_REQUESTED;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":" * Finds and returns the part details of the provided id.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"public class ViewPartCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"viewpart\";","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \": Displays the part identified by the part name.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: STRING\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS-2103-T\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"    private final String userString;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    public ViewPartCommand(String userString) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"        this.userString \u003d userString;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        PartMap pm \u003d model.getPartMap(); // TODO: the function here should return something to GUI.","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"        if (pm.contains(userString) \u003d\u003d false) {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"            throw new CommandException(String.format(MESSAGE_INVAID_PART_REQUESTED, ViewPartCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"            model.updatePartsMap(); // Require waiting for list","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_PART_VIEW_OVERVIEW));","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof ViewPartCommand // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 userString.equals(((ViewPartCommand) other).userString)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"9fc70c892":48,"junlee1991":2}},{"path":"src/main/java/seedu/address/logic/commands/ViewServiceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":" * Finds and returns the service details of the provided id.","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"public class ViewServiceCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"viewservice\";","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_SERVICE_NOT_FOUND \u003d \"Service %d not in system\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display service details given the service id. \"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: ID\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 8\";","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    private final int serviceId;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public ViewServiceCommand(int serviceId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        this.serviceId \u003d serviceId;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        if (!model.hasService(this.serviceId)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_SERVICE_NOT_FOUND, this.serviceId));","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredServiceList(s -\u003e s.getId() \u003d\u003d this.serviceId);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        Service current \u003d model.getFilteredServiceList().get(0);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        model.selectService(current);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"                String.format(Messages.MESSAGE_SERVICE_VIEW_OVERVIEW, current.getId()),","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"                Tab.SERVICES);","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof ViewServiceCommand // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 this.serviceId \u003d\u003d ((ViewServiceCommand) other).serviceId); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":5,"ginloy":12,"9fc70c892":31,"junlee1991":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewTechnicianCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":" * Finds and returns the customer details of the provided id.","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"public class ViewTechnicianCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"viewtechnician\";","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_TECHNICIAN_NOT_FOUND \u003d \"Technician %d not in system\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display technician details given the customer id.\"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: ID\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 8\";","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    private final int technicianId;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public ViewTechnicianCommand(int technicianId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        this.technicianId \u003d technicianId;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        if (!model.hasTechnician(this.technicianId)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_TECHNICIAN_NOT_FOUND, this.technicianId));","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredTechnicianList(t -\u003e t.getId() \u003d\u003d this.technicianId);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        Technician current \u003d model.getFilteredTechnicianList().get(0);","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        model.selectTechnician(current);","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"                String.format(Messages.MESSAGE_CUSTOMER_VIEW_OVERVIEW, this.technicianId, Tab.TECHNICIANS));","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof ViewTechnicianCommand // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 this.technicianId \u003d\u003d ((ViewTechnicianCommand) other).technicianId); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":4,"ginloy":12,"9fc70c892":31,"junlee1991":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewVehicleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":" * Finds and returns the vehicle details of the provided id.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"public class ViewVehicleCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    public static final String COMMAND_WORD \u003d \"viewvehicle\";","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_VEHICLE_NOT_FOUND \u003d \"Vehicle %d not in system\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display vehicle details given the vehicle id (not\"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            + \"vehicle plate).\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            + \"Parameters: ID\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"            + \"Example: \" + COMMAND_WORD + \" 8\";","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private final int vehicleId;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public ViewVehicleCommand(int vehicleId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.vehicleId \u003d vehicleId;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        if (!model.hasVehicle(this.vehicleId)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            throw new CommandException(String.format(MESSAGE_VEHICLE_NOT_FOUND, this.vehicleId));","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        model.updateFilteredVehicleList(v -\u003e v.getId() \u003d\u003d this.vehicleId);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        Vehicle current \u003d model.getFilteredVehicleList().get(0);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        model.selectVehicle(current);","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"                String.format(Messages.MESSAGE_VEHICLE_VIEW_OVERVIEW, current.getId()),","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"                Tab.VEHICLES);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof ViewVehicleCommand // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"                \u0026\u0026 vehicleId \u003d\u003d ((ViewVehicleCommand) other).vehicleId); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"kimberlybp":5,"ginloy":12,"9fc70c892":32,"junlee1991":1}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ginloy":2,"-":17}},{"path":"src/main/java/seedu/address/logic/idgen/IdGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.idgen;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.Queue;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.util.SortedSet;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * Unique ID generation","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"public class IdGenerator {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    private static final String FILE_NAME \u003d \"IdGenState.ser\";","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private static final SortedSet\u003cInteger\u003e usedCustomerIds \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    private static final Queue\u003cInteger\u003e unusedCustomerIds \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    private static final SortedSet\u003cInteger\u003e usedVehicleIds \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    private static final Queue\u003cInteger\u003e unusedVehicleIds \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    private static final SortedSet\u003cInteger\u003e usedServiceIds \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    private static final Queue\u003cInteger\u003e unusedServiceIds \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    private static final SortedSet\u003cInteger\u003e usedAppointmentIds \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    private static final Queue\u003cInteger\u003e unusedAppointmentIds \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    private static final SortedSet\u003cInteger\u003e usedStaffIds \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    private static final Queue\u003cInteger\u003e unusedStaffIds \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    private IdGenerator() {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    private static int generateId(SortedSet\u003cInteger\u003e used, Queue\u003cInteger\u003e unused) {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        int id;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        if (used.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"            id \u003d 1;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        } else if (unused.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"            id \u003d used.last() + 1;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            id \u003d unused.poll();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        used.add(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        return id;","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    public static int generateCustomerId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        return generateId(usedCustomerIds, unusedCustomerIds);","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    public static int generateVehicleId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        return generateId(usedVehicleIds, unusedVehicleIds);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    public static int generateServiceId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        return generateId(usedServiceIds, unusedServiceIds);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    public static int generateAppointmentId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        return generateId(usedAppointmentIds, unusedAppointmentIds);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    public static int generateStaffId() {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        return generateId(usedStaffIds, unusedStaffIds);","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"     * Saves state of ID generator to specified path","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"     * @param path Path of directories to save to","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"     * @throws IOException If error occurs while saving state","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    public static void saveState(Path path) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"        IdGeneratorState state \u003d new IdGeneratorState(","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"            usedCustomerIds, unusedCustomerIds,","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"            usedVehicleIds, unusedVehicleIds,","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"            usedServiceIds, unusedServiceIds,","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"            usedStaffIds, unusedStaffIds);","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"        Files.createDirectories(path);","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"        path \u003d path.resolve(FILE_NAME);","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"        ObjectOutputStream outputStream \u003d new ObjectOutputStream(Files.newOutputStream(path));","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"        outputStream.writeObject(state);","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"        outputStream.close();","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"     * Loads ID generator state from path and updates the ID generator","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"     * @param path Path of directories to load from","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"     * @throws IOException            If IO error occurs while loading","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"     * @throws ClassNotFoundException If class not found","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"     * @throws ClassCastException     If loaded object is not IdGeneratorState","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"    public static void loadState(Path path) throws IOException, ClassNotFoundException, ClassCastException {","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"        path \u003d path.resolve(FILE_NAME);","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"        ObjectInputStream inputStream \u003d new ObjectInputStream(Files.newInputStream(path));","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"        Object obj \u003d inputStream.readObject();","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"        if (obj instanceof IdGeneratorState) {","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"            IdGeneratorState state \u003d (IdGeneratorState) obj;","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"            reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"            usedCustomerIds.addAll(state.getUsedCustomerIds());","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"            unusedCustomerIds.addAll(state.getUnusedCustomerIds());","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"            usedVehicleIds.addAll(state.getUsedVehicleIds());","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"            unusedVehicleIds.addAll(state.getUnusedVehicleIds());","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"            usedServiceIds.addAll(state.getUsedServiceIds());","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"            unusedServiceIds.addAll(state.getUnusedServiceIds());","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"            usedStaffIds.addAll(state.getUsedStaffIds());","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"            unusedStaffIds.addAll(state.getUnusedStaffIds());","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"            throw new ClassCastException();","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"        inputStream.close();","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"    public static void setCustomerIdUnused(int id) {","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"        unusedCustomerIds.add(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"    public static void setVehicleIdUnused(int id) {","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"        unusedVehicleIds.add(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"    public static void setServiceIdUnused(int id) {","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"        unusedServiceIds.add(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"    public static void setAppointmentIdUnused(int id) {","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"        unusedAppointmentIds.add(id);","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"    public static void setStaffIdUnused(int id) {","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"        unusedStaffIds.add(id);","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"    public static void setCustomerIdUsed(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"        usedCustomerIds.add(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"    public static void setVehicleIdUsed(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"        usedVehicleIds.add(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"    public static void setServiceIdUsed(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"        usedServiceIds.add(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"    public static void setAppointmentIdUsed(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"        usedAppointmentIds.add(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"    public static void setStaffIdUsed(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"        usedStaffIds.add(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"     * Resets the ID generator to default state","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"    public static void reset() {","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"        usedCustomerIds.clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"        unusedCustomerIds.clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"        usedVehicleIds.clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"        unusedVehicleIds.clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"        usedServiceIds.clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"        unusedServiceIds.clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"        usedStaffIds.clear();","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"        unusedStaffIds.clear();","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"ginloy":166}},{"path":"src/main/java/seedu/address/logic/idgen/IdGeneratorState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.idgen;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.Queue;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.SortedSet;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":" * Serializable IdGenerator state","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"class IdGeneratorState implements Serializable {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"    private final SortedSet\u003cInteger\u003e usedCustomerIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    private final Queue\u003cInteger\u003e unusedCustomerIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    private final SortedSet\u003cInteger\u003e usedVehicleIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    private final Queue\u003cInteger\u003e unusedVehicleIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    private final SortedSet\u003cInteger\u003e usedServiceIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    private final Queue\u003cInteger\u003e unusedServiceIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    private final SortedSet\u003cInteger\u003e usedStaffIds;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private final Queue\u003cInteger\u003e unusedStaffIds;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    IdGeneratorState(SortedSet\u003cInteger\u003e usedCustomerIds, Queue\u003cInteger\u003e unusedCustomerIds,","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"                     SortedSet\u003cInteger\u003e usedVehicleIds, Queue\u003cInteger\u003e unusedVehicleIds,","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"                     SortedSet\u003cInteger\u003e usedServiceIds, Queue\u003cInteger\u003e unusedServiceIds,","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"                     SortedSet\u003cInteger\u003e usedStaffIds, Queue\u003cInteger\u003e unusedStaffIds) {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        this.usedCustomerIds \u003d usedCustomerIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        this.unusedCustomerIds \u003d unusedCustomerIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        this.usedVehicleIds \u003d usedVehicleIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        this.unusedVehicleIds \u003d unusedVehicleIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        this.usedServiceIds \u003d usedServiceIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        this.unusedServiceIds \u003d unusedServiceIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        this.usedStaffIds \u003d usedStaffIds;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        this.unusedStaffIds \u003d unusedStaffIds;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    SortedSet\u003cInteger\u003e getUsedCustomerIds() {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        return usedCustomerIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    Queue\u003cInteger\u003e getUnusedCustomerIds() {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        return unusedCustomerIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    SortedSet\u003cInteger\u003e getUsedVehicleIds() {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        return usedVehicleIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    Queue\u003cInteger\u003e getUnusedVehicleIds() {","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        return unusedVehicleIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    SortedSet\u003cInteger\u003e getUsedServiceIds() {","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"        return usedServiceIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    Queue\u003cInteger\u003e getUnusedServiceIds() {","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        return unusedServiceIds;","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    SortedSet\u003cInteger\u003e getUsedStaffIds() {","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        return usedStaffIds;","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"    Queue\u003cInteger\u003e getUnusedStaffIds() {","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        return unusedStaffIds;","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"ginloy":66}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CUSTOMER_ID;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new AddAppointmentCommand object","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CUSTOMER_ID, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CUSTOMER_ID, PREFIX_DATE, PREFIX_TIME)","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        int customerId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_CUSTOMER_ID).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        LocalTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        LocalDateTime dateTime \u003d date.atTime(time);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        Appointment appointment \u003d new Appointment(IdGenerator.generateAppointmentId(), customerId, dateTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"ginloy":55}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"9fc70c892":5,"-":55}},{"path":"src/main/java/seedu/address/logic/parser/AddCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddCustomerCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates a new AddCustomerCommand object","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"public class AddCustomerCommandParser implements Parser\u003cAddCustomerCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public AddCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        Customer customer \u003d new Customer(IdGenerator.generateCustomerId(), name, phone, email, address, tagList);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        return new AddCustomerCommand(customer);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"ginloy":61}},{"path":"src/main/java/seedu/address/logic/parser/AddPartCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PART_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddPartCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new AddPartCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"public class AddPartCommandParser implements Parser\u003cAddPartCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPartCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     * and returns an AddPartCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    public AddPartCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PART_NAME, PREFIX_QUANTITY);","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PART_NAME, PREFIX_QUANTITY)","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPartCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        String partName \u003d argMultimap.getValue(PREFIX_PART_NAME).get();","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        if (!PartMap.isValidName(partName)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(PartMap.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        int qty \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        return new AddPartCommand(partName, qty);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"ginloy":48}},{"path":"src/main/java/seedu/address/logic/parser/AddPartToServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PART_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_ID;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddPartToServiceCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new AddPartToServiceCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"public class AddPartToServiceCommandParser implements Parser\u003cAddPartToServiceCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPartToServiceCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * and returns an AddPartToServiceCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    public AddPartToServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_PART_NAME, PREFIX_QUANTITY, PREFIX_SERVICE_ID);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PART_NAME, PREFIX_QUANTITY, PREFIX_SERVICE_ID)","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPartToServiceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        String partName \u003d argMultimap.getValue(PREFIX_PART_NAME).get();","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        if (!PartMap.isValidName(partName)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(PartMap.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        int serviceId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_SERVICE_ID).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        int qty \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        return new AddPartToServiceCommand(serviceId, partName, qty);","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ginloy":51}},{"path":"src/main/java/seedu/address/logic/parser/AddServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_DESCRIPTION;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_DURATION;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_STATUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_ID;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddServiceCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.ServiceStatus;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new AddServiceCommandParser object","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"public class AddServiceCommandParser implements Parser\u003cAddServiceCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddVehicleCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * and returns an AddVehicleCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public AddServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_VEHICLE_ID, PREFIX_SERVICE_DURATION, PREFIX_SERVICE_STATUS,","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                PREFIX_SERVICE_DESCRIPTION);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_VEHICLE_ID)","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddServiceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        int vehicleId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_VEHICLE_ID).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        String serviceDesc \u003d argMultimap.getAllValues(PREFIX_SERVICE_DESCRIPTION).stream().findFirst().orElse(\"\");","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        Optional\u003cString\u003e rawServiceDuration \u003d argMultimap.getAllValues(PREFIX_SERVICE_DURATION).stream().findFirst();","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        Optional\u003cString\u003e rawServiceStatus \u003d argMultimap.getAllValues(PREFIX_SERVICE_STATUS).stream().findFirst();","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        int serviceDuration \u003d ParserUtil.parseInt(","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"            rawServiceDuration.orElse(String.valueOf(Service.DEFAULT_SEVEN_DAYS)));","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        ServiceStatus serviceStatus \u003d ParserUtil.parseServiceStatus(rawServiceStatus.orElse(\"to repair\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        Service service \u003d new Service(IdGenerator.generateServiceId(), vehicleId, serviceDuration, serviceDesc,","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"            serviceStatus);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        return new AddServiceCommand(service);","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"ginloy":59}},{"path":"src/main/java/seedu/address/logic/parser/AddStaffCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNSUPPORTED_COMMAND;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddStaffCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates AddStaffCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"public class AddStaffCommandParser implements Parser\u003cAddStaffCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStaffCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * and returns an AddStaffCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    public AddStaffCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        throw new ParseException(MESSAGE_UNSUPPORTED_COMMAND);","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"ginloy":33}},{"path":"src/main/java/seedu/address/logic/parser/AddTechnicianCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddTechnicianCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates AddTechnicianCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"public class AddTechnicianCommandParser implements Parser\u003cAddTechnicianCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTechnicianCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     * and returns an AddTechnicianCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    public AddTechnicianCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTechnicianCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        Technician technician \u003d new Technician(IdGenerator.generateStaffId(), name, phone, email, address, tagList);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"        return new AddTechnicianCommand(technician);","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"ginloy":61}},{"path":"src/main/java/seedu/address/logic/parser/AddTechnicianToAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_ID;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICIAN_ID;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddTechnicianToAppointmentCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new AddTechnicianToAppointmentCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class AddTechnicianToAppointmentCommandParser implements Parser\u003cAddTechnicianToAppointmentCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTechnicianToAppointmentCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * and returns an AddTechnicianToAppointmentCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    public AddTechnicianToAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_TECHNICIAN_ID, PREFIX_APPOINTMENT_ID);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TECHNICIAN_ID, PREFIX_APPOINTMENT_ID)","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTechnicianToAppointmentCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        int techId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_TECHNICIAN_ID).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        int appointmentId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_APPOINTMENT_ID).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        return new AddTechnicianToAppointmentCommand(techId, appointmentId);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"ginloy":45}},{"path":"src/main/java/seedu/address/logic/parser/AddTechnicianToServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_ID;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICIAN_ID;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddTechnicianToServiceCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new AddTechnicianToServiceCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class AddTechnicianToServiceCommandParser implements Parser\u003cAddTechnicianToServiceCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTechnicianToServiceCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * and returns an AddTechnicianToServiceCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    public AddTechnicianToServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_TECHNICIAN_ID, PREFIX_SERVICE_ID);","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TECHNICIAN_ID, PREFIX_SERVICE_ID)","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTechnicianToServiceCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        int techId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_TECHNICIAN_ID).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        int serviceId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_SERVICE_ID).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        return new AddTechnicianToServiceCommand(techId, serviceId);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ginloy":45}},{"path":"src/main/java/seedu/address/logic/parser/AddVehicleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BRAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CUSTOMER_ID;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATE_NUM;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_COLOR;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_TYPE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddVehicleCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.VehicleType;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new AddVehicleCommand object","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"public class AddVehicleCommandParser implements Parser\u003cAddVehicleCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddVehicleCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * and returns an AddVehicleCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public AddVehicleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PLATE_NUM, PREFIX_BRAND, PREFIX_CUSTOMER_ID,","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                        PREFIX_VEHICLE_TYPE, PREFIX_VEHICLE_COLOR);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PLATE_NUM, PREFIX_BRAND, PREFIX_CUSTOMER_ID, PREFIX_VEHICLE_TYPE,","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"            PREFIX_VEHICLE_COLOR)","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddVehicleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        String plateNumber \u003d argMultimap.getValue(PREFIX_PLATE_NUM).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        String brand \u003d argMultimap.getValue(PREFIX_BRAND).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        int customerId \u003d Integer.parseInt(argMultimap.getValue(PREFIX_CUSTOMER_ID).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        String vehicleType \u003d argMultimap.getValue(PREFIX_VEHICLE_TYPE).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        String vehicleColor \u003d argMultimap.getValue(PREFIX_VEHICLE_COLOR).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        VehicleType type \u003d ParserUtil.parseVehicleType(vehicleType);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        Vehicle vehicle \u003d new Vehicle(IdGenerator.generateVehicleId(), customerId, plateNumber, vehicleColor, brand,","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"                type);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        return new AddVehicleCommand(vehicle);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"ginloy":60}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.AddCustomerCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.AddPartCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.AddPartToServiceCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.AddServiceCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.AddTechnicianCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.AddTechnicianToAppointmentCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.AddTechnicianToServiceCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.AddVehicleCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.DeleteServiceCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.DeleteTechnicianCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.DeleteVehicleCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditCustomerCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditServiceCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditTechnicianCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.EditVehicleCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListAppointmentsCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListCustomersCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListPartsCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListServicesCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.ListTechniciansCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListVehiclesCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.RemovePartFromServiceCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.RemoveTechnicianFromAppointmentCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.RemoveTechnicianFromServiceCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.SortAppointmentsCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.SortCustomersCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.SortServicesCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.SortTechniciansCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.SortVehiclesCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.TotalAppointmentCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ViewAppointmentCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ViewCustomerCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ViewServiceCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ViewTechnicianCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ViewVehicleCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":112,"author":{"gitId":"9fc70c892"},"content":"        // todo: port to new parser ? (i.e. shopParser)","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"junlee1991"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"junlee1991"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"junlee1991"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"junlee1991"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"        // AutoM8 commands","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"ginloy"},"content":"        // Add","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"ginloy"},"content":"        case AddCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"ginloy"},"content":"            return new AddCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"        case AddVehicleCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"            return new AddVehicleCommandParser().parse(arguments);","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"        case AddServiceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"            return new AddServiceCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"        case AddPartCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"            return new AddPartCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"        case AddPartToServiceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"            return new AddPartToServiceCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"        case AddTechnicianCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"            return new AddTechnicianCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"        case AddTechnicianToServiceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"            return new AddTechnicianToServiceCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"        case AddTechnicianToAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"            return new AddTechnicianToAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"        // List","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"kimberlybp"},"content":"        case ListCustomersCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"kimberlybp"},"content":"            return new ListCustomersCommand();","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"kimberlybp"},"content":"        case ListVehiclesCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"kimberlybp"},"content":"            return new ListVehiclesCommand();","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"kimberlybp"},"content":"        case ListServicesCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"kimberlybp"},"content":"            return new ListServicesCommand();","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"        case ListTechniciansCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"            return new ListTechniciansCommand();","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"        case ListAppointmentsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"kimberlybp"},"content":"            return new ListAppointmentsCommand();","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"kimberlybp"},"content":"        case ListPartsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"kimberlybp"},"content":"            return new ListPartsCommand();","lastModifiedDate":"2023-03-31"},{"lineNumber":169,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"kimberlybp"},"content":"        // View","lastModifiedDate":"2023-03-31"},{"lineNumber":171,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"9fc70c892"},"content":"        case ViewVehicleCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"            return new ViewVehicleCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"9fc70c892"},"content":"        case ViewAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"            return new ViewAppointmentCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"9fc70c892"},"content":"        case ViewCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"            return new ViewCustomerCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"        case ViewTechnicianCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"ginloy"},"content":"            return new ViewTechnicianCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"kimberlybp"},"content":"        case ViewServiceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"kimberlybp"},"content":"            return new ViewServiceCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"        // Delete","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"9fc70c892"},"content":"        case DeleteVehicleCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"ginloy"},"content":"            return new DeleteVehicleCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"9fc70c892"},"content":"        case DeleteCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"ginloy"},"content":"            return new DeleteCustomerCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"9fc70c892"},"content":"        case DeleteServiceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"ginloy"},"content":"            return new DeleteServiceCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"9fc70c892"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"ginloy"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"9fc70c892"},"content":"        case DeleteTechnicianCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"            return new DeleteTechnicianCommandParser().parse(arguments.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":203,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":204,"author":{"gitId":"ginloy"},"content":"        case RemovePartFromServiceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":205,"author":{"gitId":"ginloy"},"content":"            return new RemovePartFromServiceCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":206,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":207,"author":{"gitId":"ginloy"},"content":"        case RemoveTechnicianFromServiceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":208,"author":{"gitId":"ginloy"},"content":"            return new RemoveTechnicianFromServiceCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":209,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":210,"author":{"gitId":"ginloy"},"content":"        case RemoveTechnicianFromAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":211,"author":{"gitId":"ginloy"},"content":"            return new RemoveTechnicianFromAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":212,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":213,"author":{"gitId":"ginloy"},"content":"        // Edit","lastModifiedDate":"2023-03-31"},{"lineNumber":214,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"ginloy"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":217,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"9fc70c892"},"content":"        case EditCustomerCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"ginloy"},"content":"            return new EditCustomerCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"ginloy"},"content":"        case EditVehicleCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":222,"author":{"gitId":"ginloy"},"content":"            return new EditVehicleCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":223,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":224,"author":{"gitId":"9fc70c892"},"content":"        case EditTechnicianCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"ginloy"},"content":"            return new EditTechnicianCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":226,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"9fc70c892"},"content":"        case EditServiceCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"ginloy"},"content":"            return new EditServiceCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":229,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"ginloy"},"content":"        // Sort","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"ginloy"},"content":"        case SortCustomersCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"ginloy"},"content":"            return new SortCustomersCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"ginloy"},"content":"        case SortVehiclesCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"ginloy"},"content":"            return new SortVehiclesCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"ginloy"},"content":"        case SortServicesCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"ginloy"},"content":"            return new SortServicesCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"ginloy"},"content":"        case SortTechniciansCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"ginloy"},"content":"            return new SortTechniciansCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"ginloy"},"content":"        case SortAppointmentsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"ginloy"},"content":"            return new SortAppointmentsCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"junlee1991"},"content":"        case TotalAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"junlee1991"},"content":"            return new TotalAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kimberlybp":49,"ginloy":88,"9fc70c892":34,"junlee1991":8,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_PLATE_NUM \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_BRAND \u003d new Prefix(\"b/\");","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_CUSTOMER_ID \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_VEHICLE_TYPE \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_PART_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"q/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_VEHICLE_ID \u003d new Prefix(\"v/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_SERVICE_ID \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_APPOINTMENT_ID \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_TECHNICIAN_ID \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_SERVICE_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_SERVICE_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_SERVICE_DURATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_VEHICLE_COLOR \u003d new Prefix(\"cl/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"    // EditService","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    public static final Prefix PREFIX_SERVICE_START \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"    public static final Prefix PREFIX_SERVICE_END \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"    // Prefix internal id \u003d\u003d view \u003cID\u003e \u003c--","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    public static final Prefix PREFIX_INTERNAL_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_SORT_BY \u003d new Prefix(\"by/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"    public static final Prefix PREFIX_REVERSE_SORT \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ginloy":18,"9fc70c892":7,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new DeleteAppointmentCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAppointmentCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * and returns a DeleteAppointmentCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"            int id \u003d ParserUtil.parseInt(args);","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"            return new DeleteAppointmentCommand(id);","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":2,"9fc70c892":26}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.DeleteCustomerCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new DeleteCustomerCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class DeleteCustomerCommandParser implements Parser\u003cDeleteCustomerCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCustomerCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * and returns a DeleteCustomerCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public DeleteCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            int id \u003d ParserUtil.parseInt(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            return new DeleteCustomerCommand(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"9fc70c892":28}},{"path":"src/main/java/seedu/address/logic/parser/DeleteServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.DeleteServiceCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new DeleteVehicleCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class DeleteServiceCommandParser implements Parser\u003cDeleteServiceCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteVehicleCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * and returns a DeleteVehicleCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public DeleteServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            int id \u003d ParserUtil.parseInt(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            return new DeleteServiceCommand(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteServiceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"9fc70c892":28}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTechnicianCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.DeleteTechnicianCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new DeleteTechnicianCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class DeleteTechnicianCommandParser implements Parser\u003cDeleteTechnicianCommand\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCustomerCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * and returns a DeleteCustomerCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public DeleteTechnicianCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            int id \u003d ParserUtil.parseInt(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            return new DeleteTechnicianCommand(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTechnicianCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"9fc70c892":28}},{"path":"src/main/java/seedu/address/logic/parser/DeleteVehicleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.DeleteVehicleCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new DeleteVehicleCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class DeleteVehicleCommandParser implements Parser\u003cDeleteVehicleCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteVehicleCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * and returns a DeleteVehicleCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public DeleteVehicleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"            int id \u003d ParserUtil.parseInt(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            return new DeleteVehicleCommand(id);","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteVehicleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"9fc70c892":28}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CUSTOMER_ID;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_MISSING_DATE_OR_TIME \u003d \"Both Date and Time must be specified when attempting to\"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"            + \"edit either\";","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INTERNAL_ID, PREFIX_CUSTOMER_ID, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"        // If no appt id present, don\u0027t know what to edit, throw error.","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"        if (!argMultimap.getValue(PREFIX_INTERNAL_ID).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"        editAppointmentDescriptor.setId(ParserUtil.parseInt(argMultimap.getValue(PREFIX_INTERNAL_ID).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_CUSTOMER_ID).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"            editAppointmentDescriptor.setCustomerId(","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"                    ParserUtil.parseInt(argMultimap.getValue(PREFIX_CUSTOMER_ID).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"        // If either is present, enforce that both must be present.","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent() || argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_TIME)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"                LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"                LocalTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"                LocalDateTime dateTime \u003d date.atTime(time);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"                editAppointmentDescriptor.setTimeDate(dateTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"            } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"                throw new ParseException(","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_MISSING_DATE_OR_TIME,","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"                                EditAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"        // Leaving this commented for reference if in future EditAppointmentCommandParser also handles setStaffIds","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"        // Set\u003cInteger\u003e staffIds","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"        //        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editAppointmentDescriptor::setTags);","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"        return new EditAppointmentCommand(editAppointmentDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"9fc70c892"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"9fc70c892"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"9fc70c892"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"9fc70c892"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"9fc70c892"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"9fc70c892"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"9fc70c892"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"9fc70c892"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"9fc70c892"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"9fc70c892"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"9fc70c892"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"9fc70c892"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"9fc70c892":105}},{"path":"src/main/java/seedu/address/logic/parser/EditCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditCustomerCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditCustomerCommand.EditCustomerDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"public class EditCustomerCommandParser implements Parser\u003cEditCustomerCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    public EditCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"                args, PREFIX_INTERNAL_ID, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"        // If no id present, don\u0027t know what to edit, throw error.","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        if (!argMultimap.getValue(PREFIX_INTERNAL_ID).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCustomerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"        EditCustomerDescriptor editCustomerDescriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"        editCustomerDescriptor.setId(ParserUtil.parseInt(argMultimap.getValue(PREFIX_INTERNAL_ID).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"            editCustomerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"            editCustomerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"            editCustomerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"            editCustomerDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCustomerDescriptor::setTags);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"        if (!editCustomerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(EditCustomerCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"        return new EditCustomerCommand(editCustomerDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"9fc70c892":83}},{"path":"src/main/java/seedu/address/logic/parser/EditServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_DESCRIPTION;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_END;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_START;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_STATUS;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_ID;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditServiceCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditServiceCommand.EditServiceDescriptor;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"public class EditServiceCommandParser implements Parser\u003cEditServiceCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    public EditServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"                args, PREFIX_INTERNAL_ID, PREFIX_VEHICLE_ID, PREFIX_SERVICE_START, PREFIX_SERVICE_END,","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"                PREFIX_SERVICE_STATUS, PREFIX_SERVICE_DESCRIPTION);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        // If no id present, don\u0027t know what to edit, throw error.","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"        if (!argMultimap.getValue(PREFIX_INTERNAL_ID).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditServiceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        EditServiceDescriptor editServiceDescriptor \u003d new EditServiceDescriptor();","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        editServiceDescriptor.setId(ParserUtil.parseInt(argMultimap.getValue(PREFIX_INTERNAL_ID).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_VEHICLE_ID).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"            editServiceDescriptor.setVehicleId(ParserUtil.parseInt(argMultimap.getValue(PREFIX_VEHICLE_ID).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_SERVICE_START).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"            editServiceDescriptor.setEntryDate(ParserUtil.parseDate(","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"                    argMultimap.getValue(PREFIX_SERVICE_START).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_SERVICE_END).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"            editServiceDescriptor.setFinishDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_SERVICE_END).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_SERVICE_STATUS).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"            editServiceDescriptor.setStatus(ParserUtil.parseServiceStatus(","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"                    argMultimap.getValue(PREFIX_SERVICE_STATUS).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_SERVICE_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"            editServiceDescriptor.setDescription(ParserUtil.parseString(","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"                    argMultimap.getValue(PREFIX_SERVICE_DESCRIPTION).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"        if (!editServiceDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(EditServiceCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"        return new EditServiceCommand(editServiceDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"9fc70c892":73}},{"path":"src/main/java/seedu/address/logic/parser/EditTechnicianCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditTechnicianCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditTechnicianCommand.EditTechnicianDescriptor;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"public class EditTechnicianCommandParser implements Parser\u003cEditTechnicianCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    public EditTechnicianCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"                args, PREFIX_INTERNAL_ID, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"        // If no id present, don\u0027t know what to edit, throw error.","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        if (!argMultimap.getValue(PREFIX_INTERNAL_ID).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTechnicianCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"        EditTechnicianDescriptor editPersonDescriptor \u003d new EditTechnicianDescriptor();","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"        editPersonDescriptor.setId(ParserUtil.parseInt(argMultimap.getValue(PREFIX_INTERNAL_ID).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(EditTechnicianCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"        return new EditTechnicianCommand(editPersonDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"9fc70c892":83}},{"path":"src/main/java/seedu/address/logic/parser/EditVehicleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BRAND;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CUSTOMER_ID;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNAL_ID;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATE_NUM;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_COLOR;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VEHICLE_TYPE;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditVehicleCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.EditVehicleCommand.EditVehicleDescriptor;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"public class EditVehicleCommandParser implements Parser\u003cEditVehicleCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    public EditVehicleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INTERNAL_ID, PREFIX_PLATE_NUM,","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"                PREFIX_BRAND, PREFIX_CUSTOMER_ID, PREFIX_VEHICLE_TYPE, PREFIX_VEHICLE_COLOR);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"        // If no id present, don\u0027t know what to edit, throw error.","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        if (!argMultimap.getValue(PREFIX_INTERNAL_ID).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditVehicleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"        EditVehicleDescriptor editVehicleDescriptor \u003d new EditVehicleDescriptor();","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"        editVehicleDescriptor.setId(ParserUtil.parseInt(argMultimap.getValue(PREFIX_INTERNAL_ID).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_PLATE_NUM).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"            editVehicleDescriptor.setPlateNumber(argMultimap.getValue(PREFIX_PLATE_NUM).get());","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_BRAND).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            editVehicleDescriptor.setBrand(argMultimap.getValue(PREFIX_BRAND).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_CUSTOMER_ID).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"            editVehicleDescriptor.setOwnerId(Integer.parseInt(argMultimap.getValue(PREFIX_CUSTOMER_ID).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_VEHICLE_TYPE).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"            editVehicleDescriptor.setType(ParserUtil.parseVehicleType(argMultimap.getValue(PREFIX_VEHICLE_TYPE).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"        if (argMultimap.getValue(PREFIX_VEHICLE_COLOR).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"            editVehicleDescriptor.setColor(argMultimap.getValue(PREFIX_VEHICLE_COLOR).get());","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"        if (!editVehicleDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(EditVehicleCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"        return new EditVehicleCommand(editVehicleDescriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ginloy":1,"9fc70c892":85}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        List\u003cString\u003e nameKeywords \u003d List.of(trimmedArgs.split(\"\\\\s+\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        return new FindCommand(f -\u003e f.hasKeywords(nameKeywords));","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ginloy":3,"-":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.ServiceStatus;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.VehicleType;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"     * Parses string into integer","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"     * @param rawInt String to be parsed","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"     * @return Parsed integer","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException If string cannot be parsed as integer","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"    public static int parseInt(String rawInt) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"            return Integer.parseInt(rawInt);","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(\"Input not a number\");","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"     * Parses string into vehicle type","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"     * @param rawType String to be parsed","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"ginloy"},"content":"     * @return Parsed VehicleType","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException If string cannot be parsed as vehicleType","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"    public static VehicleType parseVehicleType(String rawType) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"        requireNonNull(rawType);","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"        switch (rawType.toLowerCase()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"        case \"car\":","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"            return VehicleType.CAR;","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"        case \"motorbike\":","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"            return VehicleType.MOTORBIKE;","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"        default:","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(VehicleType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"     * Parses string into ServiceStatus","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"ginloy"},"content":"     * @param rawStatus String to be parsed","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"     * @return Parsed ServiceStatus","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException If string cannot be parsed into ServiceStatus","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"    public static ServiceStatus parseServiceStatus(String rawStatus) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"        requireNonNull(rawStatus);","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"ginloy"},"content":"        for (ServiceStatus p : ServiceStatus.values()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"            if (p.isEqual(rawStatus)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"                return p;","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"        throw new ParseException(ServiceStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"ginloy"},"content":"     * Parses string into LocalDate","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"ginloy"},"content":"     * @param rawDate String to be parsed","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"     * @return Parsed LocalDate","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException If string cannot be parsed as LocalDate","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"    public static LocalDate parseDate(String rawDate) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"ginloy"},"content":"        requireNonNull(rawDate);","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"ginloy"},"content":"            return LocalDate.parse(rawDate);","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"ginloy"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(\"Date should be in the format \u0027YYYY-MM-DD\u0027\");","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":196,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":197,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":199,"author":{"gitId":"ginloy"},"content":"     * Parses string into LocalTime","lastModifiedDate":"2023-03-16"},{"lineNumber":200,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"ginloy"},"content":"     * @param rawTime String to be parsed","lastModifiedDate":"2023-03-16"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"     * @return Parsed LocalTime","lastModifiedDate":"2023-03-16"},{"lineNumber":203,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException If string cannot be parsed as LocalTime","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"ginloy"},"content":"    public static LocalTime parseTime(String rawTime) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"ginloy"},"content":"        requireNonNull(rawTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"ginloy"},"content":"            return LocalTime.parse(rawTime);","lastModifiedDate":"2023-03-16"},{"lineNumber":209,"author":{"gitId":"ginloy"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(\"Time should be in the format \u0027HH:MM:SS\u0027 or \u0027HH:MM\u0027\");","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":212,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"     * Return given string.","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"9fc70c892"},"content":"     * @param rawString The String","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"9fc70c892"},"content":"     * @return The String.","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"9fc70c892"},"content":"    public static String parseString(String rawString) {","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"9fc70c892"},"content":"        return rawString;","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ginloy":89,"9fc70c892":14,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/RemovePartFromServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PART_NAME;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.RemovePartFromServiceCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new RemovePartFromServiceCommand object","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"public class RemovePartFromServiceCommandParser implements Parser\u003cRemovePartFromServiceCommand\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the RemovePartFromServiceCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * and returns an RemovePartFromServiceCommand object for execution.","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    public RemovePartFromServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_PART_NAME, PREFIX_QUANTITY, PREFIX_SERVICE_ID);","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PART_NAME, PREFIX_QUANTITY, PREFIX_SERVICE_ID)","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemovePartFromServiceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        String partName \u003d argMultimap.getValue(PREFIX_PART_NAME).get();","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        if (!PartMap.isValidName(partName)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(PartMap.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        int serviceId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_SERVICE_ID).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        int qty \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        return new RemovePartFromServiceCommand(serviceId, partName, qty);","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"ginloy":51}},{"path":"src/main/java/seedu/address/logic/parser/RemoveTechnicianFromAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICIAN_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.RemoveTechnicianFromAppointmentCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new AddTechnicianToAppointmentCommand object","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class RemoveTechnicianFromAppointmentCommandParser implements Parser\u003cRemoveTechnicianFromAppointmentCommand\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTechnicianToAppointmentCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * and returns an AddTechnicianToAppointmentCommand object for execution.","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    public RemoveTechnicianFromAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_TECHNICIAN_ID, PREFIX_APPOINTMENT_ID);","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TECHNICIAN_ID, PREFIX_APPOINTMENT_ID)","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTechnicianFromAppointmentCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        int techId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_TECHNICIAN_ID).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        int appointmentId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_APPOINTMENT_ID).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        return new RemoveTechnicianFromAppointmentCommand(techId, appointmentId);","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"ginloy":45}},{"path":"src/main/java/seedu/address/logic/parser/RemoveTechnicianFromServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TECHNICIAN_ID;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.RemoveTechnicianFromServiceCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new AddTechnicianToServiceCommand object","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"public class RemoveTechnicianFromServiceCommandParser implements Parser\u003cRemoveTechnicianFromServiceCommand\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTechnicianToServiceCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * and returns an AddTechnicianToServiceCommand object for execution.","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    public RemoveTechnicianFromServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_TECHNICIAN_ID, PREFIX_SERVICE_ID);","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TECHNICIAN_ID, PREFIX_SERVICE_ID)","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTechnicianFromServiceCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        int techId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_TECHNICIAN_ID).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        int serviceId \u003d ParserUtil.parseInt(argMultimap.getValue(PREFIX_SERVICE_ID).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        return new RemoveTechnicianFromServiceCommand(techId, serviceId);","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"ginloy":45}},{"path":"src/main/java/seedu/address/logic/parser/SortAppointmentsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.util.SharedComparatorsUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.SortAppointmentsCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new SortAppointmentCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"public class SortAppointmentsCommandParser implements Parser\u003cSortAppointmentsCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the SortAppointmentCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     * and returns an SortAppointmentCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    public SortAppointmentsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_SORT_BY, PREFIX_REVERSE_SORT);","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT_BY)","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortAppointmentsCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        String sortAttribute \u003d argMultimap.getValue(PREFIX_SORT_BY).get();","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        Optional\u003cComparator\u003cAppointment\u003e\u003e cmpOption \u003d generateComparator(sortAttribute);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        if (cmpOption.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortAppointmentsCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_REVERSE_SORT)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"            return new SortAppointmentsCommand(cmpOption.get().reversed());","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        return new SortAppointmentsCommand(cmpOption.get());","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    private Optional\u003cComparator\u003cAppointment\u003e\u003e generateComparator(String input) {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        case \"id\":","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Appointment::getId));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        case \"customer id\":","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Appointment::getCustomerId));","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        case \"date\":","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Appointment::getTimeDate));","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        case \"date status\":","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            return Optional.of(SharedComparatorsUtil.getDefaultAppointmentSort());","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        default:","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":3,"ginloy":69}},{"path":"src/main/java/seedu/address/logic/parser/SortCustomersCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.SortCustomersCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new SortCustomerCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"public class SortCustomersCommandParser implements Parser\u003cSortCustomersCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCustomerCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * and returns an SortCustomerCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public SortCustomersCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORT_BY, PREFIX_REVERSE_SORT);","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT_BY)","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCustomersCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        String sortAttribute \u003d argMultimap.getValue(PREFIX_SORT_BY).get();","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        Optional\u003cComparator\u003cCustomer\u003e\u003e cmpOption \u003d generateComparator(sortAttribute);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        if (cmpOption.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCustomersCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_REVERSE_SORT)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            return new SortCustomersCommand(cmpOption.get().reversed());","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        return new SortCustomersCommand(cmpOption.get());","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    private Optional\u003cComparator\u003cCustomer\u003e\u003e generateComparator(String input) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        case \"id\":","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Customer::getId));","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        case \"name\":","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(x -\u003e x.getName().toString()));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        case \"email\":","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(x -\u003e x.getEmail().toString()));","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        case \"address\":","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(x -\u003e x.getAddress().toString()));","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        case \"phone\":","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(x -\u003e x.getPhone().toString()));","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        default:","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"ginloy":72}},{"path":"src/main/java/seedu/address/logic/parser/SortServicesCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.SortServicesCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new SortServiceCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"public class SortServicesCommandParser implements Parser\u003cSortServicesCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the SortServiceCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * and returns an SortServiceCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public SortServicesCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORT_BY, PREFIX_REVERSE_SORT);","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT_BY)","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortServicesCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        String sortAttribute \u003d argMultimap.getValue(PREFIX_SORT_BY).get();","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        Optional\u003cComparator\u003cService\u003e\u003e cmpOption \u003d generateComparator(sortAttribute);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        if (cmpOption.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortServicesCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_REVERSE_SORT)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            return new SortServicesCommand(cmpOption.get().reversed());","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        return new SortServicesCommand(cmpOption.get());","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    private Optional\u003cComparator\u003cService\u003e\u003e generateComparator(String input) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        case \"id\":","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Service::getId));","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        case \"vehicle id\":","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Service::getVehicleId));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        case \"start date\":","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Service::getEntryDate));","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        case \"end date\":","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Service::getEstimatedFinishDate));","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        case \"desc\":","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Service::getDescription));","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        case \"status\":","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Service::getStatus));","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        default:","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"ginloy":74}},{"path":"src/main/java/seedu/address/logic/parser/SortTechniciansCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.SortTechniciansCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new SortTechniciansCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"public class SortTechniciansCommandParser implements Parser\u003cSortTechniciansCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the SortTechniciansCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * and returns an SortTechniciansCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public SortTechniciansCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_SORT_BY, PREFIX_REVERSE_SORT);","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT_BY)","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortTechniciansCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        String sortAttribute \u003d argMultimap.getValue(PREFIX_SORT_BY).get();","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        Optional\u003cComparator\u003cTechnician\u003e\u003e cmpOption \u003d generateComparator(sortAttribute);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        if (cmpOption.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortTechniciansCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_REVERSE_SORT)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"            return new SortTechniciansCommand(cmpOption.get().reversed());","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"        return new SortTechniciansCommand(cmpOption.get());","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    private Optional\u003cComparator\u003cTechnician\u003e\u003e generateComparator(String input) {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"        case \"id\":","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Technician::getId));","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        case \"name\":","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(x -\u003e x.getName().toString()));","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        case \"email\":","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(x -\u003e x.getEmail().toString()));","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        case \"address\":","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(x -\u003e x.getAddress().toString()));","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"        case \"phone\":","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(x -\u003e x.getPhone().toString()));","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        default:","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"ginloy":73}},{"path":"src/main/java/seedu/address/logic/parser/SortVehiclesCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVERSE_SORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.commands.SortVehiclesCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":" * Parses input arguments and creates new SortVehiclesCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"public class SortVehiclesCommandParser implements Parser\u003cSortVehiclesCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * Parses the given {@code String} of arguments in the context of the SortVehiclesCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     * and returns an SortVehiclesCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    public SortVehiclesCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORT_BY, PREFIX_REVERSE_SORT);","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT_BY)","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortVehiclesCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"        String sortAttribute \u003d argMultimap.getValue(PREFIX_SORT_BY).get();","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"        Optional\u003cComparator\u003cVehicle\u003e\u003e cmpOption \u003d generateComparator(sortAttribute);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        if (cmpOption.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortVehiclesCommand.COMMAND_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_REVERSE_SORT)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"            return new SortVehiclesCommand(cmpOption.get().reversed());","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        return new SortVehiclesCommand(cmpOption.get());","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    private Optional\u003cComparator\u003cVehicle\u003e\u003e generateComparator(String input) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        switch (input.toLowerCase()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        case \"id\":","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Vehicle::getId));","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        case \"owner id\":","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Vehicle::getOwnerId));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        case \"plate\":","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Vehicle::getPlateNumber));","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        case \"brand\":","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Vehicle::getBrand));","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"        case \"color\":","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Vehicle::getColor));","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        case \"type\":","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(Vehicle::getType));","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        case \"service qty\":","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"            return Optional.of(Comparator.comparing(x -\u003e x.getServiceIds().size()));","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"        default:","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"ginloy":76}},{"path":"src/main/java/seedu/address/logic/parser/TotalAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"import seedu.address.logic.commands.TotalAppointmentCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":" * Parses input arguments and creates a new TotalAppointmentCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"public class TotalAppointmentCommandParser implements Parser\u003cTotalAppointmentCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"     * Parses the given {@code String} of arguments in the context of the TotalAppointment","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"     * and returns a TotalAppointment object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"     * @param args","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"    public TotalAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"        // eg. totalappointment d/2023-02-03","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE);","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, TotalAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"        LocalTime time \u003d ParserUtil.parseTime(\"00:00\");","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        LocalDateTime dateTime \u003d date.atTime(time);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"        return new TotalAppointmentCommand(dateTime);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"junlee1991":50}},{"path":"src/main/java/seedu/address/logic/parser/ViewAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.ViewAppointmentCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new ViewAppointment object","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class ViewAppointmentCommandParser implements Parser\u003cViewAppointmentCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewAppointment","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * and returns a ViewAppointment object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public ViewAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            int index \u003d ParserUtil.parseInt(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            return new ViewAppointmentCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"ginloy":1,"9fc70c892":28}},{"path":"src/main/java/seedu/address/logic/parser/ViewCustomerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.ViewCustomerCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new ViewCustomerCommand object","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class ViewCustomerCommandParser implements Parser\u003cViewCustomerCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCustomerCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * and returns a ViewCustomerCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public ViewCustomerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"            int index \u003d ParserUtil.parseInt(args.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            return new ViewCustomerCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCustomerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"kimberlybp":1,"ginloy":1,"9fc70c892":27}},{"path":"src/main/java/seedu/address/logic/parser/ViewServiceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ViewServiceCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":" * Parses input arguments and creates a new ViewServiceCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"public class ViewServiceCommandParser implements Parser\u003cViewServiceCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewServiceCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     * and returns a ViewServiceCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public ViewServiceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"            int index \u003d ParserUtil.parseInt(args.trim());","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            return new ViewServiceCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewServiceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"kimberlybp":27,"ginloy":1}},{"path":"src/main/java/seedu/address/logic/parser/ViewTechnicianCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.ViewTechnicianCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new ViewVehicleCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class ViewTechnicianCommandParser implements Parser\u003cViewTechnicianCommand\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewVehicleCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * and returns a ViewVehicleCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public ViewTechnicianCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"            int index \u003d ParserUtil.parseInt(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"            return new ViewTechnicianCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewTechnicianCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"ginloy":1,"9fc70c892":28}},{"path":"src/main/java/seedu/address/logic/parser/ViewVehicleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.commands.ViewVehicleCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * Parses input arguments and creates a new ViewVehicleCommand object","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class ViewVehicleCommandParser implements Parser\u003cViewVehicleCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewVehicleCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * and returns a ViewVehicleCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public ViewVehicleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"            int index \u003d ParserUtil.parseInt(args.trim());","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"            return new ViewVehicleCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewVehicleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"kimberlybp":1,"ginloy":1,"9fc70c892":26}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.UniquePersonList;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"9fc70c892":2,"-":118}},{"path":"src/main/java/seedu/address/model/Findable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":" * Any class implementing this interface can be found with FindCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"public interface Findable {","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"     * Checks if any of the class\u0027s attributes match a specific keyword","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"     * @param keyword Keyword to check against","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"    boolean hasKeyword(String keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"     * Checks if the contents of this class matches the keywords given","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"     * @param keywords List of keywords","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    default boolean hasKeywords(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"            .map(String::toLowerCase)","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"            .allMatch(this::hasKeyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"ginloy":27}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.AppointmentDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.CustomerVehicleMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.ServiceDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.TechnicianDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.VehicleDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    Predicate\u003cCustomer\u003e PREDICATE_SHOW_ALL_CUSTOMERS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"    Predicate\u003cTechnician\u003e PREDICATE_SHOW_ALL_TECHNICIANS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    Predicate\u003cPartMap\u003e PREDICATE_SHOW_ALL_PARTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"    Predicate\u003cService\u003e PREDICATE_SHOW_ALL_SERVICES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"    Predicate\u003cVehicle\u003e PREDICATE_SHOW_ALL_VEHICLES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"     * Returns the user prefs\u0027 shop file path.","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    Path getShopFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"     * Sets the user prefs\u0027 shop file path.","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    void setShopFilePath(Path shopFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"junlee1991"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"junlee1991"},"content":"    void setShop(ReadOnlyShop shop);","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"     * Returns the Shop","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"    ReadOnlyShop getShop();","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"ginloy"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"    PartMap getPartMap();","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"ginloy"},"content":"    void updateFilteredAppointmentList(Predicate\u003c? super Appointment\u003e predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"    // \u003d\u003d\u003d\u003d For Customers \u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable view of the filtered customer list","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"     * Updates the filter of the filtered customer list to filter by the given","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"     * {@code predicate}.","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"kimberlybp"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"    void updateFilteredCustomerList(Predicate\u003c? super Customer\u003e predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"     * Adds customer to the shop","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"     * @param customer Customer to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"    void addCustomer(Customer customer);","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"ginloy"},"content":"     * Checks whether Shop already has customer","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"     * @param customerId Customer ID to be checked","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"    boolean hasCustomer(int customerId);","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"9fc70c892"},"content":"    void deleteCustomer(Customer target);","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"9fc70c892"},"content":"    void setCustomer(Customer target, Customer editedPerson);","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"kimberlybp"},"content":"    // \u003d\u003d\u003d\u003d For Vehicles \u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable view of the filtered vehicle list","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cVehicle\u003e getFilteredVehicleList();","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"ginloy"},"content":"     * Adds vehicle to the shop","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"     * @param vehicle Vehicle to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"    void addVehicle(int customerId, Vehicle vehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"ginloy"},"content":"     * Checks if shop already has vehicle","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"     * @param vehicleId Vehicle ID to check against","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"    boolean hasVehicle(int vehicleId);","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"    void deleteVehicle(Vehicle target);","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"9fc70c892"},"content":"    void setVehicle(Vehicle target, Vehicle editedVehicle);","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"kimberlybp"},"content":"    // \u003d\u003d\u003d\u003d For Services \u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable view of the filtered service list","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cService\u003e getFilteredServiceList();","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"     * Adds service","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"ginloy"},"content":"     * @param service Service to add","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"ginloy"},"content":"    void addService(int vehicleId, Service service);","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"ginloy"},"content":"     * @param serviceId ID of service","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"ginloy"},"content":"     * @return Whether service already in the system","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"ginloy"},"content":"    boolean hasService(int serviceId);","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"9fc70c892"},"content":"    void deleteAppointment(Appointment target);","lastModifiedDate":"2023-03-17"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":216,"author":{"gitId":"9fc70c892"},"content":"    void deleteService(Service service);","lastModifiedDate":"2023-03-18"},{"lineNumber":217,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":218,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"ginloy"},"content":"     * Adds appointment","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"ginloy"},"content":"     * @param appointment Appointment to add","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"ginloy"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"ginloy"},"content":"     * Checks if appointment in the system","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"ginloy"},"content":"     * @param appointmentId ID of appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"ginloy"},"content":"    boolean hasAppointment(int appointmentId);","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"ginloy"},"content":"     * Adds part","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Name of the part to add","lastModifiedDate":"2023-03-16"},{"lineNumber":236,"author":{"gitId":"kimberlybp"},"content":"     * @param quantity Quantity of the part to add","lastModifiedDate":"2023-03-16"},{"lineNumber":237,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"kimberlybp"},"content":"    void addPart(String partName, int quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":239,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"ginloy"},"content":"     * Adds part to service","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"ginloy"},"content":"     * @param serviceId ID of service","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"ginloy"},"content":"     * @param partName  Name of part","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"ginloy"},"content":"     * @param quantity  Quantity of part","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"ginloy"},"content":"     * @throws NoSuchElementException If service not in system","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"ginloy"},"content":"    void addPartToService(int serviceId, String partName, int quantity) throws NoSuchElementException;","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"ginloy"},"content":"     * Assigns existing technician to existing service","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"ginloy"},"content":"     * @param serviceId ID of service","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"ginloy"},"content":"     * @param techId    ID of technician","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"ginloy"},"content":"     * @throws NoSuchElementException If technician or service not in system","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"ginloy"},"content":"    void addTechnicianToService(int serviceId, int techId) throws NoSuchElementException;","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"ginloy"},"content":"     * Assigns existing technician to existing appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":261,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"ginloy"},"content":"     * @param techId ID of technician","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"ginloy"},"content":"     * @param appointmentId ID of appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"ginloy"},"content":"     * @throws NoSuchElementException if technician ID or appointment ID does not exist","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"ginloy"},"content":"    void addTechnicianToAppointment(int techId, int appointmentId) throws NoSuchElementException;","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"ginloy"},"content":"     * Checks if part already exists","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Name of the part to check against","lastModifiedDate":"2023-03-16"},{"lineNumber":272,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"kimberlybp"},"content":"    boolean hasPart(String partName);","lastModifiedDate":"2023-03-16"},{"lineNumber":274,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":275,"author":{"gitId":"9fc70c892"},"content":"    ObservableList\u003cTechnician\u003e getFilteredTechnicianList();","lastModifiedDate":"2023-03-18"},{"lineNumber":276,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":277,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":278,"author":{"gitId":"ginloy"},"content":"     * Adds Technician","lastModifiedDate":"2023-03-17"},{"lineNumber":279,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":280,"author":{"gitId":"ginloy"},"content":"     * @param technician Technician to be added","lastModifiedDate":"2023-03-17"},{"lineNumber":281,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":282,"author":{"gitId":"ginloy"},"content":"    void addTechnician(Technician technician);","lastModifiedDate":"2023-03-17"},{"lineNumber":283,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":284,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":285,"author":{"gitId":"ginloy"},"content":"     * Checks if technician already in the model","lastModifiedDate":"2023-03-17"},{"lineNumber":286,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":287,"author":{"gitId":"ginloy"},"content":"     * @param technicianId ID of technician to check against","lastModifiedDate":"2023-03-17"},{"lineNumber":288,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":289,"author":{"gitId":"ginloy"},"content":"    boolean hasTechnician(int technicianId);","lastModifiedDate":"2023-03-17"},{"lineNumber":290,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":291,"author":{"gitId":"ginloy"},"content":"    void updateFilteredTechnicianList(Predicate\u003c? super Technician\u003e predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":292,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":293,"author":{"gitId":"ginloy"},"content":"    void updateFilteredVehicleList(Predicate\u003c? super Vehicle\u003e predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":294,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":295,"author":{"gitId":"ginloy"},"content":"    void updateFilteredServiceList(Predicate\u003c? super Service\u003e predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":296,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":297,"author":{"gitId":"9fc70c892"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2023-03-30"},{"lineNumber":298,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":299,"author":{"gitId":"9fc70c892"},"content":"    void updatePartsMap();","lastModifiedDate":"2023-03-17"},{"lineNumber":300,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":301,"author":{"gitId":"9fc70c892"},"content":"    void deleteTechnician(Technician target);","lastModifiedDate":"2023-03-18"},{"lineNumber":302,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":303,"author":{"gitId":"9fc70c892"},"content":"    void setTechnician(Technician target, Technician editedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":304,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"kimberlybp"},"content":"    CustomerVehicleMap getCustomerVehicleMap();","lastModifiedDate":"2023-03-17"},{"lineNumber":306,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":307,"author":{"gitId":"kimberlybp"},"content":"    VehicleDataMap getVehicleDataMap();","lastModifiedDate":"2023-03-18"},{"lineNumber":308,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":309,"author":{"gitId":"kimberlybp"},"content":"    ServiceDataMap getServiceDataMap();","lastModifiedDate":"2023-03-18"},{"lineNumber":310,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"kimberlybp"},"content":"    AppointmentDataMap getAppointmentDataMap();","lastModifiedDate":"2023-03-30"},{"lineNumber":312,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":313,"author":{"gitId":"kimberlybp"},"content":"    TechnicianDataMap getTechnicianDataMap();","lastModifiedDate":"2023-03-31"},{"lineNumber":314,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":315,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":316,"author":{"gitId":"kimberlybp"},"content":"     * Sets currently selected customer","lastModifiedDate":"2023-03-26"},{"lineNumber":317,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":318,"author":{"gitId":"kimberlybp"},"content":"    void selectCustomer(Customer customer);","lastModifiedDate":"2023-03-26"},{"lineNumber":319,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":320,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":321,"author":{"gitId":"kimberlybp"},"content":"     * Returns currently selected customer","lastModifiedDate":"2023-03-26"},{"lineNumber":322,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":323,"author":{"gitId":"kimberlybp"},"content":"    Customer getSelectedCustomer();","lastModifiedDate":"2023-03-26"},{"lineNumber":324,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":325,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":326,"author":{"gitId":"kimberlybp"},"content":"     * Sets currently selected vehicle","lastModifiedDate":"2023-03-26"},{"lineNumber":327,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":328,"author":{"gitId":"kimberlybp"},"content":"    void selectVehicle(Vehicle vehicle);","lastModifiedDate":"2023-03-26"},{"lineNumber":329,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":330,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":331,"author":{"gitId":"kimberlybp"},"content":"     * Returns currently selected vehicle","lastModifiedDate":"2023-03-26"},{"lineNumber":332,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":333,"author":{"gitId":"kimberlybp"},"content":"    Vehicle getSelectedVehicle();","lastModifiedDate":"2023-03-26"},{"lineNumber":334,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":335,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":336,"author":{"gitId":"kimberlybp"},"content":"     * Sets currently selected service","lastModifiedDate":"2023-03-27"},{"lineNumber":337,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":338,"author":{"gitId":"kimberlybp"},"content":"    void selectService(Service service);","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":340,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":341,"author":{"gitId":"kimberlybp"},"content":"     * Returns currently selected service","lastModifiedDate":"2023-03-27"},{"lineNumber":342,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":343,"author":{"gitId":"kimberlybp"},"content":"    Appointment getSelectedAppointment();","lastModifiedDate":"2023-03-31"},{"lineNumber":344,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":345,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":346,"author":{"gitId":"kimberlybp"},"content":"     * Sets currently selected appointment","lastModifiedDate":"2023-03-31"},{"lineNumber":347,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":348,"author":{"gitId":"kimberlybp"},"content":"    void selectAppointment(Appointment appointment);","lastModifiedDate":"2023-03-31"},{"lineNumber":349,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":350,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":351,"author":{"gitId":"kimberlybp"},"content":"     * Returns currently selected service","lastModifiedDate":"2023-03-31"},{"lineNumber":352,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":353,"author":{"gitId":"kimberlybp"},"content":"    Service getSelectedService();","lastModifiedDate":"2023-03-27"},{"lineNumber":354,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":355,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":356,"author":{"gitId":"kimberlybp"},"content":"     * Returns currently selected technician","lastModifiedDate":"2023-03-31"},{"lineNumber":357,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":358,"author":{"gitId":"kimberlybp"},"content":"    Technician getSelectedTechnician();","lastModifiedDate":"2023-03-31"},{"lineNumber":359,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":360,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":361,"author":{"gitId":"kimberlybp"},"content":"     * Sets currently selected technician","lastModifiedDate":"2023-03-31"},{"lineNumber":362,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":363,"author":{"gitId":"kimberlybp"},"content":"    void selectTechnician(Technician technician);","lastModifiedDate":"2023-03-31"},{"lineNumber":364,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":365,"author":{"gitId":"9fc70c892"},"content":"    void setService(Service target, Service editedService);","lastModifiedDate":"2023-03-30"},{"lineNumber":366,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":367,"author":{"gitId":"ginloy"},"content":"    // Sort helper functions","lastModifiedDate":"2023-03-30"},{"lineNumber":368,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":369,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":370,"author":{"gitId":"ginloy"},"content":"     * Updates the comparator used to sort customers","lastModifiedDate":"2023-03-30"},{"lineNumber":371,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":372,"author":{"gitId":"ginloy"},"content":"     * @param cmp Customer comparator","lastModifiedDate":"2023-03-30"},{"lineNumber":373,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":374,"author":{"gitId":"ginloy"},"content":"    void updateCustomerComparator(Comparator\u003c? super Customer\u003e cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":375,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":376,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":377,"author":{"gitId":"ginloy"},"content":"     * Updates the comparator used to sort vehicles","lastModifiedDate":"2023-03-30"},{"lineNumber":378,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":379,"author":{"gitId":"ginloy"},"content":"     * @param cmp Vehicle comparator","lastModifiedDate":"2023-03-30"},{"lineNumber":380,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":381,"author":{"gitId":"ginloy"},"content":"    void updateVehicleComparator(Comparator\u003c? super Vehicle\u003e cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":382,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":383,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":384,"author":{"gitId":"ginloy"},"content":"     * Updates the comparator used to sort services","lastModifiedDate":"2023-03-30"},{"lineNumber":385,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":386,"author":{"gitId":"ginloy"},"content":"     * @param cmp Service comparator","lastModifiedDate":"2023-03-30"},{"lineNumber":387,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":388,"author":{"gitId":"ginloy"},"content":"    void updateServiceComparator(Comparator\u003c? super Service\u003e cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":389,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":391,"author":{"gitId":"ginloy"},"content":"     * Updates the comparator used to sort appointments","lastModifiedDate":"2023-03-30"},{"lineNumber":392,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":393,"author":{"gitId":"ginloy"},"content":"     * @param cmp Appointment comparator","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":395,"author":{"gitId":"ginloy"},"content":"    void updateAppointmentComparator(Comparator\u003c? super Appointment\u003e cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":396,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":397,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"ginloy"},"content":"     * Updates the comparator used to sort technicians","lastModifiedDate":"2023-03-30"},{"lineNumber":399,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":400,"author":{"gitId":"ginloy"},"content":"     * @param cmp Technician comparator","lastModifiedDate":"2023-03-30"},{"lineNumber":401,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":402,"author":{"gitId":"ginloy"},"content":"    void updateTechnicianComparator(Comparator\u003c? super Technician\u003e cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":403,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":404,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":405,"author":{"gitId":"ginloy"},"content":"     * Update mappings","lastModifiedDate":"2023-03-31"},{"lineNumber":406,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":407,"author":{"gitId":"ginloy"},"content":"    void resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kimberlybp":108,"ginloy":171,"9fc70c892":41,"junlee1991":4,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.util.SharedComparatorsUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.AppointmentDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.CustomerVehicleMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.ServiceDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.TechnicianDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.VehicleDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"    private final FilteredList\u003cCustomer\u003e filteredCustomers;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    private final SortedList\u003cCustomer\u003e sortedFilteredCustomers;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"    private final FilteredList\u003cTechnician\u003e filteredTechnicians;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    private final SortedList\u003cTechnician\u003e sortedFilteredTechnicians;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"    private final FilteredList\u003cService\u003e filteredServices;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    private final SortedList\u003cService\u003e sortedFilteredServices;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"    private final FilteredList\u003cVehicle\u003e filteredVehicles;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    private final SortedList\u003cVehicle\u003e sortedFilteredVehicles;","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"    private final SortedList\u003cAppointment\u003e sortedFilteredAppointments;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    private final PartMap partMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    private final Shop shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"    private Customer selectedCustomer;","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    private Vehicle selectedVehicle;","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    private Service selectedService;","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"    private Appointment selectedAppointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"    private Technician selectedTechnician;","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"    // Mapped","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    private final CustomerVehicleMap customerVehicleMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    private final VehicleDataMap vehicleDataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    private final ServiceDataMap serviceDataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    private final AppointmentDataMap appointmentDataMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"    private final TechnicianDataMap technicianDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyShop shop) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"        this.shop \u003d new Shop(shop);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"        filteredCustomers \u003d new FilteredList\u003c\u003e(this.shop.getCustomerList());","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredCustomers \u003d new SortedList\u003c\u003e(this.filteredCustomers);","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"        filteredTechnicians \u003d new FilteredList\u003c\u003e(this.shop.getTechnicianList());","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredTechnicians \u003d new SortedList\u003c\u003e(this.filteredTechnicians);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"9fc70c892"},"content":"        filteredServices \u003d new FilteredList\u003c\u003e(this.shop.getServiceList());","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredServices \u003d new SortedList\u003c\u003e(this.filteredServices);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"9fc70c892"},"content":"        filteredVehicles \u003d new FilteredList\u003c\u003e(this.shop.getVehicleList());","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredVehicles \u003d new SortedList\u003c\u003e(this.filteredVehicles);","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.shop.getAppointmentList());","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredAppointments \u003d new SortedList\u003c\u003e(this.filteredAppointments);","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"        // default sort for appointments","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        this.sortedFilteredAppointments.setComparator(SharedComparatorsUtil.getDefaultAppointmentSort());","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"9fc70c892"},"content":"        partMap \u003d this.shop.getPartMap();","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"9fc70c892"},"content":"        //        filteredParts \u003d new FilteredList\u003c\u003e(this.shop.getPartList()); // filteredParts","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"        customerVehicleMap \u003d new CustomerVehicleMap(this.shop.getCustomerList(), this.shop.getVehicleList(),","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getAppointmentList());","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"        vehicleDataMap \u003d new VehicleDataMap(this.shop.getVehicleList(), this.shop.getCustomerList(),","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getServiceList());","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        serviceDataMap \u003d new ServiceDataMap(this.shop.getServiceList(), this.shop.getTechnicianList(),","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getVehicleList());","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"        appointmentDataMap \u003d new AppointmentDataMap(this.shop.getAppointmentList(), this.shop.getTechnicianList(),","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getCustomerList());","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        technicianDataMap \u003d new TechnicianDataMap(this.shop.getTechnicianList(), this.shop.getServiceList(),","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getAppointmentList());","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"        if (filteredCustomers.size() \u003e 0) {","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"            selectedCustomer \u003d filteredCustomers.get(0);","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"        if (filteredVehicles.size() \u003e 0) {","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"            selectedVehicle \u003d filteredVehicles.get(0);","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"        if (filteredServices.size() \u003e 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"            selectedService \u003d filteredServices.get(0);","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"        if (filteredAppointments.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"            selectedAppointment \u003d sortedFilteredAppointments.get(0);","lastModifiedDate":"2023-03-31"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"        if (filteredTechnicians.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"            selectedTechnician \u003d filteredTechnicians.get(0);","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"        this(new AddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"    public void resetMaps() {","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"        this.customerVehicleMap.reset(this.shop.getCustomerList(), this.shop.getVehicleList(),","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getAppointmentList());","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"        this.vehicleDataMap.reset(this.shop.getVehicleList(), this.shop.getCustomerList(),","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getServiceList());","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"        this.serviceDataMap.reset(this.shop.getServiceList(), this.shop.getTechnicianList(),","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getVehicleList());","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"        this.appointmentDataMap.reset(this.shop.getAppointmentList(), this.shop.getTechnicianList(),","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getCustomerList());;","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"        this.technicianDataMap.reset(this.shop.getTechnicianList(), this.shop.getServiceList(),","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"                this.shop.getAppointmentList());","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"kimberlybp"},"content":"    public Path getShopFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"kimberlybp"},"content":"        return userPrefs.getShopFilePath();","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"kimberlybp"},"content":"    public void setShopFilePath(Path shopFilePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(shopFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"kimberlybp"},"content":"        userPrefs.setShopFilePath(shopFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"junlee1991"},"content":"    public void setShop(ReadOnlyShop shop) {","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"junlee1991"},"content":"        this.shop.resetData(shop);","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"kimberlybp"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":208,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":209,"author":{"gitId":"kimberlybp"},"content":"    public ReadOnlyShop getShop() {","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"kimberlybp"},"content":"        return shop;","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":213,"author":{"gitId":"9fc70c892"},"content":"    // \u003d\u003d\u003d\u003d For persons \u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":236,"author":{"gitId":"9fc70c892"},"content":"    // \u003d\u003d\u003d\u003d For Customers \u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":238,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"ginloy"},"content":"     * Adds customer to the shop","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"ginloy"},"content":"     * @param customer Customer to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"ginloy"},"content":"    public void addCustomer(Customer customer) {","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"ginloy"},"content":"        this.shop.addCustomer(customer);","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-18"},{"lineNumber":247,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-18"},{"lineNumber":248,"author":{"gitId":"kimberlybp"},"content":"        //#todo fix 44 allow shops","lastModifiedDate":"2023-03-18"},{"lineNumber":249,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"ginloy"},"content":"     * Checks whether Shop already has customer","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"ginloy"},"content":"     * @param customerId Customer ID to be checked","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"ginloy"},"content":"    public boolean hasCustomer(int customerId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"ginloy"},"content":"        return this.shop.hasCustomer(customerId);","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":262,"author":{"gitId":"9fc70c892"},"content":"    public void deleteCustomer(Customer target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":263,"author":{"gitId":"9fc70c892"},"content":"        this.shop.removeCustomer(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":264,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":266,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredVehicleList(PREDICATE_SHOW_ALL_VEHICLES);","lastModifiedDate":"2023-03-31"},{"lineNumber":268,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":269,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":270,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":271,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":272,"author":{"gitId":"9fc70c892"},"content":"    public void setCustomer(Customer target, Customer editedPerson) {","lastModifiedDate":"2023-03-17"},{"lineNumber":273,"author":{"gitId":"9fc70c892"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-03-17"},{"lineNumber":274,"author":{"gitId":"9fc70c892"},"content":"        this.shop.setCustomer(target, editedPerson);","lastModifiedDate":"2023-03-17"},{"lineNumber":275,"author":{"gitId":"ginloy"},"content":"        resetMaps();","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":277,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":278,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":279,"author":{"gitId":"9fc70c892"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":280,"author":{"gitId":"ginloy"},"content":"        return this.sortedFilteredCustomers;","lastModifiedDate":"2023-03-30"},{"lineNumber":281,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":282,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":283,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":284,"author":{"gitId":"ginloy"},"content":"    public void updateFilteredCustomerList(Predicate\u003c? super Customer\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":285,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":286,"author":{"gitId":"9fc70c892"},"content":"        filteredCustomers.setPredicate(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":287,"author":{"gitId":"kimberlybp"},"content":"        if (filteredCustomers.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":288,"author":{"gitId":"kimberlybp"},"content":"            selectCustomer(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedCustomer \u003d\u003d null \u0026\u0026 filteredCustomers.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":290,"author":{"gitId":"kimberlybp"},"content":"            selectCustomer(filteredCustomers.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":291,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedCustomer !\u003d null \u0026\u0026 filteredCustomers.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":292,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedCustomer::isSameCustomer)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":293,"author":{"gitId":"kimberlybp"},"content":"            selectCustomer(filteredCustomers.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":294,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":295,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":296,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":297,"author":{"gitId":"9fc70c892"},"content":"    // \u003d\u003d\u003d\u003d For Vehicles \u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":298,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":299,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":300,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cVehicle\u003e getFilteredVehicleList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":301,"author":{"gitId":"ginloy"},"content":"        return this.sortedFilteredVehicles;","lastModifiedDate":"2023-03-30"},{"lineNumber":302,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":303,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":304,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":305,"author":{"gitId":"ginloy"},"content":"     * Adds vehicle to the shop","lastModifiedDate":"2023-03-14"},{"lineNumber":306,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":307,"author":{"gitId":"ginloy"},"content":"     * @param vehicle Vehicle to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":308,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":309,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":310,"author":{"gitId":"ginloy"},"content":"    public void addVehicle(int customerId, Vehicle vehicle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":311,"author":{"gitId":"ginloy"},"content":"        this.shop.addVehicle(customerId, vehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":312,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-18"},{"lineNumber":313,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredVehicleList(PREDICATE_SHOW_ALL_VEHICLES);","lastModifiedDate":"2023-03-18"},{"lineNumber":314,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-26"},{"lineNumber":315,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":316,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":317,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":318,"author":{"gitId":"ginloy"},"content":"     * Checks if shop already has vehicle","lastModifiedDate":"2023-03-14"},{"lineNumber":319,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":320,"author":{"gitId":"ginloy"},"content":"     * @param vehicleId Vehicle ID to check against","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":322,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":323,"author":{"gitId":"ginloy"},"content":"    public boolean hasVehicle(int vehicleId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":324,"author":{"gitId":"ginloy"},"content":"        return this.shop.hasVehicle(vehicleId);","lastModifiedDate":"2023-03-14"},{"lineNumber":325,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":326,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":327,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":328,"author":{"gitId":"9fc70c892"},"content":"    public void deleteVehicle(Vehicle target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":329,"author":{"gitId":"9fc70c892"},"content":"        this.shop.removeVehicle(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":330,"author":{"gitId":"kimberlybp"},"content":"        Customer targetOwner \u003d vehicleDataMap.getVehicleCustomer(target);","lastModifiedDate":"2023-03-31"},{"lineNumber":331,"author":{"gitId":"kimberlybp"},"content":"        targetOwner.removeVehicle(target);","lastModifiedDate":"2023-03-31"},{"lineNumber":332,"author":{"gitId":"kimberlybp"},"content":"        this.shop.setCustomer(vehicleDataMap.getVehicleCustomer(target), targetOwner);","lastModifiedDate":"2023-03-31"},{"lineNumber":333,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":334,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredVehicleList(PREDICATE_SHOW_ALL_VEHICLES);","lastModifiedDate":"2023-03-31"},{"lineNumber":335,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":336,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":337,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":338,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":339,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"9fc70c892"},"content":"    public void setVehicle(Vehicle target, Vehicle editedVehicle) {","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"9fc70c892"},"content":"        requireAllNonNull(target, editedVehicle);","lastModifiedDate":"2023-03-24"},{"lineNumber":342,"author":{"gitId":"9fc70c892"},"content":"        this.shop.setVehicle(target, editedVehicle);","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"ginloy"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":344,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":345,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":346,"author":{"gitId":"kimberlybp"},"content":"    // \u003d\u003d\u003d\u003d For Services \u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":347,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":349,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cService\u003e getFilteredServiceList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":350,"author":{"gitId":"ginloy"},"content":"        return this.sortedFilteredServices;","lastModifiedDate":"2023-03-30"},{"lineNumber":351,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":352,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":353,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":354,"author":{"gitId":"ginloy"},"content":"     * Adds service","lastModifiedDate":"2023-03-14"},{"lineNumber":355,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":356,"author":{"gitId":"ginloy"},"content":"     * @param service Service to add","lastModifiedDate":"2023-03-14"},{"lineNumber":357,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":358,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":359,"author":{"gitId":"ginloy"},"content":"    public void addService(int vehicleId, Service service) {","lastModifiedDate":"2023-03-14"},{"lineNumber":360,"author":{"gitId":"ginloy"},"content":"        this.shop.addService(vehicleId, service);","lastModifiedDate":"2023-03-14"},{"lineNumber":361,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-18"},{"lineNumber":362,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-18"},{"lineNumber":363,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":364,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":365,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":366,"author":{"gitId":"ginloy"},"content":"     * @param serviceId ID of service","lastModifiedDate":"2023-03-14"},{"lineNumber":367,"author":{"gitId":"ginloy"},"content":"     * @return Whether service already in the system","lastModifiedDate":"2023-03-14"},{"lineNumber":368,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":369,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":370,"author":{"gitId":"ginloy"},"content":"    public boolean hasService(int serviceId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":371,"author":{"gitId":"ginloy"},"content":"        return this.shop.hasService(serviceId);","lastModifiedDate":"2023-03-14"},{"lineNumber":372,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":373,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":374,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":375,"author":{"gitId":"9fc70c892"},"content":"    public void deleteService(Service service) {","lastModifiedDate":"2023-03-17"},{"lineNumber":376,"author":{"gitId":"9fc70c892"},"content":"        this.shop.removeService(service);","lastModifiedDate":"2023-03-17"},{"lineNumber":377,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":378,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":379,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredVehicleList(PREDICATE_SHOW_ALL_VEHICLES);","lastModifiedDate":"2023-03-31"},{"lineNumber":380,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":381,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":382,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":383,"author":{"gitId":"9fc70c892"},"content":"    // \u003d\u003d\u003d\u003d For Appointment \u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":384,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":385,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":386,"author":{"gitId":"ginloy"},"content":"     * Adds appointment","lastModifiedDate":"2023-03-14"},{"lineNumber":387,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":388,"author":{"gitId":"ginloy"},"content":"     * @param appointment Appointment to add","lastModifiedDate":"2023-03-14"},{"lineNumber":389,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":390,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":391,"author":{"gitId":"ginloy"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-14"},{"lineNumber":392,"author":{"gitId":"ginloy"},"content":"        this.shop.addAppointment(appointment);","lastModifiedDate":"2023-03-14"},{"lineNumber":393,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":394,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":395,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":396,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":397,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":398,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":399,"author":{"gitId":"ginloy"},"content":"    public boolean hasAppointment(int appointmentId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":400,"author":{"gitId":"ginloy"},"content":"        return this.shop.hasAppointment(appointmentId);","lastModifiedDate":"2023-03-30"},{"lineNumber":401,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":402,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":403,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":404,"author":{"gitId":"9fc70c892"},"content":"    public void deleteAppointment(Appointment target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":405,"author":{"gitId":"9fc70c892"},"content":"        this.shop.removeAppointment(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":406,"author":{"gitId":"kimberlybp"},"content":"        Customer targetOwner \u003d appointmentDataMap.getAppointmentCustomer(target);","lastModifiedDate":"2023-03-31"},{"lineNumber":407,"author":{"gitId":"kimberlybp"},"content":"        targetOwner.removeAppointment(target);","lastModifiedDate":"2023-03-31"},{"lineNumber":408,"author":{"gitId":"kimberlybp"},"content":"        this.shop.setCustomer(appointmentDataMap.getAppointmentCustomer(target), targetOwner);","lastModifiedDate":"2023-03-31"},{"lineNumber":409,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":410,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":411,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2023-03-31"},{"lineNumber":412,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":413,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":414,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":415,"author":{"gitId":"9fc70c892"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":416,"author":{"gitId":"ginloy"},"content":"        return this.sortedFilteredAppointments;","lastModifiedDate":"2023-03-30"},{"lineNumber":417,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":418,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":419,"author":{"gitId":"9fc70c892"},"content":"    // \u003d\u003d\u003d\u003d For Part \u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":420,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":421,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":422,"author":{"gitId":"ginloy"},"content":"     * Adds part","lastModifiedDate":"2023-03-14"},{"lineNumber":423,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":424,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Name of the part to add","lastModifiedDate":"2023-03-16"},{"lineNumber":425,"author":{"gitId":"kimberlybp"},"content":"     * @param quantity Quantity of the part to add","lastModifiedDate":"2023-03-16"},{"lineNumber":426,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":427,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":428,"author":{"gitId":"kimberlybp"},"content":"    public void addPart(String partName, int quantity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":429,"author":{"gitId":"kimberlybp"},"content":"        this.shop.addPart(partName, quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":430,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":431,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":432,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":433,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-27"},{"lineNumber":434,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":435,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":436,"author":{"gitId":"ginloy"},"content":"    public void addPartToService(int serviceId, String partName, int quantity) throws NoSuchElementException {","lastModifiedDate":"2023-03-27"},{"lineNumber":437,"author":{"gitId":"ginloy"},"content":"        this.shop.addPartToService(serviceId, partName, quantity);","lastModifiedDate":"2023-03-27"},{"lineNumber":438,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":439,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":440,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":441,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":442,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":443,"author":{"gitId":"ginloy"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-27"},{"lineNumber":444,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":445,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":446,"author":{"gitId":"ginloy"},"content":"    public void addTechnicianToService(int serviceId, int techId) throws NoSuchElementException {","lastModifiedDate":"2023-03-27"},{"lineNumber":447,"author":{"gitId":"ginloy"},"content":"        this.shop.addTechnicianToService(serviceId, techId);","lastModifiedDate":"2023-03-27"},{"lineNumber":448,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":449,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":450,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":451,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":452,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":453,"author":{"gitId":"ginloy"},"content":"    public void addTechnicianToAppointment(int techId, int appointmentId) throws NoSuchElementException {","lastModifiedDate":"2023-03-30"},{"lineNumber":454,"author":{"gitId":"ginloy"},"content":"        this.shop.addTechnicianToAppointment(techId, appointmentId);","lastModifiedDate":"2023-03-30"},{"lineNumber":455,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":456,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":457,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":458,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":459,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":460,"author":{"gitId":"ginloy"},"content":"     * Checks if part already exists","lastModifiedDate":"2023-03-14"},{"lineNumber":461,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":462,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Name of part to check","lastModifiedDate":"2023-03-16"},{"lineNumber":463,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":464,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":465,"author":{"gitId":"kimberlybp"},"content":"    public boolean hasPart(String partName) {","lastModifiedDate":"2023-03-16"},{"lineNumber":466,"author":{"gitId":"kimberlybp"},"content":"        return this.shop.hasPart(partName);","lastModifiedDate":"2023-03-16"},{"lineNumber":467,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":468,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":469,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":470,"author":{"gitId":"9fc70c892"},"content":"    public ObservableList\u003cTechnician\u003e getFilteredTechnicianList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":471,"author":{"gitId":"ginloy"},"content":"        return this.sortedFilteredTechnicians;","lastModifiedDate":"2023-03-30"},{"lineNumber":472,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":473,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":474,"author":{"gitId":"9fc70c892"},"content":"    // \u003d\u003d\u003d\u003d For Technician \u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":475,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":476,"author":{"gitId":"ginloy"},"content":"    public void addTechnician(Technician technician) {","lastModifiedDate":"2023-03-17"},{"lineNumber":477,"author":{"gitId":"ginloy"},"content":"        this.shop.addTechnician(technician);","lastModifiedDate":"2023-03-17"},{"lineNumber":478,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":479,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":480,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":481,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":482,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":483,"author":{"gitId":"ginloy"},"content":"    public boolean hasTechnician(int technicianId) {","lastModifiedDate":"2023-03-17"},{"lineNumber":484,"author":{"gitId":"ginloy"},"content":"        return this.shop.hasTechnician(technicianId);","lastModifiedDate":"2023-03-17"},{"lineNumber":485,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":486,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":487,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":488,"author":{"gitId":"9fc70c892"},"content":"    public void deleteTechnician(Technician target) {","lastModifiedDate":"2023-03-18"},{"lineNumber":489,"author":{"gitId":"9fc70c892"},"content":"        this.shop.removeTechnician(target);","lastModifiedDate":"2023-03-18"},{"lineNumber":490,"author":{"gitId":"kimberlybp"},"content":"        resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":491,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredServiceList(PREDICATE_SHOW_ALL_SERVICES);","lastModifiedDate":"2023-03-31"},{"lineNumber":492,"author":{"gitId":"kimberlybp"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":493,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":494,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":495,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":496,"author":{"gitId":"9fc70c892"},"content":"    public void setTechnician(Technician target, Technician editedPerson) {","lastModifiedDate":"2023-03-30"},{"lineNumber":497,"author":{"gitId":"9fc70c892"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":498,"author":{"gitId":"9fc70c892"},"content":"        shop.setTechnician(target, editedPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":499,"author":{"gitId":"ginloy"},"content":"        this.resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":500,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":501,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":502,"author":{"gitId":"kimberlybp"},"content":"    // \u003d\u003d\u003d\u003d Mapped \u003d\u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":503,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":504,"author":{"gitId":"kimberlybp"},"content":"    public CustomerVehicleMap getCustomerVehicleMap() {","lastModifiedDate":"2023-03-17"},{"lineNumber":505,"author":{"gitId":"kimberlybp"},"content":"        return this.customerVehicleMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":506,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":507,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":508,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":509,"author":{"gitId":"kimberlybp"},"content":"    public VehicleDataMap getVehicleDataMap() {","lastModifiedDate":"2023-03-18"},{"lineNumber":510,"author":{"gitId":"kimberlybp"},"content":"        return this.vehicleDataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":511,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":512,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":513,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":514,"author":{"gitId":"kimberlybp"},"content":"    public ServiceDataMap getServiceDataMap() {","lastModifiedDate":"2023-03-18"},{"lineNumber":515,"author":{"gitId":"kimberlybp"},"content":"        return this.serviceDataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":516,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":517,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":518,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":519,"author":{"gitId":"kimberlybp"},"content":"    public AppointmentDataMap getAppointmentDataMap() {","lastModifiedDate":"2023-03-30"},{"lineNumber":520,"author":{"gitId":"kimberlybp"},"content":"        return this.appointmentDataMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":521,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":522,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":523,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":524,"author":{"gitId":"kimberlybp"},"content":"    public TechnicianDataMap getTechnicianDataMap() {","lastModifiedDate":"2023-03-31"},{"lineNumber":525,"author":{"gitId":"kimberlybp"},"content":"        return this.technicianDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":526,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":527,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":528,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":532,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":533,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":534,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":541,"author":{"gitId":"9fc70c892"},"content":"    public PartMap getPartMap() {","lastModifiedDate":"2023-03-18"},{"lineNumber":542,"author":{"gitId":"9fc70c892"},"content":"        return partMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":543,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":544,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":552,"author":{"gitId":"ginloy"},"content":"    public void updateFilteredTechnicianList(Predicate\u003c? super Technician\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":554,"author":{"gitId":"9fc70c892"},"content":"        filteredTechnicians.setPredicate(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":555,"author":{"gitId":"kimberlybp"},"content":"        if (filteredTechnicians.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":556,"author":{"gitId":"kimberlybp"},"content":"            selectTechnician(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":557,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedTechnician \u003d\u003d null \u0026\u0026 filteredTechnicians.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":558,"author":{"gitId":"kimberlybp"},"content":"            selectTechnician(filteredTechnicians.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":559,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedTechnician !\u003d null \u0026\u0026 filteredTechnicians.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":560,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedTechnician::isSameStaff)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":561,"author":{"gitId":"kimberlybp"},"content":"            selectTechnician(filteredTechnicians.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":562,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":565,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":566,"author":{"gitId":"ginloy"},"content":"    public void updateFilteredServiceList(Predicate\u003c? super Service\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":567,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":568,"author":{"gitId":"9fc70c892"},"content":"        filteredServices.setPredicate(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":569,"author":{"gitId":"kimberlybp"},"content":"        if (filteredServices.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":570,"author":{"gitId":"kimberlybp"},"content":"            selectService(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":571,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedService \u003d\u003d null \u0026\u0026 filteredServices.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":572,"author":{"gitId":"kimberlybp"},"content":"            selectService(filteredServices.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":573,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedService !\u003d null \u0026\u0026 filteredServices.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":574,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedService::isSameService)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":575,"author":{"gitId":"kimberlybp"},"content":"            selectService(filteredServices.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":576,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":577,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":578,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":579,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":580,"author":{"gitId":"ginloy"},"content":"    public void updateFilteredAppointmentList(Predicate\u003c? super Appointment\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":581,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":582,"author":{"gitId":"kimberlybp"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":583,"author":{"gitId":"kimberlybp"},"content":"        if (filteredAppointments.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":584,"author":{"gitId":"kimberlybp"},"content":"            selectAppointment(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":585,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedAppointment \u003d\u003d null \u0026\u0026 filteredAppointments.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":586,"author":{"gitId":"kimberlybp"},"content":"            selectAppointment(filteredAppointments.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":587,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedAppointment !\u003d null \u0026\u0026 filteredAppointments.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":588,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedAppointment::isSameAppointment)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":589,"author":{"gitId":"kimberlybp"},"content":"            selectAppointment(filteredAppointments.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":590,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":591,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":592,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":593,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":594,"author":{"gitId":"ginloy"},"content":"    public void updateFilteredVehicleList(Predicate\u003c? super Vehicle\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":595,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":596,"author":{"gitId":"9fc70c892"},"content":"        filteredVehicles.setPredicate(predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":597,"author":{"gitId":"kimberlybp"},"content":"        if (filteredVehicles.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":598,"author":{"gitId":"kimberlybp"},"content":"            selectVehicle(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":599,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedVehicle \u003d\u003d null \u0026\u0026 filteredVehicles.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":600,"author":{"gitId":"kimberlybp"},"content":"            selectVehicle(filteredVehicles.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":601,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedVehicle !\u003d null \u0026\u0026 filteredVehicles.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":602,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedVehicle::isSameVehicle)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":603,"author":{"gitId":"kimberlybp"},"content":"            selectVehicle(filteredVehicles.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":604,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":605,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":606,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":607,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":608,"author":{"gitId":"9fc70c892"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-03-30"},{"lineNumber":609,"author":{"gitId":"9fc70c892"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2023-03-30"},{"lineNumber":610,"author":{"gitId":"9fc70c892"},"content":"        this.shop.setAppointment(target, editedAppointment);","lastModifiedDate":"2023-03-30"},{"lineNumber":611,"author":{"gitId":"ginloy"},"content":"        this.resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":612,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":613,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":614,"author":{"gitId":"9fc70c892"},"content":"    //    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":615,"author":{"gitId":"ginloy"},"content":"    //    public void updateFilteredPartList(Predicate\u003c? super Part\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":616,"author":{"gitId":"9fc70c892"},"content":"    //        requireNonNull(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":617,"author":{"gitId":"9fc70c892"},"content":"    //        filteredParts.setPredicate(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":618,"author":{"gitId":"9fc70c892"},"content":"    //    }","lastModifiedDate":"2023-03-16"},{"lineNumber":619,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":620,"author":{"gitId":"9fc70c892"},"content":"    //    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":621,"author":{"gitId":"ginloy"},"content":"    //    public void updateFilteredAppointmentList(Predicate\u003c? super Appointment\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":622,"author":{"gitId":"9fc70c892"},"content":"    //        requireNonNull(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":623,"author":{"gitId":"ginloy"},"content":"    //        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":624,"author":{"gitId":"9fc70c892"},"content":"    //    }","lastModifiedDate":"2023-03-16"},{"lineNumber":625,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":626,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":627,"author":{"gitId":"9fc70c892"},"content":"    public void updatePartsMap() {","lastModifiedDate":"2023-03-17"},{"lineNumber":628,"author":{"gitId":"9fc70c892"},"content":"        //todo: GUI stuff for printing!","lastModifiedDate":"2023-03-17"},{"lineNumber":629,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":630,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":635,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":636,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":640,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":645,"author":{"gitId":"junlee1991"},"content":"        return userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-04-02"},{"lineNumber":646,"author":{"gitId":"junlee1991"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2023-04-02"},{"lineNumber":647,"author":{"gitId":"junlee1991"},"content":"                \u0026\u0026 shop.equals(other.shop)","lastModifiedDate":"2023-04-02"},{"lineNumber":648,"author":{"gitId":"junlee1991"},"content":"                \u0026\u0026 filteredCustomers.equals(other.filteredCustomers);","lastModifiedDate":"2023-04-02"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":651,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":652,"author":{"gitId":"kimberlybp"},"content":"    public void selectCustomer(Customer customer) {","lastModifiedDate":"2023-03-26"},{"lineNumber":653,"author":{"gitId":"kimberlybp"},"content":"        selectedCustomer \u003d customer;","lastModifiedDate":"2023-03-26"},{"lineNumber":654,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":655,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":656,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":657,"author":{"gitId":"kimberlybp"},"content":"    public Customer getSelectedCustomer() {","lastModifiedDate":"2023-03-26"},{"lineNumber":658,"author":{"gitId":"kimberlybp"},"content":"        return selectedCustomer;","lastModifiedDate":"2023-03-26"},{"lineNumber":659,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":660,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":661,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":662,"author":{"gitId":"kimberlybp"},"content":"    public void selectVehicle(Vehicle vehicle) {","lastModifiedDate":"2023-03-26"},{"lineNumber":663,"author":{"gitId":"kimberlybp"},"content":"        selectedVehicle \u003d vehicle;","lastModifiedDate":"2023-03-26"},{"lineNumber":664,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":665,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":666,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":667,"author":{"gitId":"kimberlybp"},"content":"    public Vehicle getSelectedVehicle() {","lastModifiedDate":"2023-03-26"},{"lineNumber":668,"author":{"gitId":"kimberlybp"},"content":"        return selectedVehicle;","lastModifiedDate":"2023-03-26"},{"lineNumber":669,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":670,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":671,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":672,"author":{"gitId":"kimberlybp"},"content":"    public void selectService(Service service) {","lastModifiedDate":"2023-03-27"},{"lineNumber":673,"author":{"gitId":"kimberlybp"},"content":"        selectedService \u003d service;","lastModifiedDate":"2023-03-27"},{"lineNumber":674,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":675,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":676,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":677,"author":{"gitId":"kimberlybp"},"content":"    public Service getSelectedService() {","lastModifiedDate":"2023-03-27"},{"lineNumber":678,"author":{"gitId":"kimberlybp"},"content":"        return selectedService;","lastModifiedDate":"2023-03-27"},{"lineNumber":679,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":680,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":681,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":682,"author":{"gitId":"kimberlybp"},"content":"    public void selectAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-31"},{"lineNumber":683,"author":{"gitId":"kimberlybp"},"content":"        selectedAppointment \u003d appointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":686,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":687,"author":{"gitId":"kimberlybp"},"content":"    public Appointment getSelectedAppointment() {","lastModifiedDate":"2023-03-31"},{"lineNumber":688,"author":{"gitId":"kimberlybp"},"content":"        return selectedAppointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":689,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":690,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":691,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":692,"author":{"gitId":"kimberlybp"},"content":"    public void selectTechnician(Technician technician) {","lastModifiedDate":"2023-03-31"},{"lineNumber":693,"author":{"gitId":"kimberlybp"},"content":"        selectedTechnician \u003d technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":694,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":695,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":696,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":697,"author":{"gitId":"kimberlybp"},"content":"    public Technician getSelectedTechnician() {","lastModifiedDate":"2023-03-31"},{"lineNumber":698,"author":{"gitId":"kimberlybp"},"content":"        return selectedTechnician;","lastModifiedDate":"2023-03-31"},{"lineNumber":699,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":700,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":701,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":702,"author":{"gitId":"9fc70c892"},"content":"    public void setService(Service target, Service editedService) {","lastModifiedDate":"2023-03-30"},{"lineNumber":703,"author":{"gitId":"9fc70c892"},"content":"        requireAllNonNull(target, editedService);","lastModifiedDate":"2023-03-30"},{"lineNumber":704,"author":{"gitId":"9fc70c892"},"content":"        this.shop.setService(target, editedService);","lastModifiedDate":"2023-03-30"},{"lineNumber":705,"author":{"gitId":"ginloy"},"content":"        this.resetMaps();","lastModifiedDate":"2023-03-31"},{"lineNumber":706,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":707,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":708,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":709,"author":{"gitId":"ginloy"},"content":"    public void updateCustomerComparator(Comparator\u003c? super Customer\u003e cmp) {","lastModifiedDate":"2023-03-30"},{"lineNumber":710,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredCustomers.setComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":711,"author":{"gitId":"kimberlybp"},"content":"        if (sortedFilteredCustomers.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":712,"author":{"gitId":"kimberlybp"},"content":"            selectCustomer(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":713,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedCustomer \u003d\u003d null \u0026\u0026 sortedFilteredCustomers.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":714,"author":{"gitId":"kimberlybp"},"content":"            selectCustomer(sortedFilteredCustomers.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":715,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedCustomer !\u003d null \u0026\u0026 sortedFilteredCustomers.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":716,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedCustomer::isSameCustomer)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":717,"author":{"gitId":"kimberlybp"},"content":"            selectCustomer(sortedFilteredCustomers.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":718,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":719,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":720,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":721,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":722,"author":{"gitId":"ginloy"},"content":"    public void updateVehicleComparator(Comparator\u003c? super Vehicle\u003e cmp) {","lastModifiedDate":"2023-03-30"},{"lineNumber":723,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredVehicles.setComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":724,"author":{"gitId":"kimberlybp"},"content":"        if (sortedFilteredVehicles.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":725,"author":{"gitId":"kimberlybp"},"content":"            selectVehicle(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":726,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedVehicle \u003d\u003d null \u0026\u0026 sortedFilteredVehicles.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":727,"author":{"gitId":"kimberlybp"},"content":"            selectVehicle(sortedFilteredVehicles.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":728,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedVehicle !\u003d null \u0026\u0026 sortedFilteredVehicles.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":729,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedVehicle::isSameVehicle)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":730,"author":{"gitId":"kimberlybp"},"content":"            selectVehicle(sortedFilteredVehicles.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":731,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":732,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":733,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":734,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":735,"author":{"gitId":"ginloy"},"content":"    public void updateServiceComparator(Comparator\u003c? super Service\u003e cmp) {","lastModifiedDate":"2023-03-30"},{"lineNumber":736,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredServices.setComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":737,"author":{"gitId":"kimberlybp"},"content":"        if (sortedFilteredServices.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":738,"author":{"gitId":"kimberlybp"},"content":"            selectService(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":739,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedService \u003d\u003d null \u0026\u0026 sortedFilteredServices.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":740,"author":{"gitId":"kimberlybp"},"content":"            selectService(sortedFilteredServices.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":741,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedService !\u003d null \u0026\u0026 sortedFilteredServices.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":742,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedService::isSameService)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":743,"author":{"gitId":"kimberlybp"},"content":"            selectService(sortedFilteredServices.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":744,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":745,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":746,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":747,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":748,"author":{"gitId":"ginloy"},"content":"    public void updateAppointmentComparator(Comparator\u003c? super Appointment\u003e cmp) {","lastModifiedDate":"2023-03-30"},{"lineNumber":749,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredAppointments.setComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":750,"author":{"gitId":"kimberlybp"},"content":"        if (sortedFilteredAppointments.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":751,"author":{"gitId":"kimberlybp"},"content":"            selectAppointment(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":752,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedAppointment \u003d\u003d null \u0026\u0026 sortedFilteredAppointments.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":753,"author":{"gitId":"kimberlybp"},"content":"            selectAppointment(sortedFilteredAppointments.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":754,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedAppointment !\u003d null \u0026\u0026 sortedFilteredAppointments.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":755,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedAppointment::isSameAppointment)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":756,"author":{"gitId":"kimberlybp"},"content":"            selectAppointment(sortedFilteredAppointments.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":757,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":758,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":759,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":760,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":761,"author":{"gitId":"ginloy"},"content":"    public void updateTechnicianComparator(Comparator\u003c? super Technician\u003e cmp) {","lastModifiedDate":"2023-03-30"},{"lineNumber":762,"author":{"gitId":"ginloy"},"content":"        this.sortedFilteredTechnicians.setComparator(cmp);","lastModifiedDate":"2023-03-30"},{"lineNumber":763,"author":{"gitId":"kimberlybp"},"content":"        if (sortedFilteredTechnicians.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":764,"author":{"gitId":"kimberlybp"},"content":"            selectTechnician(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":765,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedTechnician \u003d\u003d null \u0026\u0026 sortedFilteredTechnicians.size() \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":766,"author":{"gitId":"kimberlybp"},"content":"            selectTechnician(sortedFilteredTechnicians.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":767,"author":{"gitId":"kimberlybp"},"content":"        } else if (selectedTechnician !\u003d null \u0026\u0026 sortedFilteredTechnicians.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":768,"author":{"gitId":"kimberlybp"},"content":"                .noneMatch(selectedTechnician::isSameStaff)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":769,"author":{"gitId":"kimberlybp"},"content":"            selectTechnician(sortedFilteredTechnicians.get(0));","lastModifiedDate":"2023-03-31"},{"lineNumber":770,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":771,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":772,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kimberlybp":290,"ginloy":193,"9fc70c892":130,"junlee1991":9,"-":150}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"9fc70c892":1,"-":16}},{"path":"src/main/java/seedu/address/model/ReadOnlyShop.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"public interface ReadOnlyShop {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    PartMap getPartMap();","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable view of the customers list.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * This list will not contain any duplicate customers.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cCustomer\u003e getCustomerList();","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable view of the vehicle list.","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     * This list will not contain any duplicate vehicles.","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cVehicle\u003e getVehicleList();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable view of the technicians list.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * This list will not contain any duplicate technicians.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cTechnician\u003e getTechnicianList();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable view of the services list.","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    ObservableList\u003cService\u003e getServiceList();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":38,"9fc70c892":4}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private Path shopFilePath \u003d Paths.get(\"data\" , \"autom8.json\");","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"    public Path getShopFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        return shopFilePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    public void setShopFilePath(Path shopFilePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(shopFilePath);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        this.shopFilePath \u003d shopFilePath;","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kimberlybp":10,"-":87}},{"path":"src/main/java/seedu/address/model/entity/Entity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":" * This class is an abstract class.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":" * This has the same normal english meaning.","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":" * Persons and Shops are subclasses.","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"public abstract class Entity {","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"9fc70c892":9}},{"path":"src/main/java/seedu/address/model/entity/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"9fc70c892":1,"-":56}},{"path":"src/main/java/seedu/address/model/entity/person/Customer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":" * The Customer class represents a Customer.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"public class Customer extends Person {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final int id;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private final Set\u003cInteger\u003e vehicleIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    private final Set\u003cInteger\u003e appointmentIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    public Customer(int id, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    public Customer(int id, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"                    Set\u003cInteger\u003e vehicleIds) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        this.vehicleIds.addAll(vehicleIds);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    public Customer(int id, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                    Set\u003cInteger\u003e vehicleIds, Set\u003cInteger\u003e appointmentIds) {","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        this.vehicleIds.addAll(vehicleIds);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        this.appointmentIds.addAll(appointmentIds);","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"     * This method returns Customer id.","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"     * @return customer id.","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"    public int getId() {","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"        return id;","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"     * This method returns a list of vehicles which the Customer has.","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"     * @return a list of vehicles this customer has.","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    public List\u003cInteger\u003e getVehicleIds() {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        return new ArrayList\u003c\u003e(this.vehicleIds);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"     * This method adds vehicles to the Customer.","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"     * @param vehicle The vehicle to add.","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"    public void addVehicle(Vehicle vehicle) {","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"        this.vehicleIds.add(vehicle.getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     * Adds vehicle ID to customer","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"     * @param vehicleId Vehicle ID","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"    public void addVehicle(int vehicleId) {","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"        this.vehicleIds.add(vehicleId);","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"9fc70c892"},"content":"     * This method removes vehicles from the Customer.","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"9fc70c892"},"content":"     * @param vehicle The vehicle to add.","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"9fc70c892"},"content":"    public void removeVehicle(Vehicle vehicle) {","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"        this.vehicleIds.remove(vehicle.getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"     * This method returns a list of appointments which the Customer has.","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"     * @return a list of appointments this customer has.","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    public List\u003cInteger\u003e getAppointmentIds() {","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        return new ArrayList\u003c\u003e(this.appointmentIds);","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"     * This method adds an appointment tied to the Customer.","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"     * @param appointment The appointment to add.","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        this.appointmentIds.add(appointment.getId());","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"     * This method removes an appointment tied to the Customer.","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"     * @param appointment The appointment to add.","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"    public void removeAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"        this.appointmentIds.remove(appointment.getId());","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if both customers have the same id.","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"    public boolean isSameCustomer(Customer otherCustomer) {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"        if (otherCustomer \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"        return otherCustomer !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 otherCustomer.getId() \u003d\u003d getId();","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"ginloy"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"ginloy"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"ginloy"},"content":"        if (other instanceof Customer) {","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"ginloy"},"content":"            Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"            return this.getId() \u003d\u003d otherCustomer.getId() || super.equals(other);","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"ginloy"},"content":"        return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"ginloy"},"content":"        return Objects.hash(id);","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"ginloy"},"content":"        String temp \u003d super.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"ginloy"},"content":"        return temp + StringUtil.NEWLINE + String.format(\"Vehicles: %s\", this.getVehicleIds());","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":73,"ginloy":36,"9fc70c892":48}},{"path":"src/main/java/seedu/address/model/entity/person/CustomerIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":" * Tests that a {@code Customer}\u0027s id matches given id..","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"public class CustomerIdPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"    public CustomerIdPredicate(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"    public boolean test(Customer person) {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"        return person.getId() \u003d\u003d id;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof CustomerIdPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 id \u003d\u003d ((CustomerIdPredicate) other).id); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"9fc70c892":27}},{"path":"src/main/java/seedu/address/model/entity/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"9fc70c892":1,"-":70}},{"path":"src/main/java/seedu/address/model/entity/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"9fc70c892":1,"-":58}},{"path":"src/main/java/seedu/address/model/entity/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"9fc70c892":1,"-":30}},{"path":"src/main/java/seedu/address/model/entity/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Findable;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"public class Person extends Entity implements Findable {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"                .append(\"; \\nPhone: \")","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"                .append(\"; \\nEmail: \")","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"                .append(\" \\nAddress: \")","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"ginloy"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"ginloy"},"content":"        return this.getName().toString().toLowerCase().contains(keyword)","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"ginloy"},"content":"            || this.getEmail().toString().toLowerCase().contains(keyword)","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"            || this.getPhone().toString().toLowerCase().contains(keyword)","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"ginloy"},"content":"            || this.getAddress().toString().toLowerCase().contains(keyword)","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"ginloy"},"content":"            || this.getTags().stream().anyMatch(s -\u003e s.toString().toLowerCase().contains(keyword));","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kimberlybp":3,"ginloy":10,"9fc70c892":2,"-":118}},{"path":"src/main/java/seedu/address/model/entity/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"9fc70c892":1,"-":52}},{"path":"src/main/java/seedu/address/model/entity/person/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":" * This class represents a staff.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * There may be different types of staff.","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public abstract class Staff extends Person {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    private final int id;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    public Staff(int id, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * This method returns Staff id.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * @return staff id.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    public int getId() {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"        return id;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if both staffs have the same id.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public boolean isSameStaff(Staff otherStaff) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        if (otherStaff \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        return otherStaff !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 otherStaff.getId() \u003d\u003d getId();","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        if (other instanceof Staff) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"            Staff otherStaff \u003d (Staff) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            return this.getId() \u003d\u003d otherStaff.getId() || super.equals(other);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":36,"9fc70c892":17}},{"path":"src/main/java/seedu/address/model/entity/person/Technician.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":" * A technician is a special type of staff, in which they handle the works on the vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"public class Technician extends Staff {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    private final Set\u003cInteger\u003e serviceIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    private final Set\u003cInteger\u003e appointmentIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    public Technician(int id, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        super(id, name, phone, email, address, tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    public Technician(int id, Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"                      Set\u003cTag\u003e tags, Set\u003cInteger\u003e serviceIds, Set\u003cInteger\u003e appointmentIds) {","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        super(id, name, phone, email, address, tags);","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        this.serviceIds.addAll(serviceIds);","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        this.appointmentIds.addAll(appointmentIds);","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * This method returns a list of service ids this technician is assigned to.","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     * @return a list of services this technician is assigned to.","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    public List\u003cInteger\u003e getServiceIds() {","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        return new ArrayList\u003c\u003e(this.serviceIds);","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     * This method returns a list of appointment ids this technician is assigned to.","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * @return a list of appointment this technician is assigned to.","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    public List\u003cInteger\u003e getAppointmentIds() {","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        return new ArrayList\u003c\u003e(this.appointmentIds);","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"            return true;","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        if (obj instanceof Technician) {","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"            Technician other \u003d (Technician) obj;","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"            return this.getId() \u003d\u003d other.getId();","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"        return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"        return Objects.hash(this.getId());","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":36,"ginloy":17,"9fc70c892":15}},{"path":"src/main/java/seedu/address/model/entity/person/TechnicianIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":" * Tests that a {@code Technican}\u0027s id matches given id.","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"public class TechnicianIdPredicate implements Predicate\u003cTechnician\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"    public TechnicianIdPredicate(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"    public boolean test(Technician person) {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"        return person.getId() \u003d\u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof TechnicianIdPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 id \u003d\u003d ((TechnicianIdPredicate) other).id); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"9fc70c892":27}},{"path":"src/main/java/seedu/address/model/entity/person/UniqueCustomerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * A list of customers that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" * A customer is considered unique by comparing using","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" * {@code Customer#isSameCustomer(Customer)}.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" * As such, adding and updating of customers uses","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":" * Customer#isSameCustomer(Customer) for equality","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":" * so as to ensure that the customer being added or updated is unique in","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":" * terms of identity in the","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":" * UniqueCustomerList. However, the removal of a customer uses Customer#equals(Object) so","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":" * that we ensure customers with either exactly the same fields or the same id will be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":" * @see Customer#isSameCustomer(Customer)","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"public class UniqueCustomerList implements Iterable\u003cCustomer\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    private final ObservableList\u003cCustomer\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    private final ObservableList\u003cCustomer\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if the list contains an equivalent customer as the given argument.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    public boolean contains(Customer toCheck) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCustomer);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     * Adds a customer to the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     * The customer must not already exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    public void add(Customer toAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     * The identity of {@code editedCustomer} must not be the same as another existing customer in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        if (!target.isSameCustomer(editedCustomer) \u0026\u0026 contains(editedCustomer)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        internalList.set(index, editedCustomer);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"     * Removes the equivalent customer from the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"     * The customer must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"    public void remove(Customer toRemove) {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"    public void setCustomers(UniqueCustomerList replacement) {","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the contents of this list with {@code customers}.","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        requireAllNonNull(customers);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"        if (!customersAreUnique(customers)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"        internalList.setAll(customers);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cCustomer\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"    public Iterator\u003cCustomer\u003e iterator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"                || (other instanceof UniqueCustomerList // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"                        \u0026\u0026 internalList.equals(((UniqueCustomerList) other).internalList));","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if {@code customers} contains only unique customers.","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"    private boolean customersAreUnique(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c customers.size() - 1; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"            for (int j \u003d i + 1; j \u003c customers.size(); j++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"                if (customers.get(i).isSameCustomer(customers.get(j))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"                    return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":141}},{"path":"src/main/java/seedu/address/model/entity/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"9fc70c892":3,"-":134}},{"path":"src/main/java/seedu/address/model/entity/person/UniqueTechnicianList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.entity.person;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * A list of technicians that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" * A technician is considered unique by comparing using","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" * {@code Technician#isSameTechnician(Customer)}. As such, adding and updating of","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" * technicians uses Technician#isSameStaff(Staff) for equality so as to","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":" * ensure that the technician being added or updated is","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":" * unique in terms of identity in the UniqueTechnicianList. However, the removal of a technician uses","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":" * Staff#equals(Object) so","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":" * that we ensure technicians with the same staff id will be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":" * @see Technician#isSameStaff(Staff)","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"public class UniqueTechnicianList implements Iterable\u003cTechnician\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    private final ObservableList\u003cTechnician\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    private final ObservableList\u003cTechnician\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if the list contains an equivalent Technician as the given argument.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    public boolean contains(Technician toCheck) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStaff);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * Adds a technician to the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     * The technician must not already exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    public void add(Technician toAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the technician {@code target} in the list with {@code editedTechnician}.","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"     * The identity of {@code editedTechnician} must not be the same as another existing technician in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"    public void setTechnician(Technician target, Technician editedTechnician) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        requireAllNonNull(target, editedTechnician);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        if (!target.isSameStaff(editedTechnician) \u0026\u0026 contains(editedTechnician)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        internalList.set(index, editedTechnician);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"     * Removes the equivalent technician from the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"     * The technician must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    public void remove(Technician toRemove) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    public void setTechnicians(UniqueTechnicianList replacement) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the contents of this list with {@code technicians}.","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"     * {@code technicians} must not contain duplicate technicians.","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"    public void setTechnicians(List\u003cTechnician\u003e technicians) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"        requireAllNonNull(technicians);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        if (!techniciansAreUnique(technicians)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        internalList.setAll(technicians);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cTechnician\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"    public Iterator\u003cTechnician\u003e iterator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"                || (other instanceof UniqueTechnicianList // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTechnicianList) other).internalList));","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if {@code technicians} contains only unique technicians.","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"    private boolean techniciansAreUnique(List\u003cTechnician\u003e technicians) {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c technicians.size() - 1; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"            for (int j \u003d i + 1; j \u003c technicians.size(); j++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"                if (technicians.get(i).isSameStaff(technicians.get(j))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"                    return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":140,"9fc70c892":2}},{"path":"src/main/java/seedu/address/model/entity/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person.exceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"9fc70c892":1,"-":10}},{"path":"src/main/java/seedu/address/model/entity/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.person.exceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"9fc70c892":1,"-":5}},{"path":"src/main/java/seedu/address/model/entity/shop/Shop.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.shop;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.UniqueCustomerList;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.UniqueTechnicianList;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.ServiceList;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.UniqueVehicleList;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.appointment.UniqueAppointmentList;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.exception.PartLessThanZeroException;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.exception.PartNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.exception.VehicleNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":" * A Shop is an entity that usually buy sells things.","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"public class Shop implements ReadOnlyShop {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    private final UniqueCustomerList customers \u003d new UniqueCustomerList();","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    private final UniqueVehicleList vehicles \u003d new UniqueVehicleList();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    private final UniqueTechnicianList technicians \u003d new UniqueTechnicianList();","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    private final ServiceList services \u003d new ServiceList();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"    private final UniqueAppointmentList appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    private final PartMap partMap \u003d new PartMap();","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"     * Constructor for class Shop.","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"    public Shop() {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * Creates a Shop using the data in the {@code toBeCopied}","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    public Shop(ReadOnlyShop toBeCopied) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        this();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"    // --------------------------------------------------","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"    //// Service-level operations","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"     * Adds service to the system","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"     * @param service Service to be added to the system","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"     * @throws VehicleNotFoundException If vehicle not in the system","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"    public void addService(Service service) throws VehicleNotFoundException {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        this.addService(service.getVehicleId(), service);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"     * Adds service to a vehicle","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"     * @param vehicleId Id of vehicle","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"     * @param service   Service to be added to vehicle","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"     * @throws VehicleNotFoundException If vehicle not in the system","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"    public void addService(int vehicleId, Service service) throws VehicleNotFoundException {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"        for (var vehicle : this.getVehicleList()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"            if (vehicle.getId() \u003d\u003d vehicleId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"                vehicle.addService(service);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"                this.services.add(service);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"                return;","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"        throw new VehicleNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"9fc70c892"},"content":"     * Checks if service already added","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"     * @param serviceId Service ID to check","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"9fc70c892"},"content":"    public boolean hasService(int serviceId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"9fc70c892"},"content":"        return this.getServiceList()","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"9fc70c892"},"content":"            .stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"9fc70c892"},"content":"            .anyMatch(s -\u003e s.getId() \u003d\u003d serviceId);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"     * Wrapper function to also check if service already added","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"     * but using Service param","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"     * @param service Service to check","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    public boolean hasService(Service service) {","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        return this.hasService(service.getId());","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cService\u003e getServiceList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        return this.services.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the contents of the service list with {@code services}.","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"    public void setServices(List\u003cService\u003e services) {","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"        this.services.setServices(services);","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"    public void setService(Service services, Service edit) {","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"        this.services.setService(services, edit);","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"    public void removeService(Service key) {","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"        services.remove(key);","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"9fc70c892"},"content":"    // --------------------------------------------------","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"9fc70c892"},"content":"    //// Appointment-level operations","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"     * Adds appointment to the appointment list","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"     * @param appointment Appointment to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"    public void addAppointment(Appointment appointment) throws PersonNotFoundException {","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"        for (var customer : customers) {","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"            if (customer.getId() \u003d\u003d appointment.getCustomerId()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"                customer.addAppointment(appointment);","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"9fc70c892"},"content":"                this.appointments.add(appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"                return;","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"        throw new PersonNotFoundException();","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"9fc70c892"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"9fc70c892"},"content":"        return this.appointments.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"9fc70c892"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"9fc70c892"},"content":"        appointments.remove(key);","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":158,"author":{"gitId":"9fc70c892"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"9fc70c892"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"     * Wrapper function to also check if appointment already added","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"kimberlybp"},"content":"     * but using appointment param","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"kimberlybp"},"content":"     * @param appointment Appointment to check","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"kimberlybp"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-26"},{"lineNumber":170,"author":{"gitId":"kimberlybp"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"ginloy"},"content":"     * Checks if appointment in the system","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"     * @param appointmentId ID of appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"    public boolean hasAppointment(int appointmentId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"        return this.getAppointmentList().stream().anyMatch(a -\u003e a.getId() \u003d\u003d appointmentId);","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the contents of the appointment list with {@code appointments}.","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"kimberlybp"},"content":"     * {@code appointments} must not contain appointment customers.","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"kimberlybp"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"kimberlybp"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2023-03-26"},{"lineNumber":188,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":189,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"    // --------------------------------------------------","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"    //// part-level operations","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"ginloy"},"content":"    public PartMap getPartMap() {","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"ginloy"},"content":"        return this.partMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"kimberlybp"},"content":"     * Adds part","lastModifiedDate":"2023-03-16"},{"lineNumber":199,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Name of the part to add","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"kimberlybp"},"content":"     * @param quantity Quantity of the part to add","lastModifiedDate":"2023-03-16"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"kimberlybp"},"content":"    public void addPart(String partName, int quantity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"kimberlybp"},"content":"        this.getPartMap().addPart(partName, quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"ginloy"},"content":"     * Adds part to service","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"ginloy"},"content":"     * @param serviceId ID of service","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"ginloy"},"content":"     * @param partName  Name of part","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"ginloy"},"content":"     * @param quantity  Quantity of part","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"ginloy"},"content":"     * @throws NoSuchElementException    If service not in system","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"ginloy"},"content":"     * @throws PartNotFoundException     If part not registered","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"ginloy"},"content":"     * @throws PartLessThanZeroException If part insufficient","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"ginloy"},"content":"    public void addPartToService(int serviceId, String partName, int quantity)","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"ginloy"},"content":"            throws NoSuchElementException, PartNotFoundException, PartLessThanZeroException {","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"ginloy"},"content":"        Optional\u003cService\u003e serviceOption \u003d this.getServiceList()","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"ginloy"},"content":"            .stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"ginloy"},"content":"            .filter(s -\u003e s.getId() \u003d\u003d serviceId)","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"ginloy"},"content":"            .findFirst();","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"ginloy"},"content":"        Service service \u003d serviceOption.orElseThrow();","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"ginloy"},"content":"        this.getPartMap().decreasePartQuantity(partName, quantity);","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"ginloy"},"content":"        service.addPart(partName, quantity);","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"ginloy"},"content":"     * Assigns existing technician to existing service","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"ginloy"},"content":"     * @param serviceId    ID of service","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"ginloy"},"content":"     * @param technicianId ID of technician","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"ginloy"},"content":"     * @throws NoSuchElementException If service or technician doesn\u0027t exist","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"ginloy"},"content":"    public void addTechnicianToService(int serviceId, int technicianId) throws NoSuchElementException {","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"ginloy"},"content":"        if (!this.hasTechnician(technicianId)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"ginloy"},"content":"            throw new NoSuchElementException();","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"ginloy"},"content":"        Service service \u003d this.getServiceList().stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"ginloy"},"content":"            .filter(s -\u003e s.getId() \u003d\u003d serviceId)","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"ginloy"},"content":"            .findFirst()","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"ginloy"},"content":"            .orElseThrow();","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"ginloy"},"content":"        service.assignTechnician(technicianId);","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"ginloy"},"content":"     * Assigns existing technician to existing appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"ginloy"},"content":"     * @param technicianId ID of technician","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"ginloy"},"content":"     * @param appointmentId ID of appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"ginloy"},"content":"     * @throws NoSuchElementException if technician ID or appointment ID does not exist","lastModifiedDate":"2023-03-30"},{"lineNumber":252,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"ginloy"},"content":"    public void addTechnicianToAppointment(int technicianId, int appointmentId) throws NoSuchElementException {","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"ginloy"},"content":"        if (!this.hasTechnician(technicianId)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":255,"author":{"gitId":"ginloy"},"content":"            throw new NoSuchElementException();","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"ginloy"},"content":"        Appointment appointment \u003d this.getAppointmentList().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"ginloy"},"content":"            .filter(a -\u003e a.getId() \u003d\u003d appointmentId)","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"ginloy"},"content":"            .findFirst()","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"ginloy"},"content":"            .orElseThrow();","lastModifiedDate":"2023-03-30"},{"lineNumber":261,"author":{"gitId":"ginloy"},"content":"        appointment.addTechnician(technicianId);","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"kimberlybp"},"content":"     * Increases part stock by a specified quantity","lastModifiedDate":"2023-03-16"},{"lineNumber":266,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"9fc70c892"},"content":"     * @param partName Name of part","lastModifiedDate":"2023-03-14"},{"lineNumber":268,"author":{"gitId":"kimberlybp"},"content":"     * @param quantity Quanity to increase by","lastModifiedDate":"2023-03-16"},{"lineNumber":269,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"kimberlybp"},"content":"    public void addPartStock(String partName, int quantity) throws PartNotFoundException {","lastModifiedDate":"2023-03-16"},{"lineNumber":271,"author":{"gitId":"kimberlybp"},"content":"        this.partMap.increasePartQuantity(partName, quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":272,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"9fc70c892"},"content":"     * Checks if part already in the system","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Name of part to check","lastModifiedDate":"2023-03-16"},{"lineNumber":278,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":279,"author":{"gitId":"9fc70c892"},"content":"    public boolean hasPart(String partName) {","lastModifiedDate":"2023-03-14"},{"lineNumber":280,"author":{"gitId":"9fc70c892"},"content":"        return this.partMap.contains(partName);","lastModifiedDate":"2023-03-14"},{"lineNumber":281,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":282,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":283,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":284,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the contents of the part map with {@code parts}.","lastModifiedDate":"2023-03-15"},{"lineNumber":285,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":286,"author":{"gitId":"kimberlybp"},"content":"    public void setParts(PartMap parts) {","lastModifiedDate":"2023-03-15"},{"lineNumber":287,"author":{"gitId":"kimberlybp"},"content":"        this.partMap.replace(parts);","lastModifiedDate":"2023-03-26"},{"lineNumber":288,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":289,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":290,"author":{"gitId":"9fc70c892"},"content":"    // --------------------------------------------------","lastModifiedDate":"2023-03-14"},{"lineNumber":291,"author":{"gitId":"9fc70c892"},"content":"    //// customer-level operations","lastModifiedDate":"2023-03-14"},{"lineNumber":292,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":293,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":294,"author":{"gitId":"kimberlybp"},"content":"     * Adds customer to the shop","lastModifiedDate":"2023-03-14"},{"lineNumber":295,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":296,"author":{"gitId":"kimberlybp"},"content":"     * @param customer Customer to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":297,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":298,"author":{"gitId":"kimberlybp"},"content":"    public void addCustomer(Customer customer) {","lastModifiedDate":"2023-03-14"},{"lineNumber":299,"author":{"gitId":"kimberlybp"},"content":"        this.customers.add(customer);","lastModifiedDate":"2023-03-14"},{"lineNumber":300,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":301,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":302,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":303,"author":{"gitId":"kimberlybp"},"content":"     * Adds vehicle to the shop and to customer\u0027s vehicle ids","lastModifiedDate":"2023-03-14"},{"lineNumber":304,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":305,"author":{"gitId":"ginloy"},"content":"     * @param customerId Customer ID to check","lastModifiedDate":"2023-03-14"},{"lineNumber":306,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":307,"author":{"gitId":"ginloy"},"content":"    public boolean hasCustomer(int customerId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":308,"author":{"gitId":"ginloy"},"content":"        return this.getCustomerList().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":309,"author":{"gitId":"ginloy"},"content":"            .anyMatch(c -\u003e c.getId() \u003d\u003d customerId);","lastModifiedDate":"2023-03-14"},{"lineNumber":310,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":311,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":312,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":313,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if a customer with the same id or identity as {@code customer}","lastModifiedDate":"2023-03-14"},{"lineNumber":314,"author":{"gitId":"kimberlybp"},"content":"     * exists in the autom8 system.","lastModifiedDate":"2023-03-14"},{"lineNumber":315,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":316,"author":{"gitId":"kimberlybp"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2023-03-14"},{"lineNumber":317,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(customer);","lastModifiedDate":"2023-03-14"},{"lineNumber":318,"author":{"gitId":"kimberlybp"},"content":"        return customers.contains(customer);","lastModifiedDate":"2023-03-14"},{"lineNumber":319,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":320,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":322,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":323,"author":{"gitId":"9fc70c892"},"content":"     * Replaces the contents of the customer list with {@code customers}.","lastModifiedDate":"2023-03-14"},{"lineNumber":324,"author":{"gitId":"9fc70c892"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2023-03-14"},{"lineNumber":325,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":326,"author":{"gitId":"9fc70c892"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2023-03-14"},{"lineNumber":327,"author":{"gitId":"9fc70c892"},"content":"        this.customers.setCustomers(customers);","lastModifiedDate":"2023-03-14"},{"lineNumber":328,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":329,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":330,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":331,"author":{"gitId":"9fc70c892"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-14"},{"lineNumber":332,"author":{"gitId":"9fc70c892"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":333,"author":{"gitId":"9fc70c892"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":334,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":335,"author":{"gitId":"9fc70c892"},"content":"    public void setCustomer(Customer target, Customer editedPerson) {","lastModifiedDate":"2023-03-14"},{"lineNumber":336,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":337,"author":{"gitId":"9fc70c892"},"content":"        customers.setCustomer(target, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":338,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":339,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":340,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":341,"author":{"gitId":"9fc70c892"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-14"},{"lineNumber":342,"author":{"gitId":"9fc70c892"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":343,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":344,"author":{"gitId":"9fc70c892"},"content":"    public void removeCustomer(Customer key) {","lastModifiedDate":"2023-03-14"},{"lineNumber":345,"author":{"gitId":"ginloy"},"content":"        key.getAppointmentIds().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":346,"author":{"gitId":"ginloy"},"content":"            .flatMap(i -\u003e this.getAppointment(i).stream())","lastModifiedDate":"2023-03-30"},{"lineNumber":347,"author":{"gitId":"ginloy"},"content":"            .forEach(this::removeAppointment);","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"ginloy"},"content":"        key.getVehicleIds().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":349,"author":{"gitId":"ginloy"},"content":"            .flatMap(i -\u003e this.getVehicle(i).stream())","lastModifiedDate":"2023-03-30"},{"lineNumber":350,"author":{"gitId":"ginloy"},"content":"            .forEach(this::removeVehicle);","lastModifiedDate":"2023-03-30"},{"lineNumber":351,"author":{"gitId":"9fc70c892"},"content":"        customers.remove(key);","lastModifiedDate":"2023-03-14"},{"lineNumber":352,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":353,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":354,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":355,"author":{"gitId":"9fc70c892"},"content":"    public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":356,"author":{"gitId":"9fc70c892"},"content":"        return this.customers.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":357,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":358,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":359,"author":{"gitId":"9fc70c892"},"content":"    // --------------------------------------------------","lastModifiedDate":"2023-03-14"},{"lineNumber":360,"author":{"gitId":"9fc70c892"},"content":"    //// technician-level operations","lastModifiedDate":"2023-03-14"},{"lineNumber":361,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":362,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":363,"author":{"gitId":"9fc70c892"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":364,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":365,"author":{"gitId":"9fc70c892"},"content":"    public boolean hasTechnician(Technician person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":366,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":367,"author":{"gitId":"9fc70c892"},"content":"        return technicians.contains(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":368,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":369,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":370,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":371,"author":{"gitId":"ginloy"},"content":"     * Checks if technician already in the system","lastModifiedDate":"2023-03-17"},{"lineNumber":372,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":373,"author":{"gitId":"ginloy"},"content":"     * @param technicianId ID of technician to check against","lastModifiedDate":"2023-03-17"},{"lineNumber":374,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":375,"author":{"gitId":"ginloy"},"content":"    public boolean hasTechnician(int technicianId) {","lastModifiedDate":"2023-03-17"},{"lineNumber":376,"author":{"gitId":"ginloy"},"content":"        return this.getTechnicianList().stream()","lastModifiedDate":"2023-03-17"},{"lineNumber":377,"author":{"gitId":"ginloy"},"content":"            .anyMatch(p -\u003e p.getId() \u003d\u003d technicianId);","lastModifiedDate":"2023-03-17"},{"lineNumber":378,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":379,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":380,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":381,"author":{"gitId":"9fc70c892"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":382,"author":{"gitId":"9fc70c892"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":383,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":384,"author":{"gitId":"9fc70c892"},"content":"    public void addTechnician(Technician p) {","lastModifiedDate":"2023-03-14"},{"lineNumber":385,"author":{"gitId":"9fc70c892"},"content":"        technicians.add(p);","lastModifiedDate":"2023-03-14"},{"lineNumber":386,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":387,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":388,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":389,"author":{"gitId":"9fc70c892"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-14"},{"lineNumber":390,"author":{"gitId":"9fc70c892"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":391,"author":{"gitId":"9fc70c892"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":392,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":393,"author":{"gitId":"9fc70c892"},"content":"    public void setTechnician(Technician target, Technician editedPerson) {","lastModifiedDate":"2023-03-14"},{"lineNumber":394,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":395,"author":{"gitId":"9fc70c892"},"content":"        technicians.setTechnician(target, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":396,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":397,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":398,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":399,"author":{"gitId":"9fc70c892"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-14"},{"lineNumber":400,"author":{"gitId":"9fc70c892"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":401,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":402,"author":{"gitId":"9fc70c892"},"content":"    public void removeTechnician(Technician key) {","lastModifiedDate":"2023-03-14"},{"lineNumber":403,"author":{"gitId":"9fc70c892"},"content":"        technicians.remove(key);","lastModifiedDate":"2023-03-14"},{"lineNumber":404,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":405,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":406,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":407,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the contents of the technicians list with {@code technicians}.","lastModifiedDate":"2023-03-27"},{"lineNumber":408,"author":{"gitId":"kimberlybp"},"content":"     * {@code technicians} must not contain duplicate technicians.","lastModifiedDate":"2023-03-27"},{"lineNumber":409,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":410,"author":{"gitId":"kimberlybp"},"content":"    public void setTechnicians(List\u003cTechnician\u003e technicians) {","lastModifiedDate":"2023-03-27"},{"lineNumber":411,"author":{"gitId":"kimberlybp"},"content":"        this.technicians.setTechnicians(technicians);","lastModifiedDate":"2023-03-27"},{"lineNumber":412,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":413,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":414,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":415,"author":{"gitId":"9fc70c892"},"content":"    public ObservableList\u003cTechnician\u003e getTechnicianList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":416,"author":{"gitId":"9fc70c892"},"content":"        return this.technicians.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":417,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":418,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":419,"author":{"gitId":"9fc70c892"},"content":"    // --------------------------------------------------","lastModifiedDate":"2023-03-14"},{"lineNumber":420,"author":{"gitId":"9fc70c892"},"content":"    //// Vehicle-level operations","lastModifiedDate":"2023-03-14"},{"lineNumber":421,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":422,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":423,"author":{"gitId":"9fc70c892"},"content":"     * Adds vehicle to the shop","lastModifiedDate":"2023-03-14"},{"lineNumber":424,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":425,"author":{"gitId":"9fc70c892"},"content":"     * @param customerId Id of vehicle\u0027s owner","lastModifiedDate":"2023-03-14"},{"lineNumber":426,"author":{"gitId":"9fc70c892"},"content":"     * @param vehicle    Vehicle to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":427,"author":{"gitId":"9fc70c892"},"content":"     * @throws PersonNotFoundException Customer not registered with the shop","lastModifiedDate":"2023-03-14"},{"lineNumber":428,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":429,"author":{"gitId":"9fc70c892"},"content":"    public void addVehicle(int customerId, Vehicle vehicle) throws PersonNotFoundException {","lastModifiedDate":"2023-03-14"},{"lineNumber":430,"author":{"gitId":"9fc70c892"},"content":"        for (var customer : customers) {","lastModifiedDate":"2023-03-14"},{"lineNumber":431,"author":{"gitId":"9fc70c892"},"content":"            if (customer.getId() \u003d\u003d customerId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":432,"author":{"gitId":"9fc70c892"},"content":"                customer.addVehicle(vehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":433,"author":{"gitId":"ginloy"},"content":"                this.vehicles.add(vehicle);","lastModifiedDate":"2023-03-17"},{"lineNumber":434,"author":{"gitId":"9fc70c892"},"content":"                return;","lastModifiedDate":"2023-03-14"},{"lineNumber":435,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":436,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":437,"author":{"gitId":"9fc70c892"},"content":"        throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":438,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":439,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":440,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":441,"author":{"gitId":"kimberlybp"},"content":"     * Adds vehicle to the shop","lastModifiedDate":"2023-03-14"},{"lineNumber":442,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":443,"author":{"gitId":"kimberlybp"},"content":"     * @param vehicle Vehicle to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":444,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":445,"author":{"gitId":"kimberlybp"},"content":"    public void addVehicle(Vehicle vehicle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":446,"author":{"gitId":"kimberlybp"},"content":"        this.vehicles.add(vehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":447,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":448,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":449,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":450,"author":{"gitId":"9fc70c892"},"content":"     * Checks if vehicle is in the shop","lastModifiedDate":"2023-03-14"},{"lineNumber":451,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":452,"author":{"gitId":"9fc70c892"},"content":"     * @param vehicleId Vehicle ID to check","lastModifiedDate":"2023-03-14"},{"lineNumber":453,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":454,"author":{"gitId":"9fc70c892"},"content":"    public boolean hasVehicle(int vehicleId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":455,"author":{"gitId":"9fc70c892"},"content":"        return this.getVehicleList().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":456,"author":{"gitId":"9fc70c892"},"content":"            .anyMatch(v -\u003e v.getId() \u003d\u003d vehicleId);","lastModifiedDate":"2023-03-14"},{"lineNumber":457,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":458,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":459,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":460,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if a vehicle with the same plate number as {@code vehicle}","lastModifiedDate":"2023-03-14"},{"lineNumber":461,"author":{"gitId":"kimberlybp"},"content":"     * exists in the autom8 system.","lastModifiedDate":"2023-03-14"},{"lineNumber":462,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":463,"author":{"gitId":"kimberlybp"},"content":"    public boolean hasVehicle(Vehicle vehicle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":464,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(vehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":465,"author":{"gitId":"kimberlybp"},"content":"        return vehicles.contains(vehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":466,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":467,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":468,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":469,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the contents of the vehicle list with {@code vehicles}.","lastModifiedDate":"2023-03-14"},{"lineNumber":470,"author":{"gitId":"kimberlybp"},"content":"     * {@code vehicles} must not contain duplicate vehicles.","lastModifiedDate":"2023-03-14"},{"lineNumber":471,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":472,"author":{"gitId":"kimberlybp"},"content":"    public void setVehicles(List\u003cVehicle\u003e vehicles) {","lastModifiedDate":"2023-03-14"},{"lineNumber":473,"author":{"gitId":"kimberlybp"},"content":"        this.vehicles.setVehicles(vehicles);","lastModifiedDate":"2023-03-14"},{"lineNumber":474,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":475,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":476,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":477,"author":{"gitId":"9fc70c892"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-14"},{"lineNumber":478,"author":{"gitId":"9fc70c892"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":479,"author":{"gitId":"9fc70c892"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":480,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":481,"author":{"gitId":"9fc70c892"},"content":"    public void setVehicle(Vehicle target, Vehicle editedVehicle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":482,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(editedVehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":483,"author":{"gitId":"9fc70c892"},"content":"        vehicles.setVehicle(target, editedVehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":484,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":485,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":486,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":487,"author":{"gitId":"9fc70c892"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-14"},{"lineNumber":488,"author":{"gitId":"9fc70c892"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":489,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":490,"author":{"gitId":"9fc70c892"},"content":"    public void removeVehicle(Vehicle key) {","lastModifiedDate":"2023-03-14"},{"lineNumber":491,"author":{"gitId":"ginloy"},"content":"        key.getServiceIds().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":492,"author":{"gitId":"ginloy"},"content":"            .flatMap(i -\u003e getService(i).stream())","lastModifiedDate":"2023-03-30"},{"lineNumber":493,"author":{"gitId":"ginloy"},"content":"            .forEach(this::removeService);","lastModifiedDate":"2023-03-30"},{"lineNumber":494,"author":{"gitId":"9fc70c892"},"content":"        vehicles.remove(key);","lastModifiedDate":"2023-03-14"},{"lineNumber":495,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":496,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":497,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":498,"author":{"gitId":"9fc70c892"},"content":"    public ObservableList\u003cVehicle\u003e getVehicleList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":499,"author":{"gitId":"9fc70c892"},"content":"        return this.vehicles.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":500,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":501,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":502,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":503,"author":{"gitId":"9fc70c892"},"content":"    // --------------------------------------------------","lastModifiedDate":"2023-03-14"},{"lineNumber":504,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":505,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":506,"author":{"gitId":"kimberlybp"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2023-03-14"},{"lineNumber":507,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":508,"author":{"gitId":"kimberlybp"},"content":"    public void resetData(ReadOnlyShop newData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":509,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-14"},{"lineNumber":510,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":511,"author":{"gitId":"kimberlybp"},"content":"        setCustomers(newData.getCustomerList());","lastModifiedDate":"2023-03-14"},{"lineNumber":512,"author":{"gitId":"kimberlybp"},"content":"        setVehicles(newData.getVehicleList());","lastModifiedDate":"2023-03-14"},{"lineNumber":513,"author":{"gitId":"kimberlybp"},"content":"        setParts(newData.getPartMap());","lastModifiedDate":"2023-03-15"},{"lineNumber":514,"author":{"gitId":"kimberlybp"},"content":"        setServices(newData.getServiceList());","lastModifiedDate":"2023-03-15"},{"lineNumber":515,"author":{"gitId":"kimberlybp"},"content":"        setTechnicians(newData.getTechnicianList());","lastModifiedDate":"2023-03-14"},{"lineNumber":516,"author":{"gitId":"kimberlybp"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2023-03-26"},{"lineNumber":517,"author":{"gitId":"kimberlybp"},"content":"        setTechnicians(newData.getTechnicianList());","lastModifiedDate":"2023-03-27"},{"lineNumber":518,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":519,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":520,"author":{"gitId":"ginloy"},"content":"    // Private getters to help in cascading removal","lastModifiedDate":"2023-03-30"},{"lineNumber":521,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":522,"author":{"gitId":"ginloy"},"content":"    private Optional\u003cCustomer\u003e getCustomer(int customerId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":523,"author":{"gitId":"ginloy"},"content":"        return this.getCustomerList().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":524,"author":{"gitId":"ginloy"},"content":"            .filter(c -\u003e c.getId() \u003d\u003d customerId)","lastModifiedDate":"2023-03-30"},{"lineNumber":525,"author":{"gitId":"ginloy"},"content":"            .findFirst();","lastModifiedDate":"2023-03-30"},{"lineNumber":526,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":527,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":528,"author":{"gitId":"ginloy"},"content":"    private Optional\u003cVehicle\u003e getVehicle(int vehicleId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":529,"author":{"gitId":"ginloy"},"content":"        return this.getVehicleList().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":530,"author":{"gitId":"ginloy"},"content":"            .filter(v -\u003e v.getId() \u003d\u003d vehicleId)","lastModifiedDate":"2023-03-30"},{"lineNumber":531,"author":{"gitId":"ginloy"},"content":"            .findFirst();","lastModifiedDate":"2023-03-30"},{"lineNumber":532,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":533,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":534,"author":{"gitId":"ginloy"},"content":"    private Optional\u003cService\u003e getService(int serviceId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":535,"author":{"gitId":"ginloy"},"content":"        return this.getServiceList().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":536,"author":{"gitId":"ginloy"},"content":"            .filter(v -\u003e v.getId() \u003d\u003d serviceId)","lastModifiedDate":"2023-03-30"},{"lineNumber":537,"author":{"gitId":"ginloy"},"content":"            .findFirst();","lastModifiedDate":"2023-03-30"},{"lineNumber":538,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":539,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":540,"author":{"gitId":"ginloy"},"content":"    private Optional\u003cAppointment\u003e getAppointment(int appointmentId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":541,"author":{"gitId":"ginloy"},"content":"        return this.getAppointmentList().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":542,"author":{"gitId":"ginloy"},"content":"            .filter(a -\u003e a.getId() \u003d\u003d appointmentId)","lastModifiedDate":"2023-03-30"},{"lineNumber":543,"author":{"gitId":"ginloy"},"content":"            .findFirst();","lastModifiedDate":"2023-03-30"},{"lineNumber":544,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":545,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":546,"author":{"gitId":"kimberlybp"},"content":"    //// Delete operations","lastModifiedDate":"2023-03-14"},{"lineNumber":547,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":548,"author":{"gitId":"9fc70c892"},"content":"    // --------------------------------------------------","lastModifiedDate":"2023-03-14"},{"lineNumber":549,"author":{"gitId":"9fc70c892"},"content":"    //// util methods","lastModifiedDate":"2023-03-14"},{"lineNumber":550,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":551,"author":{"gitId":"9fc70c892"},"content":"    //    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":552,"author":{"gitId":"9fc70c892"},"content":"    //    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":553,"author":{"gitId":"9fc70c892"},"content":"    //        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2023-03-14"},{"lineNumber":554,"author":{"gitId":"9fc70c892"},"content":"    //        // TODO: refine later","lastModifiedDate":"2023-03-14"},{"lineNumber":555,"author":{"gitId":"9fc70c892"},"content":"    //        // TODO: modify this","lastModifiedDate":"2023-03-14"},{"lineNumber":556,"author":{"gitId":"9fc70c892"},"content":"    //    }","lastModifiedDate":"2023-03-14"},{"lineNumber":557,"author":{"gitId":"9fc70c892"},"content":"    //","lastModifiedDate":"2023-03-14"},{"lineNumber":558,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":559,"author":{"gitId":"junlee1991"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-02"},{"lineNumber":560,"author":{"gitId":"junlee1991"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-04-02"},{"lineNumber":561,"author":{"gitId":"junlee1991"},"content":"                || (other instanceof Shop // instanceof handles nulls","lastModifiedDate":"2023-04-02"},{"lineNumber":562,"author":{"gitId":"junlee1991"},"content":"                \u0026\u0026 customers.equals(((Shop) other).customers));","lastModifiedDate":"2023-04-02"},{"lineNumber":563,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":564,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":565,"author":{"gitId":"junlee1991"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":566,"author":{"gitId":"junlee1991"},"content":"    public int hashCode() {","lastModifiedDate":"2023-04-02"},{"lineNumber":567,"author":{"gitId":"junlee1991"},"content":"        return customers.hashCode();","lastModifiedDate":"2023-04-02"},{"lineNumber":568,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":569,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":570,"author":{"gitId":"kimberlybp"},"content":"    //// Others","lastModifiedDate":"2023-03-14"},{"lineNumber":571,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":178,"ginloy":189,"9fc70c892":193,"junlee1991":11}},{"path":"src/main/java/seedu/address/model/entity/shop/garage/Garage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.shop.garage;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Staff;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":" * This class represents a Garage which the user of this program owns.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"public class Garage {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"    private ArrayList\u003cStaff\u003e staffs;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"    private ArrayList\u003cLot\u003e lots;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * This method is the constructor to create a Garage of numberOfLots quantity of Lots.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     * @param numberOfLots Number of lots this Garage has.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public Garage(int numberOfLots) {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"        lots \u003d new ArrayList\u003cLot\u003e(numberOfLots);","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        for (int i \u003d 0; i \u003c numberOfLots; i++) {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"            lots.add(new Lot());","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"     * This method is the constructor to create a Garage of numberOfLots quantity of Lots.","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"     * By default, this method creates 5 lots.","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"    public Garage() {","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"        this(5);","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the staff that is within this garage.","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"     * @return","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"    public ArrayList\u003cStaff\u003e getStaffs() {","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"        return staffs;","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"     * This method adds a staff to this garage.","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"     * @param staff The staff to be added to this garage.","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"    public void addStaff(Staff staff) {","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        this.staffs.add(staff);","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"     * This method removes a staff from this garage.","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"     * @param staff The staff to be removed from this garage.","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"    public void removeStaff(Staff staff) {","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"        this.staffs.remove(staff);","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the lots that are within this garage.","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"     * @return a list of lots within this garage.","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"    public ArrayList\u003cLot\u003e getLots() {","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"        return lots;","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"     * This method","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"     * @param lots","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"    public void setLots(ArrayList\u003cLot\u003e lots) {","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"        this.lots \u003d lots;","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":1,"9fc70c892":75}},{"path":"src/main/java/seedu/address/model/entity/shop/garage/Lot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.entity.shop.garage;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":" * This class represents a lot within the Garage.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":" * A garage can have \u003e\u003d0 lots.","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"public class Lot {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"    private Vehicle vehicle \u003d null;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the current vehicle parked at this lot.","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"     * @return the current vehicle parked at this lot.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    public Vehicle getVehicle() {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"        return vehicle;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"     * This method sets the current vehicle parked at this lot.","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"     * @param hasVehicle","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"    public void setVehicle(Vehicle hasVehicle) {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"        this.vehicle \u003d hasVehicle;","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"     * This method returns true if a vehicle is in this lot.","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"     * @return whether a vehicle is in this lot.","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"    public boolean hasVehicle() {","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        return Objects.isNull(vehicle);","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"     * This method sets the vehicle field to null.","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"    public void removeVehicle() {","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"        vehicle \u003d null;","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":1,"9fc70c892":47}},{"path":"src/main/java/seedu/address/model/mapping/AppointmentDataMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.mapping;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.UniqueTechnicianList;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * Represents a mapping between appointments and their assigned staff","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"public class AppointmentDataMap {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cAppointment, UniqueTechnicianList\u003e appointmentToTechniciansMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cAppointment, Customer\u003e appointmentToCustomerMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a ServiceDataMap object.","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * @param appointments  The list of appointments.","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * @param technicians  The list of technicians.","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @param customers  The list of customers.","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    public AppointmentDataMap(List\u003cAppointment\u003e appointments, List\u003cTechnician\u003e technicians, List\u003cCustomer\u003e customers) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        reset(appointments, technicians, customers);","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * Resets the mapping of appointments to their associated staff and customer","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * @param appointments  The list of appointments.","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @param technicians  The list of technicians.","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * @param customers  The list of customers.","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    public void reset(List\u003cAppointment\u003e appointments, List\u003cTechnician\u003e technicians, List\u003cCustomer\u003e customers) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Technician\u003e idToStaffMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        for (Technician technician : technicians) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"            idToStaffMap.put(technician.getId(), technician);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Customer\u003e idToCustomerMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        for (Customer customer : customers) {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"            idToCustomerMap.put(customer.getId(), customer);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"            UniqueTechnicianList appointmentTechnicianList \u003d new UniqueTechnicianList();","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            Customer appointmentCustomer \u003d idToCustomerMap.get(appointment.getCustomerId());","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"            if (appointmentCustomer !\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"                this.appointmentToCustomerMap.put(appointment, appointmentCustomer);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"            for (int technicianId : appointment.getStaffIds()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"                Technician technician \u003d idToStaffMap.get(technicianId);","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"                if (technician !\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"                    appointmentTechnicianList.add(technician);","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"            this.appointmentToTechniciansMap.put(appointment, appointmentTechnicianList);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable observable list of technicians associated with the","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"     * specified appointment.","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"     * @param appointment The appointment whose technicians to retrieve.","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"     * @return An unmodifiable observable list of technicians associated with the","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"     *         specified appointment.","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cTechnician\u003e getAppointmentTechnicians(Appointment appointment) {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        return this.appointmentToTechniciansMap.get(appointment).asUnmodifiableObservableList();","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"     * Returns the Customer associated with the specified appointment.","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"     * @param appointment The appointment whose customer to retrieve.","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"     * @return The customer with the appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    public Customer getAppointmentCustomer(Appointment appointment) {","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        return this.appointmentToCustomerMap.get(appointment);","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":88}},{"path":"src/main/java/seedu/address/model/mapping/CustomerVehicleMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.mapping;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.UniqueVehicleList;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.VehicleType;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.UniqueAppointmentList;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" * Represents a mapping between customers with their associated vehicles and appointments.","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"public class CustomerVehicleMap {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cCustomer, UniqueVehicleList\u003e customerToVehiclesMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cCustomer, UniqueAppointmentList\u003e customerToAppointmentsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a CustomerVehicleMap object.","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @param customers The list of customers.","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * @param vehicles  The list of vehicles.","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public CustomerVehicleMap(List\u003cCustomer\u003e customers, List\u003cVehicle\u003e vehicles, List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        reset(customers, vehicles, appointments);","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * Resets the mapping of customers to their associated vehicles based on the given customer and vehicle lists.","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @param customers The list of customers.","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * @param vehicles  The list of vehicles.","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    public void reset(List\u003cCustomer\u003e customers, List\u003cVehicle\u003e vehicles, List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        this.customerToAppointmentsMap.clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        this.customerToVehiclesMap.clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Vehicle\u003e idToVehicleMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        for (Vehicle vehicle : vehicles) {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"            idToVehicleMap.put(vehicle.getId(), vehicle);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Appointment\u003e idToAppointmentMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"            idToAppointmentMap.put(appointment.getId(), appointment);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        for (Customer customer : customers) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"            UniqueVehicleList customerVehicles \u003d new UniqueVehicleList();","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"            UniqueAppointmentList customerAppointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"            for (int vehicleId : customer.getVehicleIds()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"                Vehicle vehicle \u003d idToVehicleMap.get(vehicleId);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                if (vehicle !\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                    customerVehicles.add(vehicle);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"            for (int appointmentId : customer.getAppointmentIds()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"                Appointment appointment \u003d idToAppointmentMap.get(appointmentId);","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"                if (appointment !\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"                    customerAppointments.add(appointment);","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            this.customerToVehiclesMap.put(customer, customerVehicles);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"            this.customerToAppointmentsMap.put(customer, customerAppointments);","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable observable list of vehicles associated with the","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"     * specified customer.","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"     * @param customer The customer whose vehicles to retrieve.","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"     * @return An unmodifiable observable list of vehicles associated with the","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"     *         specified customer.","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cVehicle\u003e getCustomerVehicles(Customer customer) {","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        return this.customerToVehiclesMap.get(customer).asUnmodifiableObservableList();","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable observable list of appointments associated with the","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"     * specified customer.","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"     * @param customer The customer whose appointments to retrieve.","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"     * @return An unmodifiable observable list of appointments associated with the","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"     *         specified customer.","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cAppointment\u003e getCustomerAppointments(Customer customer) {","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"        return this.customerToAppointmentsMap.get(customer).asUnmodifiableObservableList();","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"     * Returns the number of vehicles with the type car a customer has","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"     * @param customer The customer whose vehicles to retrieve.","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"     * @return the number of vehicles with the type car a customer has.","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    public int getCustomerCarsCount(Customer customer) {","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"        List\u003cVehicle\u003e customerVehicles \u003d this.getCustomerVehicles(customer);","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        for (Vehicle vehicle : customerVehicles) {","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"            if (vehicle.getType() \u003d\u003d VehicleType.CAR) {","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"                count++;","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"        return count;","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"     * Returns the number of vehicles with the type motorbike a customer has","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"     * @param customer The customer whose vehicles to retrieve.","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"     * @return the number of vehicles with the type motorbike a customer has.","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"    public int getCustomerMotorbikesCount(Customer customer) {","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"        List\u003cVehicle\u003e customerVehicles \u003d this.getCustomerVehicles(customer);","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"        for (Vehicle vehicle : customerVehicles) {","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"            if (vehicle.getType() \u003d\u003d VehicleType.MOTORBIKE) {","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"                count++;","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"        return count;","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"        for (Map.Entry\u003cCustomer, UniqueVehicleList\u003e e : this.customerToVehiclesMap.entrySet()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"            builder.append(e.getKey().getId() + \", \");","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":136,"ginloy":3}},{"path":"src/main/java/seedu/address/model/mapping/ServiceDataMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.mapping;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.UniqueTechnicianList;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * Represents a mapping between services and their associated technicians","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"public class ServiceDataMap {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cService, UniqueTechnicianList\u003e serviceToTechniciansMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cService, Vehicle\u003e serviceToVehicleMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a ServiceDataMap object.","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * @param services  The list of services.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * @param technicians  The list of technicians.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @param vehicles  The list of vehicles.","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    public ServiceDataMap(List\u003cService\u003e services, List\u003cTechnician\u003e technicians, List\u003cVehicle\u003e vehicles) {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        reset(services, technicians, vehicles);","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * Resets the mapping of services to their associated technicians and vehicle","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * @param services  The list of services.","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @param technicians  The list of technicians.","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * @param vehicles  The list of vehicles.","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    public void reset(List\u003cService\u003e services, List\u003cTechnician\u003e technicians, List\u003cVehicle\u003e vehicles) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        this.serviceToVehicleMap.clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        this.serviceToTechniciansMap.clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Technician\u003e idToStaffMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        for (Technician technician : technicians) {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"            idToStaffMap.put(technician.getId(), technician);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Vehicle\u003e idToVehicleMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        for (Vehicle vehicle : vehicles) {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            idToVehicleMap.put(vehicle.getId(), vehicle);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        for (Service service : services) {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"            UniqueTechnicianList serviceTechnicianList \u003d new UniqueTechnicianList();","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"            Vehicle serviceVehicle \u003d idToVehicleMap.get(service.getVehicleId());","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"            if (serviceVehicle !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                this.serviceToVehicleMap.put(service, serviceVehicle);","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"            for (int technicianId : service.getAssignedToIds()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"                Technician technician \u003d idToStaffMap.get(technicianId);","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"                if (technician !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"                    serviceTechnicianList.add(technician);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            this.serviceToTechniciansMap.put(service, serviceTechnicianList);","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable observable list of technicians associated with the","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"     * specified service.","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"     * @param service The service whose technicians to retrieve.","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"     * @return An unmodifiable observable list of technicians associated with the","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"     *         specified service.","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cTechnician\u003e getServiceTechnicians(Service service) {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        return this.serviceToTechniciansMap.get(service).asUnmodifiableObservableList();","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"     * Returns the Vehicle associated with the specified service.","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"     * @param service The service whose owner to vehicle.","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"     * @return The Vehicle to service","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"    public Vehicle getServiceVehicle(Service service) {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"        return this.serviceToVehicleMap.get(service);","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":88,"ginloy":3}},{"path":"src/main/java/seedu/address/model/mapping/TechnicianDataMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.mapping;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.ServiceList;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.UniqueAppointmentList;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * Represents a mapping between technicians with their associated services and appointments.","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"public class TechnicianDataMap {","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cTechnician, ServiceList\u003e technicianToServiceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cTechnician, UniqueAppointmentList\u003e technicianToAppointmentsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a TechnicianDataMap object.","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * @param technicians The list of technicians.","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @param services  The list of services.","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * @param appointments  The list of appointments.","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public TechnicianDataMap(List\u003cTechnician\u003e technicians, List\u003cService\u003e services, List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        reset(technicians, services, appointments);","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * Resets the mapping of technicians to their associated appointments and services","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * based on the global lists provided","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * @param technicians The list of technicians.","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     * @param services  The list of services.","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     * @param appointments  The list of appointments.","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    public void reset(List\u003cTechnician\u003e technicians, List\u003cService\u003e services, List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Service\u003e idToServiceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        for (Service service : services) {","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"            idToServiceMap.put(service.getId(), service);","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Appointment\u003e idToAppointmentMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            idToAppointmentMap.put(appointment.getId(), appointment);","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        for (Technician technician : technicians) {","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            ServiceList technicianServices \u003d new ServiceList();","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"            UniqueAppointmentList technicianAppointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"            for (int serviceId : technician.getServiceIds()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"                Service service \u003d idToServiceMap.get(serviceId);","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"                if (service !\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                    technicianServices.add(service);","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            for (int appointmentId : technician.getAppointmentIds()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"                Appointment appointment \u003d idToAppointmentMap.get(appointmentId);","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"                if (appointment !\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"                    technicianAppointments.add(appointment);","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            this.technicianToServiceMap.put(technician, technicianServices);","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            this.technicianToAppointmentsMap.put(technician, technicianAppointments);","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable observable list of services associated with the","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"     * specified technician.","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"     * @param technician The technician whose services to retrieve.","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"     * @return An unmodifiable observable list of services associated with the","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"     *         specified technician.","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cService\u003e getTechnicianServices(Technician technician) {","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        return this.technicianToServiceMap.get(technician).asUnmodifiableObservableList();","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable observable list of appointments associated with the","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"     * specified technician.","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"     * @param technician The technician whose appointments to retrieve.","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"     * @return An unmodifiable observable list of appointments associated with the","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"     *         specified technician.","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cAppointment\u003e getTechnicianAppointments(Technician technician) {","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        return this.technicianToAppointmentsMap.get(technician).asUnmodifiableObservableList();","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":93}},{"path":"src/main/java/seedu/address/model/mapping/VehicleDataMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.mapping;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.ServiceList;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * Represents a mapping between vehicles and their associated customer and","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * services.","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"public class VehicleDataMap {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cVehicle, ServiceList\u003e vehicleToServicesMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final Map\u003cVehicle, Customer\u003e vehicleToCustomerMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a VehicleDataMap object.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * @param customers The list of customers.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @param vehicles  The list of vehicles.","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * @param services  The list of services.","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public VehicleDataMap(List\u003cVehicle\u003e vehicles, List\u003cCustomer\u003e customers,","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"            List\u003cService\u003e services) {","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Customer\u003e idToCustomerMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        for (Customer customer : customers) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"            idToCustomerMap.put(customer.getId(), customer);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Service\u003e idToServiceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        for (Service service : services) {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"            idToServiceMap.put(service.getId(), service);","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        for (Vehicle vehicle : vehicles) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            ServiceList vehicleServiceList \u003d new ServiceList();","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"            Customer vehicleCustomer \u003d idToCustomerMap.get(vehicle.getOwnerId());","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            if (vehicleCustomer !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                this.vehicleToCustomerMap.put(vehicle, vehicleCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            for (int serviceId : vehicle.getServiceIds()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                Service service \u003d idToServiceMap.get(serviceId);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"                if (service !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"                    vehicleServiceList.add(service);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"            this.vehicleToServicesMap.put(vehicle, vehicleServiceList);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"     * Resets the mapping of vehicles to their associated customer and services","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"     * @param customers The list of customers.","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"     * @param vehicles  The list of vehicles.","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"     * @param services  The list of services.","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"    public void reset(List\u003cVehicle\u003e vehicles, List\u003cCustomer\u003e customers,","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"            List\u003cService\u003e services) {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"        this.vehicleToCustomerMap.clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        this.vehicleToServicesMap.clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Customer\u003e idToCustomerMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        for (Customer customer : customers) {","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"            idToCustomerMap.put(customer.getId(), customer);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cInteger, Service\u003e idToServiceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        for (Service service : services) {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"            idToServiceMap.put(service.getId(), service);","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        for (Vehicle vehicle : vehicles) {","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            ServiceList vehicleServiceList \u003d new ServiceList();","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"            Customer vehicleCustomer \u003d idToCustomerMap.get(vehicle.getOwnerId());","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"            if (vehicleCustomer !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"                this.vehicleToCustomerMap.put(vehicle, vehicleCustomer);","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"            for (int serviceId : vehicle.getServiceIds()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"                Service service \u003d idToServiceMap.get(serviceId);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"                if (service !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"                    vehicleServiceList.add(service);","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"            this.vehicleToServicesMap.put(vehicle, vehicleServiceList);","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"     * Returns an unmodifiable observable list of services associated with the","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"     * specified vehicle.","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"     * @param vehicle The vehicle whose services to retrieve.","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"     * @return An unmodifiable observable list of vehicles associated with the","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"     *         specified customer.","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cService\u003e getVehicleServices(Vehicle vehicle) {","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"        return this.vehicleToServicesMap.get(vehicle).asUnmodifiableObservableList();","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"     * Returns the Customer associated with the specified vehicle.","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"     * @param vehicle The vehicle whose owner to retrieve.","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"     * @return The Vehicle owner","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"    public Customer getVehicleCustomer(Vehicle vehicle) {","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"        return this.vehicleToCustomerMap.get(vehicle);","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":118,"ginloy":2}},{"path":"src/main/java/seedu/address/model/service/PartMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.model.service;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.exception.NegativeValueException;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.exception.PartLessThanZeroException;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.exception.PartNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":" * Mapping between part name and the part in storage","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"public class PartMap {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Parts should only contain alphanumeric characters, dashes,\"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"        + \"underscore and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum}-_ ]*\";","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    private final Map\u003cString, Integer\u003e map;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    public PartMap() {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"        this.map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     * Checks if part is in the map","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"     * @param partName Part Name","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    public boolean contains(String partName) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"        return map.containsKey(partName);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"     * Gets the quantity of a specified part.","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"     * Returns 0 if part does not exist.","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"     * @param partName Part name","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"     * @return Quantity of part","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"    public int getPartQuantity(String partName) {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        if (!contains(partName)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"            throw new PartNotFoundException(partName);","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"        return map.get(partName);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"     * Gets the entrySet of the map","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"    public Set\u003cMap.Entry\u003cString, Integer\u003e\u003e getEntrySet() {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        return map.entrySet();","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"     * Adds part into mapping.","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"     * @param partName Part name","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"     * @param quantity Quantity of part to add","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    public void addPart(String partName, int quantity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"        checkArgument(isValidName(partName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"        if (quantity \u003c 0) {","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"            throw new NegativeValueException(quantity);","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"        if (this.map.containsKey(partName)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"            this.map.put(partName, map.get(partName) + quantity);","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"        this.map.put(partName, quantity);","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"     * Add all content of other map into PartMap.","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"     * Forces all negative part values to 0.","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"     * @param other Another partMap with values","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"    public void addAll(PartMap other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"        this.map.putAll(other.map);","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"     * Removes the part from the PartMap","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Part name","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"    public void removePart(String partName) {","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"        this.map.remove(partName);","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"     * Removes all indicated parts from this PartMap","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"     * @param other Another partMap with values","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"    public void removeParts(PartMap other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"        Set\u003cString\u003e keysToRemove \u003d other.map.keySet();","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        this.map.keySet().removeAll(keysToRemove);","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"     * Removes all parts in PartMap","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"    public void removeAll() {","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        this.map.clear();","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"     * Replaces contents of partMap with another map","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"     * @param other Map to replace with","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"    public void replace(PartMap other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"        removeAll();","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"        addAll(other);","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"     * Increases the quantity of a part in the PartMap by a specified quantity","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Part name to increase quantity of","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"     * @param quantity Amount to increase","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"     * @throws PartNotFoundException If part not in Set","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"    public void increasePartQuantity(String partName, int quantity) throws PartNotFoundException {","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"        if (!this.map.containsKey(partName)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"            throw new PartNotFoundException(partName);","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"        this.map.put(partName, map.get(partName) + quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"9fc70c892"},"content":"     * Decrease the quantity of a part in the PartMap by a specified quantity","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"     * If specified quantity is higher than","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"9fc70c892"},"content":"     * @param partName Part name to increase quantity of","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"9fc70c892"},"content":"     * @param quantity Amount to decrease","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"9fc70c892"},"content":"     * @throws PartNotFoundException     If part not in Set","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"ginloy"},"content":"     * @throws PartLessThanZeroException If part does not have sufficient quantity","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"ginloy"},"content":"    public void decreasePartQuantity(String partName, int quantity)","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"ginloy"},"content":"            throws PartNotFoundException, PartLessThanZeroException {","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"9fc70c892"},"content":"        if (!this.map.containsKey(partName)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"9fc70c892"},"content":"            throw new PartNotFoundException(partName);","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"9fc70c892"},"content":"        if (map.get(partName) \u003c quantity) {","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"9fc70c892"},"content":"            throw new PartLessThanZeroException(partName);","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"9fc70c892"},"content":"        this.map.put(partName, map.get(partName) - quantity);","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"kimberlybp"},"content":"     * Gets the size of the map","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"kimberlybp"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"        return map.size();","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"kimberlybp"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"kimberlybp"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"kimberlybp"},"content":"        for (Map.Entry\u003cString, Integer\u003e entry : map.entrySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"kimberlybp"},"content":"            result.append(entry.getKey()).append(\": \").append(entry.getValue()).append(\", \");","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"kimberlybp"},"content":"        if (result.length() \u003e 0) {","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"kimberlybp"},"content":"            // Remove the trailing comma and space","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"kimberlybp"},"content":"            result.setLength(result.length() - 2);","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"kimberlybp"},"content":"        return result.toString();","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"9fc70c892"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kimberlybp":84,"ginloy":61,"9fc70c892":44}},{"path":"src/main/java/seedu/address/model/service/Service.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Findable;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":" * The Service class contains information about what task to be performed on the vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"public class Service implements Findable {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"    public static final int DEFAULT_SEVEN_DAYS \u003d 7;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"    private final int vehicleId;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"    private final LocalDate entryDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private final PartMap requiredParts \u003d new PartMap();","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    private final String description;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"    private LocalDate estimatedFinishDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    private final Set\u003cInteger\u003e assignedToIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private ServiceStatus status;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * This method is the constructor for a Service.","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public Service(int id, int vehicleId, LocalDate entryDate,","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"                   PartMap requiredParts, String description,","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"                   LocalDate estimatedFinishDate, ServiceStatus status,","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"                   Set\u003cInteger\u003e assignedToIds) {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        this.vehicleId \u003d vehicleId;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        this.entryDate \u003d entryDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        this.estimatedFinishDate \u003d estimatedFinishDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        this.requiredParts.addAll(requiredParts);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        this.assignedToIds.addAll(assignedToIds);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"     * This method is the constructor for a Service.","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    public Service(int id, int vehicleId, LocalDate entryDate,","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"                   PartMap requiredParts, String description,","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"                   LocalDate estimatedFinishDate, ServiceStatus status) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        this.vehicleId \u003d vehicleId;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        this.entryDate \u003d entryDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        this.estimatedFinishDate \u003d estimatedFinishDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        this.requiredParts.addAll(requiredParts);","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"     * This method is the constructor for a Service.","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"     * @param id                    The ID of service.","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"     * @param vehicleId             ID of vehicle that requires service","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"     * @param estimatedDaysRequired The amount of time estimated to be needed for repairs.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"     * @param assignedToIds         The list of staffs ids that this service is assigned to.","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"    public Service(int id, int vehicleId, int estimatedDaysRequired, Set\u003cInteger\u003e assignedToIds, String description) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        entryDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"        this.vehicleId \u003d vehicleId;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        estimatedFinishDate \u003d entryDate.plusDays(estimatedDaysRequired);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        this.assignedToIds.addAll(assignedToIds);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"     * Yet another Service constructor","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"    public Service(int id, int vehicleId, int serviceDuration, String serviceDesc, ServiceStatus serviceStatus) {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"        this(id, vehicleId, serviceDuration, new HashSet\u003c\u003e(), serviceDesc);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"        this.status \u003d serviceStatus;","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the id of this service.","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"9fc70c892"},"content":"     * @return the id of this service.","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"9fc70c892"},"content":"    public int getId() {","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"9fc70c892"},"content":"        return id;","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"ginloy"},"content":"     * Get ID of vehicle that requires service","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"ginloy"},"content":"     * @return Vehicle ID","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"    public int getVehicleId() {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"        return this.vehicleId;","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"     * @return Entry date of service","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"    public LocalDate getEntryDate() {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"        return this.entryDate;","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the estimated finish date.","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"9fc70c892"},"content":"     * @return The estimated finish date.","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"    public LocalDate getEstimatedFinishDate() {","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"9fc70c892"},"content":"        return estimatedFinishDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"     * This method sets the estimated finish date.","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"     * @param estimatedFinishDate The estimated finish date.","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"    public void setEstimatedFinishDate(LocalDate estimatedFinishDate) {","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"        this.estimatedFinishDate \u003d estimatedFinishDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"     * This method returns the PartMap of requiredParts needed to perform this Service.","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"     * @return PartMap of requiredParts needed to fulfill this service.","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"    public PartMap getRequiredParts() {","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"ginloy"},"content":"        return requiredParts;","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"     * This method adds a part to this service.","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Part name","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"     * @param quantity Quantity of part to add","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"    public void addPart(String partName, int quantity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"        requiredParts.addPart(partName, quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"     * Removes a part from this service.","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Name of the part to be removed.","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"kimberlybp"},"content":"    public void removePart(String partName) {","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"kimberlybp"},"content":"        requiredParts.removePart(partName);","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"kimberlybp"},"content":"     * Adds parts needed for this service.","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"kimberlybp"},"content":"     * @param parts Another PartMap needed to be added to this service.","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"    public void addParts(PartMap parts) {","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"        requiredParts.addAll(parts);","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"ginloy"},"content":"     * This method removes some parts that was added to this service.","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"     * @param parts The part to be removed.","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"kimberlybp"},"content":"    public void removeParts(PartMap parts) {","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"kimberlybp"},"content":"        requiredParts.removeAll();","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":178,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the description of this service.","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"9fc70c892"},"content":"     * @return the description of this service.","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":182,"author":{"gitId":"9fc70c892"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-19"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"        return description;","lastModifiedDate":"2023-02-19"},{"lineNumber":184,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":186,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":187,"author":{"gitId":"kimberlybp"},"content":"     * This method returns the list of technician ids assigned to this task.","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":189,"author":{"gitId":"kimberlybp"},"content":"     * @return the list of technician ids assigned to this task.","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":191,"author":{"gitId":"kimberlybp"},"content":"    public List\u003cInteger\u003e getAssignedToIds() {","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"kimberlybp"},"content":"        return new ArrayList\u003c\u003e(this.assignedToIds);","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":194,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":195,"author":{"gitId":"9fc70c892"},"content":"    public Set\u003cInteger\u003e getAssignedToIdsSet() {","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"9fc70c892"},"content":"        return this.assignedToIds;","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"kimberlybp"},"content":"     * This method returns the status of this service.","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"kimberlybp"},"content":"     * @return the status of this service.","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"kimberlybp"},"content":"    public ServiceStatus getStatus() {","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"kimberlybp"},"content":"        return status;","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":209,"author":{"gitId":"9fc70c892"},"content":"     * This method adds a technician to this service.","lastModifiedDate":"2023-02-19"},{"lineNumber":210,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":211,"author":{"gitId":"9fc70c892"},"content":"     * @param technician The technician assigned to this service.","lastModifiedDate":"2023-02-19"},{"lineNumber":212,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":213,"author":{"gitId":"9fc70c892"},"content":"    public void assignTechnician(Technician technician) {","lastModifiedDate":"2023-02-19"},{"lineNumber":214,"author":{"gitId":"kimberlybp"},"content":"        this.assignedToIds.add(technician.getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":216,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":217,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"ginloy"},"content":"     * Assigns technician ID to this service","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"ginloy"},"content":"     * @param technicianId ID of technician","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"ginloy"},"content":"    public void assignTechnician(int technicianId) {","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"ginloy"},"content":"        this.assignedToIds.add(technicianId);","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":227,"author":{"gitId":"9fc70c892"},"content":"     * This method removes a technician from this service.","lastModifiedDate":"2023-02-19"},{"lineNumber":228,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":229,"author":{"gitId":"9fc70c892"},"content":"     * @param technician The technician to be removed from this service.","lastModifiedDate":"2023-02-19"},{"lineNumber":230,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":231,"author":{"gitId":"9fc70c892"},"content":"    public void removeTechnician(Technician technician) {","lastModifiedDate":"2023-02-19"},{"lineNumber":232,"author":{"gitId":"kimberlybp"},"content":"        this.assignedToIds.remove(technician.getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":234,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":235,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if both Services have the same id.","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"kimberlybp"},"content":"    public boolean isSameService(Service otherService) {","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"kimberlybp"},"content":"        if (otherService \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"kimberlybp"},"content":"        return otherService !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 otherService.getId() \u003d\u003d getId();","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"kimberlybp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"kimberlybp"},"content":"        if (other instanceof Service) {","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"kimberlybp"},"content":"            Service otherService \u003d (Service) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"kimberlybp"},"content":"            return this.getId() \u003d\u003d otherService.getId() || super.equals(other);","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"kimberlybp"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":261,"author":{"gitId":"kimberlybp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":262,"author":{"gitId":"ginloy"},"content":"        return Objects.hash(id);","lastModifiedDate":"2023-03-31"},{"lineNumber":263,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":264,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":265,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":266,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":267,"author":{"gitId":"ginloy"},"content":"        String newline \u003d System.lineSeparator();","lastModifiedDate":"2023-03-12"},{"lineNumber":268,"author":{"gitId":"kimberlybp"},"content":"        String parts \u003d this.getRequiredParts().toString();","lastModifiedDate":"2023-03-16"},{"lineNumber":269,"author":{"gitId":"kimberlybp"},"content":"        String technicians \u003d this.getAssignedToIds().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":270,"author":{"gitId":"kimberlybp"},"content":"                .map(Object::toString)","lastModifiedDate":"2023-03-13"},{"lineNumber":271,"author":{"gitId":"ginloy"},"content":"                .reduce(\"\", (a, b) -\u003e a + \"\\n\" + b);","lastModifiedDate":"2023-03-12"},{"lineNumber":272,"author":{"gitId":"ginloy"},"content":"        if (technicians.length() \u003e 0) {","lastModifiedDate":"2023-03-12"},{"lineNumber":273,"author":{"gitId":"ginloy"},"content":"            technicians \u003d technicians.substring(1);","lastModifiedDate":"2023-03-12"},{"lineNumber":274,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":275,"author":{"gitId":"kimberlybp"},"content":"        String status \u003d this.status.getValue();","lastModifiedDate":"2023-03-15"},{"lineNumber":276,"author":{"gitId":"ginloy"},"content":"        String formatter \u003d \"\u003c\u003cService\u003e\u003e\" + newline","lastModifiedDate":"2023-03-12"},{"lineNumber":277,"author":{"gitId":"ginloy"},"content":"                + \"ID: %d\" + newline","lastModifiedDate":"2023-03-12"},{"lineNumber":278,"author":{"gitId":"ginloy"},"content":"                + \"Desc: %s\" + newline","lastModifiedDate":"2023-03-12"},{"lineNumber":279,"author":{"gitId":"kimberlybp"},"content":"                + \"Status: %s\" + newline","lastModifiedDate":"2023-03-18"},{"lineNumber":280,"author":{"gitId":"ginloy"},"content":"                + \"Entry Date: %s\" + newline","lastModifiedDate":"2023-03-12"},{"lineNumber":281,"author":{"gitId":"ginloy"},"content":"                + \"Est Finish Date: %s\" + newline","lastModifiedDate":"2023-03-12"},{"lineNumber":282,"author":{"gitId":"ginloy"},"content":"                + \"Parts Required: %n %s\" + newline","lastModifiedDate":"2023-03-12"},{"lineNumber":283,"author":{"gitId":"kimberlybp"},"content":"                + \"Assigned Technicians: %n %s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":284,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":285,"author":{"gitId":"ginloy"},"content":"        return String.format(formatter,","lastModifiedDate":"2023-03-12"},{"lineNumber":286,"author":{"gitId":"ginloy"},"content":"                this.getId(),","lastModifiedDate":"2023-03-12"},{"lineNumber":287,"author":{"gitId":"ginloy"},"content":"                this.getDescription(),","lastModifiedDate":"2023-03-12"},{"lineNumber":288,"author":{"gitId":"kimberlybp"},"content":"                this.status,","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"ginloy"},"content":"                this.getEntryDate(),","lastModifiedDate":"2023-03-12"},{"lineNumber":290,"author":{"gitId":"ginloy"},"content":"                this.getEstimatedFinishDate(),","lastModifiedDate":"2023-03-12"},{"lineNumber":291,"author":{"gitId":"ginloy"},"content":"                StringUtil.indent(parts, 2),","lastModifiedDate":"2023-03-12"},{"lineNumber":292,"author":{"gitId":"kimberlybp"},"content":"                StringUtil.indent(technicians, 2));","lastModifiedDate":"2023-03-31"},{"lineNumber":293,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":294,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":295,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":296,"author":{"gitId":"ginloy"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":297,"author":{"gitId":"ginloy"},"content":"        boolean stringMatch \u003d this.status.toString().toLowerCase().contains(keyword)","lastModifiedDate":"2023-03-30"},{"lineNumber":298,"author":{"gitId":"ginloy"},"content":"            || this.description.toLowerCase().contains(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":299,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":300,"author":{"gitId":"ginloy"},"content":"            LocalDate date \u003d LocalDate.parse(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":301,"author":{"gitId":"ginloy"},"content":"            boolean dateMatch \u003d this.entryDate.equals(date) || this.estimatedFinishDate.equals(date);","lastModifiedDate":"2023-03-30"},{"lineNumber":302,"author":{"gitId":"ginloy"},"content":"            return dateMatch || stringMatch;","lastModifiedDate":"2023-03-30"},{"lineNumber":303,"author":{"gitId":"ginloy"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":304,"author":{"gitId":"ginloy"},"content":"            return stringMatch;","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":306,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":307,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":115,"ginloy":87,"9fc70c892":105}},{"path":"src/main/java/seedu/address/model/service/ServiceIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":" * Tests that a {@code Service}\u0027s id matches the id given.","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"public class ServiceIdPredicate implements Predicate\u003cService\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    public ServiceIdPredicate(int id) {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"    public boolean test(Service service) {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"        return service.getId() \u003d\u003d id;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof ServiceIdPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 id \u003d\u003d ((ServiceIdPredicate) other).id); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":2,"9fc70c892":26}},{"path":"src/main/java/seedu/address/model/service/ServiceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.service;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.exception.ServiceNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * A list of services that does not enforce uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"public class ServiceList implements Iterable\u003cService\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final ObservableList\u003cService\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private final ObservableList\u003cService\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * Adds a vehicle to the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * The vehicle must not already exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    public void add(Service toAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the service {@code target} in the list with {@code editedService}.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    public void setService(Service target, Service editedService) {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        requireAllNonNull(target, editedService);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"            throw new ServiceNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        internalList.set(index, editedService);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     * Removes the equivalent service from the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     * The service must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    public void remove(Service toRemove) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"            throw new ServiceNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"    public void setServices(ServiceList replacement) {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the contents of this list with {@code services}.","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"    public void setServices(List\u003cService\u003e services) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        requireAllNonNull(services);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        internalList.setAll(services);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cService\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"    public Iterator\u003cService\u003e iterator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":88,"9fc70c892":1}},{"path":"src/main/java/seedu/address/model/service/ServiceStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.service;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Represents the possible types of service status that AutoM8 can recognise.","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"public enum ServiceStatus {","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"    TO_REPAIR(\"To Repair\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    IN_PROGRESS(\"In Progress\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    COMPLETE(\"Complete\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"    CANCELLED(\"Cancelled\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    ON_HOLD(\"On Hold\");","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"            \"Service status should only be \u0027to repair\u0027, \"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"                    + \"\u0027in progress\u0027, \"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"                    + \"\u0027complete\u0027, \"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"                    + \"\u0027cancelled\u0027 or \"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"                    + \"\u0027on hold\u0027\";","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private final String value;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new ServiceStatus with the specified value.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @param value the value of this ServiceStatus","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    ServiceStatus(String value) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * Returns whether this ServiceStatus\u0027s value is equal to the specified input, ignoring case.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * @param input the input to compare with this ServiceStatus\u0027s value","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @return whether this ServiceStatus\u0027s value is equal to the specified input, ignoring case","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    public boolean isEqual(String input) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        return this.value.equalsIgnoreCase(input);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        return value;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"kimberlybp":37,"ginloy":7}},{"path":"src/main/java/seedu/address/model/service/UniqueVehicleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.service;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.exception.DuplicateVehicleException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.exception.VehicleNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * A list of vehicles that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" * A vehicle is considered unique by comparing using","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" * {@code Vehicle#isSameVehicle(Vehicle)}. As such, adding and updating of","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" * vehicles uses Vehicle#isSameVehicle(Vehicle) for equality so as to ensure","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":" * that the vehicle being added or updated is","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":" * unique in terms of plate number in the UniqueVehicleList. However, the removal of a","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":" * vehicle uses Vehicle#equals(Object) so","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":" * that we ensure vehicles with the same car plates will be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":" * @see Vehicle#isSameVehicle(Vehicle)","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"public class UniqueVehicleList implements Iterable\u003cVehicle\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    private final ObservableList\u003cVehicle\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    private final ObservableList\u003cVehicle\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if the list contains an equivalent vehicle as the given argument.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    public boolean contains(Vehicle toCheck) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        return internalList.stream().anyMatch(toCheck::isSameVehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * Adds a vehicle to the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     * The vehicle must not already exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    public void add(Vehicle toAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            throw new DuplicateVehicleException();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the vehicle {@code target} in the list with {@code editedVehicle}.","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"     * The vehicle car plate of {@code editedVehicle} must not be the same as another existing vehicle in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"    public void setVehicle(Vehicle target, Vehicle editedVehicle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        requireAllNonNull(target, editedVehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"            throw new VehicleNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        if (!target.isSameVehicle(editedVehicle) \u0026\u0026 contains(editedVehicle)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"            throw new DuplicateVehicleException();","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        internalList.set(index, editedVehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"     * Removes the equivalent vehicle from the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"     * The vehicle must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    public void remove(Vehicle toRemove) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"            throw new VehicleNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    public void setVehicles(UniqueVehicleList replacement) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"     * Replaces the contents of this list with {@code vehicles}.","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"     * {@code vehicles} must not contain duplicate vehicles.","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"    public void setVehicles(List\u003cVehicle\u003e vehicles) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"        requireAllNonNull(vehicles);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        if (!customersAreUnique(vehicles)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"            throw new DuplicateVehicleException();","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        internalList.setAll(vehicles);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"    public ObservableList\u003cVehicle\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"    public Iterator\u003cVehicle\u003e iterator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"                || (other instanceof UniqueVehicleList // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"                        \u0026\u0026 internalList.equals(((UniqueVehicleList) other).internalList));","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if {@code vehicles} contains only unique vehicles.","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"    private boolean customersAreUnique(List\u003cVehicle\u003e vehicles) {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c vehicles.size() - 1; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"            for (int j \u003d i + 1; j \u003c vehicles.size(); j++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"                if (vehicles.get(i).isSameVehicle(vehicles.get(j))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"                    return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":140}},{"path":"src/main/java/seedu/address/model/service/Vehicle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.service;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Findable;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":" * The vehicle class is the superclass of all types of vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":" * As a start, you may wish to consider VehicleType of creating other subclasses.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"public class Vehicle implements Findable {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    private int id;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"    private int ownerId;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"    private String plateNumber;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"    private String color;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    private String brand;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"    private VehicleType type;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private final Set\u003cInteger\u003e serviceIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"     * This method is the constructor for the Vehicle class.","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"     * @param ownerId     Id of customer that owns the vehicle","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"     * @param plateNumber The Vehicle Registration Number (VRN) of the vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"     * @param color       This is the color of the vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"     * @param brand       This is the brand of the vehicle (i.e. KIA).","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"     * @param type        What vehicle type this vehicle is (i.e. Bike)","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    public Vehicle(int id, int ownerId, String plateNumber, String color, String brand, VehicleType type) {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"        this.ownerId \u003d ownerId;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"        this.plateNumber \u003d plateNumber;","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"        this.color \u003d color;","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        this.brand \u003d brand;","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     * This method is the constructor for the Vehicle class.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     * @param plateNumber The Vehicle Registration Number (VRN) of the vehicle.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * @param color This is the color of the vehicle.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     * @param brand This is the brand of the vehicle (i.e. KIA).","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     * @param type What vehicle type this vehicle is (i.e. Bike)","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     * @param serviceIds The list of service id this vehicle had/has","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    public Vehicle(int id, int ownerId, String plateNumber, String color, String brand,","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"                   VehicleType type, Set\u003cInteger\u003e serviceIds) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        this.ownerId \u003d ownerId;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        this.plateNumber \u003d plateNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        this.color \u003d color;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        this.brand \u003d brand;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        this.serviceIds.addAll(serviceIds);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"     * This method is the constructor for the Vehicle class.","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"     * @param plateNumber The Vehicle Registration Number (VRN) of the vehicle.","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"     * @param color This is the color of the vehicle.","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"     * @param brand This is the brand of the vehicle (i.e. KIA).","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"     * @param type What vehicle type this vehicle is (i.e. Bike)","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"     * @param serviceIds The list of service id this vehicle had/has","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"    public Vehicle(int id, String plateNumber, String color, String brand, VehicleType type, Set\u003cInteger\u003e serviceIds) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        this.plateNumber \u003d plateNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        this.color \u003d color;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        this.brand \u003d brand;","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        this.serviceIds.addAll(serviceIds);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the id of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"     * This is not the VRN number.","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"     * @return The id of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"9fc70c892"},"content":"    public int getId() {","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"        return id;","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"ginloy"},"content":"     * @return Id of customer that owns the vehicle","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"ginloy"},"content":"    public int getOwnerId() {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"ginloy"},"content":"        return this.ownerId;","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the VRN number of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"9fc70c892"},"content":"     * @return the plate number of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"9fc70c892"},"content":"    public String getPlateNumber() {","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"9fc70c892"},"content":"        return plateNumber;","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"9fc70c892"},"content":"     * This method sets the VRN number of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"9fc70c892"},"content":"     * Primarily used of the vehicle\u0027s VRN has been changed.","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"9fc70c892"},"content":"     * @param plateNumber the new plate number of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"9fc70c892"},"content":"    public void setPlateNumber(String plateNumber) {","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"9fc70c892"},"content":"        this.plateNumber \u003d plateNumber;","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the current color of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"9fc70c892"},"content":"     * @return the color of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"    public String getColor() {","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"        return color;","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"     * This method changes the color of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"     * @param color the new color of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"9fc70c892"},"content":"    public void setColor(String color) {","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"9fc70c892"},"content":"        this.color \u003d color;","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the brand of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"     * @return the brand of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"9fc70c892"},"content":"    public String getBrand() {","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"9fc70c892"},"content":"        return brand;","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"9fc70c892"},"content":"     * This method sets the brand of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"9fc70c892"},"content":"     * Only to be used if errors has been made.","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"9fc70c892"},"content":"     * @param brand","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"9fc70c892"},"content":"    public void setBrand(String brand) {","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"9fc70c892"},"content":"        this.brand \u003d brand;","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"9fc70c892"},"content":"     * This returns the VehicleType of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"9fc70c892"},"content":"     * i.e. returns that it is a car or a motorbike.","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"9fc70c892"},"content":"     * @return the type of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"9fc70c892"},"content":"    public VehicleType getType() {","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"9fc70c892"},"content":"        return type;","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"9fc70c892"},"content":"     * This method changes the VehicleType of this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"9fc70c892"},"content":"     * @param type the VehicleType to be changed to.","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"9fc70c892"},"content":"    public void setType(VehicleType type) {","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"9fc70c892"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":170,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the services that is needed to be done to this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"9fc70c892"},"content":"     * In a List.","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"     * @return List of services","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"kimberlybp"},"content":"    public List\u003cInteger\u003e getServiceIds() {","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"kimberlybp"},"content":"        return new ArrayList\u003c\u003e(this.serviceIds);","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the services that is needed to be done to this vehicle.","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"     * In a Set.","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"     * @return Set of services","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"9fc70c892"},"content":"    public Set\u003cInteger\u003e getServiceIdsSet() {","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"9fc70c892"},"content":"        return this.serviceIds;","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":192,"author":{"gitId":"9fc70c892"},"content":"     * This method adds the service that is needed to be done to this vehicle.","lastModifiedDate":"2023-02-19"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":194,"author":{"gitId":"9fc70c892"},"content":"     * @param service the service to be added.","lastModifiedDate":"2023-02-19"},{"lineNumber":195,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":196,"author":{"gitId":"9fc70c892"},"content":"    public void addService(Service service) {","lastModifiedDate":"2023-02-19"},{"lineNumber":197,"author":{"gitId":"kimberlybp"},"content":"        this.serviceIds.add(service.getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":199,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":200,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":201,"author":{"gitId":"9fc70c892"},"content":"     * This method removes a service that was added to this vehicle...","lastModifiedDate":"2023-02-19"},{"lineNumber":202,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":203,"author":{"gitId":"9fc70c892"},"content":"     * @param service the service to be removed.","lastModifiedDate":"2023-02-19"},{"lineNumber":204,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":205,"author":{"gitId":"9fc70c892"},"content":"    public void removeService(Service service) {","lastModifiedDate":"2023-02-19"},{"lineNumber":206,"author":{"gitId":"kimberlybp"},"content":"        this.serviceIds.remove(service.getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":208,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":209,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if both vehicles have the same plate number.","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"kimberlybp"},"content":"    public boolean isSameVehicle(Vehicle otherVehicle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"kimberlybp"},"content":"        if (otherVehicle \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"kimberlybp"},"content":"        return otherVehicle !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 otherVehicle.getPlateNumber().equalsIgnoreCase(getPlateNumber());","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"kimberlybp"},"content":"     * Returns true if both vehicles have the same car plate number.","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"kimberlybp"},"content":"        if (other instanceof Vehicle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"kimberlybp"},"content":"            Vehicle otherVehicle \u003d (Vehicle) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"kimberlybp"},"content":"            return this.isSameVehicle(otherVehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"kimberlybp"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":239,"author":{"gitId":"kimberlybp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":240,"author":{"gitId":"ginloy"},"content":"        return Objects.hash(this.id);","lastModifiedDate":"2023-03-31"},{"lineNumber":241,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":242,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":243,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"ginloy"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"ginloy"},"content":"        return builder.append(String.format(\"ID: %s\", this.getId()))","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"ginloy"},"content":"                .append(String.format(\"%nOwner: %s\", this.getOwnerId()))","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"ginloy"},"content":"                .append(String.format(\"%nPlate: %s\", this.getPlateNumber()))","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"ginloy"},"content":"                .append(String.format(\"%nColor: %s\", this.getColor()))","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"ginloy"},"content":"                .append(String.format(\"%nBrand: %s\", this.getBrand()))","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"kimberlybp"},"content":"                .append(String.format(\"%nType: %s\", this.getType().getValue()))","lastModifiedDate":"2023-03-18"},{"lineNumber":252,"author":{"gitId":"kimberlybp"},"content":"                .append(String.format(\"%nServices: %n%s\",","lastModifiedDate":"2023-03-18"},{"lineNumber":253,"author":{"gitId":"kimberlybp"},"content":"                        StringUtil.indent(this.getServiceIds().toString(), 2)))","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"ginloy"},"content":"                .toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"ginloy"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"ginloy"},"content":"        return this.brand.toLowerCase().contains(keyword)","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"ginloy"},"content":"            || this.color.toLowerCase().contains(keyword)","lastModifiedDate":"2023-03-30"},{"lineNumber":261,"author":{"gitId":"ginloy"},"content":"            || this.plateNumber.toLowerCase().contains(keyword)","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"ginloy"},"content":"            || this.type.toString().toLowerCase().contains(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":82,"ginloy":36,"9fc70c892":146}},{"path":"src/main/java/seedu/address/model/service/VehicleIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":" * Tests that a {@code Vehicle}\u0027s id matches the id given.","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"public class VehicleIdPredicate implements Predicate\u003cVehicle\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"    public VehicleIdPredicate(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"    public boolean test(Vehicle vehicle) {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"        return vehicle.getId() \u003d\u003d id;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof VehicleIdPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 id \u003d\u003d ((VehicleIdPredicate) other).id); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"9fc70c892":28}},{"path":"src/main/java/seedu/address/model/service/VehicleType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.service;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Represents the possible types of VehicleTypes that AutoM8 can add to the system.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"public enum VehicleType {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"    MOTORBIKE(\"Motorbike\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    CAR(\"Car\");","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Vehicle type should only be \u0027motorbike\u0027 or \u0027car\u0027\";","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    private final String value;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a new VehicleType with the specified value.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     * @param value the value of this VehicleType","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    VehicleType(String value) {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * Returns whether this VehicleType\u0027s value is equal to the specified input, ignoring case.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * @param input the input to compare with this VehicleType\u0027s value","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * @return whether this VehicleType\u0027s value is equal to the specified input, ignoring case","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    public boolean isEqual(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        return this.value.equalsIgnoreCase(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        return value;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":34,"ginloy":2}},{"path":"src/main/java/seedu/address/model/service/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service.appointment;","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"import static seedu.address.commons.util.StringUtil.NEWLINE;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import java.time.Period;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.Findable;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":" * The appointment class containing a meeting with a customer at a particular date.","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"public class Appointment implements Findable {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * Represents the status of the appointment date base on current date time","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public enum DateStatus {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        NOW,","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        UPCOMING,","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        PASSED,","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"    private static final String OUTPUT_FORMAT \u003d \"\u003c\u003cAppointment\u003e\u003e\" + NEWLINE","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"                                                        + \"Customer: %d\" + NEWLINE","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"                                                        + \"Date: %s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    private final int id;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    private final int customerId;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"    private final LocalDateTime timeDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    private final Set\u003cInteger\u003e staffIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"     * This method is the constructor for Appointment.","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"     * @param customerId The customer id to meet.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"     * @param timeDate   The date time which this appointment occurs.","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    public Appointment(int id, int customerId, LocalDateTime timeDate) {","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"        this(id, customerId, timeDate, new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"     * This method is the constructor for Appointment.","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"     * @param customerId The customer id to meet.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"     * @param timeDate   The date time which this appointment occurs.","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"     * @param staffIds   The list of staff ids involved in the appointment.","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"    public Appointment(int id, int customerId, LocalDateTime timeDate, Set\u003cInteger\u003e staffIds) {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        this.timeDate \u003d timeDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        this.staffIds.addAll(staffIds);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"     * @return ID of appointment","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"    public int getId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"        return this.id;","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"     * This method returns the customer id who we are meeting.","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"     * @return The customer id.","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    public int getCustomerId() {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        return customerId;","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the time which we are meeting this customer.","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"9fc70c892"},"content":"     * @return the date time of this appointment.","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"    public LocalDateTime getTimeDate() {","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"9fc70c892"},"content":"        return timeDate;","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"9fc70c892"},"content":"     * This method returns the list of staff members who will be meeting this customer.","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"9fc70c892"},"content":"     * @return a list of staff members.","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"    public List\u003cInteger\u003e getStaffIds() {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"        return new ArrayList\u003c\u003e(this.staffIds);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"ginloy"},"content":"     * Adds technician ID to the appointment","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"ginloy"},"content":"     * @param technicianId ID of technician","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"ginloy"},"content":"    public void addTechnician(int technicianId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"ginloy"},"content":"        this.staffIds.add(technicianId);","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"ginloy"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"ginloy"},"content":"     * Removes technician ID from staffIds","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"ginloy"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"ginloy"},"content":"     * @param technicianId ID of technician","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"ginloy"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"ginloy"},"content":"    public void removeTechnician(int technicianId) {","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"ginloy"},"content":"        this.staffIds.remove(technicianId);","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"     * Returns true if both staffs have the same id.","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"            return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"                       \u0026\u0026 otherAppointment.getId() \u003d\u003d getId();","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"junlee1991"},"content":"    /***","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"junlee1991"},"content":"     * This method returns a boolean indicating if a date falls on the specified date","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"junlee1991"},"content":"     * @param ldt","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"junlee1991"},"content":"     * @return a boolean indicating if the date falls on the same date as the input","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"junlee1991"},"content":"    // adapted from https://stackoverflow.com/questions/494180/how-do-i-check-if-a-date-is-within-a-certain-range","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"junlee1991"},"content":"    // checks if the date is between arrival and endDate","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"junlee1991"},"content":"    public boolean isWithinRange(LocalDateTime ldt) {","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"junlee1991"},"content":"        LocalDate totalDate \u003d this.getTimeDate().toLocalDate();","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"junlee1991"},"content":"        LocalDate startDate \u003d ldt.toLocalDate().minus(Period.ofDays(1));","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"junlee1991"},"content":"        LocalDate endDate \u003d ldt.toLocalDate().plusDays(1);","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"junlee1991"},"content":"        return (totalDate.isAfter(startDate) \u0026\u0026 totalDate.isBefore(endDate));","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"    public DateStatus getDateStatus() {","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"        LocalDate date \u003d this.timeDate.toLocalDate();","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"        if (date.isAfter(today)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"kimberlybp"},"content":"            // Date is in the future","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"            long daysBetween \u003d ChronoUnit.DAYS.between(today, date);","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"kimberlybp"},"content":"            if (daysBetween \u003d\u003d 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"kimberlybp"},"content":"                return DateStatus.UPCOMING;","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"kimberlybp"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"kimberlybp"},"content":"                return DateStatus.UPCOMING;","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"kimberlybp"},"content":"        } else if (date.isBefore(today)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"kimberlybp"},"content":"            // Date is in the past","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"kimberlybp"},"content":"            long daysBetween \u003d ChronoUnit.DAYS.between(date, today);","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"kimberlybp"},"content":"            if (daysBetween \u003d\u003d 1) {","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"kimberlybp"},"content":"                return DateStatus.PASSED;","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"kimberlybp"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"kimberlybp"},"content":"                return DateStatus.PASSED;","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"kimberlybp"},"content":"            // Date is today","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"            return DateStatus.NOW;","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":171,"author":{"gitId":"ginloy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-31"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"        return Objects.hash(this.id);","lastModifiedDate":"2023-03-31"},{"lineNumber":173,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":174,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"ginloy"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"ginloy"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"            return true;","lastModifiedDate":"2023-03-31"},{"lineNumber":179,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":180,"author":{"gitId":"ginloy"},"content":"        if (obj instanceof Appointment) {","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"            Appointment other \u003d (Appointment) obj;","lastModifiedDate":"2023-03-31"},{"lineNumber":182,"author":{"gitId":"ginloy"},"content":"            return this.id \u003d\u003d other.id;","lastModifiedDate":"2023-03-31"},{"lineNumber":183,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":184,"author":{"gitId":"ginloy"},"content":"        return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"ginloy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"ginloy"},"content":"        return String.format(OUTPUT_FORMAT, this.getCustomerId(),","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"ginloy"},"content":"                this.getTimeDate().format(DateTimeFormatter.ofLocalizedDateTime(","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"ginloy"},"content":"                        FormatStyle.FULL, FormatStyle.SHORT)));","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"ginloy"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"ginloy"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"ginloy"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"ginloy"},"content":"            LocalDate date \u003d LocalDate.parse(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"ginloy"},"content":"            return this.timeDate.toLocalDate().equals(date);","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"ginloy"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"ginloy"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":57,"ginloy":83,"9fc70c892":46,"junlee1991":17}},{"path":"src/main/java/seedu/address/model/service/appointment/AppointmentIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service.appointment;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":" * Tests that a {@code Appointment}\u0027s id matches the id given.","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"public class AppointmentIdPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"    private final int id;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"    public AppointmentIdPredicate(int id) {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"        return appointment.getId() \u003d\u003d id;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof AppointmentIdPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"                \u0026\u0026 id \u003d\u003d ((AppointmentIdPredicate) other).id); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"9fc70c892":28}},{"path":"src/main/java/seedu/address/model/service/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service.appointment;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":" * A appointment is considered unique by comparing using","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":" * {@code Appointment#isSameAppointment(Appointment)}. As such, adding and updating of","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":" * appointment uses Appointment#isSameAppointment(Appointment) for equality so as to","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":" * ensure that the appointment being added or updated is","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":" * unique in terms of identity in the UniqueAppointmentList.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":" *","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":" *","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"9fc70c892"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"9fc70c892"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"9fc70c892"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"9fc70c892"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"     * Returns true if the list contains an equivalent Appointment as the given argument.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"9fc70c892"},"content":"     * Adds an appointment  to the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"9fc70c892"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"9fc70c892"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"9fc70c892"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"9fc70c892"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"9fc70c892"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"9fc70c892"},"content":"     * Replaces the appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"9fc70c892"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"9fc70c892"},"content":"     * The identity of {@code editedAppointment} must not be the same as another existing appointment in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"9fc70c892"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"9fc70c892"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"9fc70c892"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"9fc70c892"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"9fc70c892"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"9fc70c892"},"content":"        if (!target.isSameAppointment(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"9fc70c892"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"9fc70c892"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"9fc70c892"},"content":"     * Removes the equivalent appointment from the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"9fc70c892"},"content":"     * The appointment must exist in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"9fc70c892"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"9fc70c892"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"9fc70c892"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"9fc70c892"},"content":"    public void setAppointments(UniqueAppointmentList replacement) {","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"9fc70c892"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"9fc70c892"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"9fc70c892"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"9fc70c892"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"9fc70c892"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"9fc70c892"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"9fc70c892"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"9fc70c892"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"9fc70c892"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"9fc70c892"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"9fc70c892"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"9fc70c892"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"9fc70c892"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"9fc70c892"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"9fc70c892"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"9fc70c892"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"9fc70c892"},"content":"                || (other instanceof UniqueAppointmentList // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"9fc70c892"},"content":"                        \u0026\u0026 internalList.equals(((UniqueAppointmentList) other).internalList));","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"9fc70c892"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"9fc70c892"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"9fc70c892"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"9fc70c892"},"content":"     * Returns true if {@code appointments} contains only unique Appointments.","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"9fc70c892"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"9fc70c892"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"9fc70c892"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"9fc70c892"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"9fc70c892"},"content":"                    return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"9fc70c892"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"9fc70c892"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"9fc70c892"},"content":"        return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"9fc70c892":142}},{"path":"src/main/java/seedu/address/model/service/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service.appointment.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"public class AppointmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"9fc70c892":6}},{"path":"src/main/java/seedu/address/model/service/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service.appointment.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":" * Signals that the operation will result in duplicate Appointment (Appointments are considered the same if they have","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":" * the same identity).","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"        super(\"Operation would result in duplicate appointment\");","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"9fc70c892":11}},{"path":"src/main/java/seedu/address/model/service/exception/DuplicateVehicleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.service.exception;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Signals that the operation will result in duplicate Vehicles","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" * (Vehicles are considered duplicates if they have the same","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":" * plate number).","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"public class DuplicateVehicleException extends RuntimeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    public DuplicateVehicleException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"        super(\"Operation would result in duplicate vehicles\");","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":12}},{"path":"src/main/java/seedu/address/model/service/exception/NegativeValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service.exception;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":" * This exception is raised when a user attempts to add a negative quantity for parts.","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"public class NegativeValueException extends RuntimeException {","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"     * Constructs a new runtime exception with the specified part","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"     * The cause is not initialized, and may subsequently be initialized by a","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"     * call to {@link #initCause}.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"    public NegativeValueException(int value) {","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"        super(\"Unable to set values to negative values\");","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"9fc70c892":16}},{"path":"src/main/java/seedu/address/model/service/exception/PartLessThanZeroException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"9fc70c892"},"content":"package seedu.address.model.service.exception;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"9fc70c892"},"content":" * This exception is raised when there is insufficient parts.","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"public class PartLessThanZeroException extends RuntimeException {","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"     * Constructs a new runtime exception with the specified part","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"     * The cause is not initialized, and may subsequently be initialized by a","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"     * call to {@link #initCause}.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"     * @param partName Name of the part with a lack of quantity.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"    public PartLessThanZeroException(String partName) {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"        super(\"Doing this action would cause \" + partName + \" to be less than zero.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"kimberlybp":1,"9fc70c892":17}},{"path":"src/main/java/seedu/address/model/service/exception/PartNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.model.service.exception;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":" * Thrown when part name not found in the part map","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"public class PartNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"    public PartNotFoundException(String partName) {","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"        super(partName + \" not found.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kimberlybp":3,"ginloy":7}},{"path":"src/main/java/seedu/address/model/service/exception/ServiceNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.service.exception;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Thrown when vehicle not found in the vehicle list","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"public class ServiceNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":7}},{"path":"src/main/java/seedu/address/model/service/exception/VehicleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.model.service.exception;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":" * Thrown when vehicle not found in the vehicle list","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"public class VehicleNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\\\\p{Alnum} *\\\\p{Alnum}+\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kimberlybp":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.ServiceStatus;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.VehicleType;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    public static Customer[] getSampleCustomers() {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        return new Customer[]{","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"            new Customer(IdGenerator.generateCustomerId(), new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"                getTagSet(\"regular\"), getIntegerSet(1, 2), getIntegerSet(1, 2, 3, 4)),","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"            new Customer(IdGenerator.generateCustomerId(), new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"                getTagSet(\"difficult\", \"new driver\"), getIntegerSet(3), getIntegerSet(5, 6)),","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"            new Customer(IdGenerator.generateCustomerId(), new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"                new HashSet\u003c\u003e(), getIntegerSet(4, 5)),","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"            new Customer(IdGenerator.generateCustomerId(), new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"                new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"                getTagSet(\"regular\"), getIntegerSet(6)),","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"            new Customer(IdGenerator.generateCustomerId(), new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new HashSet\u003c\u003e(), new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"                    getIntegerSet(7)),","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            };","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    public static Technician[] getSampleTechnicians() {","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        return new Technician[]{","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"            new Technician(IdGenerator.generateStaffId(), new Name(\"James Tan\"), new Phone(\"89764362\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"                    new Email(\"jamestan@example.com\"), new Address(\"Blk 586 Bedok Street 23, #08-46\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"                    getTagSet(\"big boss\"), getIntegerSet(1, 4, 5, 6), getIntegerSet(1, 4)),","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"            new Technician(IdGenerator.generateStaffId(), new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"                    new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"                    getTagSet(\"good technician\"), getIntegerSet(3, 7), getIntegerSet(2, 5)),","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"            new Technician(IdGenerator.generateStaffId(), new Name(\"Loh Jia Yu\"), new Phone(\"968685152\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"                    new Email(\"lohjy@example.com\"), new Address(\"Blk 73 Hahn Quay Street 67, #04-45\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"                    getTagSet(\"new technician\"), getIntegerSet(3, 6), getIntegerSet(4, 5)),","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        };","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"    public static Appointment[] getSampleAppointments() {","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        return new Appointment[] {","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"            new Appointment(IdGenerator.generateAppointmentId(), 1, LocalDateTime.parse(\"10/12/2022 02:00 PM\", dtf),","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"                    getIntegerSet(1)),","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"            new Appointment(IdGenerator.generateAppointmentId(), 1, LocalDateTime.parse(\"21/12/2022 02:30 PM\", dtf),","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"                    getIntegerSet(2)),","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"            new Appointment(IdGenerator.generateAppointmentId(), 1, LocalDateTime.parse(\"15/02/2023 03:00 PM\", dtf),","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"                    getIntegerSet(3)),","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"            new Appointment(IdGenerator.generateAppointmentId(), 1, LocalDateTime.parse(\"01/05/2023 06:00 PM\", dtf),","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"                    getIntegerSet(1, 3)),","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"            new Appointment(IdGenerator.generateAppointmentId(), 2, LocalDateTime.parse(\"19/06/2022 12:30 PM\", dtf),","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"                    getIntegerSet(2, 3)),","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"            new Appointment(IdGenerator.generateAppointmentId(), 2, LocalDateTime.parse(\"25/04/2023 11:00 AM\", dtf)),","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"            new Appointment(IdGenerator.generateAppointmentId(), 5, LocalDateTime.parse(\"28/05/2023 05:45 PM\", dtf)),","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"        };","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"    public static Vehicle[] getSampleVehicles() {","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"        return new Vehicle[] {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"            new Vehicle(IdGenerator.generateVehicleId(), 1, \"SKA1234A\", \"Red\", \"Toyota Corolla\",","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"                VehicleType.CAR, getIntegerSet(1, 5)),","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"            new Vehicle(IdGenerator.generateVehicleId(), 1, \"SGP5678B\", \"Blue\", \"Toyota Prius\",","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"                VehicleType.CAR, getIntegerSet(3)),","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"            new Vehicle(IdGenerator.generateVehicleId(), 2, \"SLK9123C\", \"Grey\", \"BMW X4\",","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"                VehicleType.CAR, getIntegerSet(2)),","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"            new Vehicle(IdGenerator.generateVehicleId(), 3, \"SBF4567D\", \"Grey\", \"Suzuki SV650X ABS\",","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"                VehicleType.MOTORBIKE, getIntegerSet(4)),","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"            new Vehicle(IdGenerator.generateVehicleId(), 3, \"SGC2345F\", \"Black and White\", \"Honda Adv 150\",","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"                VehicleType.MOTORBIKE, getIntegerSet(7)),","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"            new Vehicle(IdGenerator.generateVehicleId(), 4, \"SLM5678K\", \"Dark Blue\", \"Hyundai Tucson SUV\",","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"                VehicleType.CAR),","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"        };","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"    public static Map\u003cString, Integer\u003e getSampleParts() {","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"        Map\u003cString, Integer\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Frame\", 50);","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Bolt\", 1000);","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Horn\", 100);","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Light\", 100);","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Wheels\", 500);","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Suspension\", 100);","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Gearbox\", 100);","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Headlamp\", 20);","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Steering\", 20);","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Engine\", 20);","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Brake Pads\", 50);","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"        map.put(\"Car Battery\", 50);","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"kimberlybp"},"content":"        return map;","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"kimberlybp"},"content":"    // NOTE: Ensure Parts added to Services match with the parts added to getSampleParts*","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"kimberlybp"},"content":"    public static Service[] getSampleServices() {","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"kimberlybp"},"content":"        PartMap samplePartsA \u003d new PartMap();","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"kimberlybp"},"content":"        samplePartsA.addPart(\"Wheels\", 4);","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"kimberlybp"},"content":"        samplePartsA.addPart(\"Suspension\", 4);","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"kimberlybp"},"content":"        PartMap samplePartsB \u003d new PartMap();","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"kimberlybp"},"content":"        samplePartsB.addPart(\"Gearbox\", 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"kimberlybp"},"content":"        PartMap samplePartsC \u003d new PartMap();","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"kimberlybp"},"content":"        samplePartsC.addPart(\"Engine\", 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"kimberlybp"},"content":"        PartMap samplePartsD \u003d new PartMap();","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"        samplePartsD.addPart(\"Car Battery\", 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"kimberlybp"},"content":"        PartMap samplePartsE \u003d new PartMap();","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"kimberlybp"},"content":"        samplePartsE.addPart(\"Brake Pads\", 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"kimberlybp"},"content":"        return new Service[]{","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"ginloy"},"content":"            new Service(IdGenerator.generateServiceId(), 1, LocalDate.parse(\"02/03/2022\", dtf),","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"kimberlybp"},"content":"                samplePartsC, \"Engine oil leak\",","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"kimberlybp"},"content":"                LocalDate.parse(\"10/04/2022\", dtf), ServiceStatus.COMPLETE, getIntegerSet(1)),","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"ginloy"},"content":"            new Service(IdGenerator.generateServiceId(), 3, LocalDate.parse(\"15/01/2023\", dtf),","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"kimberlybp"},"content":"                samplePartsD, \"Battery replacement\",","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"kimberlybp"},"content":"                LocalDate.parse(\"30/01/2023\", dtf), ServiceStatus.CANCELLED),","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"ginloy"},"content":"            new Service(IdGenerator.generateServiceId(), 2, LocalDate.parse(\"15/02/2023\", dtf),","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"kimberlybp"},"content":"                samplePartsB, \"Gearbox dead\",","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"kimberlybp"},"content":"                LocalDate.parse(\"05/04/2023\", dtf), ServiceStatus.IN_PROGRESS, getIntegerSet(2, 3)),","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"            new Service(IdGenerator.generateServiceId(), 4, LocalDate.parse(\"02/03/2022\", dtf),","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"kimberlybp"},"content":"                samplePartsC, \"Engine oil leak\",","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"kimberlybp"},"content":"                LocalDate.parse(\"10/04/2022\", dtf), ServiceStatus.ON_HOLD, getIntegerSet(1)),","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"ginloy"},"content":"            new Service(IdGenerator.generateServiceId(), 1, LocalDate.parse(\"16/03/2023\", dtf),","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"kimberlybp"},"content":"                samplePartsA, \"Wheels and suspension got rekt\",","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"kimberlybp"},"content":"                LocalDate.parse(\"28/03/2023\", dtf), ServiceStatus.IN_PROGRESS, getIntegerSet(1)),","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"ginloy"},"content":"            new Service(IdGenerator.generateServiceId(), 6, LocalDate.parse(\"16/03/2023\", dtf),","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"kimberlybp"},"content":"                samplePartsE, \"Brake pads worn out\",","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"kimberlybp"},"content":"                LocalDate.parse(\"02/04/2023\", dtf), ServiceStatus.TO_REPAIR, getIntegerSet(1, 3)),","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"ginloy"},"content":"            new Service(IdGenerator.generateServiceId(), 5, LocalDate.parse(\"16/03/2023\", dtf),","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"kimberlybp"},"content":"                new PartMap(), \"Just a simple inspection\",","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"kimberlybp"},"content":"                LocalDate.parse(\"18/03/2023\", dtf), ServiceStatus.TO_REPAIR, getIntegerSet(2)),","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"kimberlybp"},"content":"            };","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":204,"author":{"gitId":"kimberlybp"},"content":"    public static ReadOnlyShop getSampleShop() {","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"kimberlybp"},"content":"        Shop sampleSh \u003d new Shop();","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"kimberlybp"},"content":"        for (Customer sampleCustomer : getSampleCustomers()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"kimberlybp"},"content":"            sampleSh.addCustomer(sampleCustomer);","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":210,"author":{"gitId":"kimberlybp"},"content":"        for (Vehicle sampleVehicle : getSampleVehicles()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"kimberlybp"},"content":"            sampleSh.addVehicle(sampleVehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":214,"author":{"gitId":"kimberlybp"},"content":"        for (Map.Entry\u003cString, Integer\u003e entry : getSampleParts().entrySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":215,"author":{"gitId":"kimberlybp"},"content":"            String key \u003d entry.getKey();","lastModifiedDate":"2023-03-16"},{"lineNumber":216,"author":{"gitId":"kimberlybp"},"content":"            Integer value \u003d entry.getValue();","lastModifiedDate":"2023-03-16"},{"lineNumber":217,"author":{"gitId":"kimberlybp"},"content":"            sampleSh.addPart(key, value);","lastModifiedDate":"2023-03-16"},{"lineNumber":218,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":220,"author":{"gitId":"kimberlybp"},"content":"        for (Service sampleService : getSampleServices()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"kimberlybp"},"content":"            sampleSh.addService(sampleService);","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":224,"author":{"gitId":"kimberlybp"},"content":"        for (Appointment sampleAppointment : getSampleAppointments()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":225,"author":{"gitId":"kimberlybp"},"content":"            sampleSh.addAppointment(sampleAppointment);","lastModifiedDate":"2023-03-26"},{"lineNumber":226,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":227,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"kimberlybp"},"content":"        for (Technician sampleTechnician : getSampleTechnicians()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"kimberlybp"},"content":"            sampleSh.addTechnician(sampleTechnician);","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"kimberlybp"},"content":"        return sampleSh;","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":243,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"kimberlybp"},"content":"     * Returns a integer set containing the list of integers given.","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"kimberlybp"},"content":"    public static Set\u003cInteger\u003e getIntegerSet(Integer... integers) {","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"kimberlybp"},"content":"        return Arrays.stream(integers)","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"kimberlybp"},"content":"            .map(Integer::new)","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"kimberlybp"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kimberlybp":176,"ginloy":18,"-":58}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    private final int id;","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private final int customerId;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    private final String timeDate;","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cInteger\u003e staffIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"id\") int id, @JsonProperty(\"customerId\") int customerId,","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"                                  @JsonProperty(\"timeDate\") String timeDate,","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"                                  @JsonProperty(\"staffIds\") List\u003cInteger\u003e staffIds) {","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        this.timeDate \u003d timeDate;","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        if (staffIds !\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"            this.staffIds.addAll(staffIds);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        id \u003d source.getId();","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        customerId \u003d source.getCustomerId();","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        timeDate \u003d source.getTimeDate().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        staffIds.addAll(source.getStaffIds().stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"                .map(Integer::new)","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        final List\u003cInteger\u003e appointmentStaffIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        for (Integer staffId : staffIds) {","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            appointmentStaffIds.add(staffId);","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        if (id \u003c\u003d 0) {","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Id\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        final int modelId \u003d id;","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        if (customerId \u003c\u003d 0) {","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Customer Id\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        final int modelCustomerId \u003d customerId;","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        if (timeDate \u003d\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Datetime\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        final LocalDateTime modelTimeDate \u003d LocalDateTime.parse(timeDate, dtf);","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        final Set\u003cInteger\u003e moedlStaffIds \u003d new HashSet\u003c\u003e(appointmentStaffIds);","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        return new Appointment(modelId, modelCustomerId, modelTimeDate, moedlStaffIds);","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"kimberlybp":88}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" * Jackson-friendly version of {@link Customer}.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"class JsonAdaptedCustomer extends JsonAdaptedPerson {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Customer\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    private final int id;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cInteger\u003e vehicleIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cInteger\u003e appointmentIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a {@code JsonAdaptedCustomer} with the given customer details.","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedCustomer(@JsonProperty(\"id\") int id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"                               @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"                               @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"                               @JsonProperty(\"vehicleIds\") List\u003cInteger\u003e vehicleIds,","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"                               @JsonProperty(\"appointmentIds\") List\u003cInteger\u003e appointmentIds) {","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        super(name, phone, email, address, tagged);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        if (vehicleIds !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"            this.vehicleIds.addAll(vehicleIds);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        if (appointmentIds !\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"            this.appointmentIds.addAll(appointmentIds);","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     * Converts a given {@code Customer} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedCustomer(Customer source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        super(source);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d source.getId();","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        vehicleIds.addAll(source.getVehicleIds().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"                .map(Integer::new)","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        appointmentIds.addAll(source.getAppointmentIds().stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"                .map(Integer::new)","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Customer} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted customer.","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    public Customer toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        Person p \u003d super.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        final List\u003cInteger\u003e customerVehicleIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        for (Integer id : vehicleIds) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            customerVehicleIds.add(id);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        final List\u003cInteger\u003e customerAppointmentIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        for (Integer id : appointmentIds) {","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"            customerAppointmentIds.add(id);","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"        if (id \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Id\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        final int id \u003d this.id;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        final Set\u003cInteger\u003e modelVehicleIds \u003d new HashSet\u003c\u003e(customerVehicleIds);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        final Set\u003cInteger\u003e modelAppointmentIds \u003d new HashSet\u003c\u003e(customerAppointmentIds);","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        return new Customer(id, p.getName(), p.getPhone(), p.getEmail(), p.getAddress(),","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"                p.getTags(), modelVehicleIds, modelAppointmentIds);","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":90}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":" * Jackson-friendly version of an entry in {@link PartMap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"class JsonAdaptedPart {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Part\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final String name;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private final int quantity;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a {@code JsonAdaptedPart} with the given part details,","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * Converts a given {@code Part} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedPart(@JsonProperty(\"name\") String name, @JsonProperty(\"quantity\") int quantity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Map.Entry} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted part.","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    public Map.Entry\u003cString, Integer\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Name\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        if (quantity \u003c\u003d 0) {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Quantity\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        return new AbstractMap.SimpleEntry\u003c\u003e(name, quantity);","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"kimberlybp":50}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"9fc70c892":5,"-":104}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedService.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.ServiceStatus;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":" * Jackson-friendly version of {@link Service}.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"class JsonAdaptedService {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Service\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private final int id;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    private final int vehicleId;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    private final String entryDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    private final String description;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    private final String estimatedFinishDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    private final String status;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cJsonAdaptedPart\u003e parts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cInteger\u003e assignedToIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a {@code JsonAdaptedService} with the given service details.","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedService(@JsonProperty(\"id\") int id, @JsonProperty(\"vehicleId\") int vehicleId,","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"                              @JsonProperty(\"entryDate\") String entryDate,","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                              @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                              @JsonProperty(\"estimatedFinishDate\") String estimatedFinishDate,","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"                              @JsonProperty(\"status\") String status,","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                              @JsonProperty(\"parts\") List\u003cJsonAdaptedPart\u003e parts,","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                              @JsonProperty(\"assignedToIds\") List\u003cInteger\u003e assignedToIds) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        this.vehicleId \u003d vehicleId;","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        this.entryDate \u003d entryDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        this.estimatedFinishDate \u003d estimatedFinishDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        if (parts !\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"            this.parts.addAll(parts);","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        if (assignedToIds !\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"            this.assignedToIds.addAll(assignedToIds);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"     * Converts a given {@code Service} into this class for Jackson use.","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedService(Service source) {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        id \u003d source.getId();","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        vehicleId \u003d source.getVehicleId();","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        entryDate \u003d source.getEntryDate().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        estimatedFinishDate \u003d source.getEstimatedFinishDate().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        status \u003d source.getStatus().getValue();","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        PartMap sourceRequiredParts \u003d source.getRequiredParts();","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        for (Map.Entry\u003cString, Integer\u003e e : sourceRequiredParts.getEntrySet()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"            parts.add(new JsonAdaptedPart(e.getKey(), e.getValue()));","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"        assignedToIds.addAll(source.getAssignedToIds().stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"                .map(Integer::new)","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"     * Returns the ServiceStatus based on the String input given","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"     * by iterating through the existing ServiceStatus values","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"     * @return the ServiceStatus based on the String input given","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    private ServiceStatus getServiceStatus(String input) {","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"        for (ServiceStatus s : ServiceStatus.values()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"            if (s.isEqual(input)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"                return s;","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"        return ServiceStatus.ON_HOLD;","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Service} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted service.","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    public Service toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"        final PartMap modelParts \u003d new PartMap();","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        for (JsonAdaptedPart part : parts) {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"            Map.Entry\u003cString, Integer\u003e partEntry \u003d part.toModelType();","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"            modelParts.addPart(partEntry.getKey(), partEntry.getValue());","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"        final List\u003cInteger\u003e serviceAssignedToIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        for (Integer id : assignedToIds) {","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"            serviceAssignedToIds.add(id);","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"        if (id \u003c\u003d 0) {","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Id\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"        final int modelId \u003d id;","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"        if (vehicleId \u003c\u003d 0) {","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Vehicle Id\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"        final int modelVehicleId \u003d vehicleId;","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"        if (entryDate \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Entry Date\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"        final LocalDate modelEntryDate \u003d LocalDate.parse(entryDate, dtf);","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Description\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"        final String modelDescription \u003d description;","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"        if (estimatedFinishDate \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Estimated Finish Date\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"        final LocalDate modelEstimatedFinishDate \u003d LocalDate.parse(estimatedFinishDate, dtf);","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Status\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"        final ServiceStatus modelStatus \u003d getServiceStatus(status);","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"        final Set\u003cInteger\u003e modelAssignedToIds \u003d new HashSet\u003c\u003e(serviceAssignedToIds);","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"        return new Service(modelId, modelVehicleId, modelEntryDate, modelParts, modelDescription,","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"                modelEstimatedFinishDate, modelStatus, modelAssignedToIds);","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"kimberlybp":150}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTechnician.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" * Jackson-friendly version of {@link seedu.address.model.entity.person.Technician}.","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"class JsonAdaptedTechnician extends JsonAdaptedPerson {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Technician\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private final int id;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cInteger\u003e serviceIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cInteger\u003e appointmentIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a {@code JsonAdaptedTechnician} with the given technician details.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedTechnician(@JsonProperty(\"id\") int id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"                                 @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"                                 @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"                                 @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"                                 @JsonProperty(\"serviceIds\") List\u003cInteger\u003e serviceIds,","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"                                 @JsonProperty(\"appointmentIds\") List\u003cInteger\u003e appointmentIds) {","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        super(name, phone, email, address, tagged);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        if (serviceIds !\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"            this.serviceIds.addAll(serviceIds);","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        if (appointmentIds !\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            this.appointmentIds.addAll(appointmentIds);","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     * Converts a given {@code Technician} into this class for Jackson use.","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedTechnician(Technician source) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        super(source);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d source.getId();","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        serviceIds.addAll(source.getServiceIds().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"                .map(Integer::new)","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        appointmentIds.addAll(source.getAppointmentIds().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                .map(Integer::new)","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Technician} object.","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted technician.","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    public Technician toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        Person p \u003d super.toModelType();","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        final List\u003cInteger\u003e technicianServiceIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        for (Integer id : serviceIds) {","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"            technicianServiceIds.add(id);","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        final List\u003cInteger\u003e technicianAppointmentIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        for (Integer id : appointmentIds) {","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"            technicianAppointmentIds.add(id);","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        if (id \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Id\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        final int id \u003d this.id;","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        final Set\u003cInteger\u003e modelServiceIds \u003d new HashSet\u003c\u003e(technicianServiceIds);","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        final Set\u003cInteger\u003e modelAppointmentIds \u003d new HashSet\u003c\u003e(technicianAppointmentIds);","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        return new Technician(id, p.getName(), p.getPhone(), p.getEmail(), p.getAddress(), p.getTags(),","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"                modelServiceIds, modelAppointmentIds);","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"kimberlybp":88}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedVehicle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.VehicleType;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" * Jackson-friendly version of {@link seedu.address.model.service.Vehicle}.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"class JsonAdaptedVehicle {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Vehicle\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private final int id;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    private final int ownerId;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private final String plateNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    private final String color;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    private final String brand;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private final String type;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cInteger\u003e serviceIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a {@code JsonAdaptedVehicle} with the given vehicle details.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedVehicle(@JsonProperty(\"id\") int id, @JsonProperty(\"ownerId\") int ownerId,","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"                              @JsonProperty(\"plateNumber\") String plateNumber, @JsonProperty(\"color\") String color,","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"                              @JsonProperty(\"brand\") String brand, @JsonProperty(\"type\") String type,","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"                              @JsonProperty(\"serviceIds\") List\u003cInteger\u003e serviceIds) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        this.ownerId \u003d ownerId;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        this.plateNumber \u003d plateNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        this.color \u003d color;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        this.brand \u003d brand;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        if (serviceIds !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"            this.serviceIds.addAll(serviceIds);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"     * Converts a given {@code Vehicle} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    public JsonAdaptedVehicle(Vehicle source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        id \u003d source.getId();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        ownerId \u003d source.getOwnerId();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        plateNumber \u003d source.getPlateNumber();","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        color \u003d source.getColor();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        brand \u003d source.getBrand();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        type \u003d source.getType().getValue();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        serviceIds.addAll(source.getServiceIds().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"                .map(Integer::new)","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"     * Returns the VehicleType based on the String input given","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"     * by iterating through the existing VehicleType values","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"     * @return the VehicleType based on the String input given","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"    private VehicleType getVehicleType(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        for (VehicleType v : VehicleType.values()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"            if (v.isEqual(input)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"                return v;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        return VehicleType.CAR;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Vehicle} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted vehicle.","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    public Vehicle toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        final List\u003cInteger\u003e vehicleServiceIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"        for (Integer id : serviceIds) {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"            vehicleServiceIds.add(id);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        if (id \u003c\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Id\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"        final int modelId \u003d id;","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        if (ownerId \u003c\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Owner Id\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"        final int modelOwnerId \u003d ownerId;","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"        if (plateNumber \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Plate Number\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        final String modelPlateNumber \u003d plateNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        if (color \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Color\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"        final String modelColor \u003d color;","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        if (brand \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Brand\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"        final String modelBrand \u003d brand;","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Vehicle type\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"        final VehicleType modelType \u003d getVehicleType(type);","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"        final Set\u003cInteger\u003e modelServiceIds \u003d new HashSet\u003c\u003e(vehicleServiceIds);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"        return new Vehicle(modelId, modelOwnerId, modelPlateNumber, modelColor, modelBrand, modelType, modelServiceIds);","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":125}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"9fc70c892":1,"-":59}},{"path":"src/main/java/seedu/address/storage/JsonSerializableShop.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.idgen.IdGenerator;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":" * An Immutable AutoM8 Shop that is serializable to JSON format.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"@JsonRootName(value \u003d \"autom8\")","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"class JsonSerializableShop {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"Customer list contains duplicate customer(s).\";","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_DUPLICATE_VEHICLE \u003d \"Vehicle list contains duplicate vehicle(s).\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_DUPLICATE_SERVICE \u003d \"Service list contains duplicate service(s).\";","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_DUPLICATE_PART \u003d \"Part list contains duplicate part(s).\";","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointment list contains duplicate appointment(s).\";","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public static final String MESSAGE_DUPLICATE_TECHNICIAN \u003d \"Technician list contains duplicate appointment(s).\";","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cJsonAdaptedCustomer\u003e customers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cJsonAdaptedVehicle\u003e vehicles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cJsonAdaptedService\u003e services \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cJsonAdaptedPart\u003e parts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    private final List\u003cJsonAdaptedTechnician\u003e technicians \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * Constructs a {@code JsonSerializableShop} with the given customers and vehicles.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    public JsonSerializableShop(@JsonProperty(\"customers\") List\u003cJsonAdaptedCustomer\u003e customers,","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"                                @JsonProperty(\"vehicles\") List\u003cJsonAdaptedVehicle\u003e vehicles,","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                                @JsonProperty(\"services\") List\u003cJsonAdaptedService\u003e services,","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                                @JsonProperty(\"parts\") List\u003cJsonAdaptedPart\u003e parts,","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                                @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments,","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"                                @JsonProperty(\"technicians\") List\u003cJsonAdaptedTechnician\u003e technicians) {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        this.customers.addAll(customers);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        this.vehicles.addAll(vehicles);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        this.services.addAll(services);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        this.parts.addAll(parts);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        this.technicians.addAll(technicians);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"     * Converts a given {@code ReadOnlyShop} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableShop}.","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    public JsonSerializableShop(ReadOnlyShop source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        customers.addAll(source.getCustomerList().stream().map(JsonAdaptedCustomer::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        vehicles.addAll(source.getVehicleList().stream().map(JsonAdaptedVehicle::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        services.addAll(source.getServiceList().stream().map(JsonAdaptedService::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        source.getPartMap().getEntrySet()","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"                .forEach(entry -\u003e parts.add(new JsonAdaptedPart(entry.getKey(), entry.getValue())));","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        appointments.addAll(source.getAppointmentList().stream().map(JsonAdaptedAppointment::new)","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        technicians.addAll(source.getTechnicianList().stream().map(JsonAdaptedTechnician::new)","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"     * Converts this address book into the model\u0027s {@code Shop} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"    public Shop toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        Shop shop \u003d new Shop();","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        for (JsonAdaptedCustomer jsonAdaptedCustomer : customers) {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"            Customer customer \u003d jsonAdaptedCustomer.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"            if (shop.hasCustomer(customer)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"            IdGenerator.setCustomerIdUsed(customer.getId());","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"            shop.addCustomer(customer);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"        for (JsonAdaptedVehicle jsonAdaptedVehicle : vehicles) {","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"            Vehicle vehicle \u003d jsonAdaptedVehicle.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"            if (shop.hasVehicle(vehicle)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_VEHICLE);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"            IdGenerator.setVehicleIdUsed(vehicle.getId());","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"            shop.addVehicle(vehicle);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        for (JsonAdaptedService jsonAdaptedService : services) {","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"            Service service \u003d jsonAdaptedService.toModelType();","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"            if (shop.hasService(service)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SERVICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"            IdGenerator.setServiceIdUsed(service.getId());","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"            shop.addService(service);","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        for (JsonAdaptedPart jsonAdaptedPart : parts) {","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"            Map.Entry\u003cString, Integer\u003e partEntry \u003d jsonAdaptedPart.toModelType();","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"            if (shop.hasPart(partEntry.getKey())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PART);","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"            shop.addPart(partEntry.getKey(), partEntry.getValue());","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"            if (shop.hasAppointment(appointment)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"            IdGenerator.setAppointmentIdUsed(appointment.getId());","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"            shop.addAppointment(appointment);","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"        for (JsonAdaptedTechnician jsonAdaptedTechnician : technicians) {","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"            Technician technician \u003d jsonAdaptedTechnician.toModelType();","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"            if (shop.hasTechnician(technician)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TECHNICIAN);","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"            IdGenerator.setStaffIdUsed(technician.getId());","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"            shop.addTechnician(technician);","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"        return shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":140}},{"path":"src/main/java/seedu/address/storage/JsonShopStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" * A class to access Shop data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"public class JsonShopStorage implements ShopStorage {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonShopStorage.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    public JsonShopStorage(Path filePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    public Path getShopFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        return filePath;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    public Optional\u003cReadOnlyShop\u003e readShop() throws DataConversionException {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        return readShop(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     * Similar to {@link #readShop()}.","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    public Optional\u003cReadOnlyShop\u003e readShop(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        Optional\u003cJsonSerializableShop\u003e jsonShop \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                filePath, JsonSerializableShop.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        if (!jsonShop.isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"            return Optional.of(jsonShop.get().toModelType());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    public void saveShop(ReadOnlyShop shop) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        saveShop(shop, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"     * Similar to {@link #saveShop(ReadOnlyShop)}.","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"    public void saveShop(ReadOnlyShop shop, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(shop);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableShop(shop), filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":80}},{"path":"src/main/java/seedu/address/storage/ShopStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" * Represents a storage for {@link seedu.address.model.entity.shop.Shop}.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"public interface ShopStorage {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    Path getShopFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     * Returns Shop data as a {@link seedu.address.model.ReadOnlyShop}.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    Optional\u003cReadOnlyShop\u003e readShop() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     * @see #getShopFilePath()","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    Optional\u003cReadOnlyShop\u003e readShop(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * Saves the given {@link ReadOnlyShop} to the storage.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * @param shop cannot be null.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    void saveShop(ReadOnlyShop shop) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"     * @see #saveShop(ReadOnlyShop)","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    void saveShop(ReadOnlyShop shop, Path filePath) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"kimberlybp":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, ShopStorage {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    Path getShopFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    Optional\u003cReadOnlyShop\u003e readShop() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    void saveShop(ReadOnlyShop shop) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kimberlybp":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private ShopStorage shopStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"                          ShopStorage shopStorage) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        this.shopStorage \u003d shopStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Shop methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    public Path getShopFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        return shopStorage.getShopFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    public Optional\u003cReadOnlyShop\u003e readShop() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        return readShop(shopStorage.getShopFilePath());","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    public Optional\u003cReadOnlyShop\u003e readShop(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"        return shopStorage.readShop(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    public void saveShop(ReadOnlyShop shop) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        saveShop(shop, shopStorage.getShopFilePath());","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"    public void saveShop(ReadOnlyShop shop, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"        shopStorage.saveShop(shop, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kimberlybp":34,"-":77}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * A UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    public final Appointment appointment;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    public final Customer customer;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    public final int numberOfStaff;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    private Label customerName;","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    private Label datetime;","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    private Label dateStatus;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    private Label numberOfStaffAssigned;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code AppointmentCode} with the given {@code Appointment} and number of staff assigned","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    public AppointmentCard(Appointment appointment, Customer customer, int numberOfStaff) {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        this.numberOfStaff \u003d numberOfStaff;","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        id.setText(appointment.getId() + \". \");","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        customerName.setText(customer.getName().fullName);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        datetime.setText(\"Appointment DateTime: \" + appointment.getTimeDate().format(dtf));","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        setDateStatus(appointment.getDateStatus());","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        numberOfStaffAssigned.setText(numberOfStaff + \" Staff Assigned\");","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    private void setDateStatus(Appointment.DateStatus status) {","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        switch (status) {","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        case PASSED:","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.setText(status.name());","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.getStyleClass().add(\"passed-tag\");","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        case UPCOMING:","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.setText(status.name());","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.getStyleClass().add(\"upcoming-tag\");","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        default:","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.setText(status.name());","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.getStyleClass().add(\"today-tag\");","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof AppointmentCard)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 appointment.equals(card.appointment);","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":95}},{"path":"src/main/java/seedu/address/ui/AppointmentDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.AppointmentDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" * An UI component that displays information of a {@code Vehicle}.","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"public class AppointmentDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"AppointmentDetailsPanel.fxml\";","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    public final Appointment appointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private VBox parentContainer;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    private Label customerName;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    private Label datetime;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    private Label customerId;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    private Label asOf;","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    private Label dateStatus;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    private Label appointmentStaffLabel;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    private VBox appointmentStaff;","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code VehicleCode} with the given {@code Vehicle} and index to display.","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    public AppointmentDetailsPanel(Appointment appointment, AppointmentDataMap dataMap) {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        update(appointment, dataMap);","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    private void update(Appointment appointment, AppointmentDataMap dataMap) {","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().add(new EmptyDetailsPanelPlaceholder(\"Appointment\").getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"            return;","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        id.setText(\"Appointment ID: \" + appointment.getId());","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        customerName.setText(dataMap.getAppointmentCustomer(appointment).getName().fullName);","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        datetime.setText(appointment.getTimeDate().format(dtf));","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        customerId.setText(appointment.getCustomerId() + \"\");","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        asOf.setText(\"(as of \" + LocalDateTime.now().format(dtf) + \")\");","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        setDateStatus(appointment.getDateStatus());","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        List\u003cTechnician\u003e technicians \u003d dataMap.getAppointmentTechnicians(appointment);","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        appointmentStaffLabel.setText(\"Staff (\" + technicians.size() + \")\");","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c technicians.size(); i++) {","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            Technician t \u003d technicians.get(i);","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            Label tLabel \u003d new Label(t.getId() + \". \" + t.getName().fullName);","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"            tLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"            appointmentStaff.getChildren().add(tLabel);","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"    private void setDateStatus(Appointment.DateStatus status) {","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"        switch (status) {","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        case PASSED:","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.setText(status.name());","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.getStyleClass().add(\"passed-tag\");","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        case UPCOMING:","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.setText(status.name());","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.getStyleClass().add(\"upcoming-tag\");","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"        default:","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.setText(status.name());","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"            dateStatus.getStyleClass().add(\"today-tag\");","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof AppointmentDetailsPanel)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        AppointmentDetailsPanel panel \u003d (AppointmentDetailsPanel) other;","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(panel.id.getText())","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 appointment.equals(panel.appointment);","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":110}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.AppointmentDataMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * Panel containing the list of services.","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private AppointmentDataMap dataMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code VehicleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList, AppointmentDataMap dataMap) {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        this.dataMap \u003d dataMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Service}","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     * using a {@code VehicleCard}.","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                setText(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(new AppointmentCard(appointment,","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                        dataMap.getAppointmentCustomer(appointment),","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                        dataMap.getAppointmentTechnicians(appointment).size()).getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":55}},{"path":"src/main/java/seedu/address/ui/CustomerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" * A UI component that displays information of a {@code Customer}.","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"public class CustomerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"CustomerListCard.fxml\";","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    public final Customer customer;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    private Label name;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    private Label phone;","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    private Label email;","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    private Label numberOfCars;","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    private Label numberOfMotorbikes;","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code CustomerCode} with the given {@code Customer} and index to display.","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    public CustomerCard(Customer customer, int cars, int motorbikes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        id.setText(customer.getId() + \". \");","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        name.setText(customer.getName().fullName + \", \");","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        numberOfCars.setText(cars + \"\");","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        numberOfMotorbikes.setText(motorbikes + \"\");","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        phone.setText(customer.getPhone().value);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        email.setText(customer.getEmail().value);","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        customer.getTags().stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"                .forEach(tag -\u003e tags.getChildren()","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"                        .add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof CustomerCard)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        CustomerCard card \u003d (CustomerCard) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 customer.equals(card.customer);","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":79}},{"path":"src/main/java/seedu/address/ui/CustomerDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.CustomerVehicleMap;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" * A UI component that displays information of a {@code Customer}.","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"public class CustomerDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"CustomerDetailsPanel.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    public final Customer customer;","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private VBox parentContainer;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    private Label name;","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    private Label phone;","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    private Label email;","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    private Label address;","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    private Label vehiclesLabel;","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    private Label appointmentsLabel;","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    private VBox customerVehicles;","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    private VBox customerAppointments;","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code CustomerCode} with the given {@code Customer} and index to display.","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    public CustomerDetailsPanel(Customer customer, CustomerVehicleMap dataMap) {","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        update(customer, dataMap);","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    private void update(Customer customer, CustomerVehicleMap dataMap) {","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        if (customer \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().add(new EmptyDetailsPanelPlaceholder(\"Customer\").getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"            return;","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        id.setText(\"Customer ID: \" + customer.getId());","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        name.setText(customer.getName().fullName);","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        phone.setText(customer.getPhone().value);","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        email.setText(customer.getEmail().value);","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        address.setText(customer.getAddress().value);","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        customer.getTags().stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"                .forEach(tag -\u003e tags.getChildren()","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"                        .add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        List\u003cVehicle\u003e vehicles \u003d dataMap.getCustomerVehicles(customer);","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        List\u003cAppointment\u003e appointments \u003d dataMap.getCustomerAppointments(customer);","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        vehiclesLabel.setText(\"Vehicles (\" + vehicles.size() + \")\");","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        appointmentsLabel.setText(\"Appointments (\" + appointments.size() + \")\");","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c vehicles.size(); i++) {","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"            Vehicle v \u003d vehicles.get(i);","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"            Label vLabel \u003d new Label(v.getId() + \". \" + v.getBrand() + \" (\" + v.getPlateNumber() + \") \"","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"                    + v.getType().getValue());","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            vLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"            customerVehicles.getChildren().add(vLabel);","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c appointments.size(); i++) {","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"            Appointment a \u003d appointments.get(i);","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"            Label aLabel \u003d new Label(a.getId() + \". \" + a.getTimeDate().format(dtf));","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"            aLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"            customerAppointments.getChildren().add(aLabel);","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof CustomerDetailsPanel)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        CustomerDetailsPanel panel \u003d (CustomerDetailsPanel) other;","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(panel.id.getText())","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 customer.equals(panel.customer)","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 customer.getVehicleIds().size() \u003d\u003d panel.customer.getVehicleIds().size();","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"kimberlybp":112}},{"path":"src/main/java/seedu/address/ui/CustomerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.CustomerVehicleMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * Panel containing the list of customers.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"public class CustomerListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"CustomerListPanel.fxml\";","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerListPanel.class);","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    private ListView\u003cCustomer\u003e customerListView;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private CustomerVehicleMap vehicleLookup;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public CustomerListPanel(ObservableList\u003cCustomer\u003e customerList, CustomerVehicleMap vehicleLookup) {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        customerListView.setItems(customerList);","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        customerListView.setCellFactory(listView -\u003e new CustomerListViewCell());","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        this.vehicleLookup \u003d vehicleLookup;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Customer}","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     * using a {@code CustomerCard}.","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    class CustomerListViewCell extends ListCell\u003cCustomer\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        protected void updateItem(Customer customer, boolean empty) {","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            super.updateItem(customer, empty);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"            if (empty || customer \u003d\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                setText(null);","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(new CustomerCard(customer,","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                        vehicleLookup.getCustomerCarsCount(customer),","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                        vehicleLookup.getCustomerMotorbikesCount(customer)).getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":55}},{"path":"src/main/java/seedu/address/ui/EmptyDetailsPanelPlaceholder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":" * A UI component that displays PlaceHolder UI for empty/null detail panels.","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"public class EmptyDetailsPanelPlaceholder extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"EmptyDetailsPanelPlaceholder.fxml\";","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    private Label title;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     * Creates a PlaceHolder UI for empty/null detail panels","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    public EmptyDetailsPanelPlaceholder(String object) {","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        title.setText(\"No selected \" + object);","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof EmptyDetailsPanelPlaceholder)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        EmptyDetailsPanelPlaceholder panel \u003d (EmptyDetailsPanelPlaceholder) other;","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        return title.getText().equals(panel.title.getText());","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":42}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103-w17-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"9fc70c892":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListAppointmentsCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListCustomersCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListPartsCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListServicesCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListTechniciansCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.ListVehiclesCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.logic.commands.Tab;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    public final String[] tabResultDisplayMessages \u003d new String[6];","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    private CustomerListPanel customerListPanel;","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    private VehicleListPanel vehicleListPanel;","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    private ServiceListPanel serviceListPanel;","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    private TechnicianListPanel technicianListPanel;","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    private PartListPanel partListPanel;","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    private CustomerDetailsPanel customerDetailsPanel;","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    private VehicleDetailsPanel vehicleDetailsPanel;","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    private ServiceDetailsPanel serviceDetailsPanel;","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"    private AppointmentDetailsPanel appointmentDetailsPanel;","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    private TechnicianDetailsPanel technicianDetailsPanel;","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"    private HBox commandBoxPlaceholder;","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    private StackPane customerListPanelPlaceholder;","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"    private StackPane vehicleListPanelPlaceholder;","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"    private StackPane serviceListPanelPlaceholder;","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"    private StackPane technicianListPanelPlaceholder;","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"    private StackPane partListPlaceholder;","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    private TabPane tabs;","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"    private StackPane customerDetailsPlaceholder;","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"    private StackPane vehicleDetailsPlaceholder;","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"    private StackPane serviceDetailsPlaceholder;","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"    private StackPane appointmentDetailsPlaceholder;","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"    private StackPane technicianDetailsPlaceholder;","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"kimberlybp"},"content":"    private void initCustomerListPanel() {","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"kimberlybp"},"content":"        customerListPanel \u003d new CustomerListPanel(logic.getFilteredCustomerList(),","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"kimberlybp"},"content":"                logic.getCustomerVehicleMap());","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"kimberlybp"},"content":"        customerListPanelPlaceholder.getChildren().add(customerListPanel.getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":163,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"kimberlybp"},"content":"    private void initVehicleListPanel() {","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"        vehicleListPanel \u003d new VehicleListPanel(logic.getFilteredVehicleList(),","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"kimberlybp"},"content":"                logic.getVehicleDataMap());","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"kimberlybp"},"content":"        vehicleListPanelPlaceholder.getChildren().add(vehicleListPanel.getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":169,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"kimberlybp"},"content":"    private void initServiceListPanel() {","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"kimberlybp"},"content":"        serviceListPanel \u003d new ServiceListPanel(logic.getFilteredServiceList(),","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"kimberlybp"},"content":"                logic.getServiceDataMap());","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"kimberlybp"},"content":"        serviceListPanelPlaceholder.getChildren().add(serviceListPanel.getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":175,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"kimberlybp"},"content":"    private void initAppointmentListPanel() {","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"kimberlybp"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList(),","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"kimberlybp"},"content":"                logic.getAppointmentDataMap());","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"kimberlybp"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"kimberlybp"},"content":"    private void initTechnicianListPanel() {","lastModifiedDate":"2023-03-31"},{"lineNumber":184,"author":{"gitId":"kimberlybp"},"content":"        technicianListPanel \u003d new TechnicianListPanel(logic.getFilteredTechnicianList(),","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"kimberlybp"},"content":"                logic.getTechnicianDataMap());","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"kimberlybp"},"content":"        technicianListPanelPlaceholder.getChildren().add(technicianListPanel.getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":189,"author":{"gitId":"kimberlybp"},"content":"    private void initPartListPanel() {","lastModifiedDate":"2023-03-31"},{"lineNumber":190,"author":{"gitId":"kimberlybp"},"content":"        partListPanel \u003d new PartListPanel(logic.getPartMap());","lastModifiedDate":"2023-03-31"},{"lineNumber":191,"author":{"gitId":"kimberlybp"},"content":"        partListPlaceholder.getChildren().add(partListPanel.getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":192,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":193,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":194,"author":{"gitId":"kimberlybp"},"content":"    private void initTabResultDisplayMessages() {","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"kimberlybp"},"content":"        tabResultDisplayMessages[Tab.CUSTOMERS.ordinal()] \u003d ListCustomersCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"kimberlybp"},"content":"        tabResultDisplayMessages[Tab.VEHICLES.ordinal()] \u003d ListVehiclesCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"kimberlybp"},"content":"        tabResultDisplayMessages[Tab.SERVICES.ordinal()] \u003d ListServicesCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"kimberlybp"},"content":"        tabResultDisplayMessages[Tab.APPOINTMENTS.ordinal()] \u003d ListAppointmentsCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"kimberlybp"},"content":"        tabResultDisplayMessages[Tab.TECHNICIANS.ordinal()] \u003d ListTechniciansCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-31"},{"lineNumber":200,"author":{"gitId":"kimberlybp"},"content":"        tabResultDisplayMessages[Tab.PARTS.ordinal()] \u003d ListPartsCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-31"},{"lineNumber":201,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"kimberlybp"},"content":"        initTabResultDisplayMessages();","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"kimberlybp"},"content":"        initCustomerListPanel();","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"kimberlybp"},"content":"        initVehicleListPanel();","lastModifiedDate":"2023-03-25"},{"lineNumber":211,"author":{"gitId":"kimberlybp"},"content":"        initServiceListPanel();","lastModifiedDate":"2023-03-25"},{"lineNumber":212,"author":{"gitId":"kimberlybp"},"content":"        initAppointmentListPanel();","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"kimberlybp"},"content":"        initTechnicianListPanel();","lastModifiedDate":"2023-03-31"},{"lineNumber":214,"author":{"gitId":"kimberlybp"},"content":"        initPartListPanel();","lastModifiedDate":"2023-03-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":216,"author":{"gitId":"kimberlybp"},"content":"        initSelected();","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":221,"author":{"gitId":"kimberlybp"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getShopFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":226,"author":{"gitId":"kimberlybp"},"content":"        HBox.setHgrow(commandBox.getRoot(), Priority.ALWAYS);","lastModifiedDate":"2023-03-25"},{"lineNumber":227,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":228,"author":{"gitId":"kimberlybp"},"content":"        tabs.getSelectionModel().selectedIndexProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":229,"author":{"gitId":"kimberlybp"},"content":"            resultDisplay.setFeedbackToUser(tabResultDisplayMessages[newValue.intValue()]);","lastModifiedDate":"2023-03-26"},{"lineNumber":230,"author":{"gitId":"kimberlybp"},"content":"            if (newValue.intValue() \u003d\u003d Tab.PARTS.ordinal()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":231,"author":{"gitId":"kimberlybp"},"content":"                initPartListPanel();","lastModifiedDate":"2023-03-31"},{"lineNumber":232,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"kimberlybp"},"content":"        });","lastModifiedDate":"2023-03-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":280,"author":{"gitId":"kimberlybp"},"content":"    private void updateSelectedTab(CommandResult commandResult) {","lastModifiedDate":"2023-03-25"},{"lineNumber":281,"author":{"gitId":"kimberlybp"},"content":"        int tabIndex \u003d commandResult.getType().ordinal();","lastModifiedDate":"2023-03-25"},{"lineNumber":282,"author":{"gitId":"kimberlybp"},"content":"        if (commandResult.getType() !\u003d Tab.UNCHANGED \u0026\u0026 commandResult.getType() !\u003d Tab.ALL) {","lastModifiedDate":"2023-03-31"},{"lineNumber":283,"author":{"gitId":"kimberlybp"},"content":"            tabResultDisplayMessages[tabIndex] \u003d commandResult.getFeedbackToUser();","lastModifiedDate":"2023-03-26"},{"lineNumber":284,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":285,"author":{"gitId":"kimberlybp"},"content":"        if (commandResult.getType() \u003d\u003d Tab.ALL) {","lastModifiedDate":"2023-03-31"},{"lineNumber":286,"author":{"gitId":"kimberlybp"},"content":"            for (int i \u003d 0; i \u003c tabResultDisplayMessages.length; i++) {","lastModifiedDate":"2023-03-31"},{"lineNumber":287,"author":{"gitId":"kimberlybp"},"content":"                tabResultDisplayMessages[i] \u003d commandResult.getFeedbackToUser();","lastModifiedDate":"2023-03-31"},{"lineNumber":288,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":290,"author":{"gitId":"kimberlybp"},"content":"        if (!tabs.getSelectionModel().isSelected(tabIndex) \u0026\u0026 commandResult.getType() !\u003d Tab.UNCHANGED) {","lastModifiedDate":"2023-03-25"},{"lineNumber":291,"author":{"gitId":"kimberlybp"},"content":"            tabs.getSelectionModel().select(tabIndex);","lastModifiedDate":"2023-03-25"},{"lineNumber":292,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":293,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":294,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":295,"author":{"gitId":"kimberlybp"},"content":"    private void initSelected() {","lastModifiedDate":"2023-03-26"},{"lineNumber":296,"author":{"gitId":"kimberlybp"},"content":"        customerDetailsPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-26"},{"lineNumber":297,"author":{"gitId":"kimberlybp"},"content":"        customerDetailsPanel \u003d new CustomerDetailsPanel(logic.getSelectedCustomer(), logic.getCustomerVehicleMap());","lastModifiedDate":"2023-03-26"},{"lineNumber":298,"author":{"gitId":"kimberlybp"},"content":"        customerDetailsPlaceholder.getChildren().add(customerDetailsPanel.getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":299,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":300,"author":{"gitId":"kimberlybp"},"content":"        vehicleDetailsPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-26"},{"lineNumber":301,"author":{"gitId":"kimberlybp"},"content":"        vehicleDetailsPanel \u003d new VehicleDetailsPanel(logic.getSelectedVehicle(), logic.getVehicleDataMap());","lastModifiedDate":"2023-03-26"},{"lineNumber":302,"author":{"gitId":"kimberlybp"},"content":"        vehicleDetailsPlaceholder.getChildren().add(vehicleDetailsPanel.getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":303,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"kimberlybp"},"content":"        serviceDetailsPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-27"},{"lineNumber":305,"author":{"gitId":"kimberlybp"},"content":"        serviceDetailsPanel \u003d new ServiceDetailsPanel(logic.getSelectedService(), logic.getServiceDataMap());","lastModifiedDate":"2023-03-27"},{"lineNumber":306,"author":{"gitId":"kimberlybp"},"content":"        serviceDetailsPlaceholder.getChildren().add(serviceDetailsPanel.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":307,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":308,"author":{"gitId":"kimberlybp"},"content":"        appointmentDetailsPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":309,"author":{"gitId":"kimberlybp"},"content":"        appointmentDetailsPanel \u003d new AppointmentDetailsPanel(logic.getSelectedAppointment(),","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"kimberlybp"},"content":"                logic.getAppointmentDataMap());","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"kimberlybp"},"content":"        appointmentDetailsPlaceholder.getChildren().add(appointmentDetailsPanel.getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":312,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":313,"author":{"gitId":"kimberlybp"},"content":"        technicianDetailsPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":314,"author":{"gitId":"kimberlybp"},"content":"        technicianDetailsPanel \u003d new TechnicianDetailsPanel(logic.getSelectedTechnician(),","lastModifiedDate":"2023-03-31"},{"lineNumber":315,"author":{"gitId":"kimberlybp"},"content":"                logic.getTechnicianDataMap());","lastModifiedDate":"2023-03-31"},{"lineNumber":316,"author":{"gitId":"kimberlybp"},"content":"        technicianDetailsPlaceholder.getChildren().add(technicianDetailsPanel.getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":317,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":318,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":319,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":324,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":329,"author":{"gitId":"kimberlybp"},"content":"            updateSelectedTab(commandResult);","lastModifiedDate":"2023-03-25"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-26"},{"lineNumber":331,"author":{"gitId":"kimberlybp"},"content":"            initSelected();","lastModifiedDate":"2023-03-26"},{"lineNumber":332,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":333,"author":{"gitId":"kimberlybp"},"content":"            // TODO: Hack to display updated parts on ui, need to make parts into observable map/list","lastModifiedDate":"2023-03-31"},{"lineNumber":334,"author":{"gitId":"kimberlybp"},"content":"            if (commandResult.getType() \u003d\u003d Tab.PARTS) {","lastModifiedDate":"2023-03-31"},{"lineNumber":335,"author":{"gitId":"kimberlybp"},"content":"                initPartListPanel();","lastModifiedDate":"2023-03-31"},{"lineNumber":336,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kimberlybp":160,"-":193}},{"path":"src/main/java/seedu/address/ui/PartListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":" * A UI component that displays information of a part.","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"public class PartListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"PartListPanel.fxml\";","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    public final PartMap parts;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private VBox partListPanel;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     * Creates a part listing.","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    public PartListPanel(PartMap parts) {","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"        this.parts \u003d parts;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        for (Map.Entry\u003cString, Integer\u003e entry : parts.getEntrySet()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"            String key \u003d entry.getKey();","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"            Integer value \u003d entry.getValue();","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"            Label nameLabel \u003d new Label(key);","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"            Label quantityLabel \u003d new Label(\"Quantity: \" + value);","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"            VBox box \u003d new VBox();","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"            box.getChildren().addAll(nameLabel, quantityLabel);","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"            box.getStyleClass().add(\"part-box\");","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"            partListPanel.getChildren().add(box);","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof PartListPanel)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        PartListPanel panel \u003d (PartListPanel) other;","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        return parts.equals(panel.parts);","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":57}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"9fc70c892":1,"-":76}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"9fc70c892":1,"-":48}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private TextFlow resultDisplay;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     * Creates ResultDisplay ui with initial messages","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        Text welcomeText \u003d new Text(\"Welcome to AutoM8!\");","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"        welcomeText.getStyleClass().add(\"welcome-text\");","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"        Text initViewText \u003d new Text(\"Currently listing all Customers\");","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        initViewText.getStyleClass().add(\"text\");","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        resultDisplay.getChildren().add(welcomeText);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        resultDisplay.getChildren().add(new Text(System.lineSeparator()));","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        resultDisplay.getChildren().add(initViewText);","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        resultDisplay.getChildren().clear();","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        Text feedbackText \u003d new Text(feedbackToUser);","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        feedbackText.getStyleClass().add(\"text\");","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        resultDisplay.getChildren().add(feedbackText);","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kimberlybp":18,"-":25}},{"path":"src/main/java/seedu/address/ui/ServiceCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.ServiceStatus;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.VehicleType;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":" * A UI component that displays information of a {@code Service}.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"public class ServiceCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"ServiceListCard.fxml\";","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    private static final Image CarIcon \u003d new Image(\"/images/car_white_icon.png\");","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private static final Image MotorbikeIcon \u003d new Image(\"/images/motorbike_white_icon.png\");","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    private static final Color toRepair \u003d Color.rgb(61, 167, 201);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    private static final Color inProgress \u003d Color.rgb(252, 159, 39);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private static final Color complete \u003d Color.rgb(89, 201, 61);","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    private static final Color cancelled \u003d Color.rgb(236, 46, 46);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    private static final Color onHold \u003d Color.rgb(255, 230, 0);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"     * issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    public final Service service;","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    public final Vehicle serviceVehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    private Label description;","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    private Label vehicleId;","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    private ImageView vehicleTypeImg;","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    private Label vehicleInfo;","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"    private Label estimatedFinishDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    private Label status;","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    private Circle statusCircle;","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code ServiceCode} with the given {@code Service} and service vehicle","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    public ServiceCard(Service service, Vehicle serviceVehicle) {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        this.service \u003d service;","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        this.serviceVehicle \u003d serviceVehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        id.setText(service.getId() + \". \");","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        description.setText(service.getDescription());","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        vehicleId.setText(\"Vehicle ID: \" + serviceVehicle.getId());","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        if (serviceVehicle.getType() \u003d\u003d VehicleType.CAR) {","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"            vehicleTypeImg.setImage(CarIcon);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"            vehicleTypeImg.setImage(MotorbikeIcon);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        vehicleInfo.setText(serviceVehicle.getBrand() + \", \" + serviceVehicle.getPlateNumber());","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        estimatedFinishDate.setText(\"Estimated Finish Date: \" + service.getEstimatedFinishDate().format(dtf));","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        status.setText(\"Status: \" + service.getStatus().getValue());","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        setStatusCircle(service.getStatus());","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"    private void setStatusCircle(ServiceStatus status) {","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"        switch (status) {","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        case TO_REPAIR:","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(toRepair);","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        case IN_PROGRESS:","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(inProgress);","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"        case COMPLETE:","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(complete);","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"        case CANCELLED:","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(cancelled);","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        default:","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(onHold);","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof ServiceCard)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"        ServiceCard card \u003d (ServiceCard) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 service.equals(card.service);","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":122}},{"path":"src/main/java/seedu/address/ui/ServiceDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.ServiceDataMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.ServiceStatus;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":" * An UI component that displays information of a {@code Vehicle}.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"public class ServiceDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"ServiceDetailsPanel.fxml\";","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    private static final Color toRepair \u003d Color.rgb(61, 167, 201);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    private static final Color inProgress \u003d Color.rgb(252, 159, 39);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private static final Color complete \u003d Color.rgb(89, 201, 61);","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    private static final Color cancelled \u003d Color.rgb(236, 46, 46);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    private static final Color onHold \u003d Color.rgb(255, 230, 0);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    public final Service service;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    private VBox parentContainer;","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    private Label description;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    private Label entryDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    private Label estimatedFinishDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    private Label status;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    private Circle statusCircle;","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    private VBox vehicleAssignedTo;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    private VBox serviceTechnicians;","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"    private VBox serviceParts;","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code VehicleCode} with the given {@code Vehicle} and index to display.","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    public ServiceDetailsPanel(Service service, ServiceDataMap dataMap) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        this.service \u003d service;","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        update(service, dataMap);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    private void update(Service service, ServiceDataMap dataMap) {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        if (service \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().add(new EmptyDetailsPanelPlaceholder(\"Service\").getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"            return;","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        id.setText(\"Service ID: \" + service.getId());","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        description.setText(service.getDescription());","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        entryDate.setText(service.getEntryDate().format(dtf));","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        estimatedFinishDate.setText(service.getEstimatedFinishDate().format(dtf));","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        status.setText(service.getStatus().getValue());","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        setStatusCircle(service.getStatus());","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        Vehicle v \u003d dataMap.getServiceVehicle(service);","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        Label vehicleLabel \u003d new Label(v.getId() + \". \" + v.getBrand() + \" (\" + v.getPlateNumber() + \") \"","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"                + v.getType().getValue());","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        vehicleLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        vehicleAssignedTo.getChildren().add(vehicleLabel);","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"        List\u003cTechnician\u003e technicians \u003d dataMap.getServiceTechnicians(service);","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        PartMap partsRequired \u003d service.getRequiredParts();","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c technicians.size(); i++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"            Technician t \u003d technicians.get(i);","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"            Label tLabel \u003d new Label(t.getId() + \". \" + t.getName().fullName);","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"            tLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"            serviceTechnicians.getChildren().add(tLabel);","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"        for (Map.Entry\u003cString, Integer\u003e entry : partsRequired.getEntrySet()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"            String key \u003d entry.getKey();","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"            Integer value \u003d entry.getValue();","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"            Label pLabel \u003d new Label(value + \" \" + key);","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"            pLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"            serviceParts.getChildren().add(pLabel);","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"    private void setStatusCircle(ServiceStatus status) {","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"        switch (status) {","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        case TO_REPAIR:","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(toRepair);","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"        case IN_PROGRESS:","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(inProgress);","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"        case COMPLETE:","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(complete);","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"        case CANCELLED:","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(cancelled);","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"        default:","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"            statusCircle.setFill(onHold);","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof ServiceDetailsPanel)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"        ServiceDetailsPanel panel \u003d (ServiceDetailsPanel) other;","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(panel.id.getText())","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 service.equals(panel.service);","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"kimberlybp":140}},{"path":"src/main/java/seedu/address/ui/ServiceListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.ServiceDataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * Panel containing the list of services.","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"public class ServiceListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"ServiceListPanel.fxml\";","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(VehicleListPanel.class);","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    private ListView\u003cService\u003e serviceListView;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private ServiceDataMap dataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code VehicleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public ServiceListPanel(ObservableList\u003cService\u003e serviceList, ServiceDataMap dataMap) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        serviceListView.setItems(serviceList);","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        serviceListView.setCellFactory(listView -\u003e new ServiceListViewCell());","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        this.dataMap \u003d dataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Service}","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     * using a {@code VehicleCard}.","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    class ServiceListViewCell extends ListCell\u003cService\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        protected void updateItem(Service service, boolean empty) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            super.updateItem(service, empty);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"            if (empty || service \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                setText(null);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(new ServiceCard(service, dataMap.getServiceVehicle(service)).getRoot());","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":53}},{"path":"src/main/java/seedu/address/ui/TechnicianCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":" * A UI component that displays information of a {@code Customer}.","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"public class TechnicianCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"TechnicianListCard.fxml\";","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    public final Technician technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    private Label name;","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    private Label phone;","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    private Label email;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    private Label numberOfServices;","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    private Label numberOfAppointments;","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code CustomerCode} with the given {@code Customer} and index to display.","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    public TechnicianCard(Technician technician, int services, int appointments) {","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        this.technician \u003d technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        id.setText(technician.getId() + \". \");","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        name.setText(technician.getName().fullName + \", \");","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        numberOfServices.setText(services + \"\");","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        numberOfAppointments.setText(appointments + \"\");","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        phone.setText(technician.getPhone().value);","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        email.setText(technician.getEmail().value);","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        technician.getTags().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"                .forEach(tag -\u003e tags.getChildren()","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"                        .add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof TechnicianCard)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"        TechnicianCard card \u003d (TechnicianCard) other;","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 technician.equals(card.technician);","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":79}},{"path":"src/main/java/seedu/address/ui/TechnicianDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.TechnicianDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" * A UI component that displays information of a {@code Technician}.","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"public class TechnicianDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"TechnicianDetailsPanel.fxml\";","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    public final Technician technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    private VBox parentContainer;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    private Label name;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    private Label phone;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    private Label email;","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    private Label address;","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    private Label servicesLabel;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    private Label appointmentsLabel;","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    private VBox technicianServices;","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    private VBox technicianAppointments;","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code TechnicianCode} with the given {@code Technician} and index to display.","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    public TechnicianDetailsPanel(Technician technician, TechnicianDataMap dataMap) {","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        this.technician \u003d technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        update(technician, dataMap);","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    private void update(Technician technician, TechnicianDataMap dataMap) {","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"        if (technician \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().add(new EmptyDetailsPanelPlaceholder(\"Technician\").getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"            return;","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        id.setText(\"Technician ID: \" + technician.getId());","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        name.setText(technician.getName().fullName);","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        phone.setText(technician.getPhone().value);","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        email.setText(technician.getEmail().value);","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        address.setText(technician.getAddress().value);","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        technician.getTags().stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"                .forEach(tag -\u003e tags.getChildren()","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"                        .add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        List\u003cService\u003e services \u003d dataMap.getTechnicianServices(technician);","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        List\u003cAppointment\u003e appointments \u003d dataMap.getTechnicianAppointments(technician);","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        servicesLabel.setText(\"Services (\" + services.size() + \")\");","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        appointmentsLabel.setText(\"Appointments (\" + appointments.size() + \")\");","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c services.size(); i++) {","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"            Service s \u003d services.get(i);","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"            Label sLabel \u003d new Label(s.getId() + \". \" + s.getDescription() + \", Status: \" + s.getStatus().getValue());","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            sLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"            technicianServices.getChildren().add(sLabel);","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c appointments.size(); i++) {","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"            Appointment a \u003d appointments.get(i);","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"            Label aLabel \u003d new Label(a.getId() + \". \" + a.getTimeDate().format(dtf));","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"            aLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"            technicianAppointments.getChildren().add(aLabel);","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof TechnicianDetailsPanel)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"        TechnicianDetailsPanel panel \u003d (TechnicianDetailsPanel) other;","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(panel.id.getText())","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 technician.equals(panel.technician);","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":111}},{"path":"src/main/java/seedu/address/ui/TechnicianListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.TechnicianDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * Panel containing the list of customers.","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"public class TechnicianListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"TechnicianListPanel.fxml\";","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TechnicianListPanel.class);","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    private ListView\u003cTechnician\u003e technicianListView;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private TechnicianDataMap dataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public TechnicianListPanel(ObservableList\u003cTechnician\u003e technicianList, TechnicianDataMap dataMap) {","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        technicianListView.setItems(technicianList);","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        technicianListView.setCellFactory(listView -\u003e new TechnicianListViewCell());","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        this.dataMap \u003d dataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Technician}","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     * using a {@code TechnicianCard}.","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    class TechnicianListViewCell extends ListCell\u003cTechnician\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        protected void updateItem(Technician technician, boolean empty) {","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            super.updateItem(technician, empty);","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"            if (empty || technician \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                setText(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(new TechnicianCard(technician,","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                        dataMap.getTechnicianServices(technician).size(),","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                        dataMap.getTechnicianAppointments(technician).size()).getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":55}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"9fc70c892"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/Auto_M8_32-2.png\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"9fc70c892":1,"-":87}},{"path":"src/main/java/seedu/address/ui/VehicleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.VehicleType;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":" * An UI component that displays information of a {@code Customer}.","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"public class VehicleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"VehicleListCard.fxml\";","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private static final Image CarIcon \u003d new Image(\"/images/car_white_icon.png\");","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private static final Image MotorbikeIcon \u003d new Image(\"/images/motorbike_white_icon.png\");","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"     * issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    public final Vehicle vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    public final Customer vehicleOwner;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"    private Label plateNumber;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"    private Label brand;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    private Label type;","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    private Label owner;","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    private ImageView typeImg;","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    private Label numberOfServices;","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code VehicleCode} with the given {@code Vehicle} and vehicle","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"     * owner","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"    public VehicleCard(Vehicle vehicle, Customer vehicleOwner) {","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        this.vehicle \u003d vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        this.vehicleOwner \u003d vehicleOwner;","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        id.setText(vehicle.getId() + \". \");","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        plateNumber.setText(vehicle.getPlateNumber());","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        brand.setText(vehicle.getBrand() + \",\");","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        type.setText(vehicle.getType().getValue());","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        if (vehicle.getType() \u003d\u003d VehicleType.CAR) {","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            typeImg.setImage(CarIcon);","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"            typeImg.setImage(MotorbikeIcon);","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        owner.setText(\"Owner: \" + vehicleOwner.getName().fullName);","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        numberOfServices.setText(vehicle.getServiceIds().size() + \" total services\");","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof VehicleCard)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"        VehicleCard card \u003d (VehicleCard) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 vehicleOwner.equals(card.vehicleOwner);","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":91}},{"path":"src/main/java/seedu/address/ui/VehicleDetailsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.VehicleDataMap;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" * A UI component that displays information of a {@code Vehicle}.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"public class VehicleDetailsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"VehicleDetailsPanel.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    public final Vehicle vehicle;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    private VBox parentContainer;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    private Label id;","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private Label plateNumber;","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    private Label brand;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"    private Label color;","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"    private Label type;","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    private Label vehicleServicesLabel;","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"    private VBox vehicleServices;","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"    private VBox vehicleOwner;","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code VehicleCode} with the given {@code Vehicle} and index to display.","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"    public VehicleDetailsPanel(Vehicle vehicle, VehicleDataMap dataMap) {","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"        this.vehicle \u003d vehicle;","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        update(vehicle, dataMap);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    private void update(Vehicle vehicle, VehicleDataMap dataMap) {","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        if (vehicle \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().clear();","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"            parentContainer.getChildren().add(new EmptyDetailsPanelPlaceholder(\"Vehicle\").getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"            return;","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        id.setText(\"Vehicle ID: \" + vehicle.getId());","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        plateNumber.setText(vehicle.getPlateNumber() + \"\");","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        color.setText(vehicle.getColor());","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        brand.setText(vehicle.getBrand());","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        type.setText(vehicle.getType().getValue());","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        List\u003cService\u003e services \u003d dataMap.getVehicleServices(vehicle);","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        Customer owner \u003d dataMap.getVehicleCustomer(vehicle);","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        Label ownerLabel \u003d new Label(owner.getId() + \". \" + owner.getName().fullName);","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        ownerLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        vehicleOwner.getChildren().add(ownerLabel);","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        vehicleServicesLabel.setText(\"Services (\" + services.size() + \")\");","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        for (int i \u003d 0; i \u003c services.size(); i++) {","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            Service s \u003d services.get(i);","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"            Label sLabel \u003d new Label(s.getId() + \". \" + s.getDescription() + \", Status: \" + s.getStatus().getValue());","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"            sLabel.getStyleClass().add(\"details-info\");","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"            vehicleServices.getChildren().add(sLabel);","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"            return true;","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"        if (!(other instanceof VehicleDetailsPanel)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"            return false;","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"        // state check","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"        VehicleDetailsPanel panel \u003d (VehicleDetailsPanel) other;","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"        return id.getText().equals(panel.id.getText())","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"                \u0026\u0026 vehicle.equals(panel.vehicle);","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"kimberlybp":98}},{"path":"src/main/java/seedu/address/ui/VehicleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.VehicleDataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":" * Panel containing the list of vehicles.","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"public class VehicleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private static final String FXML \u003d \"VehicleListPanel.fxml\";","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(VehicleListPanel.class);","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    private ListView\u003cVehicle\u003e vehicleListView;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    private VehicleDataMap dataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"     * Creates a {@code VehicleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    public VehicleListPanel(ObservableList\u003cVehicle\u003e vehicleList, VehicleDataMap dataMap) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        super(FXML);","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        vehicleListView.setItems(vehicleList);","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        vehicleListView.setCellFactory(listView -\u003e new VehicleListViewCell());","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        this.dataMap \u003d dataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Vehicle}","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"     * using a {@code VehicleCard}.","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"    class VehicleListViewCell extends ListCell\u003cVehicle\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        protected void updateItem(Vehicle vehicle, boolean empty) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            super.updateItem(vehicle, empty);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"            if (empty || vehicle \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                setText(null);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"            } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                setGraphic(new VehicleCard(vehicle, dataMap.getVehicleCustomer(vehicle)).getRoot());","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":53}},{"path":"src/main/resources/view/AppointmentDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"appointmentDetailsPanel\" fx:id\u003d\"appointmentDetailsPanel\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"340.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" styleClass\u003d\"edge-to-edge\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox fx:id\u003d\"parentContainer\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"details-box\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"          \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-text-fill: #62DDEB;\" styleClass\u003d\"details-heading\" text\u003d\"Appointment Details\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"id\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-id\" text\u003d\"Appointment ID: \" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"customerName\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-title\" text\u003d\"\\\\$customerName\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"subtitle\" maxWidth\u003d\"Infinity\" styleClass\u003d\"cell_title_label\" text\u003d\"Appointment Information\" underline\u003d\"true\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"datetimeLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Appointment DateTime\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"datetime\" minWidth\u003d\"-Infinity\" styleClass\u003d\"details-info\" text\u003d\"\\\\$datetime\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"customerIdLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Customer ID\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"customerId\" styleClass\u003d\"details-info\" text\u003d\"\\\\$customerId\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"dateStatusLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Date Status\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            \u003cLabel fx:id\u003d\"asOf\" styleClass\u003d\"details-info\" text\u003d\"\\\\$dateStatus\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"               \u003cminHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"               \u003c/minHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"      \u003cLabel fx:id\u003d\"dateStatus\" styleClass\u003d\"details-info\" text\u003d\"\\\\$dateStatus\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        \u003cminHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"          \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"          \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"        \u003c/minHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"          \u003cInsets bottom\u003d\"4.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox fx:id\u003d\"appointmentStaff\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"appointmentStaffLabel\" styleClass\u003d\"cell_title_label\" text\u003d\"Staff\" underline\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"                  \u003cminHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/minHeight\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"                        \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":103}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\\\$id\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"prefix\" styleClass\u003d\"cell_big_label\" text\u003d\"Appointment with\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"            \u003cLabel fx:id\u003d\"customerName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\\\$name\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"      \u003cLabel fx:id\u003d\"datetime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$datetime\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"      \u003cFlowPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"          \u003cLabel fx:id\u003d\"dateStatus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$dateStatus\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"            \u003cFlowPane.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"            \u003c/FlowPane.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"               \u003cLabel fx:id\u003d\"numberOfStaffAssigned\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$numberOfStaffAssigned\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"                  \u003cFlowPane.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"                     \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/FlowPane.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":52}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"  \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"kimberlybp":8}},{"path":"src/main/resources/view/CustomerDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"customerDetailsPane\" fx:id\u003d\"customerDetailsPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"340.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" styleClass\u003d\"edge-to-edge\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox fx:id\u003d\"parentContainer\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"details-box\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"          \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-text-fill: #62DDEB;\" styleClass\u003d\"details-heading\" text\u003d\"Customer Details\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"id\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-id\" text\u003d\"Customer ID: \" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"name\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-title\" text\u003d\"\\$first\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"subtitle\" maxWidth\u003d\"Infinity\" styleClass\u003d\"cell_title_label\" text\u003d\"Personal Information\" underline\u003d\"true\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"phoneLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Mobile Number\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"phone\" minWidth\u003d\"-Infinity\" styleClass\u003d\"details-info\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"emailLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Email\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"details-info\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"addressLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Address\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"details-info\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"tagsLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Tags\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" styleClass\u003d\"customerTags\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox fx:id\u003d\"customerVehicles\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"vehiclesLabel\" styleClass\u003d\"cell_title_label\" text\u003d\"Vehicles\" underline\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"                  \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"                \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox fx:id\u003d\"customerAppointments\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"appointmentsLabel\" styleClass\u003d\"cell_title_label\" text\u003d\"Appointments\" underline\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"                  \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"kimberlybp":122}},{"path":"src/main/resources/view/CustomerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"110\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"numberOfCars\" styleClass\u003d\"cell_small_label\" text\u003d\"0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"          \u003cimage\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"            \u003cImage url\u003d\"@/images/car_blue_icon.png\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"          \u003c/image\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"numberOfMotorbikes\" styleClass\u003d\"cell_small_label\" text\u003d\"0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"          \u003cimage\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            \u003cImage url\u003d\"@/images/motorbike_blue_icon.png\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"          \u003c/image\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"          \u003cimage\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"            \u003cImage url\u003d\"@/images/phone_icon.png\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"          \u003c/image\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"      \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        \u003cimage\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"          \u003cImage url\u003d\"@/images/mail_icon.png\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        \u003c/image\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"               \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":81}},{"path":"src/main/resources/view/CustomerListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"  \u003cListView fx:id\u003d\"customerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"kimberlybp":8}},{"path":"src/main/resources/view/CustomerVehicleListing.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"customerDetailsPane\" fx:id\u003d\"customerDetailsPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"340.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" styleClass\u003d\"edge-to-edge\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"                AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"details-box\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"          \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-text-fill: #62DDEB;\" styleClass\u003d\"details-heading\" text\u003d\"Customer Details\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"id\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-id\" text\u003d\"Customer ID: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"               wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"name\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-title\" text\u003d\"\\$first\"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"               wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"subtitle\" maxWidth\u003d\"Infinity\" styleClass\u003d\"cell_title_label\"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"               text\u003d\"Personal Information\" underline\u003d\"true\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"phoneLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Mobile Number\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"phone\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"emailLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Email\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"addressLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Address\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"4.0\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"tagsLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Tags\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"5.0\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" styleClass\u003d\"customerTags\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"8.0\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox fx:id\u003d\"customerVehicles\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"vehiclesLabel\" styleClass\u003d\"cell_title_label\" underline\u003d\"true\" text\u003d\"Vehicles\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"                  \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"                \u003cInsets right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox fx:id\u003d\"customerAppointments\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"appointmentsLabel\" styleClass\u003d\"cell_title_label\" underline\u003d\"true\" text\u003d\"Appointment\"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"                       VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"                  \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"kimberlybp":126}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"@font-face {","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"    font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"    src: url(\u0027../fonts/NunitoSans_Regular.ttf\u0027);","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"@font-face {","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"    font-family: \"Nunito Sans Bold\";","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"    src: url(\u0027../fonts/NunitoSans_Bold.ttf\u0027);","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"@font-face {","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    font-family: \"Nunito Sans SemiBold Italic\";","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    src: url(\u0027../fonts/NunitoSans_SemiBoldItalic.ttf\u0027);","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":".anchor-pane {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":".contentBox {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"    background-color: #1E1E1E; /* Used in the default.html file */","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":".tab {","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"    -fx-padding: 3 15 2 10;","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-insets: 0 5 0 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":".tab:selected {","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"    -fx-faint-focus-color: transparent;","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Bold\";","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":".tab:selected .tab-label {","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"    -fx-text-fill: #D8D8D8;","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":".tab-label {","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"    -fx-text-fill: #D8D8D8;","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"kimberlybp"},"content":".list-cell:filled {","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-color: #FFFFFF;","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #4d425f;","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-color: #5c3e91;","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":191,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-width: 0.5;","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-color: #fff;","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":199,"author":{"gitId":"kimberlybp"},"content":"     -fx-background-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":200,"author":{"gitId":"kimberlybp"},"content":"     /*-fx-border-color: derive(#1d1d1d, 10%);*/","lastModifiedDate":"2023-03-25"},{"lineNumber":201,"author":{"gitId":"kimberlybp"},"content":"     /*-fx-border-top-width: 1px;*/","lastModifiedDate":"2023-03-25"},{"lineNumber":202,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"kimberlybp"},"content":".pane-with-top-border {","lastModifiedDate":"2023-03-25"},{"lineNumber":204,"author":{"gitId":"kimberlybp"},"content":"     -fx-background-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":205,"author":{"gitId":"kimberlybp"},"content":"     -fx-border-color: #7C7C7C;","lastModifiedDate":"2023-03-25"},{"lineNumber":206,"author":{"gitId":"kimberlybp"},"content":"     -fx-border-width: 1 0 0 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":214,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-25"},{"lineNumber":215,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":218,"author":{"gitId":"kimberlybp"},"content":"    -fx-padding: 10px 22px;","lastModifiedDate":"2023-03-25"},{"lineNumber":219,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":220,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":221,"author":{"gitId":"kimberlybp"},"content":".text {","lastModifiedDate":"2023-03-25"},{"lineNumber":222,"author":{"gitId":"kimberlybp"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":225,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"kimberlybp"},"content":".welcome-text {","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Bold\";","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"kimberlybp"},"content":"    -fx-fill: #62DDEB;","lastModifiedDate":"2023-03-25"},{"lineNumber":233,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":234,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #1E1E1E;","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-color: #1E1E1E;","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":259,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #1E1E1E;","lastModifiedDate":"2023-03-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"kimberlybp"},"content":".details-heading {","lastModifiedDate":"2023-03-26"},{"lineNumber":286,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans SemiBold Italic\";","lastModifiedDate":"2023-03-26"},{"lineNumber":287,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-26"},{"lineNumber":288,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":289,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":290,"author":{"gitId":"kimberlybp"},"content":".details-id {","lastModifiedDate":"2023-03-26"},{"lineNumber":291,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-26"},{"lineNumber":292,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-26"},{"lineNumber":293,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":294,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":295,"author":{"gitId":"kimberlybp"},"content":".details-title {","lastModifiedDate":"2023-03-26"},{"lineNumber":296,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Bold\";","lastModifiedDate":"2023-03-26"},{"lineNumber":297,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2023-03-26"},{"lineNumber":298,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":299,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":300,"author":{"gitId":"kimberlybp"},"content":".details-info-label {","lastModifiedDate":"2023-03-26"},{"lineNumber":301,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Bold\";","lastModifiedDate":"2023-03-26"},{"lineNumber":302,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-26"},{"lineNumber":303,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":304,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":305,"author":{"gitId":"kimberlybp"},"content":".details-info {","lastModifiedDate":"2023-03-26"},{"lineNumber":306,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-26"},{"lineNumber":307,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-26"},{"lineNumber":308,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":309,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":310,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-25"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":384,"author":{"gitId":"kimberlybp"},"content":".scroll-pane {","lastModifiedDate":"2023-03-25"},{"lineNumber":385,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-25"},{"lineNumber":386,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":387,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":388,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":395,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":397,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":400,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":402,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":404,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":410,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":412,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":414,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":417,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":419,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":422,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":424,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":427,"author":{"gitId":"kimberlybp"},"content":"    /*-fx-border-color: #383838 #383838 #ffffff #383838;*/","lastModifiedDate":"2023-03-25"},{"lineNumber":428,"author":{"gitId":"kimberlybp"},"content":"    /*-fx-border-insets: 0;*/","lastModifiedDate":"2023-03-25"},{"lineNumber":429,"author":{"gitId":"kimberlybp"},"content":"    /*-fx-border-width: 1;*/","lastModifiedDate":"2023-03-25"},{"lineNumber":430,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Regular\";","lastModifiedDate":"2023-03-25"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":433,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":435,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":437,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":439,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":440,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-25"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":442,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":444,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":447,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":449,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":450,"author":{"gitId":"kimberlybp"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-26"},{"lineNumber":451,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #B47BF7;","lastModifiedDate":"2023-03-26"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":453,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-26"},{"lineNumber":454,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-26"},{"lineNumber":455,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2023-03-26"},{"lineNumber":456,"author":{"gitId":"kimberlybp"},"content":"    -fx-margin: 5 0 0 0;","lastModifiedDate":"2023-03-26"},{"lineNumber":457,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":458,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":459,"author":{"gitId":"kimberlybp"},"content":".customerVehicle {","lastModifiedDate":"2023-03-26"},{"lineNumber":460,"author":{"gitId":"kimberlybp"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-26"},{"lineNumber":461,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #41a8b4;","lastModifiedDate":"2023-03-26"},{"lineNumber":462,"author":{"gitId":"kimberlybp"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-17"},{"lineNumber":463,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-26"},{"lineNumber":464,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-26"},{"lineNumber":465,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2023-03-26"},{"lineNumber":466,"author":{"gitId":"kimberlybp"},"content":"    -fx-margin: 5 0 0 0;","lastModifiedDate":"2023-03-26"},{"lineNumber":467,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":468,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":469,"author":{"gitId":"kimberlybp"},"content":"#plateNumber, #vehiclePlateNumber {","lastModifiedDate":"2023-03-18"},{"lineNumber":470,"author":{"gitId":"kimberlybp"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-18"},{"lineNumber":471,"author":{"gitId":"kimberlybp"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-18"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-18"},{"lineNumber":473,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #a96cf1;","lastModifiedDate":"2023-03-26"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-18"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-18"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-18"},{"lineNumber":477,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-18"},{"lineNumber":478,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":479,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":480,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":481,"author":{"gitId":"kimberlybp"},"content":".details-box {","lastModifiedDate":"2023-03-26"},{"lineNumber":482,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #292929;","lastModifiedDate":"2023-03-26"},{"lineNumber":483,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":484,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":485,"author":{"gitId":"kimberlybp"},"content":".upcoming-tag {","lastModifiedDate":"2023-03-30"},{"lineNumber":486,"author":{"gitId":"kimberlybp"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-30"},{"lineNumber":487,"author":{"gitId":"kimberlybp"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":488,"author":{"gitId":"kimberlybp"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":489,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #FC9F27;","lastModifiedDate":"2023-03-30"},{"lineNumber":490,"author":{"gitId":"kimberlybp"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":491,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-30"},{"lineNumber":492,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-30"},{"lineNumber":493,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Bold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":494,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":495,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":496,"author":{"gitId":"kimberlybp"},"content":".passed-tag {","lastModifiedDate":"2023-03-30"},{"lineNumber":497,"author":{"gitId":"kimberlybp"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-30"},{"lineNumber":498,"author":{"gitId":"kimberlybp"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":499,"author":{"gitId":"kimberlybp"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":500,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #7C7C7C;","lastModifiedDate":"2023-03-30"},{"lineNumber":501,"author":{"gitId":"kimberlybp"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":502,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-30"},{"lineNumber":503,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-30"},{"lineNumber":504,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Bold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":505,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":506,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":507,"author":{"gitId":"kimberlybp"},"content":".today-tag {","lastModifiedDate":"2023-03-30"},{"lineNumber":508,"author":{"gitId":"kimberlybp"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-30"},{"lineNumber":509,"author":{"gitId":"kimberlybp"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":510,"author":{"gitId":"kimberlybp"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":511,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-color: #59C93D;","lastModifiedDate":"2023-03-30"},{"lineNumber":512,"author":{"gitId":"kimberlybp"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-30"},{"lineNumber":513,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-03-30"},{"lineNumber":514,"author":{"gitId":"kimberlybp"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-30"},{"lineNumber":515,"author":{"gitId":"kimberlybp"},"content":"    -fx-font-family: \"Nunito Sans Bold\";","lastModifiedDate":"2023-03-30"},{"lineNumber":516,"author":{"gitId":"kimberlybp"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":517,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":518,"author":{"gitId":"kimberlybp"},"content":".part-box {","lastModifiedDate":"2023-03-31"},{"lineNumber":519,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-31"},{"lineNumber":520,"author":{"gitId":"kimberlybp"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-31"},{"lineNumber":521,"author":{"gitId":"kimberlybp"},"content":"    -fx-padding: 5 0 5 0;","lastModifiedDate":"2023-03-31"},{"lineNumber":522,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":210,"-":312}},{"path":"src/main/resources/view/EmptyDetailsPanelPlaceholder.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"customerDetailsPane\" fx:id\u003d\"customerDetailsPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"340.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" styleClass\u003d\"edge-to-edge\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"details-box\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"          \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        \u003cStackPane fx:id\u003d\"emptyDetailsPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"            \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-text-fill: #62DDEB;\" styleClass\u003d\"details-heading\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"         title\u003d\"AutoM8\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"    \u003cImage url\u003d\"@/images/Auto_M8_32.png\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-top-border\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"20\" bottom\u003d\"5\" left\u003d\"20\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"            \u003cImageView fitHeight\u003d\"77.0\" fitWidth\u003d\"77.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"              \u003cimage\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                \u003cImage url\u003d\"@/images/Auto_M8.jpg\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"              \u003c/image\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                   minHeight\u003d\"110\" prefHeight\u003d\"110\" maxHeight\u003d\"110\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"0\" bottom\u003d\"5\" left\u003d\"0\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        \u003cVBox fx:id\u003d\"tabsBox\" minWidth\u003d\"350\" prefWidth\u003d\"350\" styleClass\u003d\"contentBox\"","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"              AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"              AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"          \u003cTabPane","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"                  fx:id\u003d\"tabs\"","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"                  tabClosingPolicy\u003d\"UNAVAILABLE\" tabMaxHeight\u003d\"35.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"            \u003ctabs\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"              \u003cTab text\u003d\"Customers\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"                \u003ccontent\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"                  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"                      \u003cSplitPane dividerPositions\u003d\"0.2\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.topAnchor\u003d\"0.0\" styleClass\u003d\"split-pane\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"                        \u003citems\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"customerList\" minHeight\u003d\"380.0\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"                                \u003cStackPane fx:id\u003d\"customerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"customerDetails\" minHeight\u003d\"380.0\" minWidth\u003d\"340\"","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"                                    styleClass\u003d\"detailsPane\" prefWidth\u003d\"340\"","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cStackPane fx:id\u003d\"customerDetailsPlaceholder\"","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"                                             VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"                      \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"                \u003c/content\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"              \u003c/Tab\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"              \u003cTab disable\u003d\"false\" text\u003d\"Vehicles\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"                \u003ccontent\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"                  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"                      \u003cSplitPane dividerPositions\u003d\"0.2\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.topAnchor\u003d\"0.0\" styleClass\u003d\"split-pane\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"                        \u003citems\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"vehicleList\" minHeight\u003d\"380.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"                                    minWidth\u003d\"360.0\" prefWidth\u003d\"360\"","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":129,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":130,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"kimberlybp"},"content":"                                \u003cStackPane fx:id\u003d\"vehicleListPanelPlaceholder\"","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"kimberlybp"},"content":"                                           VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"vehicleDetails\" minWidth\u003d\"360\"","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"kimberlybp"},"content":"                                    prefWidth\u003d\"360\" styleClass\u003d\"detailsPane\"","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cStackPane fx:id\u003d\"vehicleDetailsPlaceholder\"","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"kimberlybp"},"content":"                                             VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":156,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":157,"author":{"gitId":"kimberlybp"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":158,"author":{"gitId":"kimberlybp"},"content":"                      \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":159,"author":{"gitId":"kimberlybp"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"kimberlybp"},"content":"                \u003c/content\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"kimberlybp"},"content":"              \u003c/Tab\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":163,"author":{"gitId":"kimberlybp"},"content":"              \u003cTab disable\u003d\"false\" text\u003d\"Services\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"kimberlybp"},"content":"                \u003ccontent\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"kimberlybp"},"content":"                  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"kimberlybp"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":167,"author":{"gitId":"kimberlybp"},"content":"                      \u003cSplitPane dividerPositions\u003d\"0.2\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":168,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":169,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.topAnchor\u003d\"0.0\" styleClass\u003d\"split-pane\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":170,"author":{"gitId":"kimberlybp"},"content":"                        \u003citems\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":171,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":172,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":173,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"serviceList\" minHeight\u003d\"380.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":174,"author":{"gitId":"kimberlybp"},"content":"                                    minWidth\u003d\"360.0\" prefWidth\u003d\"360\"","lastModifiedDate":"2023-03-25"},{"lineNumber":175,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":176,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":177,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":178,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":179,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":180,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":181,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"kimberlybp"},"content":"                                \u003cStackPane fx:id\u003d\"serviceListPanelPlaceholder\"","lastModifiedDate":"2023-03-25"},{"lineNumber":183,"author":{"gitId":"kimberlybp"},"content":"                                           VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":184,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":185,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":186,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":187,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":188,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":189,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"serviceDetails\" minWidth\u003d\"360\"","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"kimberlybp"},"content":"                                    prefWidth\u003d\"360\" styleClass\u003d\"detailsPane\"","lastModifiedDate":"2023-03-25"},{"lineNumber":191,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":198,"author":{"gitId":"kimberlybp"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":199,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cStackPane fx:id\u003d\"serviceDetailsPlaceholder\"","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"kimberlybp"},"content":"                                             VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":201,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":202,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":204,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":205,"author":{"gitId":"kimberlybp"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":206,"author":{"gitId":"kimberlybp"},"content":"                      \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":207,"author":{"gitId":"kimberlybp"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":208,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":209,"author":{"gitId":"kimberlybp"},"content":"                \u003c/content\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":210,"author":{"gitId":"kimberlybp"},"content":"              \u003c/Tab\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":211,"author":{"gitId":"kimberlybp"},"content":"              \u003cTab disable\u003d\"false\" text\u003d\"Appointments\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"kimberlybp"},"content":"                \u003ccontent\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"kimberlybp"},"content":"                  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"kimberlybp"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"kimberlybp"},"content":"                      \u003cSplitPane dividerPositions\u003d\"0.2\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.topAnchor\u003d\"0.0\" styleClass\u003d\"split-pane\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"kimberlybp"},"content":"                        \u003citems\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"appointmentList\" minHeight\u003d\"380.0\"","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"kimberlybp"},"content":"                                    minWidth\u003d\"360.0\" prefWidth\u003d\"360\"","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"kimberlybp"},"content":"                                \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\"","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"kimberlybp"},"content":"                                           VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"appointmentDetails\" minWidth\u003d\"360\"","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"kimberlybp"},"content":"                                    prefWidth\u003d\"360\" styleClass\u003d\"detailsPane\"","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"kimberlybp"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cStackPane fx:id\u003d\"appointmentDetailsPlaceholder\"","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"kimberlybp"},"content":"                                             VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":252,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"kimberlybp"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"kimberlybp"},"content":"                      \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":255,"author":{"gitId":"kimberlybp"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"kimberlybp"},"content":"                \u003c/content\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"kimberlybp"},"content":"              \u003c/Tab\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"kimberlybp"},"content":"              \u003cTab disable\u003d\"false\" text\u003d\"Technicians\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":260,"author":{"gitId":"kimberlybp"},"content":"                \u003ccontent\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":261,"author":{"gitId":"kimberlybp"},"content":"                  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":262,"author":{"gitId":"kimberlybp"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":263,"author":{"gitId":"kimberlybp"},"content":"                      \u003cSplitPane dividerPositions\u003d\"0.2\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":264,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.topAnchor\u003d\"0.0\" styleClass\u003d\"split-pane\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":266,"author":{"gitId":"kimberlybp"},"content":"                        \u003citems\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":268,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":269,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"technicianList\" minHeight\u003d\"380.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":270,"author":{"gitId":"kimberlybp"},"content":"                                    minWidth\u003d\"360.0\" prefWidth\u003d\"360\"","lastModifiedDate":"2023-03-31"},{"lineNumber":271,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":272,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":273,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":274,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":275,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":276,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":277,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":278,"author":{"gitId":"kimberlybp"},"content":"                                \u003cStackPane fx:id\u003d\"technicianListPanelPlaceholder\"","lastModifiedDate":"2023-03-31"},{"lineNumber":279,"author":{"gitId":"kimberlybp"},"content":"                                           VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":280,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":282,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":283,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":284,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":285,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"technicianDetails\" minWidth\u003d\"360\"","lastModifiedDate":"2023-03-31"},{"lineNumber":286,"author":{"gitId":"kimberlybp"},"content":"                                    prefWidth\u003d\"360\" styleClass\u003d\"detailsPane\"","lastModifiedDate":"2023-03-31"},{"lineNumber":287,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":288,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":290,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":291,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":292,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":293,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":294,"author":{"gitId":"kimberlybp"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":295,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cStackPane fx:id\u003d\"technicianDetailsPlaceholder\"","lastModifiedDate":"2023-03-31"},{"lineNumber":296,"author":{"gitId":"kimberlybp"},"content":"                                             VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":297,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":298,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":299,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":300,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":301,"author":{"gitId":"kimberlybp"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":302,"author":{"gitId":"kimberlybp"},"content":"                      \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":303,"author":{"gitId":"kimberlybp"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":304,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":305,"author":{"gitId":"kimberlybp"},"content":"                \u003c/content\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":306,"author":{"gitId":"kimberlybp"},"content":"              \u003c/Tab\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":307,"author":{"gitId":"kimberlybp"},"content":"              \u003cTab disable\u003d\"false\" text\u003d\"Parts\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":308,"author":{"gitId":"kimberlybp"},"content":"                \u003ccontent\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":309,"author":{"gitId":"kimberlybp"},"content":"                  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"kimberlybp"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"kimberlybp"},"content":"                      \u003cSplitPane dividerPositions\u003d\"0.2\" AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":312,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":313,"author":{"gitId":"kimberlybp"},"content":"                                 AnchorPane.topAnchor\u003d\"0.0\" styleClass\u003d\"split-pane\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":314,"author":{"gitId":"kimberlybp"},"content":"                        \u003citems\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":315,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":316,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":317,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"partList\" minWidth\u003d\"360\"","lastModifiedDate":"2023-03-31"},{"lineNumber":318,"author":{"gitId":"kimberlybp"},"content":"                                    prefWidth\u003d\"360\" styleClass\u003d\"detailsPane\"","lastModifiedDate":"2023-03-31"},{"lineNumber":319,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":320,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":321,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":322,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":323,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":324,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":325,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":326,"author":{"gitId":"kimberlybp"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":327,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cStackPane fx:id\u003d\"partListPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":328,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":329,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":330,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":331,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":332,"author":{"gitId":"kimberlybp"},"content":"                          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"360.0\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":333,"author":{"gitId":"kimberlybp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":334,"author":{"gitId":"kimberlybp"},"content":"                              \u003cVBox fx:id\u003d\"partDetails\" minWidth\u003d\"360\"","lastModifiedDate":"2023-03-31"},{"lineNumber":335,"author":{"gitId":"kimberlybp"},"content":"                                    prefWidth\u003d\"360\" styleClass\u003d\"detailsPane\"","lastModifiedDate":"2023-03-31"},{"lineNumber":336,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":337,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":338,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2023-03-31"},{"lineNumber":339,"author":{"gitId":"kimberlybp"},"content":"                                    AnchorPane.topAnchor\u003d\"0.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":340,"author":{"gitId":"kimberlybp"},"content":"                                \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":341,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":342,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":343,"author":{"gitId":"kimberlybp"},"content":"                                \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":344,"author":{"gitId":"kimberlybp"},"content":"                                  \u003cStackPane fx:id\u003d\"partDetailsPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":345,"author":{"gitId":"kimberlybp"},"content":"                                    \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":346,"author":{"gitId":"kimberlybp"},"content":"                                      \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-text-fill: #837e7e;\" styleClass\u003d\"details-heading\" text\u003d\"Details view not available for parts\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":347,"author":{"gitId":"kimberlybp"},"content":"                                    \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":348,"author":{"gitId":"kimberlybp"},"content":"                                  \u003c/StackPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":349,"author":{"gitId":"kimberlybp"},"content":"                                \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":350,"author":{"gitId":"kimberlybp"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":351,"author":{"gitId":"kimberlybp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":352,"author":{"gitId":"kimberlybp"},"content":"                          \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":353,"author":{"gitId":"kimberlybp"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":354,"author":{"gitId":"kimberlybp"},"content":"                      \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":355,"author":{"gitId":"kimberlybp"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":356,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":357,"author":{"gitId":"kimberlybp"},"content":"                \u003c/content\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":358,"author":{"gitId":"kimberlybp"},"content":"              \u003c/Tab\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":359,"author":{"gitId":"kimberlybp"},"content":"            \u003c/tabs\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":360,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":361,"author":{"gitId":"kimberlybp"},"content":"              \u003cInsets bottom\u003d\"25.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":362,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":363,"author":{"gitId":"kimberlybp"},"content":"          \u003c/TabPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":367,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kimberlybp":318,"9fc70c892":2,"-":50}},{"path":"src/main/resources/view/PartListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"     \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"      \u003cLabel fx:id\u003d\"quantity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$quantity\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":27}},{"path":"src/main/resources/view/PartListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"partListBox\" fx:id\u003d\"partListBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"340.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"    \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" styleClass\u003d\"edge-to-edge\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox fx:id\u003d\"partListPanel\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"details-box\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"          \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":20}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"  \u003cScrollPane fitToWidth\u003d\"true\" fitToHeight\u003d\"true\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"    \u003cTextFlow fx:id\u003d\"resultDisplay\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"  \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"kimberlybp":5,"-":6}},{"path":"src/main/resources/view/ServiceDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"serviceDetailsPanel\" fx:id\u003d\"serviceDetailsPanel\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"340.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"    \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" styleClass\u003d\"edge-to-edge\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox fx:id\u003d\"parentContainer\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"details-box\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"          \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-text-fill: #62DDEB;\" styleClass\u003d\"details-heading\" text\u003d\"Service Details\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"id\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-id\" text\u003d\"Service ID: \" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"description\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-title\" text\u003d\"\\\\\\$description\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"subtitle\" maxWidth\u003d\"Infinity\" styleClass\u003d\"cell_title_label\" text\u003d\"Service Information\" underline\u003d\"true\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"entryDateLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Entry Date\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"entryDate\" minWidth\u003d\"-Infinity\" styleClass\u003d\"details-info\" text\u003d\"\\\\\\$entryDate\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"estimatedFinishDateLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Estimated Finish Date\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"estimatedFinishDate\" styleClass\u003d\"details-info\" text\u003d\"\\\\\\$estimated\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"statusLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Status\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"        \u003cFlowPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"details-info\" text\u003d\"\\\\\\\\$status\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"              \u003cminHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"              \u003c/minHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"              \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"                \u003cInsets bottom\u003d\"4.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"              \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"            \u003cCircle fx:id\u003d\"statusCircle\" fill\u003d\"DODGERBLUE\" radius\u003d\"5.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"                     \u003cFlowPane.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"                        \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"                     \u003c/FlowPane.margin\u003e\u003c/Circle\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"        \u003cVBox fx:id\u003d\"vehicleAssignedTo\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"            \u003cLabel fx:id\u003d\"vehicleOwnerLabel\" styleClass\u003d\"cell_title_label\" text\u003d\"Vehicle Assigned To\" underline\u003d\"true\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"              \u003cminHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"              \u003c/minHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"                        \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox fx:id\u003d\"serviceTechnicians\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"serviceTechniciansLabel\" styleClass\u003d\"cell_title_label\" text\u003d\"Technicians\" underline\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"                  \u003cminHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/minHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox fx:id\u003d\"serviceParts\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"serviceTechniciansLabel1\" styleClass\u003d\"cell_title_label\" text\u003d\"Parts Required\" underline\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"                  \u003cminHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/minHeight\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"kimberlybp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"kimberlybp"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"kimberlybp"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"kimberlybp"},"content":"  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"kimberlybp":127}},{"path":"src/main/resources/view/ServiceListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\\\$description\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"      \u003cFlowPane\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"          \u003cLabel fx:id\u003d\"vehicleId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$vehicleId\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"          \u003cImageView fx:id\u003d\"vehicleTypeImg\" fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"            \u003cFlowPane.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"              \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"            \u003c/FlowPane.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"          \u003cLabel fx:id\u003d\"vehicleInfo\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$vehicleInfo\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"      \u003cLabel fx:id\u003d\"estimatedFinishDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$estimatedFinish\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"      \u003cFlowPane\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"          \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$status\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"            \u003cFlowPane.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"            \u003c/FlowPane.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"          \u003cCircle fx:id\u003d\"statusCircle\" fill\u003d\"DODGERBLUE\" radius\u003d\"5.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":60}},{"path":"src/main/resources/view/ServiceListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"  \u003cListView fx:id\u003d\"serviceListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":8}},{"path":"src/main/resources/view/TechnicianDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"technicianDetailsPanel\" fx:id\u003d\"technicianDetailsPanel\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"340.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"    \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" styleClass\u003d\"edge-to-edge\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox fx:id\u003d\"parentContainer\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"details-box\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"          \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-text-fill: #62DDEB;\" styleClass\u003d\"details-heading\" text\u003d\"Technician Details\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"id\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-id\" text\u003d\"Technician ID: \" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"name\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-title\" text\u003d\"\\$first\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"subtitle\" maxWidth\u003d\"Infinity\" styleClass\u003d\"cell_title_label\" text\u003d\"Personal Information\" underline\u003d\"true\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"phoneLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Mobile Number\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"phone\" minWidth\u003d\"-Infinity\" styleClass\u003d\"details-info\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"emailLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Email\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"details-info\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"addressLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Address\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"details-info\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"tagsLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Tags\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" styleClass\u003d\"customerTags\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox fx:id\u003d\"technicianServices\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"          \u003cLabel fx:id\u003d\"servicesLabel\" styleClass\u003d\"cell_title_label\" text\u003d\"Services\" underline\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"            \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"            \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox fx:id\u003d\"technicianAppointments\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"          \u003cLabel fx:id\u003d\"appointmentsLabel\" styleClass\u003d\"cell_title_label\" text\u003d\"Appointments\" underline\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"            \u003cminHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"            \u003c/minHeight\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"kimberlybp"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"kimberlybp"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"kimberlybp"},"content":"  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":118}},{"path":"src/main/resources/view/TechnicianListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"110\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"numberOfServices\" styleClass\u003d\"cell_small_label\" text\u003d\"0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"        \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"          \u003cimage\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"            \u003cImage url\u003d\"@/images/service_blue_icon.png\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"          \u003c/image\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"numberOfAppointments\" styleClass\u003d\"cell_small_label\" text\u003d\"0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"        \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"          \u003cimage\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"            \u003cImage url\u003d\"@/images/appointment_blue_icon.png\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"          \u003c/image\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"        \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"          \u003cimage\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"            \u003cImage url\u003d\"@/images/phone_icon.png\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"          \u003c/image\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"      \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"        \u003cimage\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"          \u003cImage url\u003d\"@/images/mail_icon.png\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        \u003c/image\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"               \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":81}},{"path":"src/main/resources/view/TechnicianListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"anchor-pane\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"  \u003cListView fx:id\u003d\"technicianListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"kimberlybp":8}},{"path":"src/main/resources/view/VehicleDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"vehicleDetailsPanel\" fx:id\u003d\"vehicleDetailsPanel\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"340.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"    \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" styleClass\u003d\"edge-to-edge\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"      \u003cVBox fx:id\u003d\"parentContainer\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"details-box\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"          \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"15\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-text-fill: #62DDEB;\" styleClass\u003d\"details-heading\" text\u003d\"Vehicle Details\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"id\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-id\" text\u003d\"Vehicle ID: \" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"plateNumber\" maxWidth\u003d\"Infinity\" styleClass\u003d\"details-title\" text\u003d\"\\\\$plateNumber\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel id\u003d\"detailsPaneName\" fx:id\u003d\"subtitle\" maxWidth\u003d\"Infinity\" styleClass\u003d\"cell_title_label\" text\u003d\"Vehicle Information\" underline\u003d\"true\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"brandLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Brand\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"brand\" styleClass\u003d\"details-info\" text\u003d\"\\\\$brand\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"          \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets bottom\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        \u003cHBox spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"colorLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Color\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"color\" minWidth\u003d\"-Infinity\" styleClass\u003d\"details-info\" text\u003d\"\\\\$color\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox prefWidth\u003d\"100.0\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"typeLabel\" styleClass\u003d\"details-info-label\" text\u003d\"Type\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"                \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"details-info\" text\u003d\"\\\\$type\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"        \u003cVBox fx:id\u003d\"vehicleOwner\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"kimberlybp"},"content":"            \u003cLabel fx:id\u003d\"vehicleOwnerLabel\" styleClass\u003d\"cell_title_label\" text\u003d\"Owner\" underline\u003d\"true\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"              \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"kimberlybp"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"kimberlybp"},"content":"              \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"kimberlybp"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"kimberlybp"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"kimberlybp"},"content":"        \u003cVBox fx:id\u003d\"vehicleServices\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"kimberlybp"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"kimberlybp"},"content":"            \u003cLabel fx:id\u003d\"vehicleServicesLabel\" styleClass\u003d\"cell_title_label\" text\u003d\"Services\" underline\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"kimberlybp"},"content":"              \u003cminHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"kimberlybp"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"kimberlybp"},"content":"              \u003c/minHeight\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"kimberlybp"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"kimberlybp"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"kimberlybp"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"kimberlybp"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"kimberlybp"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"kimberlybp"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"kimberlybp"},"content":"  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"kimberlybp":104}},{"path":"src/main/resources/view/VehicleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"kimberlybp"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"kimberlybp"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"kimberlybp"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"plateNumber\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"         \u003cFlowPane fx:id\u003d\"subtitle\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"kimberlybp"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"              \u003cImageView fx:id\u003d\"typeImg\" fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"            \u003cLabel fx:id\u003d\"brand\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$brand\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"kimberlybp"},"content":"                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"kimberlybp"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"kimberlybp"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"kimberlybp"},"content":"            \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"kimberlybp"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"kimberlybp"},"content":"                     \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"kimberlybp"},"content":"                  \u003cFlowPane.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"                     \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"kimberlybp"},"content":"                  \u003c/FlowPane.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"kimberlybp"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"kimberlybp"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"kimberlybp"},"content":"               \u003cInsets bottom\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"         \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"      \u003cFlowPane fx:id\u003d\"subtitle2\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"kimberlybp"},"content":"        \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"kimberlybp"},"content":"          \u003cimage\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"kimberlybp"},"content":"            \u003cImage url\u003d\"@/images/service_white_icon.png\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"kimberlybp"},"content":"          \u003c/image\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"kimberlybp"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        \u003cLabel fx:id\u003d\"numberOfServices\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"kimberlybp"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"kimberlybp"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"kimberlybp"},"content":"          \u003cFlowPane.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"kimberlybp"},"content":"            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"kimberlybp"},"content":"          \u003c/FlowPane.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"kimberlybp"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"kimberlybp"},"content":"               \u003cInsets bottom\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"      \u003cLabel fx:id\u003d\"owner\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$owner\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"kimberlybp"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"kimberlybp"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"kimberlybp"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"kimberlybp"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"kimberlybp"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":78}},{"path":"src/main/resources/view/VehicleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kimberlybp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"kimberlybp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"kimberlybp"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"kimberlybp"},"content":"  \u003cListView fx:id\u003d\"vehicleListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"kimberlybp"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"kimberlybp":8}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"        assertNotNull(AppUtil.getImage(\"/images/Auto_M8_32.png\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"9fc70c892":1,"-":35}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"kimberlybp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"kimberlybp"},"content":"    //TODO: add tests back in when stable","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"kimberlybp"},"content":"    //@Test","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"kimberlybp"},"content":"    //public void testIndent4() {","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"kimberlybp"},"content":"    //    String initial \u003d \"Hello\\nmy\\nname\\nis\\nGinloy\";","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"kimberlybp"},"content":"    //    String actual \u003d StringUtil.indent(initial, 4);","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"kimberlybp"},"content":"    //    String expected \u003d \"    Hello\\n    my\\n    name\\n    is\\n    Ginloy\";","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"kimberlybp"},"content":"    //    assertEquals(expected, actual);","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"kimberlybp"},"content":"    //}","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"kimberlybp"},"content":"    //@Test","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"kimberlybp"},"content":"    //public void testIndentOneLine() {","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"kimberlybp"},"content":"    //    String initial \u003d \"Hello my name is Ginloy\";","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"kimberlybp"},"content":"    //    String actual \u003d StringUtil.indent(initial, 4);","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"kimberlybp"},"content":"    //    String expected \u003d \"    Hello my name is Ginloy\";","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"kimberlybp"},"content":"    //    assertEquals(expected, actual);","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"kimberlybp"},"content":"    //}","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"ginloy"},"content":"    public void testIndentEmptyString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"ginloy"},"content":"        String initial \u003d \"\";","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"ginloy"},"content":"        String actual \u003d StringUtil.indent(initial, 4);","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"ginloy"},"content":"        String expected \u003d \"    \";","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kimberlybp":17,"ginloy":9,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"kimberlybp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.storage.JsonShopStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.storage.ShopStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"kimberlybp"},"content":"        ShopStorage shopStorage \u003d new JsonShopStorage(Paths.get(\"data\" , \"autom8.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kimberlybp"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, shopStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"kimberlybp"},"content":"        JsonShopStorage shopStorage \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"kimberlybp"},"content":"                new JsonShopStorage(temporaryFolder.resolve(\"ioExceptionAutoM8.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"kimberlybp"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, shopStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        // assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"kimberlybp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kimberlybp":12,"9fc70c892":1,"-":157}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"kimberlybp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kimberlybp":3,"9fc70c892":1,"-":42}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.entity.person.Technician;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.AppointmentDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.CustomerVehicleMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.ServiceDataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.TechnicianDataMap;","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.mapping.VehicleDataMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.PartMap;","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.Service;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.Vehicle;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.service.appointment.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        public Path getShopFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"kimberlybp"},"content":"            return null;","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"kimberlybp"},"content":"        public void setShopFilePath(Path shopFilePath) {","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"junlee1991"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"junlee1991"},"content":"        public void setShop(ReadOnlyShop shop) {","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"junlee1991"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"9fc70c892"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"9fc70c892"},"content":"        public ObservableList\u003cService\u003e getFilteredServiceList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"9fc70c892"},"content":"        public PartMap getPartMap() {","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"ginloy"},"content":"        public void updateFilteredCustomerList(Predicate\u003c? super Customer\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"ginloy"},"content":"        public void updateFilteredAppointmentList(Predicate\u003c? super Appointment\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"9fc70c892"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"9fc70c892"},"content":"        public boolean hasCustomer(int customerId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"9fc70c892"},"content":"        public void deleteCustomer(Customer target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"9fc70c892"},"content":"        public void setCustomer(Customer target, Customer editedPerson) {","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"9fc70c892"},"content":"        public void addVehicle(int customerId, Vehicle vehicle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"9fc70c892"},"content":"        public boolean hasVehicle(int vehicleId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":221,"author":{"gitId":"9fc70c892"},"content":"        public void deleteVehicle(Vehicle target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":224,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":225,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"9fc70c892"},"content":"        public void setVehicle(Vehicle target, Vehicle editedVehicle) {","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"9fc70c892"},"content":"        public void addService(int vehicleId, Service service) {","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"9fc70c892"},"content":"        public boolean hasService(int serviceId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":241,"author":{"gitId":"9fc70c892"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":242,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":243,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":244,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":245,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":246,"author":{"gitId":"9fc70c892"},"content":"        public void deleteService(Service service) {","lastModifiedDate":"2023-03-17"},{"lineNumber":247,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":248,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":249,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":250,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"9fc70c892"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"ginloy"},"content":"        public boolean hasAppointment(int appointmentId) {","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"ginloy"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"kimberlybp"},"content":"        public void addPart(String partName, int quantity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":262,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"ginloy"},"content":"        public void addPartToService(int serviceId, String partName, int quantity) throws NoSuchElementException {","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"ginloy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"ginloy"},"content":"        public void addTechnicianToService(int serviceId, int techId) throws NoSuchElementException {","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"ginloy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":274,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"ginloy"},"content":"        public void addTechnicianToAppointment(int techId, int appointmentId) throws NoSuchElementException {","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"ginloy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":279,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":280,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":281,"author":{"gitId":"kimberlybp"},"content":"        public boolean hasPart(String partName) {","lastModifiedDate":"2023-03-16"},{"lineNumber":282,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":283,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":284,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":285,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":286,"author":{"gitId":"9fc70c892"},"content":"        public ObservableList\u003cTechnician\u003e getFilteredTechnicianList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":287,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":288,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":289,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":290,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":291,"author":{"gitId":"ginloy"},"content":"        public boolean hasTechnician(int id) {","lastModifiedDate":"2023-03-17"},{"lineNumber":292,"author":{"gitId":"ginloy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":293,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":294,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":295,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":296,"author":{"gitId":"ginloy"},"content":"        public void addTechnician(Technician technician) {","lastModifiedDate":"2023-03-17"},{"lineNumber":297,"author":{"gitId":"ginloy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":298,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":299,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":300,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":301,"author":{"gitId":"9fc70c892"},"content":"        public void updatePartsMap() {","lastModifiedDate":"2023-03-17"},{"lineNumber":302,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":303,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":304,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":305,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":306,"author":{"gitId":"9fc70c892"},"content":"        public void deleteTechnician(Technician target) {","lastModifiedDate":"2023-03-18"},{"lineNumber":307,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":308,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":309,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":310,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":311,"author":{"gitId":"9fc70c892"},"content":"        public void setTechnician(Technician target, Technician editedPerson) {","lastModifiedDate":"2023-03-30"},{"lineNumber":312,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":313,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":314,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":315,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":316,"author":{"gitId":"kimberlybp"},"content":"        public CustomerVehicleMap getCustomerVehicleMap() {","lastModifiedDate":"2023-03-17"},{"lineNumber":317,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":318,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":319,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":320,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":321,"author":{"gitId":"ginloy"},"content":"        public void updateFilteredTechnicianList(Predicate\u003c? super Technician\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":322,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":323,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":324,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":325,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":326,"author":{"gitId":"ginloy"},"content":"        public void updateFilteredVehicleList(Predicate\u003c? super Vehicle\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":328,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":329,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":330,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":331,"author":{"gitId":"ginloy"},"content":"        public void updateFilteredServiceList(Predicate\u003c? super Service\u003e predicate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":332,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":333,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":334,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":335,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":336,"author":{"gitId":"9fc70c892"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-03-30"},{"lineNumber":337,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":338,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":339,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":340,"author":{"gitId":"kimberlybp"},"content":"        public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":341,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":342,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":343,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":344,"author":{"gitId":"9fc70c892"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":345,"author":{"gitId":"kimberlybp"},"content":"        public ObservableList\u003cVehicle\u003e getFilteredVehicleList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":346,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":347,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":348,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":349,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":350,"author":{"gitId":"kimberlybp"},"content":"        public VehicleDataMap getVehicleDataMap() {","lastModifiedDate":"2023-03-18"},{"lineNumber":351,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":352,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":353,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":354,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":355,"author":{"gitId":"kimberlybp"},"content":"        public ServiceDataMap getServiceDataMap() {","lastModifiedDate":"2023-03-18"},{"lineNumber":356,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":357,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":358,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":359,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":360,"author":{"gitId":"kimberlybp"},"content":"        public AppointmentDataMap getAppointmentDataMap() {","lastModifiedDate":"2023-03-31"},{"lineNumber":361,"author":{"gitId":"kimberlybp"},"content":"            return null;","lastModifiedDate":"2023-03-31"},{"lineNumber":362,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":363,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":364,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":365,"author":{"gitId":"kimberlybp"},"content":"        public TechnicianDataMap getTechnicianDataMap() {","lastModifiedDate":"2023-03-31"},{"lineNumber":366,"author":{"gitId":"kimberlybp"},"content":"            return null;","lastModifiedDate":"2023-03-31"},{"lineNumber":367,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":368,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":369,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":370,"author":{"gitId":"kimberlybp"},"content":"        public void selectCustomer(Customer customer) {","lastModifiedDate":"2023-03-26"},{"lineNumber":371,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":372,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":373,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":374,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":375,"author":{"gitId":"kimberlybp"},"content":"        public Customer getSelectedCustomer() {","lastModifiedDate":"2023-03-26"},{"lineNumber":376,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":377,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":378,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":379,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":380,"author":{"gitId":"kimberlybp"},"content":"        public void selectVehicle(Vehicle vehicle) {","lastModifiedDate":"2023-03-27"},{"lineNumber":381,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":382,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":383,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":384,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":385,"author":{"gitId":"kimberlybp"},"content":"        public Vehicle getSelectedVehicle() {","lastModifiedDate":"2023-03-27"},{"lineNumber":386,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":387,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":388,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":389,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":390,"author":{"gitId":"kimberlybp"},"content":"        public void selectService(Service service) {","lastModifiedDate":"2023-03-27"},{"lineNumber":391,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":392,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":393,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":394,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":395,"author":{"gitId":"kimberlybp"},"content":"        public Appointment getSelectedAppointment() {","lastModifiedDate":"2023-03-31"},{"lineNumber":396,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":397,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":398,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":399,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":400,"author":{"gitId":"kimberlybp"},"content":"        public void selectAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-31"},{"lineNumber":401,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":402,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":403,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":404,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":405,"author":{"gitId":"kimberlybp"},"content":"        public Service getSelectedService() {","lastModifiedDate":"2023-03-27"},{"lineNumber":406,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":407,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":408,"author":{"gitId":"kimberlybp"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":409,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":410,"author":{"gitId":"kimberlybp"},"content":"        public Technician getSelectedTechnician() {","lastModifiedDate":"2023-03-31"},{"lineNumber":411,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":412,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":413,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":414,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":415,"author":{"gitId":"kimberlybp"},"content":"        public void selectTechnician(Technician technician) {","lastModifiedDate":"2023-03-31"},{"lineNumber":416,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":417,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":418,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":419,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":420,"author":{"gitId":"9fc70c892"},"content":"        public void setService(Service target, Service editedService) {","lastModifiedDate":"2023-03-30"},{"lineNumber":421,"author":{"gitId":"9fc70c892"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":422,"author":{"gitId":"9fc70c892"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":423,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":424,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":425,"author":{"gitId":"kimberlybp"},"content":"        public void updateCustomerComparator(Comparator\u003c? super Customer\u003e cmp) {","lastModifiedDate":"2023-03-31"},{"lineNumber":426,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":427,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":428,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":429,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":430,"author":{"gitId":"kimberlybp"},"content":"        public void updateVehicleComparator(Comparator\u003c? super Vehicle\u003e cmp) {","lastModifiedDate":"2023-03-31"},{"lineNumber":431,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":432,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":433,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":434,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":435,"author":{"gitId":"ginloy"},"content":"        public void updateServiceComparator(Comparator\u003c? super Service\u003e cmp) {","lastModifiedDate":"2023-03-30"},{"lineNumber":436,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":437,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":438,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":439,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":440,"author":{"gitId":"ginloy"},"content":"        public void updateAppointmentComparator(Comparator\u003c? super Appointment\u003e cmp) {","lastModifiedDate":"2023-03-30"},{"lineNumber":441,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":442,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":443,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":444,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":445,"author":{"gitId":"ginloy"},"content":"        public void updateTechnicianComparator(Comparator\u003c? super Technician\u003e cmp) {","lastModifiedDate":"2023-03-30"},{"lineNumber":446,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":447,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":448,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":449,"author":{"gitId":"ginloy"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":450,"author":{"gitId":"ginloy"},"content":"        public void resetMaps() {","lastModifiedDate":"2023-03-31"},{"lineNumber":451,"author":{"gitId":"ginloy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":452,"author":{"gitId":"ginloy"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":453,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":454,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":455,"author":{"gitId":"kimberlybp"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":456,"author":{"gitId":"kimberlybp"},"content":"        public ReadOnlyShop getShop() {","lastModifiedDate":"2023-03-18"},{"lineNumber":457,"author":{"gitId":"kimberlybp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":458,"author":{"gitId":"kimberlybp"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":461,"author":{"gitId":"9fc70c892"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":462,"author":{"gitId":"9fc70c892"},"content":"    // TODO: 3/14/2023 Extend AddCommandTest   ModelStubWithParts ModelStubWithVehicles etc","lastModifiedDate":"2023-03-14"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":464,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":465,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":470,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":476,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":477,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":482,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":483,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":499,"author":{"gitId":"kimberlybp"},"content":"        public ReadOnlyShop getShop() {","lastModifiedDate":"2023-03-28"},{"lineNumber":500,"author":{"gitId":"kimberlybp"},"content":"            return new Shop();","lastModifiedDate":"2023-03-28"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":504,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kimberlybp":113,"ginloy":66,"9fc70c892":141,"junlee1991":5,"-":179}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"kimberlybp"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kimberlybp":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.ReadOnlyShop;","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"junlee1991"},"content":"    //    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":101,"author":{"gitId":"junlee1991"},"content":"    //     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"junlee1991"},"content":"    //     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":103,"author":{"gitId":"junlee1991"},"content":"    //     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":104,"author":{"gitId":"junlee1991"},"content":"    //     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-04-02"},{"lineNumber":105,"author":{"gitId":"junlee1991"},"content":"    //     */","lastModifiedDate":"2023-04-02"},{"lineNumber":106,"author":{"gitId":"junlee1991"},"content":"    //    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-04-02"},{"lineNumber":107,"author":{"gitId":"junlee1991"},"content":"    //        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-04-02"},{"lineNumber":108,"author":{"gitId":"junlee1991"},"content":"    //        // only do so by copying its components.","lastModifiedDate":"2023-04-02"},{"lineNumber":109,"author":{"gitId":"junlee1991"},"content":"    //        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2023-04-02"},{"lineNumber":110,"author":{"gitId":"junlee1991"},"content":"    //        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2023-04-02"},{"lineNumber":111,"author":{"gitId":"junlee1991"},"content":"    //","lastModifiedDate":"2023-04-02"},{"lineNumber":112,"author":{"gitId":"junlee1991"},"content":"    //        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-04-02"},{"lineNumber":113,"author":{"gitId":"junlee1991"},"content":"    //        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2023-04-02"},{"lineNumber":114,"author":{"gitId":"junlee1991"},"content":"    //        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2023-04-02"},{"lineNumber":115,"author":{"gitId":"junlee1991"},"content":"    //    }","lastModifiedDate":"2023-04-02"},{"lineNumber":116,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":117,"author":{"gitId":"junlee1991"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-04-02"},{"lineNumber":118,"author":{"gitId":"junlee1991"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-04-02"},{"lineNumber":119,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":120,"author":{"gitId":"junlee1991"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-04-02"},{"lineNumber":121,"author":{"gitId":"junlee1991"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":123,"author":{"gitId":"junlee1991"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-04-02"},{"lineNumber":124,"author":{"gitId":"junlee1991"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-04-02"},{"lineNumber":125,"author":{"gitId":"junlee1991"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-04-02"},{"lineNumber":126,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":127,"author":{"gitId":"junlee1991"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2023-04-02"},{"lineNumber":128,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":129,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":130,"author":{"gitId":"junlee1991"},"content":"    // \u003d\u003d\u003d\u003d For Customers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-04-02"},{"lineNumber":131,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":132,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"junlee1991"},"content":"     * - the address book, filtered customer list and selected customer in {@code actualModel} remain unchanged","lastModifiedDate":"2023-04-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"junlee1991"},"content":"        ReadOnlyShop expectedAddressBook \u003d new Shop(actualModel.getShop());","lastModifiedDate":"2023-04-02"},{"lineNumber":143,"author":{"gitId":"junlee1991"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCustomerList());","lastModifiedDate":"2023-04-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":146,"author":{"gitId":"junlee1991"},"content":"        assertEquals(expectedAddressBook, actualModel.getShop());","lastModifiedDate":"2023-04-02"},{"lineNumber":147,"author":{"gitId":"junlee1991"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCustomerList());","lastModifiedDate":"2023-04-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"junlee1991"},"content":"     * Updates {@code model}\u0027s filtered list to show only the customer at the given {@code targetIndex} in the","lastModifiedDate":"2023-04-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"junlee1991"},"content":"    public static void showCustomerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-04-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"junlee1991"},"content":"        Customer customer \u003d model.getFilteredCustomerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-04-02"},{"lineNumber":158,"author":{"gitId":"junlee1991"},"content":"        final String[] splitName \u003d customer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-04-02"},{"lineNumber":159,"author":{"gitId":"junlee1991"},"content":"        model.updateFilteredCustomerList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-04-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"9fc70c892":2,"junlee1991":47,"-":115}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"kimberlybp"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"kimberlybp"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"kimberlybp"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kimberlybp":4,"9fc70c892":1,"-":105}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"kimberlybp"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"kimberlybp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"kimberlybp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"kimberlybp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"kimberlybp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kimberlybp":6,"9fc70c892":1,"-":167}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"kimberlybp"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kimberlybp"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kimberlybp":3,"9fc70c892":1,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"kimberlybp"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kimberlybp"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new Shop());","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kimberlybp":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalShop;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"import java.util.Collections;","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"import java.util.List;","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":" * @@author bakano98 reused","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":" * Solution adapted from","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":" * https://github.com/AY2122S2-CS2103T-T13-4/tp/commit/c896383a4b216daac2882ebc1b232684329dc59e","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"public class RedoCommandTest {","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"    private static final StackUndoRedo EMPTY_STACK \u003d new StackUndoRedo();","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalShop());","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    private final DeleteCustomerCommand deleteCommandOne \u003d new DeleteCustomerCommand(1);","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"    private final DeleteCustomerCommand deleteCommandTwo \u003d new DeleteCustomerCommand(2);","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"    @Test","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    public void execute() throws Exception {","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        deleteCommandOne.setData(EMPTY_STACK);","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        StackUndoRedo undoRedoStack \u003d prepareStack(","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"                 Collections.emptyList(), Arrays.asList(deleteCommandOne));","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"        redoCommand.setData(undoRedoStack);","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalShop());","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"        Customer firstCustomer \u003d expectedModel.getFilteredCustomerList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"        expectedModel.deleteCustomer(firstCustomer);","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"        // no command in redoStack","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"    public static StackUndoRedo prepareStack(List\u003cRedoableCommand\u003e undoElements,","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"                                             List\u003cRedoableCommand\u003e redoElements) {","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"        StackUndoRedo undoRedoStack \u003d new StackUndoRedo();","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"        undoElements.forEach(undoRedoStack::push);","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"        Collections.reverse(redoElements);","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"        redoElements.forEach(undoRedoStack::push);","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"        redoElements.forEach(unused -\u003e undoRedoStack.popUndo());","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"        return undoRedoStack;","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"junlee1991":66}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalShop;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"import java.util.Collections;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"import java.util.List;","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":" * @@author bakano98 reused","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":" * Solution adapted from","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":" * https://github.com/AY2122S2-CS2103T-T13-4/tp/commit/c896383a4b216daac2882ebc1b232684329dc59e","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"    private static final StackUndoRedo EMPTY_STACK \u003d new StackUndoRedo();","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalShop());","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"    private final DeleteCustomerCommand deleteCommandOne \u003d new DeleteCustomerCommand(1);","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    private final DeleteCustomerCommand deleteCommandTwo \u003d new DeleteCustomerCommand(2);","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"    @Test","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"    public void execute() throws Exception {","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"        deleteCommandOne.setData(EMPTY_STACK);","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"        deleteCommandTwo.setData(EMPTY_STACK);","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"        StackUndoRedo undoRedoStack \u003d prepareStack(","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"                Arrays.asList(deleteCommandOne, deleteCommandTwo), Collections.emptyList());","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"        undoCommand.setData(undoRedoStack);","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"        deleteCommandOne.execute(model);","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"        deleteCommandTwo.execute(model);","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalShop());","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"        expectedModel.deleteCustomer(expectedModel.getFilteredCustomerList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_USAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"        // single command in undoStack","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalShop());","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_USAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"        // no command in undoStack","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_USAGE_FAILURE);","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"    public static StackUndoRedo prepareStack(List\u003cRedoableCommand\u003e undoElements,","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"                                             List\u003cRedoableCommand\u003e redoElements) {","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"        StackUndoRedo undoRedoStack \u003d new StackUndoRedo();","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"        undoElements.forEach(undoRedoStack::push);","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"        Collections.reverse(redoElements);","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"        redoElements.forEach(undoRedoStack::push);","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"junlee1991"},"content":"        redoElements.forEach(unused -\u003e undoRedoStack.popUndo());","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"junlee1991"},"content":"        return undoRedoStack;","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"junlee1991":68}},{"path":"src/test/java/seedu/address/logic/idgen/IdGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ginloy"},"content":"package seedu.address.logic.idgen;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"ginloy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"ginloy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ginloy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"class IdGeneratorTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"ginloy"},"content":"    void generateCustomerId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"ginloy"},"content":"        IdGenerator.reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"ginloy"},"content":"        int a \u003d IdGenerator.generateCustomerId();","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ginloy"},"content":"        int b \u003d IdGenerator.generateCustomerId();","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ginloy"},"content":"        assertEquals(1, a);","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, b);","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"ginloy"},"content":"        IdGenerator.setCustomerIdUnused(b);","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ginloy"},"content":"        int c \u003d IdGenerator.generateCustomerId();","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, c);","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ginloy"},"content":"    void generateVehicleId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ginloy"},"content":"        IdGenerator.reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ginloy"},"content":"        int a \u003d IdGenerator.generateVehicleId();","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"ginloy"},"content":"        int b \u003d IdGenerator.generateVehicleId();","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ginloy"},"content":"        assertEquals(1, a);","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, b);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ginloy"},"content":"        IdGenerator.setVehicleIdUnused(b);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ginloy"},"content":"        int c \u003d IdGenerator.generateVehicleId();","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, c);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"ginloy"},"content":"    void generateServiceId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"ginloy"},"content":"        IdGenerator.reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ginloy"},"content":"        int a \u003d IdGenerator.generateServiceId();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ginloy"},"content":"        int b \u003d IdGenerator.generateServiceId();","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"ginloy"},"content":"        assertEquals(1, a);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, b);","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ginloy"},"content":"        IdGenerator.setServiceIdUnused(b);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"ginloy"},"content":"        int c \u003d IdGenerator.generateServiceId();","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, c);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ginloy"},"content":"    void generateAppointmentId() {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ginloy"},"content":"        IdGenerator.reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ginloy"},"content":"        int a \u003d IdGenerator.generateAppointmentId();","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ginloy"},"content":"        int b \u003d IdGenerator.generateAppointmentId();","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"ginloy"},"content":"        assertEquals(1, a);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, b);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"ginloy"},"content":"        IdGenerator.setAppointmentIdUnused(b);","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"ginloy"},"content":"        int c \u003d IdGenerator.generateAppointmentId();","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, c);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"ginloy"},"content":"    void generateStaffId() {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"ginloy"},"content":"        IdGenerator.reset();","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"ginloy"},"content":"        int a \u003d IdGenerator.generateStaffId();","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"ginloy"},"content":"        int b \u003d IdGenerator.generateStaffId();","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"ginloy"},"content":"        assertEquals(1, a);","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, b);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"ginloy"},"content":"        IdGenerator.setStaffIdUnused(b);","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"ginloy"},"content":"        int c \u003d IdGenerator.generateStaffId();","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"ginloy"},"content":"        assertEquals(2, c);","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"ginloy"},"content":"    void saveState() throws IOException, ClassCastException, ClassNotFoundException {","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"ginloy"},"content":"        IdGenerator.reset();","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"ginloy"},"content":"        Path path \u003d Path.of(\"src\", \"test\", \"data\", \"IdGeneratorStateTest\");","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"ginloy"},"content":"        int a \u003d IdGenerator.generateVehicleId();","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"ginloy"},"content":"        int b \u003d IdGenerator.generateCustomerId();","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"ginloy"},"content":"        int c \u003d IdGenerator.generateServiceId();","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"ginloy"},"content":"        IdGenerator.setCustomerIdUnused(b);","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"ginloy"},"content":"        IdGenerator.saveState(path);","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"ginloy"},"content":"        IdGenerator.generateCustomerId();","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"ginloy"},"content":"        IdGenerator.loadState(path);","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"ginloy"},"content":"        int d \u003d IdGenerator.generateCustomerId();","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"ginloy"},"content":"        assertEquals(b, d);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"ginloy"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"ginloy":86}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"9fc70c892":5,"-":136}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"9fc70c892":1,"-":86}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"9fc70c892":4,"-":207}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"ginloy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ginloy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.ServiceStatus;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ginloy"},"content":"import seedu.address.model.service.VehicleType;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":202,"author":{"gitId":"ginloy"},"content":"    void parseInt() throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":203,"author":{"gitId":"ginloy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInt(\"23r\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"ginloy"},"content":"        assertEquals(69, ParserUtil.parseInt(\"69\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"ginloy"},"content":"        assertEquals(23, ParserUtil.parseInt(\"023\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":209,"author":{"gitId":"ginloy"},"content":"    void parseVehicleType() throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"ginloy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVehicleType(\"carMotor\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"ginloy"},"content":"        assertEquals(VehicleType.CAR, ParserUtil.parseVehicleType(\"car\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":212,"author":{"gitId":"ginloy"},"content":"        assertEquals(VehicleType.CAR, ParserUtil.parseVehicleType(\"cAr\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"ginloy"},"content":"        assertEquals(VehicleType.MOTORBIKE, ParserUtil.parseVehicleType(\"MoToRBike\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":214,"author":{"gitId":"ginloy"},"content":"        assertEquals(VehicleType.MOTORBIKE, ParserUtil.parseVehicleType(\"motorbike\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":215,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":216,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":217,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":218,"author":{"gitId":"ginloy"},"content":"    void parseServiceStatus() throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":219,"author":{"gitId":"ginloy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseServiceStatus(\"fasf\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":220,"author":{"gitId":"ginloy"},"content":"        assertEquals(ServiceStatus.CANCELLED, ParserUtil.parseServiceStatus(\"CaNCelled\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":221,"author":{"gitId":"ginloy"},"content":"        assertEquals(ServiceStatus.COMPLETE, ParserUtil.parseServiceStatus(\"CoMPlete\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":222,"author":{"gitId":"ginloy"},"content":"        assertEquals(ServiceStatus.ON_HOLD, ParserUtil.parseServiceStatus(\"On Hold\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":223,"author":{"gitId":"ginloy"},"content":"        assertEquals(ServiceStatus.IN_PROGRESS, ParserUtil.parseServiceStatus(\"In ProGress\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":224,"author":{"gitId":"ginloy"},"content":"        assertEquals(ServiceStatus.TO_REPAIR, ParserUtil.parseServiceStatus(\"To RePair\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":225,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":226,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":228,"author":{"gitId":"ginloy"},"content":"    void parseDate() throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":229,"author":{"gitId":"ginloy"},"content":"        LocalDate expected \u003d LocalDate.parse(\"2000-12-08\");","lastModifiedDate":"2023-03-16"},{"lineNumber":230,"author":{"gitId":"ginloy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(\"03/02/21\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":231,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, ParserUtil.parseDate(\"2000-12-08\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":232,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":233,"author":{"gitId":"ginloy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":234,"author":{"gitId":"ginloy"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":235,"author":{"gitId":"ginloy"},"content":"    void parseTime() throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":236,"author":{"gitId":"ginloy"},"content":"        LocalTime expected \u003d LocalTime.parse(\"14:05:00\");","lastModifiedDate":"2023-03-16"},{"lineNumber":237,"author":{"gitId":"ginloy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(\"20:69:69\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":238,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, ParserUtil.parseTime(\"14:05\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":239,"author":{"gitId":"ginloy"},"content":"        assertEquals(expected, ParserUtil.parseTime(\"14:05:00\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":240,"author":{"gitId":"ginloy"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"ginloy":45,"9fc70c892":4,"-":192}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"9fc70c892"},"content":"            return FXCollections.observableArrayList(persons);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"9fc70c892":3,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"kimberlybp"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"kimberlybp"},"content":"    public void setShopFilePath_validPath_setsShopFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"kimberlybp"},"content":"        Path path \u003d Paths.get(\"autom8/file/path\");","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"kimberlybp"},"content":"        modelManager.setShopFilePath(path);","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"kimberlybp"},"content":"        assertEquals(path, modelManager.getShopFilePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"kimberlybp"},"content":"        Shop shop \u003d new Shop();","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"kimberlybp"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, shop);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"kimberlybp"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, shop);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"kimberlybp"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, shop)));","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"kimberlybp"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, shop)));","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":132,"author":{"gitId":"kimberlybp"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, shop)));","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kimberlybp":11,"9fc70c892":1,"-":122}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"9fc70c892":1,"-":37}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"9fc70c892":1,"-":69}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"9fc70c892":1,"-":75}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"9fc70c892":1,"-":41}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"9fc70c892":1,"-":91}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"9fc70c892":1,"-":41}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.UniquePersonList;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"9fc70c892":4,"-":168}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"9fc70c892":4,"-":106}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"kimberlybp"},"content":"        JsonShopStorage shopStorage \u003d new JsonShopStorage(getTempFilePath(\"shop\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kimberlybp"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, shopStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kimberlybp":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"9fc70c892":1,"-":33}},{"path":"src/test/java/seedu/address/testutil/CustomerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import java.util.List;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":" * A utility class to help with building Customer objects.","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"public class CustomerBuilder {","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"    public static final int DEFAULT_ID \u003d 1;","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"    public static final Set\u003cInteger\u003e DEFAULT_VEHICLE_IDS \u003d new HashSet\u003c\u003e(List.of(1));","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"    public static final Set\u003cInteger\u003e DEFAULT_APPOINTMENT_IDS \u003d new HashSet\u003c\u003e(List.of(1));","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"    private Name name;","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    private Phone phone;","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"    private Email email;","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"    private Address address;","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"    private int id;","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"    private Set\u003cInteger\u003e vehicleIds;","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"    private Set\u003cInteger\u003e appointmentIds;","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"     * Creates a {@code CustomerBuilder} with the default details.","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder() {","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"        id \u003d DEFAULT_ID;","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"        vehicleIds \u003d DEFAULT_VEHICLE_IDS;","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"        appointmentIds \u003d DEFAULT_APPOINTMENT_IDS;","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"     * Initializes the CustomerBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder(Customer personToCopy) {","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"        vehicleIds \u003d (Set\u003cInteger\u003e) personToCopy.getVehicleIds();","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"        appointmentIds \u003d (Set\u003cInteger\u003e) personToCopy.getAppointmentIds();","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"junlee1991"},"content":"     * Sets the {@code Name} of the {@code Customer} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder withName(String name) {","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"junlee1991"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"junlee1991"},"content":"        return this;","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"junlee1991"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":77,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder withTags(String ... tags) {","lastModifiedDate":"2023-04-02"},{"lineNumber":78,"author":{"gitId":"junlee1991"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-04-02"},{"lineNumber":79,"author":{"gitId":"junlee1991"},"content":"        return this;","lastModifiedDate":"2023-04-02"},{"lineNumber":80,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"junlee1991"},"content":"     * Sets the {@code Address} of the {@code Customer} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":85,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder withAddress(String address) {","lastModifiedDate":"2023-04-02"},{"lineNumber":86,"author":{"gitId":"junlee1991"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-04-02"},{"lineNumber":87,"author":{"gitId":"junlee1991"},"content":"        return this;","lastModifiedDate":"2023-04-02"},{"lineNumber":88,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":89,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":90,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":91,"author":{"gitId":"junlee1991"},"content":"     * Sets the {@code Phone} of the {@code Customer} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":92,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":93,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder withPhone(String phone) {","lastModifiedDate":"2023-04-02"},{"lineNumber":94,"author":{"gitId":"junlee1991"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-04-02"},{"lineNumber":95,"author":{"gitId":"junlee1991"},"content":"        return this;","lastModifiedDate":"2023-04-02"},{"lineNumber":96,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":97,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":98,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":99,"author":{"gitId":"junlee1991"},"content":"     * Sets the {@code Email} of the {@code Customer} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":101,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder withEmail(String email) {","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"junlee1991"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-04-02"},{"lineNumber":103,"author":{"gitId":"junlee1991"},"content":"        return this;","lastModifiedDate":"2023-04-02"},{"lineNumber":104,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":105,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":106,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":107,"author":{"gitId":"junlee1991"},"content":"     * Sets the {@code id} of the {@code Customer} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":108,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":109,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder withId(int id) {","lastModifiedDate":"2023-04-02"},{"lineNumber":110,"author":{"gitId":"junlee1991"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-04-02"},{"lineNumber":111,"author":{"gitId":"junlee1991"},"content":"        return this;","lastModifiedDate":"2023-04-02"},{"lineNumber":112,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":113,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":114,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":115,"author":{"gitId":"junlee1991"},"content":"     * Sets the {@code vehicleIds} of the {@code Customer} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":116,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":117,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder withVehicleIds(Set\u003cInteger\u003e vehicleIds) {","lastModifiedDate":"2023-04-02"},{"lineNumber":118,"author":{"gitId":"junlee1991"},"content":"        this.vehicleIds \u003d vehicleIds;","lastModifiedDate":"2023-04-02"},{"lineNumber":119,"author":{"gitId":"junlee1991"},"content":"        return this;","lastModifiedDate":"2023-04-02"},{"lineNumber":120,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":121,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":123,"author":{"gitId":"junlee1991"},"content":"     * Sets the {@code appointmentIds} of the {@code Customer} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":124,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":125,"author":{"gitId":"junlee1991"},"content":"    public CustomerBuilder withAppointmentIds(Set\u003cInteger\u003e appointmentIds) {","lastModifiedDate":"2023-04-02"},{"lineNumber":126,"author":{"gitId":"junlee1991"},"content":"        this.appointmentIds \u003d appointmentIds;","lastModifiedDate":"2023-04-02"},{"lineNumber":127,"author":{"gitId":"junlee1991"},"content":"        return this;","lastModifiedDate":"2023-04-02"},{"lineNumber":128,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":129,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":130,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":131,"author":{"gitId":"junlee1991"},"content":"    public Customer build() {","lastModifiedDate":"2023-04-02"},{"lineNumber":132,"author":{"gitId":"junlee1991"},"content":"        return new Customer(id, name, phone, email, address, tags, vehicleIds, appointmentIds);","lastModifiedDate":"2023-04-02"},{"lineNumber":133,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":134,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":135,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"junlee1991":135}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"9fc70c892":5,"-":82}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"9fc70c892":5,"-":91}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"9fc70c892":1,"-":61}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"9fc70c892":1,"-":54}},{"path":"src/test/java/seedu/address/testutil/TypicalCustomers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"junlee1991"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"junlee1991"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"junlee1991"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"junlee1991"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"junlee1991"},"content":"import java.util.List;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.person.Customer;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"junlee1991"},"content":"import seedu.address.model.entity.shop.Shop;","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"junlee1991"},"content":"/**","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"junlee1991"},"content":" * A utility class containing a list of {@code Customer} objects to be used in tests.","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"junlee1991"},"content":" */","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"junlee1991"},"content":"public class TypicalCustomers {","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"junlee1991"},"content":"    public static final Customer ALICE \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"junlee1991"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"junlee1991"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"junlee1991"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"junlee1991"},"content":"            .withId(1)","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"junlee1991"},"content":"            .withVehicleIds(new HashSet\u003c\u003e(List.of(1)))","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"junlee1991"},"content":"            .withAppointmentIds(new HashSet\u003c\u003e(List.of(1))).build();","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"junlee1991"},"content":"    public static final Customer BENSON \u003d new CustomerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"junlee1991"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"junlee1991"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"junlee1991"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"junlee1991"},"content":"              .withId(2)","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"junlee1991"},"content":"              .withVehicleIds(new HashSet\u003c\u003e(List.of(2)))","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"junlee1991"},"content":"              .withAppointmentIds(new HashSet\u003c\u003e(List.of(2))).build();","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"junlee1991"},"content":"    public static final Customer CARL \u003d new CustomerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"junlee1991"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"junlee1991"},"content":"                                                .withId(3)","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"junlee1991"},"content":"                                                .withVehicleIds(new HashSet\u003c\u003e(List.of(3)))","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"junlee1991"},"content":"                                                .withAppointmentIds(new HashSet\u003c\u003e(List.of(3))).build();","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"junlee1991"},"content":"    public static final Customer DANIEL \u003d new CustomerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"junlee1991"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").withId(4)","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"junlee1991"},"content":"                                                  .withVehicleIds(new HashSet\u003c\u003e(List.of(4)))","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"junlee1991"},"content":"                                                  .withAppointmentIds(new HashSet\u003c\u003e(List.of(4))).build();","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"junlee1991"},"content":"    public static final Customer ELLE \u003d new CustomerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"junlee1991"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withId(5)","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"junlee1991"},"content":"                                                .withVehicleIds(new HashSet\u003c\u003e(List.of(5)))","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"junlee1991"},"content":"                                                .withAppointmentIds(new HashSet\u003c\u003e(List.of(5))).build();","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"junlee1991"},"content":"    public static final Customer FIONA \u003d new CustomerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"junlee1991"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withId(6)","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"junlee1991"},"content":"                                                 .withVehicleIds(new HashSet\u003c\u003e(List.of(6)))","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"junlee1991"},"content":"                                                 .withAppointmentIds(new HashSet\u003c\u003e(List.of(6))).build();","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"junlee1991"},"content":"    public static final Customer GEORGE \u003d new CustomerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"junlee1991"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withId(7)","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"junlee1991"},"content":"                                                  .withVehicleIds(new HashSet\u003c\u003e(List.of(7)))","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"junlee1991"},"content":"                                                  .withAppointmentIds(new HashSet\u003c\u003e(List.of(7))).build();","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"junlee1991"},"content":"    private TypicalCustomers() {} // prevents instantiation","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"junlee1991"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"junlee1991"},"content":"     * Returns an {@code Shop} with all the typical persons.","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"junlee1991"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"junlee1991"},"content":"    public static Shop getTypicalShop() {","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"junlee1991"},"content":"        Shop ab \u003d new Shop();","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"junlee1991"},"content":"        for (Customer person : getTypicalCustomers()) {","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"junlee1991"},"content":"            ab.addCustomer(person);","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"junlee1991"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"junlee1991"},"content":"        return ab;","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"junlee1991"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"junlee1991"},"content":"    public static List\u003cCustomer\u003e getTypicalCustomers() {","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"junlee1991"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"junlee1991"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"junlee1991"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"junlee1991":68}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"9fc70c892"},"content":"import seedu.address.model.entity.person.Person;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"9fc70c892":1,"-":75}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"ginloy"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@value VALID_FILE_PATH}.","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"ginloy":1,"-":113}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"ginloy"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ginloy":1,"-":6}}]
