[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"# PetPal","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T14-2/tp/actions)","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-T14-2/tp/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2223S2-CS2103-T14-2/tp)","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"![Ui](docs/images/UI/Ui.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"It is the one-stop application for your needs of managing pets! Be it for your daycare center or your pet shelter,","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"this app is what you need for managing large number of pets!","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"PetPal is optimized for use via the **Command Line Interface (CLI)**, while still having the benefits and enhancements","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"of a **Graphical User Interface (GUI)**","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"For experienced typists,this app lets you be more productive, than other applications.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"For the detailed documentation of this project, see the **[PetPal Product Website](https://ay2223s2-cs2103t-t14-2.github.io/tp/)**.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"shuimeihe":15,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"run {","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"    archiveFileName \u003d \u0027petpal.jar\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"shuimeihe":4,"YuanXun9834":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"You can reach us at the email `PetPal[at]comp.nus.edu.sg`","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"### Lin Yuan Xun","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/yuanxun9834.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"[[github](https://github.com/YuanXun9834)]","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"[[portfolio](team/YuanXun9834.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"### Soo Weng Kit","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/wengkit1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"[[github](http://github.com/wengkit1)]","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"[[portfolio](team/wengkit1.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"### He Shuimei","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/shuimeihe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"[[homepage](https://shuimeihe.github.io/)]","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"[[github](http://github.com/shuimeihe)]","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"[[portfolio](team/shuimeihe.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"### Daniel Kur","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/daniel-kur.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"[[github](http://github.com/daniel-kur)]","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"Daniel-Kur"},"content":"[[portfolio](team/daniel-kur.md)]","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Daniel-Kur":1,"shuimeihe":9,"YuanXun9834":8,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"## Introduction to PetPal","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"PetPal is a desktop application meant for Pet Daycare owners to manage their pet clients. It is optimized for typing","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"using the Command Line Interface (CLI) while also having a Graphical User Interface (GUI) to complement its use.","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"Use of PetPal can be scaled to include pet shelters, groomers or trainers.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"PetPal uses Java 11, and can be run on most operating systems that supports Java (e.g. Windows, macOS, Linux)","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"## About the Developer Guide","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"This developer guide is meant for developers interested in contributing to PetPal, and serves as a guide for them to","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"easily setup and get started with PetPal.","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"The developer guide details the overall design structure of PetPal and explains the various design decisions that led","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"to how various features were implemented. The Design section makes use of various UML diagrams which were created using","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"[PlantUML](https://plantuml.com/)","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"### Objectives","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"###","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"[diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/diagrams/ArchitectureDiagram.png\" width\u003d\"341\"  alt\u003d\"\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"and [`MainApp`](https://github.com/AY2223S2-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/diagrams/ArchitectureSequenceDiagram.png\" width\u003d\"718\"  alt\u003d\"\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/diagrams/ComponentManagers.png\" width\u003d\"288\"  alt\u003d\"\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"![Structure of the UI Component](images/diagrams/UiClassDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/diagrams/LogicClassDiagram.png\" width\u003d\"561\" alt\u003d\"\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"YuanXun9834"},"content":"1. When `Logic` is called upon to execute a command, it uses the `PetPalParser` class to parse the user command.","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"shuimeihe"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"shuimeihe"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/diagrams/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/diagrams/ParserClasses.png\" width\u003d\"596\" alt\u003d\"\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"YuanXun9834"},"content":"* When called upon to parse a user command, the `PetPalParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/diagrams/ModelClassDiagram.png\" width\u003d\"445\"  alt\u003d\"\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/diagrams/BetterModelClassDiagram.png\" width\u003d\"437\"  alt\u003d\"\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"shuimeihe"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-T14-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/diagrams/StorageClassDiagram.png\" width\u003d\"557\"  alt\u003d\"\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"YuanXun9834"},"content":"### Remind Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"YuanXun9834"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"shuimeihe"},"content":"The `remind` mechanism is facilitated by the `Deadline`, `RemindCommand`,  classes.","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"YuanXun9834"},"content":"The `Deadline` class has a `deadline` field which is of type `LocalDateTime`. Additionally, it also has a description of type `String`.","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"YuanXun9834"},"content":"\u0027RemindCommand\u0027 extends from the abstract class `Command`. It overrides the `Command#execute()` method to filter the pet list to show only pets with `Deadline` that are within 3 days from today\u0027s date.","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"YuanXun9834"},"content":"Given below is an example usage scenario and how the set file mechanism behaves at each step.","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"shuimeihe"},"content":"Given below is an example usage scenario and how the `remind` mechanism behaves at each step.","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"YuanXun9834"},"content":"Step 1. The user launches the application for the first time.","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"YuanXun9834"},"content":"Step 2. The user decides to add a pet to the pet list. The user executes `add o/Alice n/Doggo p/98765432 e/example@gmail.com a/311, Clementi Ave 2, #02-25 ts/2023-03-27 21:09:09 d/Feed dog - 2023-03-27 21:09:09 t/Dog t/Chihuahua` command to add a pet named `Doggo` with reminder to feed the dog and  deadline of `2023-03-27 21:09:09` to the pet list. The `add` command calls the `AddCommand#execute()` method.","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"YuanXun9834"},"content":"Step 3. The user may exit and reopen Petpal at a future date. The user intends to see all deadlines that are due soon. The user executes `remind` command to filter the pet list to show only pets with `Deadline` that are within 3 days from today\u0027s date. The `remind` command calls the `RemindCommand#execute()` method.","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"YuanXun9834"},"content":"Step 4. The `RemindCommand#execute()` method calls the `Model#updateFilteredPetList()` method to filter the pet list to show only pets with `Deadline` that are within 3 days from today\u0027s date.","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"YuanXun9834"},"content":"The following sequence diagram shows how the remind operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"shuimeihe"},"content":"![RemindSequenceDiagram](images/diagrams/RemindSequenceDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"YuanXun9834"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"shuimeihe"},"content":"![RemindActivityDiagram](images/diagrams/RemindActivityDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"shuimeihe"},"content":"#### Design Considerations:","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"shuimeihe"},"content":"**Choice 1 (Current Choice) : Filter pet list upon command**","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"shuimeihe"},"content":"* Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"shuimeihe"},"content":"    * User can easily find upcoming deadlines easily.","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"shuimeihe"},"content":"* Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"shuimeihe"},"content":"    * Counterintuitive since reminders shouldn\u0027t need user input to be shown.","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"shuimeihe"},"content":"**Choice 2 : Alert users of upcoming deadlines upon startup**","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"shuimeihe"},"content":"* Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"shuimeihe"},"content":"    * User will be reminded of upcoming deadlines upon startup.","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"shuimeihe"},"content":"* Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"shuimeihe"},"content":"    * Might be annoying to users who don\u0027t want to be reminded of upcoming deadlines.","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"wengkit1"},"content":"### Calculator Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"wengkit1"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"wengkit1"},"content":"The calculator mechanism is facilitated by the `AddCommand` class.","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"wengkit1"},"content":"The calculator  calculates the amount of money owed by pet owners to the daycare owners,","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"wengkit1"},"content":"based on an initial timestamp of type java `LocalDateTime` that is required to be non-null when","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"wengkit1"},"content":"entering the `Add` command.","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"Daniel-Kur"},"content":"##### Given below is an example usage scenario and how the calculator mechanism behaves at each step:","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"wengkit1"},"content":"Step 1. The user launches the application for the first time.","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"shuimeihe"},"content":"Step 2. The user decides to add a pet to the pet list. The user executes","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"shuimeihe"},"content":"`add o/Alice n/Doggo p/98765432 e/example@gmail.com a/311, Clementi Ave 2, #02-25 ts/2023-03-27 21:09:09 d/Feed dog -","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"shuimeihe"},"content":"2023-03-27 21:09:09 t/Dog t/Chihuahua` command to add a pet named `Doggo` with reminder to feed the dog and  deadline of","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"shuimeihe"},"content":"`2023-03-27 21:09:09` to the pet list. The `add` command calls the `AddCommand#execute()` method.","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"wengkit1"},"content":"Step 3. The user may exit and reopen PetPal at a future date. The user will see how much is the amount due to them as a field in each pet card by their respective owners.","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"wengkit1"},"content":"Step 4. The amount updates upon clicking on the PetCard on panel, or upon restarting the client.","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"wengkit1"},"content":"The calculator feature is not an additional command, and does not have an activity or sequence diagram.","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":246,"author":{"gitId":"shuimeihe"},"content":"### Archive Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"shuimeihe"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"shuimeihe"},"content":"The archive mechanism is facilitated by the `ArchiveCommand` class.","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"shuimeihe"},"content":"The `ArchiveCommand#execute()` adds the provided `Pet` into an archive list and deletes the `Pet` from the pet list,","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"shuimeihe"},"content":"the `Pet` must exist in the pet list.","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"shuimeihe"},"content":"##### Given below is an example usage scenario and how the set file mechanism behaves at each step:","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"shuimeihe"},"content":"```text","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"shuimeihe"},"content":"Step 1. The user launches the application for the first time","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"shuimeihe"},"content":"Step 2. The user decides to archive a pet in the pet list. The user executes `archive 1`","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"shuimeihe"},"content":"Step 3. The user can view the archived pets in data/archive.json file","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"shuimeihe"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"shuimeihe"},"content":"##### Extensions:","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"shuimeihe"},"content":"```text","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"shuimeihe"},"content":"Step 2a. The PetPal list does not have any pets, the pet at list position 1 does not exist","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"shuimeihe"},"content":"     3a. The PetPal returns an error message: `The provided index is out of bounds`","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"shuimeihe"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"Daniel-Kur"},"content":"### Highlight Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"Daniel-Kur"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"Daniel-Kur"},"content":"The highlight mechanism is facilitated by the \u0027PetListPanel\u0027, \u0027Pet\u0027, and \u0027MarkCommand\u0027 classes.","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"Daniel-Kur"},"content":"This feature highlight pets that have not been marked and have a deadline within a day in the GUI.","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"Daniel-Kur"},"content":"The highlight feature will be executed automatically every certain time window without user input to support real-time state.","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"Daniel-Kur"},"content":"#### Given below is an example usage scenario and how the highlight mechanism behaves at each step:","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"Daniel-Kur"},"content":"Step 1. The user launches the application.","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"Daniel-Kur"},"content":"Step 2. The user decides to add two pet to the pet list with a deadline due three days later.","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"Daniel-Kur"},"content":"Step 3. The given pet will not be highlighted at this moment.","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"Daniel-Kur"},"content":"Step 4. The user decides to mark the first pet as done.","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"Daniel-Kur"},"content":"Step 5. The user exit the application and decided to reopen it two days later.","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"Daniel-Kur"},"content":"Step 6. The second pet that have not been marked will be highlighted while the first pet will not be highlighted since it was already marked.","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":286,"author":{"gitId":"Daniel-Kur"},"content":"The following activity diagram summarizes what happens during the process:","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"shuimeihe"},"content":"![HighlightActivityDiagram](images/diagrams/HighlightDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":289,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"Daniel-Kur"},"content":"### Design Considerations:","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"Daniel-Kur"},"content":"**Aspect: How to reduce human error:**","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"Daniel-Kur"},"content":"**Alternative 1 (Current Choice) : Automatically execute the feature every certain period of time**","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"Daniel-Kur"},"content":"* Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"Daniel-Kur"},"content":"    * Shows real-time state.","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"Daniel-Kur"},"content":"    * Will not show outdated list state.","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"Daniel-Kur"},"content":"* Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"Daniel-Kur"},"content":"    * Use more memory executing the feature at every period of time.","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"Daniel-Kur"},"content":"**Alternative 2 : Provide Refresh button to update the pet list**","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"Daniel-Kur"},"content":"* Pros:","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"Daniel-Kur"},"content":"    * Use less memory since it will be executed only when needed.","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"Daniel-Kur"},"content":"* Cons:","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"Daniel-Kur"},"content":"    * User might forget to refresh to the updated state and shows the outdated instead.","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"shuimeihe"},"content":"### \\[Proposed\\] Importing data from excel (csv)","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":310,"author":{"gitId":"shuimeihe"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":311,"author":{"gitId":"shuimeihe"},"content":"The proposed importing function is an extension of the base `AddressBook`, uses a `CsvToJsonParser` to convert csv data","lastModifiedDate":"2023-03-24"},{"lineNumber":312,"author":{"gitId":"shuimeihe"},"content":"to application readable json data.","lastModifiedDate":"2023-03-24"},{"lineNumber":313,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":314,"author":{"gitId":"shuimeihe"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-24"},{"lineNumber":315,"author":{"gitId":"shuimeihe"},"content":"- **Alternative 1 (current choice)** : Write an external script that parses the csv data based on the column names","lastModifiedDate":"2023-03-24"},{"lineNumber":316,"author":{"gitId":"shuimeihe"},"content":"  into a json save file that works with PetPal, which they will then put into the data file before starting PetPal","lastModifiedDate":"2023-03-24"},{"lineNumber":317,"author":{"gitId":"shuimeihe"},"content":"  for PetPal to be able to read and modify the imported data","lastModifiedDate":"2023-03-24"},{"lineNumber":318,"author":{"gitId":"shuimeihe"},"content":"    - Pros: Might be easier to implement","lastModifiedDate":"2023-03-24"},{"lineNumber":319,"author":{"gitId":"shuimeihe"},"content":"    - Cons: Might be confusing for users to use (running external script)","lastModifiedDate":"2023-03-24"},{"lineNumber":320,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":321,"author":{"gitId":"shuimeihe"},"content":"- **Alternative 2** : Provide an interface for users to upload their csv data into PetPal and automatically parses","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"shuimeihe"},"content":"  the data into json format and refreshes the database.","lastModifiedDate":"2023-03-24"},{"lineNumber":323,"author":{"gitId":"shuimeihe"},"content":"    - Pros: Easier and more intuitive for users to use","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"shuimeihe"},"content":"    - Cons: Builds upon **Alternative 1**, requiring more work to implement","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"wengkit1"},"content":"### Undo Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"wengkit1"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"wengkit1"},"content":"The undo mechanism is facilitated by the `ModelManager`, `UndoCommand`,  classes.","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"wengkit1"},"content":"The `ModelManager` class is implemented by PetPal and has a `petPalCache` field which is of type`PetPal`.","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"wengkit1"},"content":"\u0027UndoCommand\u0027 extends from the abstract class `Command`. It overrides the `Command#execute()` method to filter the pet list to show only pets with `Deadline` that are within 3 days from today\u0027s date.","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"Daniel-Kur"},"content":"##### Given below is an example usage scenario and how the undo mechanism behaves at each step:","lastModifiedDate":"2023-03-24"},{"lineNumber":334,"author":{"gitId":"wengkit1"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"wengkit1"},"content":"Step 1. The user launches the application for the first time.","lastModifiedDate":"2023-03-23"},{"lineNumber":336,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"wengkit1"},"content":"Step 2. The user decides to add a pet to the pet list. The user executes `add o/Alice n/Doggo p/98765432 e/example@gmail.com a/311, Clementi Ave 2, #02-25 ts/2023-03-27 21:09:09 d/Feed dog - 2023-03-27 21:09:09 t/Dog t/Chihuahua` command to add a pet named `Doggo` with reminder to feed the dog and  deadline of `2023-03-27 21:09:09` to the pet list. The `add` command calls the `AddCommand#execute()` method.","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"wengkit1"},"content":"Step 3. The user realises that he has made a mistake and executes `undo`.","lastModifiedDate":"2023-03-23"},{"lineNumber":340,"author":{"gitId":"wengkit1"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":341,"author":{"gitId":"wengkit1"},"content":"Step 4. The list displayed returns to previous state without the new Doggo added.","lastModifiedDate":"2023-03-23"},{"lineNumber":342,"author":{"gitId":"wengkit1"},"content":"##### Extensions:","lastModifiedDate":"2023-03-23"},{"lineNumber":343,"author":{"gitId":"wengkit1"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":344,"author":{"gitId":"wengkit1"},"content":"Step 2a. The user decides to delete a pet from the pet list. The user executes `delete 1`.","lastModifiedDate":"2023-03-23"},{"lineNumber":345,"author":{"gitId":"wengkit1"},"content":"     3a. The user realises that he has made a mistake and executes `undo`.","lastModifiedDate":"2023-03-23"},{"lineNumber":346,"author":{"gitId":"wengkit1"},"content":"     4a. The list displayed returns to previous state with item 1 that was just deleted.","lastModifiedDate":"2023-03-23"},{"lineNumber":347,"author":{"gitId":"wengkit1"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":348,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":349,"author":{"gitId":"wengkit1"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":350,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":351,"author":{"gitId":"shuimeihe"},"content":"![UndoSequenceDiagram](images/diagrams/UndoSequenceDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":352,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"wengkit1"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-03-23"},{"lineNumber":354,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":355,"author":{"gitId":"shuimeihe"},"content":"![UndoActivityDiagram](images/diagrams/UndoActivityDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":356,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"shuimeihe"},"content":"![UndoRedoState0](images/diagrams/UndoRedoState0.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"shuimeihe"},"content":"![UndoRedoState1](images/diagrams/UndoRedoState1.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"shuimeihe"},"content":"![UndoRedoState2](images/diagrams/UndoRedoState2.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"shuimeihe"},"content":"![UndoRedoState3](images/diagrams/UndoRedoState3.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"shuimeihe"},"content":"![UndoSequenceDiagram](images/diagrams/UndoSequenceDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"shuimeihe"},"content":"![UndoRedoState4](images/diagrams/UndoRedoState4.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"shuimeihe"},"content":"![UndoRedoState5](images/diagrams/UndoRedoState5.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"images/diagrams/CommitActivityDiagram.png\" width\u003d\"375\"  alt\u003d\"\"/\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":445,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"YuanXun9834"},"content":"* has a need to manage a significant number of pet details","lastModifiedDate":"2023-03-05"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"YuanXun9834"},"content":"* prefers an app with GUI.","lastModifiedDate":"2023-03-05"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"YuanXun9834"},"content":"**Value proposition**: manage pet details better than a typical mouse driven app","lastModifiedDate":"2023-03-05"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"shuimeihe"},"content":"| Priority | As a …               | I want to …            | So that I can…                                                         |","lastModifiedDate":"2023-03-29"},{"lineNumber":470,"author":{"gitId":"shuimeihe"},"content":"|----------|----------------------|------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-03-29"},{"lineNumber":471,"author":{"gitId":"wengkit1"},"content":"| `* * *`  | new owner            | see usage instructions | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2023-02-19"},{"lineNumber":472,"author":{"gitId":"wengkit1"},"content":"| `* * *`  | owner                | add a new pet          |                                                                        |","lastModifiedDate":"2023-02-19"},{"lineNumber":473,"author":{"gitId":"wengkit1"},"content":"| `* * *`  | owner                | delete a pet           | remove entries that I no longer need                                   |","lastModifiedDate":"2023-02-19"},{"lineNumber":474,"author":{"gitId":"wengkit1"},"content":"| `* * *`  | owner                | find a pet by name     | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-02-19"},{"lineNumber":475,"author":{"gitId":"wengkit1"},"content":"| `*`      | owner with many pets | sort pets by name      | locate a pet easily                                                    |","lastModifiedDate":"2023-02-19"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"wengkit1"},"content":"(For all use cases below, the **System** is the `PetPal` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-19"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"wengkit1"},"content":"1.  Staff requests to list pets","lastModifiedDate":"2023-02-19"},{"lineNumber":488,"author":{"gitId":"wengkit1"},"content":"2.  PetPal shows a list of pets","lastModifiedDate":"2023-02-19"},{"lineNumber":489,"author":{"gitId":"wengkit1"},"content":"3.  Staff requests to delete a specific pet in the list","lastModifiedDate":"2023-02-19"},{"lineNumber":490,"author":{"gitId":"wengkit1"},"content":"4.  PetPal deletes the person","lastModifiedDate":"2023-02-19"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"wengkit1"},"content":"    * 3a1. PetPal shows an error message.","lastModifiedDate":"2023-02-19"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"wengkit1"},"content":"(For all use cases below, the **System** is the `PetPal` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-19"},{"lineNumber":507,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":508,"author":{"gitId":"wengkit1"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-02-19"},{"lineNumber":509,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":510,"author":{"gitId":"wengkit1"},"content":"**MSS**","lastModifiedDate":"2023-02-19"},{"lineNumber":511,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":512,"author":{"gitId":"wengkit1"},"content":"1.  Staff requests to add pet","lastModifiedDate":"2023-02-19"},{"lineNumber":513,"author":{"gitId":"wengkit1"},"content":"2. PetPal deletes the person","lastModifiedDate":"2023-02-19"},{"lineNumber":514,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":515,"author":{"gitId":"wengkit1"},"content":"    Use case ends.","lastModifiedDate":"2023-02-19"},{"lineNumber":516,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":517,"author":{"gitId":"wengkit1"},"content":"**Extensions**","lastModifiedDate":"2023-02-19"},{"lineNumber":518,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":519,"author":{"gitId":"wengkit1"},"content":"* 2a. The details are missing","lastModifiedDate":"2023-02-19"},{"lineNumber":520,"author":{"gitId":"wengkit1"},"content":"    * 2a1. PetPal prompts owner/staff to add missing petname.","lastModifiedDate":"2023-02-19"},{"lineNumber":521,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":522,"author":{"gitId":"wengkit1"},"content":"  Use case ends.","lastModifiedDate":"2023-02-19"},{"lineNumber":523,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":524,"author":{"gitId":"wengkit1"},"content":"**Use case:List the list of pets**","lastModifiedDate":"2023-02-19"},{"lineNumber":525,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":526,"author":{"gitId":"wengkit1"},"content":"**MSS**","lastModifiedDate":"2023-02-19"},{"lineNumber":527,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":528,"author":{"gitId":"wengkit1"},"content":"1. Staff requests to list pets","lastModifiedDate":"2023-02-19"},{"lineNumber":529,"author":{"gitId":"wengkit1"},"content":"2. PetPal displays list","lastModifiedDate":"2023-02-19"},{"lineNumber":530,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":531,"author":{"gitId":"wengkit1"},"content":"   Use case ends.","lastModifiedDate":"2023-02-19"},{"lineNumber":532,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":533,"author":{"gitId":"wengkit1"},"content":"**Extensions**","lastModifiedDate":"2023-02-19"},{"lineNumber":534,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":535,"author":{"gitId":"wengkit1"},"content":"* 2a. There are no pet details.","lastModifiedDate":"2023-02-19"},{"lineNumber":536,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":537,"author":{"gitId":"wengkit1"},"content":"  Use case ends.","lastModifiedDate":"2023-02-19"},{"lineNumber":538,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"wengkit1"},"content":"2.  Should be able to hold up to 1000 pets without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-19"},{"lineNumber":544,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"shuimeihe"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-03-29"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"shuimeihe"},"content":"2. Saving window preferences","lastModifiedDate":"2023-03-29"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"shuimeihe"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":576,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"shuimeihe"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2023-03-29"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"shuimeihe"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"shuimeihe"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":590,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"shuimeihe"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":593,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"shuimeihe"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2023-03-29"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"shuimeihe"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2023-03-29"},{"lineNumber":604,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":605,"author":{"gitId":"shuimeihe"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":606,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":607,"author":{"gitId":"shuimeihe"},"content":"## **Acknowledgements**","lastModifiedDate":"2023-03-29"},{"lineNumber":608,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":609,"author":{"gitId":"shuimeihe"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2023-03-29"},{"lineNumber":610,"author":{"gitId":"shuimeihe"},"content":"* ibraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Daniel-Kur":39,"wengkit1":87,"shuimeihe":141,"YuanXun9834":29,"-":314}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"# Welcome to PetPal!","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"![Logo](images/UI/logo.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"PetPal is your **furry and dependable assistant** who **reminds you of deadlines** and **consolidates crucial information** like pet names, tags dietary needs all in an **aesthetically pleasing** GUI!","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"You can now focus on spend quality time with your furry friends without having to worry about things accidentally slipping your mind.","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"**PetPal is optimized for a Pet DayCare owners to use via the Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"PetPal can help get your pet administrative tasks done without needing to be tech-savvy.","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"This user guide will help you get started and understand how PetPal can **seamlessly streamline your pet caring duties**.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"# Table of Contents","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"2. Download the latest `PetPal.jar` from [here](https://github.com/AY2223S2-CS2103T-T14-2/tp/releases).","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your PetPal.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"4. Double-click the file to start the app. The GUI similar to below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"   ![Ui](images/UI/Ui.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"5. Type the command in the command line and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"    * **`list`** : Lists all pets currently stored.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"    * **`add`**`o/Petricia n/Whiskers p/98746333 e/petricia@petpal.com a/311 Beach Road 2023-03-27 21:09:09 d/Feed cat - 2023-03-27 21:09:09 t/MaineCoon`","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"      : Adds a `Pet` named `Whiskers` to your PetPal.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"7. Refer to the [Command Summary](#command-summary) for a quick summary of all commands.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"## Getting Familiar With Your User Interface","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"![Ui Breakdown](images/UI/UiHighlighted.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"1. **Pet Cards**: Contain all the information of a pet. (Highlighted in red)","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"2. **Command Line**: Type in your commands here. (Highlighted in yellow)","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"3. **Result Display**: The result of your command execution appears here. (Highlighted in blue)","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"4. **Help Button**: Provides the URL of this user guide.","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"## How to use the User Guide","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"### General formatting conventions","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"* Text in [blue](#How-to-use-the-user-guide) are hyperlinks that direct you to the relevant section of the page or to other websites.","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"* Text in **bold** are used to emphasize important details to look out for or to distinguish headers from the rest of the text.","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"* Text in `code snippets such as this` are used to show inputs and their format.","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"* :white_check_mark: **Input Shortcut:**","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"Shortened forms of commands which can help increase your efficiency in using PetPal","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-success\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"* :bulb: **Note:**","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"Information that might be useful to know to enhance your PetPal experience, might not be compulsory to know","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"YuanXun9834"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-danger\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"YuanXun9834"},"content":"* :heavy_exclamation_mark: **Caution:**","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"Important information to note which might negatively impact your experience in using PetPal as it might cause fatal","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"errors","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"* :information_source: **Information**","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"Information that you need to know","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"### Command formatting conventions:","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"* Words in `UPPER_CASE` are the information supplied by you.\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"  e.g. `OWNER_NAME` is a parameter in `add o/OWNER_NAME`, where you can input `add o/John Doe`.","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"* Parameters in `[]` are optional.\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"  e.g. `DEADLINE` is an optional parameter in `create o/OWNER_NAME [d/DEADLINE]`, where you can input `add on/John Doe d/Feed dog - 2023-03-27 21:09:09` or just `create n/John Doe`.","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"* Items with `...` after them can be used multiple times.\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"  e.g. `[t/TAG...]` can be used as `t/Pomeranian`, `t/Pomeranian t/Vegetarian` etc.","lastModifiedDate":"2023-04-02"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"* `INDEX` represents the index of a specific pet in PetPal list you are **currently viewing**, which can change based on prior commands executed (e.g. `find`, `remind`)\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"  e.g. You can use the command `delete INDEX` as `delete 2`.","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"shuimeihe"},"content":"* Parameters can be in **any order**.\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"  e.g. You can input either `add o/OWNER_NAME p/PHONE_NUMBER` or ` create p/PHONE_NUMBER o/OWNER_NAME`.","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"* Only the last occurrence of a parameter that is expected once will be taken **if you specify it more than once.**\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"  e.g. Given `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"shuimeihe"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit`,`clear` and `undo`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"## Features","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"YuanXun9834"},"content":"### General","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"YuanXun9834"},"content":"#### Viewing help : `help`","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"YuanXun9834"},"content":"Shows a message explaining how you can access our user guide.","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"shuimeihe"},"content":"Format: `help`, `h` or Press `F1`","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"shuimeihe"},"content":"![help](images/UG/help.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"YuanXun9834"},"content":"#### Listing your pets : `list`","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"YuanXun9834"},"content":"Shows a list of all pets stored in your PetPal.","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"Format: `list` or `l`","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"shuimeihe"},"content":"![list](images/UG/list.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"shuimeihe"},"content":"### Adding","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"shuimeihe"},"content":"#### Adding a pet\u0027s information : `add`","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"shuimeihe"},"content":"If you have new pet client(s) and need to add your new furry friends into PetPal, you can make use of the `add` command.","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"shuimeihe"},"content":"Format: `add n/PET_NAME o/OWNER_NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS ts/TIME_STAMP [d/DEADLINE] [t/TAG...] `","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"shuimeihe"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"shuimeihe"},"content":"* :information_source: **Information**","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"shuimeihe"},"content":"Note:","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"shuimeihe"},"content":"1. The field `n/PET_NAME` is **case-sensitive**. That is `n/Doggo` and `n/doggo` will be treated as 2 different pets","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"shuimeihe"},"content":"2. There certain constraints which might differ for each parameter, please refer to **Figure 1** below for details on each constraint","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"shuimeihe"},"content":"3. Pets with the `PET_NAME` **cannot** be created.","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"shuimeihe"},"content":"4. There can be multiple tags associated with each pet, simply repeat the tag prefix e.g. `t/Dog t/BichonFrise`","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"YuanXun9834"},"content":"Figure 1 provides a summary of the parameters with their descriptions, prefixes and constraints.","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"shuimeihe"},"content":"| Parameter      | Description                                    | Prefix | Constraints| Required?  |","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"shuimeihe"},"content":"|----------------|------------------------------------------------|--------||------------|","lastModifiedDate":"2023-04-02"},{"lineNumber":166,"author":{"gitId":"shuimeihe"},"content":"| `OWNER_NAME`   | The name of the owner                          | `o/`   | Names should only contain alphanumeric characters and spaces| COMPULSORY |","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"shuimeihe"},"content":"| `PET_NAME`     | The name of the pet                            | `n/`   | Names should only contain alphanumeric characters and spaces                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | COMPULSORY |","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"shuimeihe"},"content":"| `PHONE_NUMBER` | The owner\u0027s phone number                       | `p/`   | Phone numbers should only contain numbers, and it should be at least 3 digits long| COMPULSORY |","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"shuimeihe"},"content":"| `EMAIL`        | The owner\u0027s email                              | `e/`   | Emails should be of the format local-part@domain and adhere to the following constraints:\u003cbr/\u003e 1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, ( + SPECIAL_CHARACTERS + ). The local-part may not start or end with any special \"characters.\"\u003cbr/\u003e2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.The domain name must:\u003cbr/\u003e- end with a domain label at least 2 characters long\u003cbr/\u003e- have each domain label start and end with alphanumeric characters\u003cbr/\u003e- have each domain label consist of alphanumeric characters, separated only by hyphens, if any. | COMPULSORY |","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"shuimeihe"},"content":"| `ADDRESS`      | The owner\u0027s address                            | `a/`   || COMPULSORY |","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"shuimeihe"},"content":"| `TIMESTAMP`    | The date and time when the pet starts boarding | `ts/`  | Timestamps should be in the `YYYY-MM-DD HH:MM:SS` format.   eg. 2023-03-27 21:09:09  and in the future| COMPULSORY |","lastModifiedDate":"2023-04-02"},{"lineNumber":172,"author":{"gitId":"YuanXun9834"},"content":"| `DEADLINE`     | A deadline attributed with the pet             | `d/`   | Timestamps given in the deadline should be in the `YYYY-MM-DD HH:MM:SS` format.   eg. 2023-03-27 21:09:09  and in the future| OPTIONAL   |","lastModifiedDate":"2023-04-01"},{"lineNumber":173,"author":{"gitId":"shuimeihe"},"content":"| `TAG`          | A label that you can attach to a pet           | `t/`   | Tags should be alphanumeric, and **cannot** include spaces| OPTIONAL   |","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"shuimeihe"},"content":"\u003cp style\u003d\"text-align: center;\"\u003e\u003cb\u003eFigure 1\u003c/b\u003e: Parameters with their descriptions, prefixes and constraints\u003c/p\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"shuimeihe"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-danger\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"shuimeihe"},"content":"* :heavy_exclamation_mark: **Caution:**","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"shuimeihe"},"content":"The format of the timestamp should strictly follow the convention `YYYY-MM-DD HH:MM:SS` eg. `2023-03-27 21:09:09`","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"shuimeihe"},"content":"otherwise you will encounter errors when adding a new pet","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"shuimeihe"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"shuimeihe"},"content":"![create](images/UG/add.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"YuanXun9834"},"content":"Example given: `Example: add o/Alice n/Doggo p/98765432 e/example@gmail.com a/311, Clementi Ave 2, #02-25 ts/2023-03-27 21:09:09 d/Feed dog - 2023-03-27 21:09:09 t/Dog t/Chihuahua`","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"YuanXun9834"},"content":"Other examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"YuanXun9834"},"content":"* `add o/Petricia n/Whiskers p/98746333 e/petricia@petpal.com a/311 Beach Road 2023-03-27 21:09:09 d/Feed cat - 2023-03-27 21:09:09 t/MaineCoon ts/2023-03-27 21:09:09 t/Cat`","lastModifiedDate":"2023-04-01"},{"lineNumber":190,"author":{"gitId":"YuanXun9834"},"content":"* `add o/Robert n/Fluffy p/98746333 e/rob@bmail.com a/622 Rose Road ts/2023-03-27 21:09:09 d/Feed rabbit - 2023-03-27 21:09:09 t/Vegetarian t/Rabbit`","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"YuanXun9834"},"content":"#### Filtering out reminders that are due soon : `remind`","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"shuimeihe"},"content":"Get a filtered list of things you should do soon!","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"YuanXun9834"},"content":"**Constraints**","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"YuanXun9834"},"content":"* The filtering of the list only checks if the deadline of a pet is within 3 days of current date.","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"YuanXun9834"},"content":"* It does not sort out the list based on the deadline of the pet. (Future implementation)","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"YuanXun9834"},"content":"* However, currently those reminders that are due within the day are highlighted in bright orange on the GUI as seen in the image given below.","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"YuanXun9834"},"content":"Format: `remind`","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"shuimeihe"},"content":"![remind](images/UG/remind.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"YuanXun9834"},"content":":bulb: **Note:**","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"YuanXun9834"},"content":"The pets highlighted in bright orange are reminders that are due within a day!\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"wengkit1"},"content":"#### Amount indication","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"wengkit1"},"content":"Pet Card information indicates the amount of money owed to you for taking good care of their pets!","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"wengkit1"},"content":"![](images/UG/amount.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"YuanXun9834"},"content":"### Retrieving","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"shuimeihe"},"content":"#### Finding your pet by name : `find`","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"YuanXun9834"},"content":"Find your pets by their names.","lastModifiedDate":"2023-04-01"},{"lineNumber":223,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"YuanXun9834"},"content":"**Constraints**","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"shuimeihe"},"content":"* The search is case-insensitive. e.g. `woofers` will match `Woofers`","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"shuimeihe"},"content":"* Only the **pet name** is searched. e.g. `find Alex` will not return owner names, addresses or emails with `Alex`","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"YuanXun9834"},"content":"* Partial words will not be matched. e.g. `Jack` will not match `Jackson`.","lastModifiedDate":"2023-04-01"},{"lineNumber":228,"author":{"gitId":"YuanXun9834"},"content":"* Order of the name given does not matter. e.g. `Milo Charlie` will match `Charlie` and `Milo`","lastModifiedDate":"2023-04-01"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"shuimeihe"},"content":"Format: `find n/PET_NAME`","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"shuimeihe"},"content":"![find](images/UG/find.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"shuimeihe"},"content":"Example given: `find Milo Charlie`","lastModifiedDate":"2023-04-02"},{"lineNumber":234,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"YuanXun9834"},"content":"Other examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"shuimeihe"},"content":"* `find Max` returns `max` and `Max Leo`","lastModifiedDate":"2023-04-02"},{"lineNumber":237,"author":{"gitId":"shuimeihe"},"content":"* `find Super Wolf` returns `Super Wolf`, `Super Dog`, `Wolf Hunter`\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":238,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"YuanXun9834"},"content":":bulb: **Note:**\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":240,"author":{"gitId":"YuanXun9834"},"content":"`find` command returns a new list. Any commands performed after `find` is based on the new list. You can use the `list` command to return to the original list.","lastModifiedDate":"2023-04-03"},{"lineNumber":241,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":242,"author":{"gitId":"YuanXun9834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"YuanXun9834"},"content":":white_check_mark: **Input Shortcut:**","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"shuimeihe"},"content":"Format: `f n/PET_NAME`","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"YuanXun9834"},"content":"### Updating","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"shuimeihe"},"content":"#### Updating your pet information : `edit`","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"shuimeihe"},"content":"A pet owner changed their contact information? or did you find out new information about your pet client?","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"shuimeihe"},"content":"You can edit these changes with the `edit` command. This command can be used to edit: phone number, address, email, tags","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"shuimeihe"},"content":"If you accidentally invoked this command with the wrong parameters, you can use the `edit` command to re-edit the wrong fields or","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"shuimeihe"},"content":"the `undo` command to revert the wrong changes.","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"YuanXun9834"},"content":"**Constraints**","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"shuimeihe"},"content":"* Edits the pet with the provided index.","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"shuimeihe"},"content":"* `INDEX` is the index of the pet in the currently displayed list.","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"YuanXun9834"},"content":"* You must provide **at least one** of the optional fields.","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"wengkit1"},"content":"* Allows you to update a pet to have same owner name but different phone number or, same number but different owner name as a current pet in the PetPal.","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"shuimeihe"},"content":"* Pet profiles are auto saved in PetPal and are reflected in the PetPal list.","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"shuimeihe"},"content":"* Cost is constantly being updated in PetPal but the latest information may not be reflected to you. To get the latest information, either click on the pet profile or run a command (e.g. `list` or `l`)","lastModifiedDate":"2023-03-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"shuimeihe"},"content":"Format: `edit INDEX [p/PHONE_NUMBER] [a/ADDRESS] [e/EMAIL] [t/TAG...]`","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"shuimeihe"},"content":"![update](images/UG/edit.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"shuimeihe"},"content":"Example given: `edit 6 t/Golden Retriever t/Dog a/Blk 235 Ang Mo Kio Ave 8, #11-312 e/alextoh@gmail.com`","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"YuanXun9834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-success\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"YuanXun9834"},"content":":bulb: **Note:**","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"shuimeihe"},"content":"If you wish to add tags to the pet, take note to include all previous tags in the edit, or they will be overridden.","lastModifiedDate":"2023-03-30"},{"lineNumber":279,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":280,"author":{"gitId":"shuimeihe"},"content":"Only parameters provided will be changed.","lastModifiedDate":"2023-03-30"},{"lineNumber":281,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"YuanXun9834"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"shuimeihe"},"content":"Other examples:","lastModifiedDate":"2023-03-29"},{"lineNumber":285,"author":{"gitId":"shuimeihe"},"content":"* `edit 2 p/91234567 a/21 Beach Road` Updates the second pet entry\u0027s phone number to`91234567`","lastModifiedDate":"2023-03-29"},{"lineNumber":286,"author":{"gitId":"shuimeihe"},"content":"and address to `21 Beach Rd`","lastModifiedDate":"2023-03-29"},{"lineNumber":287,"author":{"gitId":"shuimeihe"},"content":"* `edit 3 t/Dog`. Updates the third pet entry\u0027s tag to `Dog`, take note that if the third entry has an existing tag,","lastModifiedDate":"2023-03-29"},{"lineNumber":288,"author":{"gitId":"shuimeihe"},"content":"the edit will override the existing tag","lastModifiedDate":"2023-03-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":292,"author":{"gitId":"shuimeihe"},"content":"#### Changing the cost : `changecost`","lastModifiedDate":"2023-04-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"shuimeihe"},"content":"Do some pets cost more to board in your daycare than others? You can use the `changecost` command to","lastModifiedDate":"2023-04-05"},{"lineNumber":295,"author":{"gitId":"shuimeihe"},"content":"change the parameters for cost calculation for each pet.","lastModifiedDate":"2023-04-05"},{"lineNumber":296,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":297,"author":{"gitId":"YuanXun9834"},"content":"Cost is incremented in real time and is calculated based on `FLAT_RATE + (TIMESTAMP - CURR_TIME * RATE)`.","lastModifiedDate":"2023-04-03"},{"lineNumber":298,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":299,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":300,"author":{"gitId":"shuimeihe"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-success\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":301,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":302,"author":{"gitId":"shuimeihe"},"content":"* :bulb: **Note:**","lastModifiedDate":"2023-04-05"},{"lineNumber":303,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":304,"author":{"gitId":"YuanXun9834"},"content":"The cost will only update in your PetPal list when you click on the PetPal entry.","lastModifiedDate":"2023-04-03"},{"lineNumber":305,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"shuimeihe"},"content":"The update applies to all PetPal entries.","lastModifiedDate":"2023-04-05"},{"lineNumber":307,"author":{"gitId":"shuimeihe"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":308,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":309,"author":{"gitId":"shuimeihe"},"content":"Format: `changecost INDEX RATE FLAT_RATE`","lastModifiedDate":"2023-03-30"},{"lineNumber":310,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"shuimeihe"},"content":"![update](images/UG/changecost.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":312,"author":{"gitId":"shuimeihe"},"content":"Example given `changecost 1 0.1 0.5`","lastModifiedDate":"2023-03-29"},{"lineNumber":313,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":314,"author":{"gitId":"shuimeihe"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-info\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":315,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":316,"author":{"gitId":"shuimeihe"},"content":"* :white_check_mark: **Input Shortcut:**","lastModifiedDate":"2023-04-02"},{"lineNumber":317,"author":{"gitId":"shuimeihe"},"content":"  You can also use the shortcut `cc` to replace `changecost`","lastModifiedDate":"2023-04-02"},{"lineNumber":318,"author":{"gitId":"shuimeihe"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":319,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":320,"author":{"gitId":"shuimeihe"},"content":"Additional example:","lastModifiedDate":"2023-03-29"},{"lineNumber":321,"author":{"gitId":"shuimeihe"},"content":"* `cc 2 1.0 1.5`","lastModifiedDate":"2023-03-29"},{"lineNumber":322,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":323,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":324,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":325,"author":{"gitId":"shuimeihe"},"content":"### Deletion","lastModifiedDate":"2023-03-29"},{"lineNumber":326,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":327,"author":{"gitId":"shuimeihe"},"content":"#### Deleting a pet : `delete`","lastModifiedDate":"2023-03-29"},{"lineNumber":328,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":329,"author":{"gitId":"shuimeihe"},"content":"Deletes the specified pet from your PetPal.","lastModifiedDate":"2023-03-29"},{"lineNumber":330,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":331,"author":{"gitId":"YuanXun9834"},"content":"You can use this command when:","lastModifiedDate":"2023-03-28"},{"lineNumber":332,"author":{"gitId":"Daniel-Kur"},"content":"1. You drop a pet.","lastModifiedDate":"2023-03-29"},{"lineNumber":333,"author":{"gitId":"YuanXun9834"},"content":"   \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":335,"author":{"gitId":"YuanXun9834"},"content":"**Constraints**","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"shuimeihe"},"content":"* `INDEX` is the index of the pet in the currently displayed list.","lastModifiedDate":"2023-03-29"},{"lineNumber":337,"author":{"gitId":"shuimeihe"},"content":"* Deletes the pet with the specified index in your PetPal.","lastModifiedDate":"2023-03-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"shuimeihe"},"content":"![delete](images/UG/delete.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"shuimeihe"},"content":"* `delete 2` deletes the second pet in the currently displayed pet list in the PetPal.","lastModifiedDate":"2023-03-29"},{"lineNumber":345,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":346,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":347,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"shuimeihe"},"content":"#### Archiving a pet: `archive`","lastModifiedDate":"2023-03-29"},{"lineNumber":349,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":350,"author":{"gitId":"shuimeihe"},"content":"Sometimes a client may become inactive or stop using your services. To keep a record of the pet whilst not cluttering","lastModifiedDate":"2023-03-30"},{"lineNumber":351,"author":{"gitId":"shuimeihe"},"content":"your active PetPal list, you can use the `archive` command to move these records to another save file.","lastModifiedDate":"2023-03-30"},{"lineNumber":352,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":353,"author":{"gitId":"shuimeihe"},"content":"Archives the specified pet into the `archive.json` file in the `data` folder.","lastModifiedDate":"2023-03-29"},{"lineNumber":354,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":355,"author":{"gitId":"shuimeihe"},"content":"Note that:","lastModifiedDate":"2023-03-29"},{"lineNumber":356,"author":{"gitId":"shuimeihe"},"content":"* The specified pet will be removed from your PetPal list.","lastModifiedDate":"2023-03-30"},{"lineNumber":357,"author":{"gitId":"shuimeihe"},"content":"* The index is based on the **currently displayed** PetPal list, which might change depending on prior commands used","lastModifiedDate":"2023-03-29"},{"lineNumber":358,"author":{"gitId":"shuimeihe"},"content":"  (e.g. `find`)","lastModifiedDate":"2023-03-29"},{"lineNumber":359,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":360,"author":{"gitId":"shuimeihe"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-danger\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":361,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":362,"author":{"gitId":"shuimeihe"},"content":"* :heavy_exclamation_mark: **Caution:**","lastModifiedDate":"2023-03-29"},{"lineNumber":363,"author":{"gitId":"shuimeihe"},"content":"The current iteration of PetPal **DOES NOT** support `undo` on the `archive` command, undoing an archive command currently","lastModifiedDate":"2023-03-29"},{"lineNumber":364,"author":{"gitId":"shuimeihe"},"content":"will cause issues with re-archiving the same Pet","lastModifiedDate":"2023-03-29"},{"lineNumber":365,"author":{"gitId":"shuimeihe"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":366,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":367,"author":{"gitId":"shuimeihe"},"content":"Format: `archive INDEX`","lastModifiedDate":"2023-03-29"},{"lineNumber":368,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":369,"author":{"gitId":"shuimeihe"},"content":"![archive](images/UG/archive.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":370,"author":{"gitId":"shuimeihe"},"content":"Example:","lastModifiedDate":"2023-03-29"},{"lineNumber":371,"author":{"gitId":"shuimeihe"},"content":"* `delete 3` deletes the third pet in the currently displayed list in PetPal","lastModifiedDate":"2023-03-29"},{"lineNumber":372,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":373,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":375,"author":{"gitId":"shuimeihe"},"content":"#### Clearing PetPal list: `clear`","lastModifiedDate":"2023-04-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":377,"author":{"gitId":"shuimeihe"},"content":"Clears all entries from `PetPal.json`.","lastModifiedDate":"2023-04-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"shuimeihe"},"content":"![clear](images/UG/clear.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":382,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":383,"author":{"gitId":"YuanXun9834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-warning\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":384,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":385,"author":{"gitId":"YuanXun9834"},"content":":heavy_exclamation_mark: **Important**","lastModifiedDate":"2023-03-28"},{"lineNumber":386,"author":{"gitId":"shuimeihe"},"content":"If you run this command by accident, you can [undo](#undoing-a-previous-command--undo) the command to restore the previous state of PetPal.","lastModifiedDate":"2023-03-29"},{"lineNumber":387,"author":{"gitId":"YuanXun9834"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":388,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":389,"author":{"gitId":"shuimeihe"},"content":"### Undo","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":391,"author":{"gitId":"YuanXun9834"},"content":"#### Undoing a previous command : `undo`","lastModifiedDate":"2023-03-28"},{"lineNumber":392,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":393,"author":{"gitId":"shuimeihe"},"content":"Undo the last command executed, only works for supported commands. You can use this if you","lastModifiedDate":"2023-04-02"},{"lineNumber":394,"author":{"gitId":"shuimeihe"},"content":"make a mistake while using PetPal.","lastModifiedDate":"2023-04-02"},{"lineNumber":395,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":396,"author":{"gitId":"YuanXun9834"},"content":"**Constraints**","lastModifiedDate":"2023-03-28"},{"lineNumber":397,"author":{"gitId":"YuanXun9834"},"content":"* The command intended to be undone should be an undoable command.","lastModifiedDate":"2023-03-28"},{"lineNumber":398,"author":{"gitId":"shuimeihe"},"content":"* Supported commands: `add`, `delete`, `edit`, `clear`, `undo`","lastModifiedDate":"2023-04-02"},{"lineNumber":399,"author":{"gitId":"shuimeihe"},"content":"* **NOT SUPPORTED** commands: `exit`, `find`, `help`, `list`, `remind`, `changecost`, `archive`","lastModifiedDate":"2023-04-02"},{"lineNumber":400,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":401,"author":{"gitId":"YuanXun9834"},"content":"Format: `undo`","lastModifiedDate":"2023-03-28"},{"lineNumber":402,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":403,"author":{"gitId":"shuimeihe"},"content":"![undo](images/UG/undo.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":404,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":405,"author":{"gitId":"shuimeihe"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-success\"\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":406,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":407,"author":{"gitId":"shuimeihe"},"content":"* :bulb: **Note:**","lastModifiedDate":"2023-04-02"},{"lineNumber":408,"author":{"gitId":"shuimeihe"},"content":"You can `undo` an `undo` command","lastModifiedDate":"2023-03-29"},{"lineNumber":409,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":410,"author":{"gitId":"YuanXun9834"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":411,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":412,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":413,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":414,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"shuimeihe"},"content":"Exits the program. Data is [automatically saved](#saving-the-data)","lastModifiedDate":"2023-04-01"},{"lineNumber":418,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":419,"author":{"gitId":"shuimeihe"},"content":"Format: `exit` or `e`","lastModifiedDate":"2023-04-01"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"shuimeihe"},"content":"Your PetPal and archive data are both automatically saved after executing any command that changes the data.","lastModifiedDate":"2023-03-30"},{"lineNumber":425,"author":{"gitId":"shuimeihe"},"content":"This means hassle-free saving.","lastModifiedDate":"2023-03-30"},{"lineNumber":426,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":427,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":431,"author":{"gitId":"shuimeihe"},"content":"PetPal data are saved as a JSON file `[JAR file location]/data/PetPal.json`. If you are an advanced user, you are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"shuimeihe"},"content":"Archive data is also in a JSON format and can be found `[JAR file location]/data/archive.json`. You can also","lastModifiedDate":"2023-03-30"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":434,"author":{"gitId":"YuanXun9834"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-danger\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":435,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":436,"author":{"gitId":"YuanXun9834"},"content":":exclamation: **Caution:**","lastModifiedDate":"2023-03-28"},{"lineNumber":437,"author":{"gitId":"shuimeihe"},"content":"If your changes to either data files makes its format invalid, PetPal will **discard all data** and start with an empty data file at the next run,","lastModifiedDate":"2023-03-30"},{"lineNumber":438,"author":{"gitId":"shuimeihe"},"content":"which is **IRREVERSIBLE**.","lastModifiedDate":"2023-03-30"},{"lineNumber":439,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":441,"author":{"gitId":"YuanXun9834"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":444,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"YuanXun9834"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":449,"author":{"gitId":"shuimeihe"},"content":"**A**: Follow these steps to transfer your data to another computer:","lastModifiedDate":"2023-03-29"},{"lineNumber":450,"author":{"gitId":"shuimeihe"},"content":"1. Find the save folder on the current computer. The save files can be found in the `data` folder created by the app, it should include both `PetPal.json` and `archive.json`","lastModifiedDate":"2023-03-29"},{"lineNumber":451,"author":{"gitId":"YuanXun9834"},"content":"2. Transfer the save file to your new computer.","lastModifiedDate":"2023-03-28"},{"lineNumber":452,"author":{"gitId":"shuimeihe"},"content":"3. Download the latest release of PetPal from [here](https://github.com/AY2223S2-CS2103T-T14-2/tp/releases) on your new computer.","lastModifiedDate":"2023-03-29"},{"lineNumber":453,"author":{"gitId":"shuimeihe"},"content":"4. Launch PetPal on your new computer and exit.","lastModifiedDate":"2023-03-29"},{"lineNumber":454,"author":{"gitId":"shuimeihe"},"content":"5. You should see a new `data` folder containing a new `PetPal.json` with a sample. Replace this file with the save file copied over from your old computer.","lastModifiedDate":"2023-03-29"},{"lineNumber":455,"author":{"gitId":"wengkit1"},"content":"6. Launch PetPal again. Your data should be there!","lastModifiedDate":"2023-03-29"},{"lineNumber":456,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":457,"author":{"gitId":"shuimeihe"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-block alert-success\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":458,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":459,"author":{"gitId":"shuimeihe"},"content":"* :bulb: **Note:**","lastModifiedDate":"2023-03-29"},{"lineNumber":460,"author":{"gitId":"shuimeihe"},"content":"If you wish to transfer only 1 of the files over, repeat the same steps, and replace the file you want to move, instead of the entire `data` folder","lastModifiedDate":"2023-03-29"},{"lineNumber":461,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":462,"author":{"gitId":"shuimeihe"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":463,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":464,"author":{"gitId":"shuimeihe"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":465,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":466,"author":{"gitId":"shuimeihe"},"content":"**Q**: How do I view the entire pet list after a `find` command?","lastModifiedDate":"2023-03-29"},{"lineNumber":467,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":468,"author":{"gitId":"shuimeihe"},"content":"**A**: Run `list` or `l` to view the entire unfiltered list.","lastModifiedDate":"2023-03-30"},{"lineNumber":469,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":470,"author":{"gitId":"shuimeihe"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":471,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":472,"author":{"gitId":"shuimeihe"},"content":"**Q**: When I run the `archive` command, nothing happens","lastModifiedDate":"2023-03-29"},{"lineNumber":473,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":474,"author":{"gitId":"shuimeihe"},"content":"**A**: If you have previously run `undo` on an `archive` command on that specific Pet, delete that pet entry from the PetPal","lastModifiedDate":"2023-04-02"},{"lineNumber":475,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":476,"author":{"gitId":"shuimeihe"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":477,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":478,"author":{"gitId":"shuimeihe"},"content":"If you have additional questions that is not present in the User Guide, feel free to contact us via our email `contact@petpal.com`","lastModifiedDate":"2023-03-29"},{"lineNumber":479,"author":{"gitId":"shuimeihe"},"content":"or raise an issue in our [GitHub](https://github.com/AY2223S2-CS2103T-T14-2/tp/issues)","lastModifiedDate":"2023-03-30"},{"lineNumber":480,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":481,"author":{"gitId":"YuanXun9834"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"YuanXun9834"},"content":"## Glossary","lastModifiedDate":"2023-03-28"},{"lineNumber":486,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":487,"author":{"gitId":"YuanXun9834"},"content":"| Term                     | Definition                                                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2023-03-28"},{"lineNumber":488,"author":{"gitId":"Daniel-Kur"},"content":"|--------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-29"},{"lineNumber":489,"author":{"gitId":"YuanXun9834"},"content":"| Alphanumeric             | Refers to characters that are the combined set of the 26 alphabetic characters, a to Z, both lowercase and uppercase, and the 10 Arabic numerals, 0 to 9.                                                                                                                                                                |","lastModifiedDate":"2023-03-28"},{"lineNumber":490,"author":{"gitId":"YuanXun9834"},"content":"| Command Line Interface   | A command-line interface (CLI) is a text-based user interface (UI) used to run programs, manage computer files and interact with the computer.                                                                                                                                                                           |","lastModifiedDate":"2023-03-28"},{"lineNumber":491,"author":{"gitId":"Daniel-Kur"},"content":"| YYYY-MM-DD hh:mm:ss      | Date format whereby  `YYYY` refers to the 4 digits years, `MM` refers to the 2 digit months, `DD` refers to the 2 digit days, `hh` refers to the 2 digits hours, `mm` refers to the 2 digits minutes, \u0027ss\u0027 refers to the 2 digits seconds. They are each separated by a hyphen: `-` character for date and `:` for time. |","lastModifiedDate":"2023-03-29"},{"lineNumber":492,"author":{"gitId":"YuanXun9834"},"content":"| Graphical User Interface | A graphical user interface (GUI) is an interface through which a user interacts with electronic devices such as computers and smartphones through the use of icons, menus and other visual indicators or representations (graphics).                                                                                     |","lastModifiedDate":"2023-03-28"},{"lineNumber":493,"author":{"gitId":"shuimeihe"},"content":"| Index                    | The number that corresponds to the position of the pet in the list. The index must be a numeral above 0.                                                                                                                                                                                                                 |","lastModifiedDate":"2023-03-29"},{"lineNumber":494,"author":{"gitId":"shuimeihe"},"content":"| Java                     | The programming language used for this application. Java is a general-purpose computer programming language designed to produce programs that will run on any computer system that has Java installed.                                                                                                                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":495,"author":{"gitId":"wengkit1"},"content":"| JAR                      | JAR stands for Java ARchive. PetPal uses JAR to deliver its distribution. JAR is a file format based on the popular ZIP file format and is used for aggregating many files into one.                                                                                                                                     |","lastModifiedDate":"2023-03-29"},{"lineNumber":496,"author":{"gitId":"shuimeihe"},"content":"| JSON                     | JSON stands for JavaScript Object Notation. JSON is the format used to store your PetPal\u0027s data. JSON is a lightweight format for storing and transporting data.                                                                                                                                                         |","lastModifiedDate":"2023-03-29"},{"lineNumber":497,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":498,"author":{"gitId":"YuanXun9834"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"},{"lineNumber":499,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":501,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":503,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"YuanXun9834"},"content":"| Action          | Format, Examples                                                                                                                                                                                                                                                        | Shortcut              |","lastModifiedDate":"2023-03-28"},{"lineNumber":506,"author":{"gitId":"shuimeihe"},"content":"|-----------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------|","lastModifiedDate":"2023-03-29"},{"lineNumber":507,"author":{"gitId":"shuimeihe"},"content":"| **Help**        | `help`                                                                                                                                                                                                                                                                  | `h` or **PRESS** `F1` |","lastModifiedDate":"2023-03-29"},{"lineNumber":508,"author":{"gitId":"shuimeihe"},"content":"| **List**        | `list`                                                                                                                                                                                                                                                                  | `l`                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":509,"author":{"gitId":"shuimeihe"},"content":"| **Add**         | `add o/OWNER_NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS ts/TIME_STAMP [d/DEADLINE] [t/TAG...]`\u003cbr\u003e e.g `Example: add o/Alice n/Doggo p/98765432 e/example@gmail.com a/311, Clementi Ave 2, #02-25 ts/2023-03-27 21:09:09 d/Feed dog - 2023-03-27 21:09:09 t/Dog t/Chihuahua` |                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":510,"author":{"gitId":"shuimeihe"},"content":"| **Edit**        | `edit p/PHONE_NUMBER [e/EMAIL] [a/ADDRESS] [t/TAG...]`\u003cbr\u003e e.g `Example: edit 6 t/Golden Retriever t/Dog a/Blk 235 Ang Mo Kio Ave 8, #11-312 e/alextoh@gmail.com`                                                                                                       |                       |","lastModifiedDate":"2023-03-30"},{"lineNumber":511,"author":{"gitId":"shuimeihe"},"content":"| **Delete**      | `delete INDEX`\u003cbr\u003ee.g. `delete 2`                                                                                                                                                                                                                                       |                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":512,"author":{"gitId":"shuimeihe"},"content":"| **Remind**      | `remind`                                                                                                                                                                                                                                                                |                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":513,"author":{"gitId":"shuimeihe"},"content":"| **Find**        | `find n/PET_NAME`\u003cbr\u003ee.g `find Milo`                                                                                                                                                                                                                                    | `f`                   |","lastModifiedDate":"2023-03-30"},{"lineNumber":514,"author":{"gitId":"YuanXun9834"},"content":"| **Undo**        | `undo`                                                                                                                                                                                                                                                                  |                       |","lastModifiedDate":"2023-03-28"},{"lineNumber":515,"author":{"gitId":"shuimeihe"},"content":"| **Change Cost** | `changecost INDEX RATE FLAT_COST`\u003cbr\u003ee.g. `changecost 1 0.1 0.5`                                                                                                                                                                                                        | `cc`                  |","lastModifiedDate":"2023-03-29"},{"lineNumber":516,"author":{"gitId":"shuimeihe"},"content":"| **Archive**     | `archive INDEX`\u003cbr\u003ee.g. `archive 1`                                                                                                                                                                                                                                     |                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":517,"author":{"gitId":"shuimeihe"},"content":"| **Clear**       | `clear`                                                                                                                                                                                                                                                                 |                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":518,"author":{"gitId":"shuimeihe"},"content":"| **Exit**        | `exit`                                                                                                                                                                                                                                                                  |                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":519,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":520,"author":{"gitId":"YuanXun9834"},"content":"[Return to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Daniel-Kur":3,"wengkit1":6,"shuimeihe":239,"YuanXun9834":149,"-":123}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePet(p)","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"logic -[LOGIC_COLOR]\u003e storage : savePetPal(petPal)","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"YuanXun9834":2,"-":36}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"LogicManager -right-\u003e\"1\" PetPalParser","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"PetPalParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"YuanXun9834":2,"-":44}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"Class PetPalParser","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"HiddenOutside ..\u003e PetPalParser","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"PetPalParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"PetPalParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"YuanXun9834":4,"-":34}},{"path":"docs/diagrams/RemindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":":User executes command;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":":Filter out pets with deadline not within 3 days;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"YuanXun9834":9}},{"path":"docs/diagrams/RemindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"participant \":PetPalParser\" as PetPalParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"participant \":RemindCommand\" as RemindCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"[-\u003e LogicManager : execute(\"remind\")","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"LogicManager -\u003e PetPalParser : parseCommand(\"remind\")","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"activate PetPalParser","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"create RemindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"PetPalParser -\u003e RemindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"activate RemindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"RemindCommand --\u003e PetPalParser","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"deactivate RemindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"PetPalParser --\u003e LogicManager : remind","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"deactivate PetPalParser","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"RemindCommand --\u003e PetPalParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"deactivate RemindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"LogicManager -\u003e RemindCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"activate RemindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"RemindCommand -\u003e Model : getFilteredPetList()","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"Model --\u003e RemindCommand : filteredPetList","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"RemindCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"CommandResult --\u003e RemindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"RemindCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"deactivate RemindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"YuanXun9834":55}},{"path":"docs/diagrams/UndoActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"wengkit1"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"wengkit1"},"content":":User executes command;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"wengkit1"},"content":":PetPal goes back to previously saved state;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"wengkit1"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"wengkit1"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"wengkit1":8}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"wengkit1"},"content":"participant \":PetPal\" as PetPal MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"wengkit1"},"content":"UndoCommand -\u003e Model : undo()","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"wengkit1"},"content":"Model -\u003e PetPal : undo()","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"wengkit1"},"content":"activate PetPal","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"wengkit1"},"content":"PetPal -\u003e PetPal :new PetPal(ReadOnlyPetPal)","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"wengkit1"},"content":"PetPal --\u003e Model :","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"wengkit1"},"content":"deactivate PetPal","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wengkit1":7,"-":46}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"title: PetPal","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T14-2/tp/actions)","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-T14-2/tp/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2223S2-CS2103-T14-2/tp)","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"![Logo](images/UI/logo2-alt.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"PetPal is your **furry and dependable assistant** who **reminds you of deadlines** and **consolidates crucial information** like pet names, tags dietary needs all in an **aesthetically pleasing** GUI! You can now focus on spend quality time with your furry friends without having to worry about things accidentally slipping your mind.","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"**PetPal is optimized for a Pet DayCare owner to use via the GUI (Graphical user interface)** while still having the benefits of a Command Line Interface (CLI). PetPal can help get your pet management tasks done without being tech-savvy and good at typing in the CLI.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"This user guide will help you get started and understand how PetPal can **seamlessly streamline your pet caring duties**.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"* If you are interested in using PetPal, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"* If you are interested about developing PetPal, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"  ![Ui](images/UI/Ui.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"shuimeihe":11,"-":14}},{"path":"docs/team/YuanXun9834.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"title: Yuan Xun\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"### Project: PetPal","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"PetPal is your **furry and dependable assistant** who **reminds you of deadlines** and **consolidates crucial information** like pet names, tags dietary needs all in an **aesthetically pleasing** GUI! The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"* **Remind/Deadline Feature**: Added the ability to add deadlines for pets.","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"  * Justification: Users have many pets to manage and might forget important tasks due for certain pets. ","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"  * Highlights: Deadlines that are due soon are highlighted in the GUI and the user is reminded of them.","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"  * PRs : [#44](https://github.com/AY2223S2-CS2103T-T14-2/tp/pull/44), [#45](https://github.com/AY2223S2-CS2103T-T14-2/tp/pull/45)","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"  * Credits:","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    * Remind and deadline function was inspired by my ip project, which was a to-do list app.","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"* **Change Cost Feature**: Added the ability to change the cost calculation of a pet.","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"  * Justification: Certain species of pets may incur a different cost than the default cost.","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"  * Highlights: Deadlines that are due soon are highlighted in the GUI and the user is reminded of them.","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"  * PRs : [#56](https://github.com/AY2223S2-CS2103T-T14-2/tp/pull/56)","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dyuanxun9834\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"  * [Issues](https://github.com/AY2223S2-CS2103T-T14-2/tp/issues?q\u003dis%3Aissue+is%3Aclosed+author%3AYuanXun9834) added by me","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"  * Changed previous commands from AB3 to suit PetPal\u0027s needs as well as added functionality to include adding and editing of deadlines. ","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"  * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"    * Wrote introduction section of UG","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    * Also added a legend for the use of symbols in the UG.","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    * Added documentation for the features `add`, `remind` and `deadline`.","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    * Added a table for constraints of parameters.","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"    * Changed UML diagrams of the following diagrams :","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"      * ArchitectureSequenceDiagram","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"      * UiClassDiagram","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"      * LogicClassDiagram","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    * Added UML diagrams :","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"      * RemindSequenceDiagram","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"      * RemindActivityDiagram","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"YuanXun9834":44}},{"path":"docs/team/daniel-kur.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"title: Daniel Iwan Kurniawan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"### Project: PetPal","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"PetPal is a desktop pet management application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"    * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"        * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"* **Tools**:","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"Daniel-Kur":35}},{"path":"docs/team/shuimeihe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"title: He Shuimei\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"### Project: PetPal","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"PetPal is a desktop pet management application used for teaching Software Engineering principles.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"        * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"        * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"* **Tools**:","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"shuimeihe":37}},{"path":"docs/team/wengkit1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"wengkit1"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"wengkit1"},"content":"title: Weng Kit\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"wengkit1"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"wengkit1"},"content":"### Project: PetPal","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"wengkit1"},"content":"PetPal is a desktop pet management application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"wengkit1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"wengkit1"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"wengkit1"},"content":"  * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"wengkit1"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"wengkit1"},"content":"  * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"wengkit1"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"wengkit1"},"content":"  * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"wengkit1"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"wengkit1"},"content":"  * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"wengkit1"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"wengkit1"},"content":"  * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"wengkit1"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"wengkit1"},"content":"  * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"wengkit1"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"wengkit1"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"wengkit1"},"content":"    * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"wengkit1"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"wengkit1"},"content":"  * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"wengkit1"},"content":"* **Tools**:","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"wengkit1"},"content":"  * to be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"wengkit1"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"wengkit1":35}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"YuanXun9834"},"content":"Create a new `Remark` in `seedu.address.model.pet`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"wengkit1"},"content":"Simply add the following to [`seedu.address.ui.PetCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"wengkit1":1,"YuanXun9834":1,"-":399}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.pet.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YuanXun9834":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"![ArchitectureDiagram](../images/diagrams/ArchitectureDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"../images/diagrams/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"../images/diagrams/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"\u003cimg src\u003d\"../images/diagrams/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"shuimeihe":4,"-":297}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.storage.JsonPetPalStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.storage.PetPalStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PetPal ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"        PetPalStorage petPalStorage \u003d new JsonPetPalStorage(","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"                userPrefs.getPetPalFilePath(), userPrefs.getPetPalArchiveFilePath());","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Daniel-Kur"},"content":"        storage \u003d new StorageManager(petPalStorage, userPrefsStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s PetPal list and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"     * The data from the sample PetPal will be used instead if {@code storage}\u0027s PetPal list is not found,","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"     * or an empty PetPal will be used instead if errors occur when reading {@code storage}\u0027s PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"Daniel-Kur"},"content":"        Optional\u003cReadOnlyPetPal\u003e petPalOptional;","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"        Optional\u003cReadOnlyPetPal\u003e petPalArchive;","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"        ReadOnlyPetPal initialData;","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"        ReadOnlyPetPal initialArchiveData;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"Daniel-Kur"},"content":"            petPalOptional \u003d storage.readPetPal();","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"Daniel-Kur"},"content":"            if (!petPalOptional.isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"                logger.info(\"Data file not found. Will be starting with a sample PetPal\");","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"Daniel-Kur"},"content":"            initialData \u003d petPalOptional.orElseGet(SampleDataUtil::getSamplePetPal);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty PetPal\");","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"            initialData \u003d new PetPal();","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"YuanXun9834"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PetPal\");","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"            initialData \u003d new PetPal();","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"            petPalArchive \u003d storage.readPetPalArchive();","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"            if (!petPalArchive.isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"                logger.info(\"Archive file not found. Will be starting with an empty archive file\");","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"            initialArchiveData \u003d petPalArchive.orElse(new PetPal());","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"            logger.warning(\"Problem reading from the archive. Will start with empty archive file\");","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"shuimeihe"},"content":"            initialArchiveData \u003d new PetPal();","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"            logger.warning(\"Archive file not in the correct format. Will start with an empty archive file\");","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"            initialArchiveData \u003d new PetPal();","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"shuimeihe"},"content":"        return new ModelManager(initialData, initialArchiveData, userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"YuanXun9834"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PetPal\");","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"YuanXun9834"},"content":"        logger.info(\"Starting PetPal \" + MainApp.VERSION);","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"shuimeihe"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping PetPal ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-04-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Daniel-Kur":7,"shuimeihe":26,"YuanXun9834":11,"-":162}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"    private static final String LOG_FILE \u003d \"petpal.log\";","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shuimeihe":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"    public static final String MESSAGE_INVALID_PET_DISPLAYED_INDEX \u003d \"The pet index provided is invalid\";","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    public static final String MESSAGE_PETS_LISTED_OVERVIEW \u003d \"%1$d pets listed!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"wengkit1"},"content":"    public static final String INVALID_TIMESTAMP_FORMAT \u003d \"Invalid timestamp! \\n%1$s\";","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":2,"wengkit1":1,"-":10}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"     * Returns the PetPal.","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"     * @see Model#getPetPal()","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    ReadOnlyPetPal getPetPal();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    /** Returns an unmodifiable view of the filtered list of Pets */","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"    ObservableList\u003cPet\u003e getFilteredPetList();","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"     * Returns the user prefs\u0027 PetPal file path.","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    Path getPetPalFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wengkit1":1,"shuimeihe":2,"YuanXun9834":7,"-":41}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.parser.PetPalParser;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    private final PetPalParser petPalParser;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"        petPalParser \u003d new PetPalParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"        Command command \u003d petPalParser.parseCommand(commandText);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"            storage.savePetPal(model.getPetPal());","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"            storage.savePetPalArchive(model.getPetPalArchive());","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"    public ReadOnlyPetPal getPetPal() {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"        return model.getPetPal();","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"    public ObservableList\u003cPet\u003e getFilteredPetList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"wengkit1"},"content":"        return model.getFilteredPetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"    public Path getPetPalFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"        return model.getPetPalFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wengkit1":2,"shuimeihe":2,"YuanXun9834":11,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"wengkit1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":" * Adds a Pet to the PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a pet to the PetPal list. \"","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"wengkit1"},"content":"            + PREFIX_OWNER_NAME + \"OWNER_NAME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"            + PREFIX_NAME + \"PET_NAME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"            + PREFIX_TIMESTAMP + \"TIMESTAMP \"","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE]\"","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"wengkit1"},"content":"            + PREFIX_OWNER_NAME + \"Alice \"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"            + PREFIX_NAME + \"Doggo \"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"            + PREFIX_EMAIL + \"example@gmail.com \"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"wengkit1"},"content":"            + PREFIX_TIMESTAMP + \"2023-03-27 21:09:09 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"            + PREFIX_DEADLINE + \"Feed dog - 2023-03-27 21:09:09 \"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"            + PREFIX_TAG + \"Dog \"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"            + PREFIX_TAG + \"Chihuahua\";","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New pet added:\\n%1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"    public static final String MESSAGE_DUPLICATE_PET \u003d \"This pet already exists in the PetPal list\";","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"wengkit1"},"content":"    private final Pet toAdd;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"Daniel-Kur"},"content":"     * Creates an AddCommand to add the specified {@code Pet}","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"wengkit1"},"content":"    public AddCommand(Pet pet) {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"wengkit1"},"content":"        requireNonNull(pet);","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"wengkit1"},"content":"        toAdd \u003d pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"wengkit1"},"content":"        if (model.hasPet(toAdd)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Daniel-Kur"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"wengkit1"},"content":"        model.addPet(toAdd);","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":3,"wengkit1":11,"shuimeihe":12,"YuanXun9834":1,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":" * Archives the Pet to an archive file","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":" * stored in data/archive.json","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"            + \"Archives a pet into an archive file identified by the index number used in the displayed pet list.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"    public static final String MESSAGE_ARCHIVE_PET_SUCCESS \u003d \"Archived Pet:\\n%1$s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    public ArchiveCommand(Index targetIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"        Pet petToArchive \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"        model.archivePet(petToArchive);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        return new CommandResult(String.format(MESSAGE_ARCHIVE_PET_SUCCESS, petToArchive));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"                || (other instanceof ArchiveCommand // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"                \u0026\u0026 targetIndex.equals(((ArchiveCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"        return Objects.hash(targetIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"shuimeihe":59}},{"path":"src/main/java/seedu/address/logic/commands/ChangeCostCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":" * Lists all pets in the pet list to the user.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"public class ChangeCostCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    public static final String COMMAND_WORD \u003d \"changecost\";","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"    public static final String SHORTCUT_WORD \u003d \"cc\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Changed cost calculation of pet!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"            + \": Changes the rate and flat cost identified by the index number used in the displayed pet list.\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 0.10 0.50\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    final Index targetIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"    final double rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    final double flatCost;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"     * Constructs a {@code ChangeCostCommand}","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"     * @param targetIndex Index","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"     * @param rate double","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"     * @param flatCost double","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    public ChangeCostCommand(Index targetIndex, double rate, double flatCost) {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"        this.flatCost \u003d flatCost;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"        Pet petToChange \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"        petToChange.getCost().setRate(rate);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"        petToChange.getCost().setFlatCost(flatCost);","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, petToChange));","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"shuimeihe":9,"YuanXun9834":50}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":" * Clears the pet list.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"PetPal has been cleared!\";","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"        model.setPetPal(new PetPal());","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":2,"YuanXun9834":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":" * Deletes a pet identified using it\u0027s displayed index from the pet list.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"            + \": Deletes the pet identified by the index number used in the displayed pet list.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    public static final String MESSAGE_DELETE_PET_SUCCESS \u003d \"Deleted Pet:\\n%1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    final Index targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"wengkit1"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"wengkit1"},"content":"        Pet petToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"wengkit1"},"content":"        model.deletePet(petToDelete);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PET_SUCCESS, petToDelete));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":3,"wengkit1":4,"shuimeihe":2,"YuanXun9834":1,"-":43}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"wengkit1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":" * Edits the details of an existing pet in the pet list.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the pet identified \"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"            + \"by the index number used in the displayed pet list. \"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"            + \"[\" + PREFIX_TIMESTAMP + \"TIMESTAMP]...\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE]...\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"    public static final String MESSAGE_EDIT_PET_SUCCESS \u003d \"Edited Pet:\\n%1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"Daniel-Kur"},"content":"    public static final String MESSAGE_DUPLICATE_PET \u003d \"This pet already exists in the pet list.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"    private final EditPetDescriptor editPetDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"     * @param index of the pet in the filtered pet list to edit","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"     * @param editPetDescriptor details to edit the pet with","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"    public EditCommand(Index index, EditPetDescriptor editPetDescriptor) {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"        requireNonNull(editPetDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"        this.editPetDescriptor \u003d new EditPetDescriptor(editPetDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"wengkit1"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"YuanXun9834"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"        Pet petToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"YuanXun9834"},"content":"        Pet editedPet \u003d createEditedPet(petToEdit, editPetDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"        if (!petToEdit.isSamePet(editedPet) \u0026\u0026 model.hasPet(editedPet)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Daniel-Kur"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"        model.setPet(petToEdit, editedPet);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"        model.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Daniel-Kur"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PET_SUCCESS, editedPet));","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"     * Creates and returns a {@code Pet} with the details of {@code petToEdit}","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"     * edited with {@code editPetDescriptor}.","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"YuanXun9834"},"content":"    private static Pet createEditedPet(Pet petToEdit, EditPetDescriptor editPetDescriptor) {","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"YuanXun9834"},"content":"        assert petToEdit !\u003d null;","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"YuanXun9834"},"content":"        OwnerName updatedOwnerName \u003d editPetDescriptor.getOwnerName().orElse(petToEdit.getOwnerName());","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"YuanXun9834"},"content":"        Name updatedName \u003d editPetDescriptor.getName().orElse(petToEdit.getName());","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"YuanXun9834"},"content":"        Phone updatedPhone \u003d editPetDescriptor.getPhone().orElse(petToEdit.getPhone());","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"YuanXun9834"},"content":"        Email updatedEmail \u003d editPetDescriptor.getEmail().orElse(petToEdit.getEmail());","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"YuanXun9834"},"content":"        Address updatedAddress \u003d editPetDescriptor.getAddress().orElse(petToEdit.getAddress());","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"wengkit1"},"content":"        LocalDateTime updatedTimestamp \u003d editPetDescriptor.getTimeStamp().orElse(petToEdit.getTimeStamp());","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"YuanXun9834"},"content":"        Deadline updatedDeadline \u003d editPetDescriptor.getDeadline().orElse(petToEdit.getDeadline());","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"YuanXun9834"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPetDescriptor.getTags().orElse(petToEdit.getTags());","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"        return new Pet(updatedOwnerName, updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"                updatedAddress, updatedTimestamp, updatedDeadline, updatedTags);","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"YuanXun9834"},"content":"                \u0026\u0026 editPetDescriptor.equals(e.editPetDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"YuanXun9834"},"content":"     * Stores the details to edit the pet with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"YuanXun9834"},"content":"     * corresponding field value of the pet.","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"YuanXun9834"},"content":"    public static class EditPetDescriptor {","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"wengkit1"},"content":"        private LocalDateTime timestamp;","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"YuanXun9834"},"content":"        private OwnerName ownerName;","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"YuanXun9834"},"content":"        private Deadline deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"YuanXun9834"},"content":"        public EditPetDescriptor() {}","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"YuanXun9834"},"content":"        public EditPetDescriptor(EditPetDescriptor toCopy) {","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"YuanXun9834"},"content":"            setOwnerName(toCopy.ownerName);","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"YuanXun9834"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"wengkit1"},"content":"            setTimeStamp(toCopy.timestamp);","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"YuanXun9834"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, timestamp, deadline, tags);","lastModifiedDate":"2023-03-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"Daniel-Kur"},"content":"        public void setOwnerName(OwnerName ownerName) {","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"Daniel-Kur"},"content":"            this.ownerName \u003d ownerName;","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"Daniel-Kur"},"content":"        public Optional\u003cOwnerName\u003e getOwnerName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"Daniel-Kur"},"content":"            return Optional.ofNullable(ownerName);","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"wengkit1"},"content":"        public void setTimeStamp(LocalDateTime timestamp) {","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"wengkit1"},"content":"            this.timestamp \u003d timestamp;","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"wengkit1"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":232,"author":{"gitId":"wengkit1"},"content":"        public Optional\u003cLocalDateTime\u003e getTimeStamp() {","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"wengkit1"},"content":"            return Optional.ofNullable(this.timestamp);","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"wengkit1"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"YuanXun9834"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2023-03-21"},{"lineNumber":237,"author":{"gitId":"YuanXun9834"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":238,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":239,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":240,"author":{"gitId":"YuanXun9834"},"content":"        public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2023-03-21"},{"lineNumber":241,"author":{"gitId":"YuanXun9834"},"content":"            return Optional.ofNullable(this.deadline);","lastModifiedDate":"2023-03-21"},{"lineNumber":242,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"YuanXun9834"},"content":"            if (!(other instanceof EditPetDescriptor)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"YuanXun9834"},"content":"            EditPetDescriptor e \u003d (EditPetDescriptor) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"YuanXun9834"},"content":"            return getOwnerName().equals(e.getOwnerName())","lastModifiedDate":"2023-04-04"},{"lineNumber":260,"author":{"gitId":"YuanXun9834"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2023-04-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"YuanXun9834"},"content":"                    \u0026\u0026 getTimeStamp().equals(e.getTimeStamp())","lastModifiedDate":"2023-03-21"},{"lineNumber":265,"author":{"gitId":"YuanXun9834"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2023-03-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":269,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Daniel-Kur":15,"wengkit1":13,"shuimeihe":5,"YuanXun9834":55,"-":183}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"    public static final String SHORTCUT_WORD \u003d \"e\";","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting PetPal as requested ...\";","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"shuimeihe":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":" * Finds and lists all pets in pet list whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"    public static final String SHORTCUT_WORD \u003d \"f\";","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all pets whose names contain any of \"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"wengkit1"},"content":"        model.updateFilteredPetList(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"                String.format(Messages.MESSAGE_PETS_LISTED_OVERVIEW, model.getFilteredPetList().size()));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Daniel-Kur":3,"wengkit1":2,"shuimeihe":1,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"    public static final String SHORTCUT_WORD \u003d \"h\";","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shuimeihe":1,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":" * Lists all pets in the pet list to the user.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"    public static final String SHORTCUT_WORD \u003d \"l\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all pets\";","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"        model.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":2,"shuimeihe":1,"YuanXun9834":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":" * Marks a pet identified using it\u0027s displayed index from the pet list.","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"            + \": Marks the pet identified by the index number used in the displayed pet list.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"    public static final String MESSAGE_MARK_PET_SUCCESS \u003d \"Marked Pet:\\n%1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"    final Index targetIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"    public MarkCommand(Index targetIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"        List\u003cPet\u003e lastShownList \u003d model.getFilteredPetList();","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"        Pet petToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"        model.markPet(petToMark);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_PET_SUCCESS, petToMark));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Daniel-Kur"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Daniel-Kur":53}},{"path":"src/main/java/seedu/address/logic/commands/RemindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.DeadlineWithinThreeDaysPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":" * Lists all pets in the pet list to the user.","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"    public static final String COMMAND_WORD \u003d \"remind\";","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are all the upcoming reminders!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all pets whose deadline is within 3 days \"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"            + \"Example: \" + COMMAND_WORD + \" \";","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"    private final DeadlineWithinThreeDaysPredicate predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"    public RemindCommand(DeadlineWithinThreeDaysPredicate predicate) {","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        model.updateFilteredPetList(predicate);","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"                || (other instanceof RemindCommand // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"                \u0026\u0026 predicate.equals(((RemindCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"YuanXun9834":41}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"wengkit1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"wengkit1"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"wengkit1"},"content":" * Lists all pets in the pet list to the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"wengkit1"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"wengkit1"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"wengkit1"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"wengkit1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"previous command reverted\";","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"wengkit1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"reverts previous command\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"wengkit1"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"wengkit1"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"wengkit1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"wengkit1"},"content":"        model.undo();","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"wengkit1"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"wengkit1"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"wengkit1"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"wengkit1":27}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"wengkit1"},"content":"import static seedu.address.commons.core.Messages.INVALID_TIMESTAMP_FORMAT;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"wengkit1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"wengkit1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"wengkit1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_OWNER_NAME, PREFIX_NAME,","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TIMESTAMP, PREFIX_DEADLINE, PREFIX_TAG);","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_OWNER_NAME, PREFIX_NAME,","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TIMESTAMP)","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"wengkit1"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"wengkit1"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"wengkit1"},"content":"            LocalDateTime.parse(argMultimap.getValue(PREFIX_TIMESTAMP).get(), formatter);","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"wengkit1"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"wengkit1"},"content":"            throw new ParseException(String.format(INVALID_TIMESTAMP_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"wengkit1"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"wengkit1"},"content":"        OwnerName ownerName \u003d ParserUtil.parseOwnerName(argMultimap.getValue(PREFIX_OWNER_NAME).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"wengkit1"},"content":"        LocalDateTime timestamp \u003d ParserUtil.parseTimeStamp(argMultimap.getValue(PREFIX_TIMESTAMP).get());","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"Daniel-Kur"},"content":"        Deadline deadline \u003d argMultimap.containsPrefix(PREFIX_DEADLINE)","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Daniel-Kur"},"content":"                ? ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get())","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Daniel-Kur"},"content":"                : null;","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"        Pet pet \u003d new Pet(ownerName, name, phone, email, address, timestamp, deadline, tagList);","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"        return new AddCommand(pet);","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Daniel-Kur":3,"wengkit1":12,"shuimeihe":11,"YuanXun9834":5,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/ArchiveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" * Parses input arguments and creates a new ArchiveCommand object","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"public class ArchiveCommandParser implements Parser\u003cArchiveCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"     * Parses the given {@code String} of arguments in the context of the ArchiveCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"     * and returns an ArchiveCommand object for execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"    public ArchiveCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"            return new ArchiveCommand(index);","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ArchiveCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"shuimeihe":27}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Daniel-Kur"},"content":"    public boolean containsPrefix(Prefix prefixDeadline) {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Daniel-Kur"},"content":"        return getValue(prefixDeadline).isPresent();","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Daniel-Kur":4,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/ChangeCostCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.commands.ChangeCostCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":" * Parses input arguments and creates a new ChangeCostCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"public class ChangeCostCommandParser implements Parser\u003cChangeCostCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    public ChangeCostCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"            String[] splitArgs \u003d args.split(\" \", 4);","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"            if (splitArgs.length !\u003d 4) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"                throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, ChangeCostCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[1]);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"            double rate \u003d ParserUtil.parseDouble(splitArgs[2]);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"            double flatCost \u003d ParserUtil.parseDouble(splitArgs[3]);","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"            return new ChangeCostCommand(index, rate, flatCost);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ChangeCostCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"YuanXun9834":36}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"wengkit1"},"content":"    public static final Prefix PREFIX_OWNER_NAME \u003d new Prefix(\"o/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"wengkit1"},"content":"    public static final Prefix PREFIX_TIMESTAMP \u003d new Prefix(\"ts/\");","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"wengkit1":2,"YuanXun9834":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_OWNER_NAME, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG, PREFIX_TIMESTAMP, PREFIX_DEADLINE);","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor editPetDescriptor \u003d new EditPetDescriptor();","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"        if (argMultimap.getValue(PREFIX_OWNER_NAME).isPresent()) {","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"            editPetDescriptor.setOwnerName(ParserUtil.parseOwnerName(argMultimap.getValue(PREFIX_OWNER_NAME).get()));","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"            editPetDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"            editPetDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"            editPetDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"            editPetDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"        if (argMultimap.getValue(PREFIX_TIMESTAMP).isPresent()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"            editPetDescriptor.setTimeStamp(ParserUtil.parseTimeStamp(argMultimap.getValue(PREFIX_TIMESTAMP).get()));","lastModifiedDate":"2023-04-01"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"            editPetDescriptor.setDeadline(ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPetDescriptor::setTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"        if (!editPetDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"        return new EditCommand(index, editPetDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"YuanXun9834":22,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wengkit1":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Daniel-Kur":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"wengkit1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"wengkit1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"     * Parses a {@code String ownerName} into a {@code OwnerName}.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws ParseException if the given {@code ownerName} is invalid.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"    public static OwnerName parseOwnerName(String ownerName) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"        requireNonNull(ownerName);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        String trimmedOwnerName \u003d ownerName.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        if (!OwnerName.isValidName(trimmedOwnerName)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"            throw new ParseException(OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"        return new OwnerName(trimmedOwnerName);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"    public static double parseDouble(String d) {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"        return Double.parseDouble(d);","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"YuanXun9834"},"content":"     * Parses a {@code String timestamp} into an {@code LocalDateTime}.","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"YuanXun9834"},"content":"     * @throws ParseException if the given {@code timestamp} is invalid.","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"wengkit1"},"content":"    public static LocalDateTime parseTimeStamp(String timestamp) {","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"wengkit1"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"wengkit1"},"content":"        return LocalDateTime.parse(timestamp, formatter);","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"wengkit1"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"shuimeihe"},"content":"     * Parses a {@code String deadline} into a Deadline object","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"shuimeihe"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"shuimeihe"},"content":"     * @param deadline takes in a deadline date in the form of yyyy-MM-dd HH:mm:ss","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"shuimeihe"},"content":"     * @return new Deadline(String description, LocalDateTime time)","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"YuanXun9834"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2023-04-03"},{"lineNumber":154,"author":{"gitId":"YuanXun9834"},"content":"        String[] split \u003d deadline.split(\"-\", 2);","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"YuanXun9834"},"content":"        String description \u003d split[0].trim();","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"YuanXun9834"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":157,"author":{"gitId":"YuanXun9834"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"YuanXun9834"},"content":"            LocalDateTime time \u003d LocalDateTime.parse(split[1].trim(), formatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":159,"author":{"gitId":"YuanXun9834"},"content":"            return new Deadline(description, time);","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"YuanXun9834"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":161,"author":{"gitId":"YuanXun9834"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-03"},{"lineNumber":162,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":163,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Daniel-Kur":6,"wengkit1":8,"shuimeihe":12,"YuanXun9834":30,"-":122}},{"path":"src/main/java/seedu/address/logic/parser/PetPalParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.logic.commands.ChangeCostCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.logic.commands.RemindCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.DeadlineWithinThreeDaysPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"public class PetPalParser {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"        case FindCommand.SHORTCUT_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"        case ListCommand.SHORTCUT_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"        case ExitCommand.SHORTCUT_WORD:","lastModifiedDate":"2023-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"            return new ArchiveCommandParser().parse(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"        case HelpCommand.SHORTCUT_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"        case RemindCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"YuanXun9834"},"content":"            return new RemindCommand(new DeadlineWithinThreeDaysPredicate());","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"wengkit1"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"wengkit1"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"        case ChangeCostCommand.SHORTCUT_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"        case ChangeCostCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"            return new ChangeCostCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"Daniel-Kur"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Daniel-Kur"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":4,"wengkit1":3,"shuimeihe":12,"YuanXun9834":8,"-":75}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    Predicate\u003cPet\u003e PREDICATE_SHOW_ALL_PETS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"     * Returns the user prefs\u0027 PetPal file path.","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    Path getPetPalFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"     * Sets the user prefs\u0027 PetPal file path.","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    void setPetPalFilePath(Path petPalFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"     * Replaces pet pal data with the data in {@code petPal}.","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"    void setPetPal(ReadOnlyPetPal petPal);","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"    /** Returns the PetPal */","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"    ReadOnlyPetPal getPetPal();","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"Daniel-Kur"},"content":"     * Returns true if a pet with the same identity as {@code pet} exists in the pet list.","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"wengkit1"},"content":"    boolean hasPet(Pet pet);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"Daniel-Kur"},"content":"     * Deletes the given pet.","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Daniel-Kur"},"content":"     * The pet must exist in the pet list.","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"wengkit1"},"content":"    void deletePet(Pet target);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"     * Adds the given pet.","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"Daniel-Kur"},"content":"     * {@code pet} must not already exist in the pet list.","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"wengkit1"},"content":"    void addPet(Pet pet);","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Daniel-Kur"},"content":"     * Marks the given pet","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Daniel-Kur"},"content":"     * The pet must exist in the pet list.","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Daniel-Kur"},"content":"    void markPet(Pet target);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"wengkit1"},"content":"    void undo();","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"     * Replaces the given pet {@code target} with {@code editedPet}.","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"     * {@code target} must exist in the PetPal.","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"     * The pet identity of {@code editedPet} must not be the same as another existing pet in the PetPal.","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"wengkit1"},"content":"    void setPet(Pet target, Pet editedPet);","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"wengkit1"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"YuanXun9834"},"content":"     * Returns an unmodifiable view of the filtered pet list","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"wengkit1"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"wengkit1"},"content":"    ObservableList\u003cPet\u003e getFilteredPetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"     * Updates the filter of the filtered pet list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"wengkit1"},"content":"    void updateFilteredPetList(Predicate\u003cPet\u003e predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"     * Deletes the given pet","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"     * This pet must exist in the PetPal list","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"     * @param petToArchive Pet object to archive","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"    void archivePet(Pet petToArchive);","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"    ReadOnlyPetPal getPetPalArchive();","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Daniel-Kur":7,"wengkit1":10,"shuimeihe":16,"YuanXun9834":8,"-":65}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":" * Represents the in-memory model of the PetPal data.","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    private final PetPal petPal;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"    private final PetPal archiveStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"wengkit1"},"content":"    private PetPal petPalCache;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"wengkit1"},"content":"    private PetPal archiveCache;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"wengkit1"},"content":"    private final FilteredList\u003cPet\u003e filteredPets;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"     * Initializes a ModelManager with the given PetPal and userPrefs.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"    public ModelManager(ReadOnlyPetPal petPal, ReadOnlyPetPal petPalArchive, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"        requireAllNonNull(petPal, petPalArchive, userPrefs);","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"        logger.info(\"Initializing with PetPal: \" + petPal + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"wengkit1"},"content":"        this.petPalCache \u003d new PetPal(petPal);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        this.petPal \u003d new PetPal(petPal);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"        this.archiveStorage \u003d new PetPal(petPalArchive);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        filteredPets \u003d new FilteredList\u003c\u003e(this.petPal.getPetList());","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        this(new PetPal(), new PetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"    public Path getPetPalFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"        return userPrefs.getPetPalFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"Daniel-Kur"},"content":"    public void setPetPalFilePath(Path petPalFilePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Daniel-Kur"},"content":"        requireNonNull(petPalFilePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Daniel-Kur"},"content":"        userPrefs.setPetPalFilePath(petPalFilePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"    public Path getPetPalArchiveFilePath() {","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"        return userPrefs.getPetPalArchiveFilePath();","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"    public void setPetPalArchiveFilePath(Path petPalArchiveFilePath) {","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"        requireNonNull(petPalArchiveFilePath);","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"        userPrefs.setPetPalArchiveFilePath(petPalArchiveFilePath);","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PetPal \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"Daniel-Kur"},"content":"    public void setPetPal(ReadOnlyPetPal petPal) {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"Daniel-Kur"},"content":"        this.petPal.resetData(petPal);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"YuanXun9834"},"content":"    public ReadOnlyPetPal getPetPal() {","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"YuanXun9834"},"content":"        return petPal;","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"    public ReadOnlyPetPal getPetPalArchive() {","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"        return archiveStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"wengkit1"},"content":"    public boolean hasPet(Pet pet) {","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"wengkit1"},"content":"        requireNonNull(pet);","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"YuanXun9834"},"content":"        return petPal.hasPet(pet);","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"wengkit1"},"content":"    public void deletePet(Pet target) {","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"wengkit1"},"content":"        this.petPalCache \u003d new PetPal(petPal);","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"YuanXun9834"},"content":"        petPal.removePet(target);","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"shuimeihe"},"content":"    public void addPet(Pet pet) {","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"wengkit1"},"content":"        this.petPalCache \u003d new PetPal(petPal);","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"shuimeihe"},"content":"        petPal.addPet(pet);","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"YuanXun9834"},"content":"        updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Daniel-Kur"},"content":"    public void markPet(Pet target) {","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Daniel-Kur"},"content":"        this.petPalCache \u003d new PetPal(petPal);","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Daniel-Kur"},"content":"        petPal.markPet(target);","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"wengkit1"},"content":"    public void undo() {","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"wengkit1"},"content":"        PetPal temp \u003d new PetPal(petPalCache);","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"wengkit1"},"content":"        petPal.setPets(temp.getPetList());","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"shuimeihe"},"content":"        PetPal archiveTemp \u003d new PetPal(archiveCache);","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"wengkit1"},"content":"        archiveStorage.setPets(archiveTemp.getPetList());","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"shuimeihe"},"content":"    public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"shuimeihe"},"content":"        requireAllNonNull(target, editedPet);","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"shuimeihe"},"content":"        petPal.setPet(target, editedPet);","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"shuimeihe"},"content":"    public void archivePet(Pet petToArchive) {","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"wengkit1"},"content":"        this.petPalCache \u003d new PetPal(petPal);","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"wengkit1"},"content":"        this.archiveCache \u003d new PetPal(petPal);","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"shuimeihe"},"content":"        requireNonNull(petToArchive);","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"shuimeihe"},"content":"        archiveStorage.archivePet(petToArchive);","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"shuimeihe"},"content":"        petPal.removePet(petToArchive);","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"shuimeihe"},"content":"        updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"shuimeihe"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Pet List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":163,"author":{"gitId":"shuimeihe"},"content":"     * Returns an unmodifiable view of the list of {@code Pet} backed by the internal list of","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"YuanXun9834"},"content":"     * {@code versionedPetPal}","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"wengkit1"},"content":"    public ObservableList\u003cPet\u003e getFilteredPetList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"wengkit1"},"content":"        return filteredPets;","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"wengkit1"},"content":"    public void updateFilteredPetList(Predicate\u003cPet\u003e predicate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":174,"author":{"gitId":"wengkit1"},"content":"        filteredPets.setPredicate(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"YuanXun9834"},"content":"        return petPal.equals(other.petPal)","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"wengkit1"},"content":"                \u0026\u0026 filteredPets.equals(other.filteredPets);","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Daniel-Kur":8,"wengkit1":23,"shuimeihe":36,"YuanXun9834":13,"-":115}},{"path":"src/main/java/seedu/address/model/PetPal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.UniquePetList;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":" * Wraps all data at the PetPal level","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":" * Duplicates are not allowed (by .isSamePet comparison)","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"public class PetPal implements ReadOnlyPetPal {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"wengkit1"},"content":"    private final UniquePetList pets;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"wengkit1"},"content":"        pets \u003d new UniquePetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    public PetPal() {}","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"wengkit1"},"content":"     * Creates an PetPal using the Pets in the {@code toBeCopied}","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"    public PetPal(ReadOnlyPetPal toBeCopied) {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"     * Replaces the contents of the pets list with {@code pets}.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"     * {@code pets} must not contain duplicate pets.","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"wengkit1"},"content":"    public void setPets(List\u003cPet\u003e pets) {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"wengkit1"},"content":"        this.pets.setPets(pets);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"     * Resets the existing data of this {@code PetPal} with {@code newData}.","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"    public void resetData(ReadOnlyPetPal newData) {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"wengkit1"},"content":"        setPets(newData.getPetList());","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"    //// pet-level operations","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"     * Returns true if a pet with the same identity as {@code pet} exists in the PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"wengkit1"},"content":"    public boolean hasPet(Pet pet) {","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"wengkit1"},"content":"        requireNonNull(pet);","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"wengkit1"},"content":"        return pets.contains(pet);","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"     * Adds a pet to the PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"     * The pet must not already exist in the PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"wengkit1"},"content":"    public void addPet(Pet p) {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"wengkit1"},"content":"        pets.add(p);","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"     * Replaces the given pet {@code target} in the list with {@code editedpet}.","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"     * {@code target} must exist in the PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"     * The pet identity of {@code editedPet} must not be the same as another existing pet in the PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"wengkit1"},"content":"    public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"wengkit1"},"content":"        requireNonNull(editedPet);","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"wengkit1"},"content":"        pets.setPet(target, editedPet);","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"     * Removes {@code key} from this {@code PetPal}.","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"     * {@code key} must exist in the PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"    public void removePet(Pet key) {","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"wengkit1"},"content":"        pets.remove(key);","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"     * Archives {@code p} from the {@code PetPal}","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"     * {@code p} must exists in the PetPal list","lastModifiedDate":"2023-04-02"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"    public void archivePet(Pet p) {","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"        pets.add(p);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"     * Marks the provided {@code Pet} isMarked field to true","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"Daniel-Kur"},"content":"    public void markPet(Pet pet) {","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Daniel-Kur"},"content":"        Pet markedPet \u003d pet;","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"Daniel-Kur"},"content":"        markedPet.setMarked();","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"Daniel-Kur"},"content":"        pets.setPet(pet, markedPet);","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"wengkit1"},"content":"        return pets.asUnmodifiableObservableList().size() + \" pets\";","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"wengkit1"},"content":"    public ObservableList\u003cPet\u003e getPetList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"wengkit1"},"content":"        return pets.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"YuanXun9834"},"content":"                || (other instanceof PetPal // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"YuanXun9834"},"content":"                \u0026\u0026 pets.equals(((PetPal) other).pets));","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"wengkit1"},"content":"        return pets.hashCode();","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Daniel-Kur":6,"wengkit1":21,"shuimeihe":25,"YuanXun9834":7,"-":78}},{"path":"src/main/java/seedu/address/model/ReadOnlyPetPal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * Unmodifiable view of a PetPal","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"public interface ReadOnlyPetPal {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"     * Returns an unmodifiable view of the pet list.","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"     * This list will not contain any duplicate pets.","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"wengkit1"},"content":"    ObservableList\u003cPet\u003e getPetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wengkit1":2,"shuimeihe":3,"YuanXun9834":1,"-":11}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    Path getPetPalFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"YuanXun9834":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    private Path petPalFilePath \u003d Paths.get(\"data\" , \"petpal.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"    private Path petPalArchiveFilePath \u003d Paths.get(\"data\", \"archive.json\");","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        setPetPalFilePath(newUserPrefs.getPetPalFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"    public Path getPetPalFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"        return this.petPalFilePath;","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"    public void setPetPalFilePath(Path petPalFilePath) {","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        requireNonNull(petPalFilePath);","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"        this.petPalFilePath \u003d petPalFilePath;","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"    public Path getPetPalArchiveFilePath() {","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"        return this.petPalArchiveFilePath;","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"    public void setPetPalArchiveFilePath(Path petPalArchiveFilePath) {","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"        requireNonNull(petPalArchiveFilePath);","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"        this.petPalArchiveFilePath \u003d petPalArchiveFilePath;","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"                \u0026\u0026 petPalFilePath.equals(o.petPalFilePath)","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"                \u0026\u0026 petPalArchiveFilePath.equals(o.petPalArchiveFilePath);","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"        return Objects.hash(guiSettings, petPalFilePath, petPalArchiveFilePath);","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"        return \"Gui Settings : \"","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"                + guiSettings","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"                + \"\\nLocal data file location : \"","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"                + petPalFilePath","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"                + \"\\nLocal archive file location: \"","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"                + petPalArchiveFilePath;","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shuimeihe":21,"YuanXun9834":3,"-":76}},{"path":"src/main/java/seedu/address/model/pet/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" * Represents a Pet\u0027s address in the pet list.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":1,"wengkit1":1,"-":55}},{"path":"src/main/java/seedu/address/model/pet/Cost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":" * Cost object with fields (LocalDateTime)","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" * Represents the cost calculated from a set rate","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"public class Cost {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"    private double rate;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"    private final LocalDateTime timeStamp;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"    private double flatCost;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"     * Constructs a {@code Cost}","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"     * @param timeStamp LocalDateTime","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"    public Cost(LocalDateTime timeStamp) {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"        requireNonNull(timeStamp);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"        if (!isValidTimeStamp(timeStamp)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"            throw new IllegalArgumentException(\"Invalid time stamp\");","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        this.timeStamp \u003d timeStamp;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"        this.rate \u003d 0.10;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        this.flatCost \u003d 0.00;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"    public boolean isValidTimeStamp(LocalDateTime timeStamp) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"        return timeStamp.isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    public void setRate(double rate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"    public void setFlatCost(double flatCost) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"        this.flatCost \u003d flatCost;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"     * Returns the integer cost amount calculated from the rate and flatCost at the invoked time","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"    public double calculate() {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"        double amount \u003d Duration.between(timeStamp, LocalDateTime.now()).getSeconds() * rate + flatCost;","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"        return Math.max(amount, 0.00);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"     * toString method","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"     * @return String with the cost amount rounded to 2 decimal places","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"        double amount \u003d calculate();","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Daniel-Kur"},"content":"        return \"$\" + Math.round(amount * 100.00) / 100.00;","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Daniel-Kur":1,"wengkit1":1,"shuimeihe":18,"YuanXun9834":43}},{"path":"src/main/java/seedu/address/model/pet/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":" *  Deadline object with fields (String description, LocalDateTime time)","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":" *  Represents a deadline for reminder","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"public class Deadline {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"            \"Deadline should be in the future and time should be in the format of yyyy-MM-dd HH:mm:ss\";","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    /*","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"    public final String description;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    public final LocalDateTime deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"     * @param description A valid deadline description.","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"     * @param deadline A valid deadline.","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"        checkArgument(isValidDeadline(deadline), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"     * Returns true if a deadline is in the future.","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"    public static boolean isValidDeadline(LocalDateTime d) {","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"        return isNull(d) || d.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"        return deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"    public String toString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"        DateTimeFormatter customFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        return description + \" by \" + deadline.format(customFormatter) + \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"                || ((other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"                \u0026\u0026 description.equals(((Deadline) other).description))","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"                \u0026\u0026 deadline.equals(((Deadline) other).deadline)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"        return description.hashCode();","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Daniel-Kur":4,"shuimeihe":9,"YuanXun9834":59}},{"path":"src/main/java/seedu/address/model/pet/DeadlineWithinThreeDaysPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":" * Tests that a {@code Pet}\u0027s {@code Deadline} is within 3 days.","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"public class DeadlineWithinThreeDaysPredicate implements Predicate\u003cPet\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    public DeadlineWithinThreeDaysPredicate() {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"        Deadline d \u003d pet.getDeadline();","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"        if (isNull(d.getDate())) {","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"            return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"        return LocalDateTime.now().isAfter(d.deadline.minusDays(3));","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"        return other \u003d\u003d this; // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"YuanXun9834":31}},{"path":"src/main/java/seedu/address/model/pet/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" * Represents a Pet\u0027s Owner\u0027s email in the pet list.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":1,"wengkit1":1,"-":69}},{"path":"src/main/java/seedu/address/model/pet/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" * Represents a Pet\u0027s name in the pet list.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":2,"wengkit1":1,"-":56}},{"path":"src/main/java/seedu/address/model/pet/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":" * Tests that a {@code Pet}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"wengkit1"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPet\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"wengkit1"},"content":"    public boolean test(Pet pet) {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"wengkit1"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(pet.getName().fullName, keyword));","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Daniel-Kur":1,"wengkit1":4,"-":26}},{"path":"src/main/java/seedu/address/model/pet/NoDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":" * A specialized {@link Deadline} class representing the absence of a deadline.","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" * This class extends the {@code Deadline} class and sets the description to \"N/A\" and the deadline to {@code null}.","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":" * The {@code toString} method is overridden to return the description only, without the deadline.","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"public class NoDeadline extends Deadline {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    public NoDeadline() {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"        super(\"N/A\", null);","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"        return null;","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"                || (other instanceof NoDeadline); // instanceof handles nulls","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    public int hashCode() {","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"        return 0;","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"    public String toString() {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"        return description;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Daniel-Kur":17,"YuanXun9834":19}},{"path":"src/main/java/seedu/address/model/pet/OwnerName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" * Represents a Pet\u0027s Owner\u0027s name in the pet list.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"public class OwnerName {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"            \"Owner Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"    public OwnerName(String name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"        return fullName;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"                || (other instanceof OwnerName // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"                \u0026\u0026 fullName.equals(((OwnerName) other).fullName)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Daniel-Kur":2,"shuimeihe":2,"YuanXun9834":55}},{"path":"src/main/java/seedu/address/model/pet/Pet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"wengkit1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"wengkit1"},"content":" * Represents a Pet in the store.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"wengkit1"},"content":"public class Pet {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"    private static final Deadline NO_DEADLINE \u003d new NoDeadline();","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    private final OwnerName ownerName;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    private final Deadline deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"wengkit1"},"content":"    private final LocalDateTime timestamp;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    private final Cost cost;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"    public Pet(OwnerName ownerName, Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"               LocalDateTime timestamp, Deadline deadline, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"        requireAllNonNull(ownerName, name, phone, email, address, timestamp, tags);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        this.ownerName \u003d ownerName;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"wengkit1"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"        this.cost \u003d new Cost(timestamp);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"        this.deadline \u003d deadline \u003d\u003d null ? NO_DEADLINE : deadline;","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"    public OwnerName getOwnerName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Daniel-Kur"},"content":"        return ownerName;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"wengkit1"},"content":"    public LocalDateTime getTimeStamp() {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"wengkit1"},"content":"        return timestamp;","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"wengkit1"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"    public Cost getCost() {","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"        return cost;","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"        return deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"Daniel-Kur"},"content":"    public void setMarked() {","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Daniel-Kur"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Daniel-Kur"},"content":"    public boolean getIsMarked() {","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Daniel-Kur"},"content":"        return this.isMarked;","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"Daniel-Kur"},"content":"     * Returns true if both pets have the same name.","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"Daniel-Kur"},"content":"     * This defines a weaker notion of equality between two pets.","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"wengkit1"},"content":"    public boolean isSamePet(Pet otherPet) {","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"wengkit1"},"content":"        if (otherPet \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"wengkit1"},"content":"        return otherPet !\u003d null","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"wengkit1"},"content":"                \u0026\u0026 otherPet.getName().equals(getName());","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"Daniel-Kur"},"content":"     * Returns true if both pets have the same identity and data fields.","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Daniel-Kur"},"content":"     * This defines a stronger notion of equality between two pets.","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"wengkit1"},"content":"        if (!(other instanceof Pet)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"wengkit1"},"content":"        Pet otherPet \u003d (Pet) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"        return otherPet.getOwnerName().equals(getOwnerName())","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"YuanXun9834"},"content":"                \u0026\u0026 otherPet.getName().equals(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"wengkit1"},"content":"                \u0026\u0026 otherPet.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"wengkit1"},"content":"                \u0026\u0026 otherPet.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"wengkit1"},"content":"                \u0026\u0026 otherPet.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"YuanXun9834"},"content":"                \u0026\u0026 otherPet.getTimeStamp().equals(getTimeStamp())","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"YuanXun9834"},"content":"                \u0026\u0026 otherPet.getDeadline().equals(getDeadline())","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"wengkit1"},"content":"                \u0026\u0026 otherPet.getTags().equals(getTags());","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"YuanXun9834"},"content":"        return Objects.hash(ownerName, name, phone, email, address, cost, deadline, tags);","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"YuanXun9834"},"content":"        builder.append(getOwnerName())","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"YuanXun9834"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"YuanXun9834"},"content":"                .append(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":155,"author":{"gitId":"YuanXun9834"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"YuanXun9834"},"content":"                .append(\"; Cost: \")","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"YuanXun9834"},"content":"                .append(getCost())","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"YuanXun9834"},"content":"                .append(\"; Deadline: \")","lastModifiedDate":"2023-03-21"},{"lineNumber":159,"author":{"gitId":"Daniel-Kur"},"content":"                .append(getDeadline())","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"Daniel-Kur"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"Daniel-Kur"},"content":"                .append(getIsMarked() ? \"Marked\" : \"Unmarked\");","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":22,"wengkit1":20,"shuimeihe":7,"YuanXun9834":23,"-":100}},{"path":"src/main/java/seedu/address/model/pet/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" * Represents a Pet\u0027s Owner\u0027s phone number in the pet list.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":1,"wengkit1":1,"-":51}},{"path":"src/main/java/seedu/address/model/pet/UniquePetList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.exceptions.DuplicatePetException;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.exceptions.PetNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":" * A list of pets that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":" * A pet is considered unique by comparing using {@code Pet#isSamePet(Pet)}. As such, adding and updating of","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":" * pets uses Pet#isSamePet(Pet) for equality so as to ensure that the pet being added or updated is","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":" * unique in terms of identity in the UniquePetList. However, the removal of a pet uses Pet#equals(Object) so","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":" * as to ensure that the pet with exactly the same fields will be removed.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"wengkit1"},"content":" * @see Pet#isSamePet(Pet)","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"wengkit1"},"content":"public class UniquePetList implements Iterable\u003cPet\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"wengkit1"},"content":"    private final ObservableList\u003cPet\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"wengkit1"},"content":"    private final ObservableList\u003cPet\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"     * Returns true if the list contains an equivalent pet as the given argument.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"wengkit1"},"content":"    public boolean contains(Pet toCheck) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"wengkit1"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePet);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"     * Adds a pet to the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"     * The pet must not already exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"wengkit1"},"content":"    public void add(Pet toAdd) {","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"            throw new DuplicatePetException();","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"     * Replaces the pet {@code target} in the list with {@code editedPet}.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"Daniel-Kur"},"content":"     * The pet identity of {@code editedPet} must not be the same as another existing pet in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"wengkit1"},"content":"    public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"wengkit1"},"content":"        requireAllNonNull(target, editedPet);","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"            throw new PetNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"wengkit1"},"content":"        if (!target.isSamePet(editedPet) \u0026\u0026 contains(editedPet)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"            throw new DuplicatePetException();","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"wengkit1"},"content":"        internalList.set(index, editedPet);","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"Daniel-Kur"},"content":"     * Removes the equivalent pet from the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Daniel-Kur"},"content":"     * The pet must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"wengkit1"},"content":"    public void remove(Pet toRemove) {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"            throw new PetNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"wengkit1"},"content":"    public void setPets(UniquePetList replacement) {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"Daniel-Kur"},"content":"     * Replaces the contents of this list with {@code pets}.","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Daniel-Kur"},"content":"     * {@code pets} must not contain duplicate pets.","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"wengkit1"},"content":"    public void setPets(List\u003cPet\u003e pets) {","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"wengkit1"},"content":"        requireAllNonNull(pets);","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"wengkit1"},"content":"        if (!petsAreUnique(pets)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"            throw new DuplicatePetException();","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"wengkit1"},"content":"        internalList.setAll(pets);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"wengkit1"},"content":"    public ObservableList\u003cPet\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"wengkit1"},"content":"    public Iterator\u003cPet\u003e iterator() {","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"wengkit1"},"content":"                || (other instanceof UniquePetList // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"wengkit1"},"content":"                        \u0026\u0026 internalList.equals(((UniquePetList) other).internalList));","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"Daniel-Kur"},"content":"     * Returns true if {@code pets} contains only unique pets.","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"wengkit1"},"content":"    private boolean petsAreUnique(List\u003cPet\u003e pets) {","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"wengkit1"},"content":"        for (int i \u003d 0; i \u003c pets.size() - 1; i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"wengkit1"},"content":"            for (int j \u003d i + 1; j \u003c pets.size(); j++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"wengkit1"},"content":"                if (pets.get(i).isSamePet(pets.get(j))) {","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daniel-Kur":15,"wengkit1":26,"YuanXun9834":7,"-":89}},{"path":"src/main/java/seedu/address/model/pet/exceptions/DuplicatePetException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.model.pet.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":" * Signals that the operation will result in duplicate Pets (Pets are considered duplicates if they have the same","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"public class DuplicatePetException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"    public DuplicatePetException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"        super(\"Operation would result in duplicate pets\");","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Daniel-Kur":2,"wengkit1":1,"YuanXun9834":2,"-":6}},{"path":"src/main/java/seedu/address/model/pet/exceptions/PetNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":" * Signals that the operation will result in given Pet not found in the pet list","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"public class PetNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"    public PetNotFoundException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"        super(\"Pet not found\");","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Daniel-Kur":3,"YuanXun9834":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":" * Represents a Tag in the PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shuimeihe":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"wengkit1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":" * Contains utility methods for populating {@code PetPal} with sample data.","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"wengkit1"},"content":"    public static Pet[] getSamplePets() {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"wengkit1"},"content":"        return new Pet[] {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"            new Pet(new OwnerName(\"Alex Yeoh\"), new Name(\"Woofers\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"                new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"                    LocalDateTime.now().minusSeconds(1),","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"                    new Deadline(\"Feed medicine\", LocalDateTime.now().plusDays(1)),","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"                    getTagSet(\"Pomeranian\")),","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"            new Pet(new OwnerName(\"June Tan\"), new Name(\"Max\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"                new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"                    LocalDateTime.now().minusSeconds(1),","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"                    new Deadline(\"Cut hair\", LocalDateTime.now().plusDays(2)),","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"                    getTagSet(\"GoldenRetriever\")),","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"            new Pet(new OwnerName(\"Ben Leo\"), new Name(\"Charlie\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"                new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"                    LocalDateTime.now().minusSeconds(1), new Deadline(\"See doctor\",","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"                    LocalDateTime.now().plusDays(3)), getTagSet(\"GermanShepherd\")),","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"            new Pet(new OwnerName(\"Irfan\"), new Name(\"Buddy\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"                    LocalDateTime.now().minusSeconds(1),","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"                    new Deadline(\"Take on walk\", LocalDateTime.now().plusDays(4)),","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"                    getTagSet(\"Chihuahua\")),","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"            new Pet(new OwnerName(\"Lucy Lee\"), new Name(\"Milo\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), LocalDateTime.now().minusSeconds(1),","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"                    new Deadline(\"Shower\", LocalDateTime.now().plusDays(1)),","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"                    getTagSet(\"BorderCollie\")),","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"            new Pet(new OwnerName(\"Alexandra Toh\"), new Name(\"Lola\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"                new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"                    LocalDateTime.now().minusSeconds(1), new Deadline(\"Brush teeth\",","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"                    LocalDateTime.now().plusDays(2)), getTagSet(\"SiberianHusky\"))","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"    public static ReadOnlyPetPal getSamplePetPal() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        PetPal samplePp \u003d new PetPal();","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"        for (Pet samplePet : getSamplePets()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"            samplePp.addPet(samplePet);","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"        return samplePp;","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Daniel-Kur":8,"wengkit1":3,"shuimeihe":24,"YuanXun9834":9,"-":28}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"wengkit1"},"content":"import java.time.Instant;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"wengkit1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"wengkit1"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"wengkit1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.NoDeadline;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"wengkit1"},"content":" * Jackson-friendly version of {@link Pet}.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"class JsonAdaptedPet {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Pet\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    private final String ownerName;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    private final String deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"    private String status;","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"wengkit1"},"content":"    private String timestamp;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"     * Constructs a {@code JsonAdaptedPet} with the given pet details.","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"    public JsonAdaptedPet(@JsonProperty(\"ownerName\") String ownerName, @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"wengkit1"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"timestamp\") String timestamp,","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"                          @JsonProperty(\"deadline\") String deadline, @JsonProperty(\"status\") String status,","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"wengkit1"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"        this.ownerName \u003d ownerName;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"wengkit1"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"Daniel-Kur"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"     * Converts a given {@code Pet} into this class for Jackson use.","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"    public JsonAdaptedPet(Pet source) {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"        ownerName \u003d source.getOwnerName().fullName;","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"wengkit1"},"content":"        timestamp \u003d source.getTimeStamp().toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Daniel-Kur"},"content":"        status \u003d source.getIsMarked() ? \"Marked\" : \"Unmarked\";","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"        deadline \u003d source.getDeadline().toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"     * Converts this Jackson-friendly adapted pet object into the model\u0027s {@code Pet} object.","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted pet.","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"wengkit1"},"content":"    public Pet toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"        final List\u003cTag\u003e petTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"            petTags.add(tag.toModelType());","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"        if (ownerName \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"YuanXun9834"},"content":"        if (!Name.isValidName(ownerName)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"wengkit1"},"content":"            throw new IllegalValueException(OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"YuanXun9834"},"content":"        final OwnerName modelOwnerName \u003d new OwnerName(ownerName);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"wengkit1"},"content":"        if (timestamp \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"shuimeihe"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"wengkit1"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"wengkit1"},"content":"        Instant i \u003d Instant.parse(timestamp + \"Z\");","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"wengkit1"},"content":"        final LocalDateTime modelTimeStamp \u003d LocalDateTime.ofInstant(i, ZoneOffset.UTC);","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"Daniel-Kur"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"Daniel-Kur"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"Daniel-Kur"},"content":"                    boolean.class.getSimpleName()));","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"Daniel-Kur"},"content":"        boolean isMarked \u003d status.equals(\"Marked\");","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"YuanXun9834"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"shuimeihe"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"shuimeihe"},"content":"                    Deadline.class.getSimpleName()));","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":153,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"Daniel-Kur"},"content":"        Deadline modelDeadline \u003d new NoDeadline();","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"Daniel-Kur"},"content":"        if (!deadline.equals(\"N/A\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"shuimeihe"},"content":"            String[] split \u003d deadline.split(\"by\", 2);","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"YuanXun9834"},"content":"            String description \u003d split[0].trim();","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"YuanXun9834"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2023-03-21"},{"lineNumber":159,"author":{"gitId":"YuanXun9834"},"content":"            LocalDateTime time \u003d LocalDateTime.parse(split[1].trim(), formatter);","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"Daniel-Kur"},"content":"            modelDeadline \u003d new Deadline(description, time);","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"YuanXun9834"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(petTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"Daniel-Kur"},"content":"        Pet pet \u003d new Pet(modelOwnerName, modelName, modelPhone, modelEmail,","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"shuimeihe"},"content":"                modelAddress, modelTimeStamp, modelDeadline, modelTags);","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"Daniel-Kur"},"content":"        if (isMarked) {","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"Daniel-Kur"},"content":"            pet.setMarked();","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"Daniel-Kur"},"content":"        return pet;","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Daniel-Kur":22,"wengkit1":21,"shuimeihe":13,"YuanXun9834":29,"-":88}},{"path":"src/main/java/seedu/address/storage/JsonPetPalStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":" * A class to access PetPal data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"public class JsonPetPalStorage implements PetPalStorage {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPetPalStorage.class);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    private Path archiveFilePath;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"     * Constructs a {@code JsonPetPalStorage} with the given {@code data file Path} and {@code archive file Path}","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    public JsonPetPalStorage(Path filePath, Path archiveFilePath) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        this.archiveFilePath \u003d archiveFilePath;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"    public Path getPetPalFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"    public Path getPetPalArchiveFilePath() {","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"        return archiveFilePath;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    public Optional\u003cReadOnlyPetPal\u003e readPetPal() throws DataConversionException {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"        return readPetPal(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"     * Similar to {@link #readPetPal()}.","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"    public Optional\u003cReadOnlyPetPal\u003e readPetPal(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"wengkit1"},"content":"        System.out.println(filePath);","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"        Optional\u003cJsonSerializablePetPal\u003e jsonPetPal \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"                filePath, JsonSerializablePetPal.class);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"        if (!jsonPetPal.isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"            return Optional.of(jsonPetPal.get().toModelType());","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Daniel-Kur"},"content":"    public void savePetPal(ReadOnlyPetPal petPal) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Daniel-Kur"},"content":"        savePetPal(petPal, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"     * Similar to {@link #savePetPal(ReadOnlyPetPal)}.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Daniel-Kur"},"content":"    public void savePetPal(ReadOnlyPetPal petPal, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Daniel-Kur"},"content":"        requireNonNull(petPal);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Daniel-Kur"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePetPal(petPal), filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"    public Optional\u003cReadOnlyPetPal\u003e readPetPalArchive() {","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"    public Optional\u003cReadOnlyPetPal\u003e readPetPalArchive(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"        System.out.println(filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"        Optional\u003cJsonSerializablePetPal\u003e jsonPetPalArchive \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"                filePath, JsonSerializablePetPal.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"        if (jsonPetPalArchive.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"            return Optional.of(jsonPetPalArchive.get().toModelType());","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"shuimeihe"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"shuimeihe"},"content":"    public void savePetPalArchive(ReadOnlyPetPal petPal) throws IOException {","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"shuimeihe"},"content":"        savePetPal(petPal, archiveFilePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"shuimeihe"},"content":"    public void savePetPalArchive(ReadOnlyPetPal petPal, Path filePath) throws IOException {","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"shuimeihe"},"content":"        requireNonNull(petPal);","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"shuimeihe"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"shuimeihe"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"shuimeihe"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePetPal(petPal), filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Daniel-Kur":5,"wengkit1":1,"shuimeihe":48,"YuanXun9834":14,"-":59}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePetPal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":" * An Immutable PetPal that is serializable to JSON format.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"@JsonRootName(value \u003d \"PetPal\")","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"class JsonSerializablePetPal {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    public static final String MESSAGE_DUPLICATE_PET \u003d \"Pets list contains duplicate pet(s).\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    private final List\u003cJsonAdaptedPet\u003e pets \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"     * Constructs a {@code JsonSerializablePetPal} with the given pets.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    public JsonSerializablePetPal(@JsonProperty(\"pets\") List\u003cJsonAdaptedPet\u003e pets) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"wengkit1"},"content":"        this.pets.addAll(pets);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"     * Converts a given {@code ReadOnlyPetPal} into this class for Jackson use.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePetPal}.","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    public JsonSerializablePetPal(ReadOnlyPetPal source) {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"        pets.addAll(source.getPetList().stream().map(JsonAdaptedPet::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"     * Converts this PetPal into the model\u0027s {@code PetPal} object.","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"    public PetPal toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"        PetPal petPal \u003d new PetPal();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"        for (JsonAdaptedPet jsonAdaptedPet : pets) {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"            Pet pet \u003d jsonAdaptedPet.toModelType();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"            if (petPal.hasPet(pet)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Daniel-Kur"},"content":"            petPal.addPet(pet);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Daniel-Kur"},"content":"        return petPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Daniel-Kur":4,"wengkit1":1,"shuimeihe":1,"YuanXun9834":54}},{"path":"src/main/java/seedu/address/storage/PetPalStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":" * Represents a storage for {@link seedu.address.model.PetPal}.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"public interface PetPalStorage {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"    Path getPetPalFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"     * @return the file path for the archive file.","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"    Path getPetPalArchiveFilePath();","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"     * Returns PetPal data as a {@link ReadOnlyPetPal}.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"    Optional\u003cReadOnlyPetPal\u003e readPetPal() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"     * @see #getPetPalFilePath()","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"    Optional\u003cReadOnlyPetPal\u003e readPetPal(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"     * Saves the given {@link ReadOnlyPetPal} to the storage.","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"     * @param petPal cannot be null.","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"    void savePetPal(ReadOnlyPetPal petPal) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"     * @see #savePetPal(ReadOnlyPetPal)","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"    void savePetPal(ReadOnlyPetPal petPal, Path filePath) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"    Optional\u003cReadOnlyPetPal\u003e readPetPalArchive() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"    Optional\u003cReadOnlyPetPal\u003e readPetPalArchive(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"    void savePetPalArchive(ReadOnlyPetPal petPal) throws IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"    void savePetPalArchive(ReadOnlyPetPal petPal, Path filePath) throws IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Daniel-Kur":3,"shuimeihe":13,"YuanXun9834":42}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"public interface Storage extends PetPalStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    Path getPetPalFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    Optional\u003cReadOnlyPetPal\u003e readPetPal() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    void savePetPal(ReadOnlyPetPal petPal) throws IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"    Optional\u003cReadOnlyPetPal\u003e readPetPalArchive() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"    void savePetPalArchive(ReadOnlyPetPal petPal) throws IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"shuimeihe":3,"YuanXun9834":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":" * Manages storage of PetPal data in local storage.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"    private PetPalStorage petPalStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    private PetPalStorage petPalArchiveStorage;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"     * Creates a {@code StorageManager} with the given {@code PetPalStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"    public StorageManager(PetPalStorage petPalStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"        this.petPalStorage \u003d petPalStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PetPal methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"    public Path getPetPalFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Daniel-Kur"},"content":"        return petPalStorage.getPetPalFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"    public Optional\u003cReadOnlyPetPal\u003e readPetPal() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Daniel-Kur"},"content":"        return readPetPal(petPalStorage.getPetPalFilePath());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"    public Optional\u003cReadOnlyPetPal\u003e readPetPal(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"Daniel-Kur"},"content":"        return petPalStorage.readPetPal(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"Daniel-Kur"},"content":"    public void savePetPal(ReadOnlyPetPal petPal) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Daniel-Kur"},"content":"        savePetPal(petPal, petPalStorage.getPetPalFilePath());","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"Daniel-Kur"},"content":"    public void savePetPal(ReadOnlyPetPal petPal, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"Daniel-Kur"},"content":"        petPalStorage.savePetPal(petPal, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Archive Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"    public Path getPetPalArchiveFilePath() {","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"        return petPalStorage.getPetPalArchiveFilePath();","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"    public Optional\u003cReadOnlyPetPal\u003e readPetPalArchive() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"        return readPetPalArchive(petPalStorage.getPetPalArchiveFilePath());","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"    public Optional\u003cReadOnlyPetPal\u003e readPetPalArchive(Path filePath) throws IOException, DataConversionException {","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"        logger.fine(\"Attempting to read archive data from file: \" + filePath);","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"        return petPalStorage.readPetPalArchive(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"    public void savePetPalArchive(ReadOnlyPetPal petPal) throws IOException {","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"        savePetPalArchive(petPal, petPalStorage.getPetPalArchiveFilePath());","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"    public void savePetPalArchive(ReadOnlyPetPal petPal, Path filePath) throws IOException {","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"        logger.fine(\"Attempting to write to archive data file: \" + filePath);","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"        petPalStorage.savePetPalArchive(petPal, filePath);","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Daniel-Kur":10,"shuimeihe":27,"YuanXun9834":7,"-":61}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t14-2.github.io/tp/\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"shuimeihe":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    private PetListPanel petListPanel;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    private StackPane petListPanelPlaceholder;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"YuanXun9834"},"content":"        petListPanel \u003d new PetListPanel(logic.getFilteredPetList());","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"YuanXun9834"},"content":"        petListPanelPlaceholder.getChildren().add(petListPanel.getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"YuanXun9834"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPetPalFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"YuanXun9834"},"content":"    public PetListPanel getPetListPanel() {","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"YuanXun9834"},"content":"        return petListPanel;","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"YuanXun9834":7,"-":189}},{"path":"src/main/java/seedu/address/ui/PetCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"wengkit1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":" * An UI component that displays information of a {@code Pet}.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"wengkit1"},"content":"public class PetCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    private static final String FXML \u003d \"PetListCard.fxml\";","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"wengkit1"},"content":"    public final Pet pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"    private Label oname;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"wengkit1"},"content":"    private Label amountDue;","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"wengkit1"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"    private Pane amountDuePane;","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"    private Label deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"Daniel-Kur"},"content":"     * Creates a {@code PetCode} with the given {@code Pet} and index to display.","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"wengkit1"},"content":"    public PetCard(Pet pet, int displayedIndex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"wengkit1"},"content":"        this.pet \u003d pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"        oname.setText(pet.getOwnerName().fullName);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"wengkit1"},"content":"        name.setText(pet.getName().fullName);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"wengkit1"},"content":"        phone.setText(pet.getPhone().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"wengkit1"},"content":"        address.setText(pet.getAddress().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"wengkit1"},"content":"        email.setText(pet.getEmail().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"wengkit1"},"content":"        LocalDateTime arrival \u003d pet.getTimeStamp();","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"wengkit1"},"content":"        System.out.println(arrival);","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Daniel-Kur"},"content":"        Label amountDueValueLabel \u003d new Label(pet.getCost().toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Daniel-Kur"},"content":"        amountDueValueLabel.setLayoutX(amountDue.getLayoutX() + amountDue.prefWidth(-1));","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Daniel-Kur"},"content":"        amountDueValueLabel.setLayoutY(amountDue.getLayoutY());","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Daniel-Kur"},"content":"        amountDueValueLabel.setStyle(\"-fx-text-fill: black; -fx-font-size: 13px;\");","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Daniel-Kur"},"content":"        amountDuePane.getChildren().add(amountDueValueLabel);","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"        deadline.setText(pet.getDeadline().toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"wengkit1"},"content":"        pet.getTags().stream()","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"wengkit1"},"content":"        if (!(other instanceof PetCard)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"wengkit1"},"content":"        PetCard card \u003d (PetCard) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"wengkit1"},"content":"                \u0026\u0026 pet.equals(card.pet);","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Daniel-Kur":10,"wengkit1":20,"YuanXun9834":7,"-":61}},{"path":"src/main/java/seedu/address/ui/PetListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import javafx.css.PseudoClass;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.NoDeadline;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":" * Panel containing the list of pets.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"wengkit1"},"content":"public class PetListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"    private static final PseudoClass OVERDUE_PSEUDOCLASS \u003d PseudoClass.getPseudoClass(\"overdue\");","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"    private static final String FXML \u003d \"PetListPanel.fxml\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"wengkit1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PetListPanel.class);","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"    private ListView\u003cPet\u003e petListView;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"     * Creates a {@code PetListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"wengkit1"},"content":"    public PetListPanel(ObservableList\u003cPet\u003e petList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        petListView.setItems(petList);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        petListView.setCellFactory(listView -\u003e new PetListViewCell());","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Pet} using a {@code PetCard}.","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    class PetListViewCell extends ListCell\u003cPet\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"wengkit1"},"content":"        protected void updateItem(Pet pet, boolean empty) {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"wengkit1"},"content":"            super.updateItem(pet, empty);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"wengkit1"},"content":"            if (empty || pet \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"wengkit1"},"content":"                setGraphic(new PetCard(pet, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"                if (!(pet.getDeadline() instanceof NoDeadline)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Daniel-Kur"},"content":"                    LocalDateTime deadline \u003d pet.getDeadline().getDate().minusDays(1);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"                    LocalDateTime currTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Daniel-Kur"},"content":"                    if (currTime.isAfter(deadline) \u0026\u0026 !(pet.getIsMarked())) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Daniel-Kur"},"content":"                        pseudoClassStateChanged(OVERDUE_PSEUDOCLASS, true);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Daniel-Kur"},"content":"                    } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Daniel-Kur"},"content":"                        pseudoClassStateChanged(OVERDUE_PSEUDOCLASS, false);","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Daniel-Kur":17,"wengkit1":8,"YuanXun9834":6,"-":33}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/favicon.png\";","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"shuimeihe":1,"-":87}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#5A3825, 20%);","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"    background-color: #5A3825; /* Used in the default.html file */","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-base: #5A3825;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-control-inner-background: #5A3825;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: #5A3825;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#5A3825, 20%);","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#5A3825, 20%);","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#5A3825, 20%);","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: #5B3E31;","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: #765341;","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: #a08679;","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"Daniel-Kur"},"content":".list-cell:filled:overdue {","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: #b5651d;","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":140,"author":{"gitId":"Daniel-Kur"},"content":"     -fx-background-color: derive(#5A3825, 20%);","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"Daniel-Kur"},"content":"     -fx-background-color: derive(#CC9966, 20%);","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"Daniel-Kur"},"content":"     -fx-border-color: derive(#5A3825, 10%);","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#2C1608, 30%);","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#5A3825, 30%);","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-border-color: derive(#5A3825, 30%);","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":188,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#5A3825, 30%);","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#23120B, 20%);","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: #5A3825;","lastModifiedDate":"2023-03-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: #5A3825;","lastModifiedDate":"2023-03-16"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#5A3825, 25%);","lastModifiedDate":"2023-03-16"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: derive(#5A3825, 20%);","lastModifiedDate":"2023-03-16"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"Daniel-Kur"},"content":".due_pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":315,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: #90EE90;","lastModifiedDate":"2023-03-30"},{"lineNumber":316,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-radius: 7px;","lastModifiedDate":"2023-03-30"},{"lineNumber":317,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":318,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background-color: transparent, #5A3825, transparent, #5A3825;","lastModifiedDate":"2023-03-16"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Daniel-Kur":31,"-":330}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"    -fx-background: #5A3825;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Daniel-Kur":1,"-":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"         title\u003d\"PetPal\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"    \u003cImage url\u003d\"@/images/favicon.png\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"          \u003cVBox fx:id\u003d\"petList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"400\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"            \u003cStackPane fx:id\u003d\"petListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Daniel-Kur":10,"shuimeihe":1,"-":51}},{"path":"src/main/resources/view/PetListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"      \u003cLabel fx:id\u003d\"oname\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$oname\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"      \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$Deadline\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"        \u003cLabel fx:id\u003d\"amountDue\" text\u003d\"Cost: \"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"        \u003cPane fx:id\u003d\"amountDuePane\" styleClass\u003d\"due_pane\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Daniel-Kur":5,"YuanXun9834":10,"-":32}},{"path":"src/main/resources/view/PetListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"  \u003cListView fx:id\u003d\"petListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YuanXun9834":2,"-":6}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"        assertNotNull(AppUtil.getImage(\"/images/favicon.png\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"shuimeihe":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CAT;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESTAMP_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.EXAMPLE_CAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.storage.JsonPetPalStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"        JsonPetPalStorage petPalStorage \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"                new JsonPetPalStorage(temporaryFolder.resolve(\"PetPal.json\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"                        temporaryFolder.resolve(\"archive.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"        StorageManager storage \u003d new StorageManager(petPalStorage, userPrefsStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"        // Setup LogicManager with JsonPetPalIoExceptionThrowingStub","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"        JsonPetPalStorage petPalStorage \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"                new JsonPetPalIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionPetPal.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"        StorageManager storage \u003d new StorageManager(petPalStorage, userPrefsStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + NAME_DESC_CAT","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"YuanXun9834"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TIMESTAMP_DESC_AMY + DEADLINE_DESC_AMY;","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"        Pet expectedPet \u003d new PetBuilder(EXAMPLE_CAT).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.addPet(expectedPet);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"    public void getFilteredPetList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPetList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"        Model expectedModel \u003d new ModelManager(model.getPetPal(), model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"YuanXun9834"},"content":"    private static class JsonPetPalIoExceptionThrowingStub extends JsonPetPalStorage {","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"YuanXun9834"},"content":"        private JsonPetPalIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"shuimeihe"},"content":"            super(filePath, filePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"Daniel-Kur"},"content":"        public void savePetPal(ReadOnlyPetPal petPal, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Daniel-Kur":1,"wengkit1":1,"shuimeihe":12,"YuanXun9834":18,"-":135}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        model \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_newPet_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        Pet validPet \u003d new PetBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        Model expectedModel \u003d new ModelManager(model.getPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.addPet(validPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandSuccess(new AddCommand(validPet), model,","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPet), expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_duplicatePet_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        Pet petInList \u003d model.getPetPal().getPetList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandFailure(new AddCommand(petInList), model, AddCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wengkit1":1,"shuimeihe":2,"YuanXun9834":10,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    public void constructor_nullPet_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_petAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"        ModelStubAcceptingPetAdded modelStub \u003d new ModelStubAcceptingPetAdded();","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"        Pet validPet \u003d new PetBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        CommandResult commandResult \u003d new AddCommand(validPet).execute(modelStub);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPet), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(Arrays.asList(validPet), modelStub.petsAdded);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_duplicatePet_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"        Pet validPet \u003d new PetBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"        AddCommand addCommand \u003d new AddCommand(validPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"        ModelStub modelStub \u003d new ModelStubWithPet(validPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PET, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"        Pet alice \u003d new PetBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"        Pet bob \u003d new PetBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"        // different Pet -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"YuanXun9834"},"content":"        public Path getPetPalFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"YuanXun9834"},"content":"        public void setPetPalFilePath(Path petPalFilePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"YuanXun9834"},"content":"        public void addPet(Pet pet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"        public void markPet(Pet target) {","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"YuanXun9834"},"content":"        public void setPetPal(ReadOnlyPetPal newData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"YuanXun9834"},"content":"        public ReadOnlyPetPal getPetPal() {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"shuimeihe"},"content":"        public ReadOnlyPetPal getPetPalArchive() {","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"YuanXun9834"},"content":"        public boolean hasPet(Pet pet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"YuanXun9834"},"content":"        public void deletePet(Pet target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"YuanXun9834"},"content":"        public void setPet(Pet target, Pet editedPet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"shuimeihe"},"content":"        public void archivePet(Pet petToArchive) {","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"shuimeihe"},"content":"        public ObservableList\u003cPet\u003e getFilteredPetList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"shuimeihe"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"shuimeihe"},"content":"        public void updateFilteredPetList(Predicate\u003cPet\u003e predicate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"shuimeihe"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"YuanXun9834"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"YuanXun9834"},"content":"        public void undo() {","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"YuanXun9834"},"content":"     * A Model stub that contains a single Pet.","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"YuanXun9834"},"content":"    private class ModelStubWithPet extends ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"YuanXun9834"},"content":"        private final Pet pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"YuanXun9834"},"content":"        ModelStubWithPet(Pet pet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"YuanXun9834"},"content":"            requireNonNull(pet);","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"YuanXun9834"},"content":"            this.pet \u003d pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"YuanXun9834"},"content":"        public boolean hasPet(Pet pet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"YuanXun9834"},"content":"            requireNonNull(pet);","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"YuanXun9834"},"content":"            return this.pet.isSamePet(pet);","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"YuanXun9834"},"content":"     * A Model stub that always accept the Pet being added.","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"YuanXun9834"},"content":"    private class ModelStubAcceptingPetAdded extends ModelStub {","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"YuanXun9834"},"content":"        final ArrayList\u003cPet\u003e petsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"YuanXun9834"},"content":"        public boolean hasPet(Pet pet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"YuanXun9834"},"content":"            requireNonNull(pet);","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"YuanXun9834"},"content":"            return petsAdded.stream().anyMatch(pet::isSamePet);","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"YuanXun9834"},"content":"        public void addPet(Pet pet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"YuanXun9834"},"content":"            requireNonNull(pet);","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"YuanXun9834"},"content":"            petsAdded.add(pet);","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"YuanXun9834"},"content":"        public ReadOnlyPetPal getPetPal() {","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"YuanXun9834"},"content":"            return new PetPal();","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Daniel-Kur":1,"wengkit1":1,"shuimeihe":9,"YuanXun9834":48,"-":155}},{"path":"src/test/java/seedu/address/logic/commands/ArchiveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalArchive;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":" * {@code ArchiveCommand}.","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"public class ArchiveCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    private Model model \u003d new ModelManager(getTypicalPetPal(), getTypicalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"        Pet petToArchive \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(INDEX_FIRST_PET);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"        String expectedMessage \u003d String.format(ArchiveCommand.MESSAGE_ARCHIVE_PET_SUCCESS, petToArchive);","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPetPal(), model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"        expectedModel.archivePet(petToArchive);","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"        assertCommandSuccess(archiveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"    public void execute_validIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"    public void execute_invalidIndexFilteredList_success() {","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"        Pet petToArchive \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(INDEX_FIRST_PET);","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"        String expectedMessage \u003d String.format(ArchiveCommand.MESSAGE_ARCHIVE_PET_SUCCESS, petToArchive);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"        Model expectedModel \u003d new ModelManager(model.getPetPal(), model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"        expectedModel.archivePet(petToArchive);","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"        assertCommandSuccess(archiveCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPetPal().getPetList().size());","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"        ArchiveCommand archiveCommand \u003d new ArchiveCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"shuimeihe"},"content":"        assertCommandFailure(archiveCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"    public void equals() {","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"        ArchiveCommand archiveFirstCommand \u003d new ArchiveCommand(INDEX_FIRST_PET);","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"        ArchiveCommand archiveSecondCommand \u003d new ArchiveCommand(INDEX_SECOND_PET);","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(archiveFirstCommand, archiveFirstCommand);","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"        ArchiveCommand archiveFirstCommandCopy \u003d new ArchiveCommand(INDEX_FIRST_PET);","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(archiveFirstCommand, archiveFirstCommandCopy);","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(1, archiveFirstCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(null, archiveFirstCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"shuimeihe"},"content":"        // different PET -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(archiveFirstCommand, archiveSecondCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"    private void showNoPet(Model model) {","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"        model.updateFilteredPetList(p -\u003e false);","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"        assertTrue(model.getFilteredPetList().isEmpty());","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"shuimeihe":109}},{"path":"src/test/java/seedu/address/logic/commands/ChangeCostCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"public class ChangeCostCommandTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    private Model model \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"        Pet changedCostPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"        ChangeCostCommand changeCostCommand \u003d new ChangeCostCommand(INDEX_FIRST_PET, 0.1, 10);","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"        String expectedMessage \u003d String.format(ChangeCostCommand.MESSAGE_SUCCESS, changedCostPet);","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"        Model expectedModel \u003d new ModelManager(new PetPal(model.getPetPal()),","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"                model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.setPet(model.getFilteredPetList().get(0), changedCostPet);","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandSuccess(changeCostCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"shuimeihe":6,"YuanXun9834":26}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_emptyPetPal_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_nonEmptyPetPal_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        Model model \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.setPetPal(new PetPal());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"shuimeihe":2,"YuanXun9834":5,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OWNER_NAME;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"import java.util.Collections;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"    public static final String VALID_NAME_DOG \u003d \"Doggo\";","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"shuimeihe"},"content":"    public static final String VALID_NAME_CAT \u003d \"Catto\";","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"    public static final String VALID_TAG_DOG \u003d \"pomeranian\";","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"    public static final String VALID_TAG_CAT \u003d \"siamese\";","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"    public static final String INVALID_OWNER_NAME_DESC \u003d \" \" + PREFIX_OWNER_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"shuimeihe"},"content":"    public static final String INVALID_PET_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Dog\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"shuimeihe"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"shuimeihe"},"content":"    public static final EditCommand.EditPetDescriptor DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"    public static final EditCommand.EditPetDescriptor DESC_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"    public static final String VALID_DEADLINE_AMY1 \u003d \"Vaccination\";","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"    public static final LocalDateTime VALID_DEADLINE_AMY2 \u003d LocalDateTime.now().plusDays(1)","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"            .truncatedTo(ChronoUnit.MINUTES);","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"    public static final String VALID_DEADLINE_BOB1 \u003d \"Feed Bob\";","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"    public static final LocalDateTime VALID_DEADLINE_BOB2 \u003d LocalDateTime.now().plusDays(2)","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"            .truncatedTo(ChronoUnit.MINUTES);","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"    public static final LocalDateTime VALID_TIMESTAMP_AMY \u003d LocalDateTime.now().minusDays(1)","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"            .truncatedTo(ChronoUnit.MINUTES);","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"    public static final LocalDateTime VALID_TIMESTAMP_BOB \u003d LocalDateTime.now().minusDays(2)","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"            .truncatedTo(ChronoUnit.MINUTES);","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_OWNER_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_OWNER_NAME + VALID_NAME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"    public static final String NAME_DESC_DOG \u003d \" \" + PREFIX_NAME + VALID_NAME_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"    public static final String NAME_DESC_CAT \u003d \" \" + PREFIX_NAME + VALID_NAME_CAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"    public static final String TAG_DESC_DOG \u003d \" \" + PREFIX_TAG + VALID_TAG_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"    public static final String TAG_DESC_CAT \u003d \" \" + PREFIX_TAG + VALID_TAG_CAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"    public static final String DEADLINE_DESC_AMY \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_AMY1 + \" - \"","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"            + VALID_DEADLINE_AMY2.format(formatter);","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"    public static final String DEADLINE_DESC_BOB \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_BOB1 + \" - \"","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"            + VALID_DEADLINE_BOB2.format(formatter);","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"    public static final String TIMESTAMP_DESC_AMY \u003d \" \" + PREFIX_TIMESTAMP + VALID_TIMESTAMP_AMY.format(formatter);","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"YuanXun9834"},"content":"    public static final String TIMESTAMP_DESC_BOB \u003d \" \" + PREFIX_TIMESTAMP + VALID_TIMESTAMP_BOB.format(formatter);","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"Daniel-Kur"},"content":"        DESC_AMY \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"shuimeihe"},"content":"                .withTags(VALID_TAG_CAT).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"Daniel-Kur"},"content":"        DESC_BOB \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"                .withTags(VALID_TAG_DOG, VALID_TAG_CAT).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"shuimeihe"},"content":"     * - the PetPal list, filtered pet list and selected pet in {@code actualModel} remain unchanged","lastModifiedDate":"2023-04-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"shuimeihe"},"content":"        PetPal expectedPetPal \u003d new PetPal(actualModel.getPetPal());","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"Daniel-Kur"},"content":"        List\u003cPet\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPetList());","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":136,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(expectedPetPal, actualModel.getPetPal());","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"Daniel-Kur"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPetList());","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"shuimeihe"},"content":"     * {@code model}\u0027s PetPal list.","lastModifiedDate":"2023-04-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"YuanXun9834"},"content":"    public static void showPetAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"Daniel-Kur"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPetList().size());","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"Daniel-Kur"},"content":"        Pet pet \u003d model.getFilteredPetList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"Daniel-Kur"},"content":"        final String[] splitName \u003d pet.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"shuimeihe"},"content":"        model.updateFilteredPetList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2023-04-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"Daniel-Kur"},"content":"        assertEquals(1, model.getFilteredPetList().size());","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Daniel-Kur":11,"wengkit1":1,"shuimeihe":44,"YuanXun9834":8,"-":89}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    private Model model \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        Pet petToDelete \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PET_SUCCESS, petToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPetPal(), model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"        expectedModel.deletePet(petToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"        Pet petToDelete \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PET_SUCCESS, petToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"        Model expectedModel \u003d new ModelManager(model.getPetPal(), model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.deletePet(petToDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"        showNoPet(expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"        // ensures that outOfBoundIndex is still in bounds of PetPal list","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPetPal().getPetList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"YuanXun9834"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"        // different PET -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"YuanXun9834"},"content":"    private void showNoPet(Model model) {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"YuanXun9834"},"content":"        model.updateFilteredPetList(p -\u003e false);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(model.getFilteredPetList().isEmpty());","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Daniel-Kur":4,"shuimeihe":11,"YuanXun9834":24,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"    private Model model \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"        Pet editedPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(editedPet).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        Model expectedModel \u003d new ModelManager(new PetPal(model.getPetPal()),","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"                model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.setPet(model.getFilteredPetList().get(0), editedPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"        Index indexLastPet \u003d Index.fromOneBased(model.getFilteredPetList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"        Pet lastPet \u003d model.getFilteredPetList().get(indexLastPet.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"        PetBuilder petInList \u003d new PetBuilder(lastPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"        Pet editedPet \u003d petInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"                .withTags(VALID_TAG_DOG).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_DOG).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPet, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"        Model expectedModel \u003d new ModelManager(new PetPal(model.getPetPal()),","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"                model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.setPet(lastPet, editedPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET, new EditPetDescriptor());","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"        Pet editedPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"        Model expectedModel \u003d new ModelManager(new PetPal(model.getPetPal()),","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"                model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"YuanXun9834"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"        Pet petInFilteredList \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"        Pet editedPet \u003d new PetBuilder(petInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET,","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"YuanXun9834"},"content":"                new EditPetDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PET_SUCCESS, editedPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"        Model expectedModel \u003d new ModelManager(new PetPal(model.getPetPal()),","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"                new PetPal(model.getPetPalArchive()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.setPet(model.getFilteredPetList().get(0), editedPet);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_duplicatePetUnfilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"YuanXun9834"},"content":"        Pet firstPet \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(firstPet).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"YuanXun9834"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PET, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_duplicatePetFilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"YuanXun9834"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"        // edit Pet in filtered list into a duplicate in PetPal list","lastModifiedDate":"2023-04-02"},{"lineNumber":120,"author":{"gitId":"YuanXun9834"},"content":"        Pet petInList \u003d model.getPetPal().getPetList().get(INDEX_SECOND_PET.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"YuanXun9834"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PET,","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"YuanXun9834"},"content":"                new EditPetDescriptorBuilder(petInList).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_invalidPetIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"YuanXun9834"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPetList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"shuimeihe"},"content":"     * but smaller than size of PetPal list","lastModifiedDate":"2023-04-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_invalidPetIndexFilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"YuanXun9834"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"YuanXun9834"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"shuimeihe"},"content":"        // ensures that outOfBoundIndex is still in bounds of PetPal list","lastModifiedDate":"2023-04-02"},{"lineNumber":145,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPetPal().getPetList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"YuanXun9834"},"content":"                new EditPetDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PET_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"YuanXun9834"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PET, DESC_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor copyDescriptor \u003d new EditPetDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"YuanXun9834"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PET, copyDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PET, DESC_AMY)));","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PET, DESC_BOB)));","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"shuimeihe":17,"YuanXun9834":57,"-":104}},{"path":"src/test/java/seedu/address/logic/commands/EditPetDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"public class EditPetDescriptorTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptorWithSameValues \u003d new EditPetDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"        editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"        editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"        editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"shuimeihe"},"content":"        editedAmy \u003d new EditPetDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_DOG).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"shuimeihe":2,"YuanXun9834":8,"-":48}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PETS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.GRIZZLY;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.PENGY;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.SHARKY;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    private Model model \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"Daniel-Kur"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PETS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPetList());","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"    public void execute_multipleKeywords_multiplePetsFound() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Daniel-Kur"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PETS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Pengy Sharky Grizzly\");","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(Arrays.asList(PENGY, SHARKY, GRIZZLY), model.getFilteredPetList());","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Daniel-Kur":3,"wengkit1":1,"shuimeihe":6,"YuanXun9834":6,"-":67}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPetAtIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"        model \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"        expectedModel \u003d new ModelManager(model.getPetPal(), model.getPetPalArchive(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"        showPetAtIndex(model, INDEX_FIRST_PET);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Daniel-Kur":1,"shuimeihe":2,"YuanXun9834":3,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/RemindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.DeadlineWithinThreeDaysPredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":" * Contains integration tests (interaction with the Model) for {@code RemindCommand}.","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"public class RemindCommandTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"    private Model model \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    public void equals() {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"        DeadlineWithinThreeDaysPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"                new DeadlineWithinThreeDaysPredicate();","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"        DeadlineWithinThreeDaysPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"                new DeadlineWithinThreeDaysPredicate();","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        RemindCommand remindFirstCommand \u003d new RemindCommand(firstPredicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"        RemindCommand remindSecondCommand \u003d new RemindCommand(secondPredicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(remindFirstCommand.equals(remindFirstCommand));","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"        RemindCommand remindFirstCommandCopy \u003d new RemindCommand(firstPredicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(remindFirstCommand.equals(remindFirstCommandCopy));","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(remindFirstCommand.equals(1));","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(remindFirstCommand.equals(null));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(remindFirstCommand.equals(remindSecondCommand));","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"    public void execute() {","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"        String expectedMessage \u003d String.format(\"Here are all the upcoming reminders!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"        DeadlineWithinThreeDaysPredicate predicate \u003d new DeadlineWithinThreeDaysPredicate();","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"        RemindCommand command \u003d new RemindCommand(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"        expectedModel.updateFilteredPetList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"YuanXun9834":60}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wengkit1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"wengkit1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"wengkit1"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"wengkit1"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPet;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"wengkit1"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"wengkit1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"wengkit1"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"wengkit1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"    public void undo_addCommand_success() {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"wengkit1"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"wengkit1"},"content":"        model.addPet(getTypicalPet().get(1));","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"wengkit1"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"wengkit1"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"wengkit1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"wengkit1"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"wengkit1"},"content":"    public void undo_deleteCommand_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"wengkit1"},"content":"        Model model \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"wengkit1"},"content":"        Pet petToDelete \u003d model.getFilteredPetList().get(INDEX_FIRST_PET.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"wengkit1"},"content":"        model.deletePet(petToDelete);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"wengkit1"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPetPal(), getTypicalPetPal(), new UserPrefs());","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"wengkit1"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"wengkit1"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"wengkit1"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"wengkit1":37,"YuanXun9834":1}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_OWNER_NAME_DESC;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PET_NAME_DESC;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CAT;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DOG;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CAT;","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DOG;","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESTAMP_DESC_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESTAMP_DESC_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CAT;","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DOG;","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.EXAMPLE_CAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.EXAMPLE_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        Pet expectedPet \u003d new PetBuilder(EXAMPLE_DOG).withTags(VALID_TAG_DOG).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"                + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_DOG + DEADLINE_DESC_BOB + TIMESTAMP_DESC_BOB,","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"                new AddCommand(expectedPet));","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"shuimeihe"},"content":"                + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_DOG + DEADLINE_DESC_BOB + TIMESTAMP_DESC_BOB,","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"                new AddCommand(expectedPet));","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"                + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_DOG + DEADLINE_DESC_BOB + TIMESTAMP_DESC_BOB,","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"                new AddCommand(expectedPet));","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_DOG + DEADLINE_DESC_BOB + TIMESTAMP_DESC_BOB,","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"                new AddCommand(expectedPet));","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_DOG + DEADLINE_DESC_BOB + TIMESTAMP_DESC_BOB,","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"                new AddCommand(expectedPet));","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"        Pet expectedPetMultipleTags \u003d new PetBuilder(EXAMPLE_DOG)","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"                .withTags(VALID_TAG_DOG, VALID_TAG_CAT)","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TIMESTAMP_DESC_BOB + DEADLINE_DESC_BOB","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"                + TAG_DESC_CAT + TAG_DESC_DOG, new AddCommand(expectedPetMultipleTags));","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"        Pet expectedPet \u003d new PetBuilder(EXAMPLE_CAT).withTags().build();","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_CAT","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"YuanXun9834"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TIMESTAMP_DESC_AMY + DEADLINE_DESC_AMY,","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"                new AddCommand(expectedPet));","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"shuimeihe"},"content":"        // invalid owner name","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, INVALID_OWNER_NAME_DESC + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TIMESTAMP_DESC_BOB","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"                + TAG_DESC_CAT + TAG_DESC_DOG, OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"shuimeihe"},"content":"        // invalid pet name","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PET_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TIMESTAMP_DESC_BOB","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"shuimeihe"},"content":"                + TAG_DESC_CAT + TAG_DESC_DOG, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NAME_DESC_DOG + INVALID_PHONE_DESC","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TIMESTAMP_DESC_BOB","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"shuimeihe"},"content":"                + TAG_DESC_CAT + TAG_DESC_DOG, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"shuimeihe"},"content":"                + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + TIMESTAMP_DESC_BOB","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"shuimeihe"},"content":"                + TAG_DESC_CAT + TAG_DESC_DOG, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + TIMESTAMP_DESC_BOB","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"shuimeihe"},"content":"                + TAG_DESC_CAT + TAG_DESC_DOG, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TIMESTAMP_DESC_BOB","lastModifiedDate":"2023-04-04"},{"lineNumber":162,"author":{"gitId":"shuimeihe"},"content":"                + INVALID_TAG_DESC + VALID_TAG_CAT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, INVALID_OWNER_NAME_DESC + NAME_DESC_DOG + PHONE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"shuimeihe"},"content":"                        + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + TIMESTAMP_DESC_BOB, OwnerName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + NAME_DESC_DOG","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"shuimeihe"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-04-04"},{"lineNumber":171,"author":{"gitId":"shuimeihe"},"content":"                        + TIMESTAMP_DESC_BOB + TAG_DESC_CAT + TAG_DESC_DOG,","lastModifiedDate":"2023-04-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wengkit1":4,"shuimeihe":71,"YuanXun9834":3,"-":96}},{"path":"src/test/java/seedu/address/logic/parser/ArchiveCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shuimeihe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"/**","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":" * outside the ArchiveCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":" * same path through the ArchiveCommand, and therefore we test only one of them.","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":" */","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"public class ArchiveCommandParserTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"shuimeihe"},"content":"    private ArchiveCommandParser parser \u003d new ArchiveCommandParser();","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"shuimeihe"},"content":"    public void parse_validArgs_returnsArchiveCommand() {","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"shuimeihe"},"content":"        assertParseSuccess(parser, \"1\", new ArchiveCommand(INDEX_FIRST_PET));","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, \"aaaaa\",","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ArchiveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"shuimeihe"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"shuimeihe":32}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PET));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"YuanXun9834":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_OWNER_NAME_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, \"1\" + INVALID_OWNER_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Pet} being edited,","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_DOG + TAG_DESC_CAT + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_DOG + TAG_EMPTY + TAG_DESC_CAT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_DOG + TAG_DESC_CAT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"        assertParseFailure(parser, \"1\" + INVALID_OWNER_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"shuimeihe"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"YuanXun9834"},"content":"        Index targetIndex \u003d INDEX_SECOND_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_CAT","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"shuimeihe"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"                .withTags(VALID_TAG_DOG, VALID_TAG_CAT).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"YuanXun9834"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"YuanXun9834"},"content":"        Index targetIndex \u003d INDEX_THIRD_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"YuanXun9834"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"YuanXun9834"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"YuanXun9834"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"shuimeihe"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"shuimeihe"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withTags(VALID_TAG_CAT).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"YuanXun9834"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"shuimeihe"},"content":"                + TAG_DESC_DOG + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_DOG","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"shuimeihe"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_CAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"shuimeihe"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_CAT, VALID_TAG_DOG)","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"YuanXun9834"},"content":"        Index targetIndex \u003d INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"YuanXun9834"},"content":"        descriptor \u003d new EditPetDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"YuanXun9834"},"content":"        Index targetIndex \u003d INDEX_THIRD_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"wengkit1":4,"shuimeihe":19,"YuanXun9834":22,"-":167}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"wengkit1":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(INDEX_FIRST_PET, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(INDEX_FIRST_PET, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"wengkit1":4,"YuanXun9834":3,"-":189}},{"path":"src/test/java/seedu/address/logic/parser/PetPalParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PET;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.EditPetDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"public class PetPalParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"    private final PetPalParser parser \u003d new PetPalParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        Pet pet \u003d new PetBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PetUtil.getAddCommand(pet));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(new AddCommand(pet), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"    public void parseCommand_archive() throws Exception {","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"shuimeihe"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"                ArchiveCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PET.getOneBased()) instanceof ArchiveCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PET.getOneBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PET), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"        Pet pet \u003d new PetBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"        EditPetDescriptor descriptor \u003d new EditPetDescriptorBuilder(pet).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"                + INDEX_FIRST_PET.getOneBased() + \" \" + PetUtil.getEditPetDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PET, descriptor), command);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wengkit1":1,"shuimeihe":5,"YuanXun9834":17,"-":85}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PETS;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.WHISKERS;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.WOOFERS;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetPalBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(new PetPal(), new PetPal(modelManager.getPetPal()));","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"        userPrefs.setPetPalFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"        userPrefs.setPetPalFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"    public void setPetPalFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPetPalFilePath(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"    public void setPetPalFilePath_validPath_setsPetPalFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"        modelManager.setPetPalFilePath(path);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(path, modelManager.getPetPalFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"    public void hasPet_nullPet_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPet(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"    public void hasPet_petNotInPetPal_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(modelManager.hasPet(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"YuanXun9834"},"content":"    public void hasPet_petInPetPal_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"        modelManager.addPet(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(modelManager.hasPet(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"    public void getFilteredPetList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPetList().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"YuanXun9834"},"content":"        PetPal petPal \u003d new PetPalBuilder().withPet(WHISKERS).withPet(WOOFERS).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"        PetPal archivePetPal \u003d new PetPal();","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"YuanXun9834"},"content":"        PetPal differentPetPal \u003d new PetPal();","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"shuimeihe"},"content":"        modelManager \u003d new ModelManager(petPal, archivePetPal, userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"shuimeihe"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(petPal, archivePetPal, userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"shuimeihe"},"content":"        assertNotNull(modelManager);","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"YuanXun9834"},"content":"        // different PetPal -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(modelManager, new ModelManager(differentPetPal, archivePetPal, userPrefs));","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"YuanXun9834"},"content":"        String[] keywords \u003d WHISKERS.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"YuanXun9834"},"content":"        modelManager.updateFilteredPetList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(modelManager, new ModelManager(petPal, archivePetPal, userPrefs));","lastModifiedDate":"2023-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"        modelManager.updateFilteredPetList(PREDICATE_SHOW_ALL_PETS);","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"YuanXun9834"},"content":"        differentUserPrefs.setPetPalFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"shuimeihe"},"content":"        assertNotEquals(modelManager, new ModelManager(petPal, archivePetPal, differentUserPrefs));","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"shuimeihe":14,"YuanXun9834":27,"-":94}},{"path":"src/test/java/seedu/address/model/PetPalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalPets.WHISKERS;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"wengkit1"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.exceptions.DuplicatePetException;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"public class PetPalTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"wengkit1"},"content":"    private final PetPal petPal \u003d new PetPal();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"wengkit1"},"content":"        assertEquals(Collections.emptyList(), petPal.getPetList());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"wengkit1"},"content":"        assertThrows(NullPointerException.class, () -\u003e petPal.resetData(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"    public void resetData_withValidReadOnlyPetPal_replacesData() {","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"wengkit1"},"content":"        PetPal newData \u003d getTypicalPetPal();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"wengkit1"},"content":"        petPal.resetData(newData);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"wengkit1"},"content":"        assertEquals(newData, petPal);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"    public void resetData_withDuplicatePets_throwsDuplicatePetException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"        // Two Pets with the same identity fields","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"        Pet editedWhiskers \u003d new PetBuilder(WHISKERS).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_DOG)","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"        List\u003cPet\u003e newPets \u003d Arrays.asList(WHISKERS, editedWhiskers);","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"wengkit1"},"content":"        PetPalStub newData \u003d new PetPalStub(newPets);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"wengkit1"},"content":"        assertThrows(DuplicatePetException.class, () -\u003e petPal.resetData(newData));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"    public void hasPet_nullPet_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"wengkit1"},"content":"        assertThrows(NullPointerException.class, () -\u003e petPal.hasPet(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"    public void hasPet_petNotInPetPal_returnsFalse() {","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(petPal.hasPet(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"    public void hasPet_petInPetPal_returnsTrue() {","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"        petPal.addPet(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(petPal.hasPet(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"    public void hasPet_petWithSameIdentityFieldsInPetPal_returnsTrue() {","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"        petPal.addPet(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"        Pet editedWhiskers \u003d new PetBuilder(WHISKERS).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_DOG)","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"        assertTrue(petPal.hasPet(editedWhiskers));","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"YuanXun9834"},"content":"    public void getPetList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"wengkit1"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e petPal.getPetList().remove(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"shuimeihe"},"content":"     * A stub ReadOnlyPetPal whose Pets list can violate interface constraints.","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"wengkit1"},"content":"    private static class PetPalStub implements ReadOnlyPetPal {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"YuanXun9834"},"content":"        private final ObservableList\u003cPet\u003e pets \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"        PetPalStub(Collection\u003cPet\u003e pets) {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"            this.pets.setAll(pets);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"wengkit1"},"content":"        public ObservableList\u003cPet\u003e getPetList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"            return pets;","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"wengkit1":13,"shuimeihe":10,"YuanXun9834":17,"-":62}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"wengkit1"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPetPalFilePath(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"wengkit1":1,"-":20}},{"path":"src/test/java/seedu/address/model/pet/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"YuanXun9834":1,"-":35}},{"path":"src/test/java/seedu/address/model/pet/CostTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"public class CostTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Cost(null));","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    public void constructor_invalidTimeStamp_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"        LocalDateTime invalidTimeStamp \u003d LocalDateTime.parse(\"2024-01-01T00:00:00\");","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Cost(invalidTimeStamp));","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"YuanXun9834":22}},{"path":"src/test/java/seedu/address/model/pet/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"YuanXun9834":1,"-":67}},{"path":"src/test/java/seedu/address/model/pet/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"wengkit1"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"wengkit1"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"wengkit1"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"wengkit1"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"wengkit1"},"content":"        assertTrue(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"wengkit1"},"content":"        assertFalse(predicate.test(new PetBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"wengkit1"},"content":"        assertFalse(predicate.test(new PetBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"wengkit1"},"content":"        assertFalse(predicate.test(new PetBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wengkit1":8,"YuanXun9834":1,"-":66}},{"path":"src/test/java/seedu/address/model/pet/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"YuanXun9834":1,"-":39}},{"path":"src/test/java/seedu/address/model/pet/OwnerNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"public class OwnerNameTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e new OwnerName(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"        String invalidOwnerName \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new OwnerName(invalidOwnerName));","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"    public void isValidName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"        // null name","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e OwnerName.isValidName(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"        // invalid name","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(OwnerName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(OwnerName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(OwnerName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(OwnerName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        // valid name","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(OwnerName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(OwnerName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(OwnerName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(OwnerName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(OwnerName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"YuanXun9834":40}},{"path":"src/test/java/seedu/address/model/pet/PetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.EXAMPLE_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.WHISKERS;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"public class PetTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"        Pet pet \u003d new PetBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e pet.getTags().remove(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    public void isSamePet() {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(WHISKERS.isSamePet(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(WHISKERS.isSamePet(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"        Pet editedWhiskers \u003d new PetBuilder(WHISKERS).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_DOG).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"        assertTrue(WHISKERS.isSamePet(editedWhiskers));","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"        editedWhiskers \u003d new PetBuilder(WHISKERS).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"shuimeihe"},"content":"        assertFalse(WHISKERS.isSamePet(editedWhiskers));","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"        Pet editedBob \u003d new PetBuilder(EXAMPLE_DOG).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        assertFalse(EXAMPLE_DOG.isSamePet(editedBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"        editedBob \u003d new PetBuilder(EXAMPLE_DOG).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"        assertFalse(EXAMPLE_DOG.isSamePet(editedBob));","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"        Pet whiskersCopy \u003d new PetBuilder(WHISKERS).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"        assertTrue(WHISKERS.equals(whiskersCopy));","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(WHISKERS.equals(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(WHISKERS.equals(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(WHISKERS.equals(5));","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"        // different Pet -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(WHISKERS.equals(EXAMPLE_DOG));","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"        Pet editedWhiskers \u003d new PetBuilder(WHISKERS).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"        assertFalse(WHISKERS.equals(editedWhiskers));","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"shuimeihe"},"content":"        editedWhiskers \u003d new PetBuilder(WHISKERS).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"        assertFalse(WHISKERS.equals(editedWhiskers));","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"        editedWhiskers \u003d new PetBuilder(WHISKERS).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"shuimeihe"},"content":"        assertFalse(WHISKERS.equals(editedWhiskers));","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"        editedWhiskers \u003d new PetBuilder(WHISKERS).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"        assertFalse(WHISKERS.equals(editedWhiskers));","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"        editedWhiskers \u003d new PetBuilder(WHISKERS).withTags(VALID_TAG_DOG).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"        assertFalse(WHISKERS.equals(editedWhiskers));","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"shuimeihe":24,"YuanXun9834":13,"-":54}},{"path":"src/test/java/seedu/address/model/pet/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"YuanXun9834":1,"-":39}},{"path":"src/test/java/seedu/address/model/pet/UniquePetListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.model.pet;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.EXAMPLE_DOG;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.WHISKERS;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.exceptions.DuplicatePetException;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.exceptions.PetNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.PetBuilder;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"public class UniquePetListTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    private final UniquePetList uniquePetList \u003d new UniquePetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    public void contains_nullPet_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.contains(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    public void contains_petNotInList_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(uniquePetList.contains(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"    public void contains_petInList_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        assertTrue(uniquePetList.contains(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"    public void contains_petWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"shuimeihe"},"content":"        Pet editedWhiskers \u003d new PetBuilder(WHISKERS).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_DOG)","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"                .build();","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"shuimeihe"},"content":"        assertTrue(uniquePetList.contains(editedWhiskers));","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"    public void add_nullPet_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.add(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"    public void add_duplicatePet_throwsDuplicatePetException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(DuplicatePetException.class, () -\u003e uniquePetList.add(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"    public void setPet_nullTargetPet_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPet(null, WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"    public void setPet_nullEditedPet_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPet(WHISKERS, null));","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"    public void setPet_targetPetNotInList_throwsPetNotFoundException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(PetNotFoundException.class, () -\u003e uniquePetList.setPet(WHISKERS, WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"    public void setPet_editedPetIsSamePet_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.setPet(WHISKERS, WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"YuanXun9834"},"content":"        expectedUniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"YuanXun9834"},"content":"    public void setPet_editedPetHasSameIdentity_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"        Pet editedWhiskers \u003d new PetBuilder(WHISKERS).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_DOG)","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"                .build();","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"        uniquePetList.setPet(WHISKERS, editedWhiskers);","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"        expectedUniquePetList.add(editedWhiskers);","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"    public void setPet_editedPetHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.setPet(WHISKERS, EXAMPLE_DOG);","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"YuanXun9834"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"shuimeihe"},"content":"        expectedUniquePetList.add(EXAMPLE_DOG);","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"YuanXun9834"},"content":"    public void setPet_editedPetHasNonUniqueIdentity_throwsDuplicatePetException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"shuimeihe"},"content":"        uniquePetList.add(EXAMPLE_DOG);","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(DuplicatePetException.class, () -\u003e uniquePetList.setPet(WHISKERS, EXAMPLE_DOG));","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"YuanXun9834"},"content":"    public void remove_nullPet_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.remove(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"YuanXun9834"},"content":"    public void remove_petDoesNotExist_throwsPetNotFoundException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(PetNotFoundException.class, () -\u003e uniquePetList.remove(WHISKERS));","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"YuanXun9834"},"content":"    public void remove_existingPet_removesPet() {","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.remove(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"YuanXun9834"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"YuanXun9834"},"content":"    public void setPets_nullUniquePetList_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPets((UniquePetList) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"YuanXun9834"},"content":"    public void setPets_uniquePetList_replacesOwnListWithProvidedUniquePetList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"YuanXun9834"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"shuimeihe"},"content":"        expectedUniquePetList.add(EXAMPLE_DOG);","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.setPets(expectedUniquePetList);","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"YuanXun9834"},"content":"    public void setPets_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePetList.setPets((List\u003cPet\u003e) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"YuanXun9834"},"content":"    public void setPets_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.add(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"shuimeihe"},"content":"        List\u003cPet\u003e petList \u003d Collections.singletonList(EXAMPLE_DOG);","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"YuanXun9834"},"content":"        uniquePetList.setPets(petList);","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"YuanXun9834"},"content":"        UniquePetList expectedUniquePetList \u003d new UniquePetList();","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"shuimeihe"},"content":"        expectedUniquePetList.add(EXAMPLE_DOG);","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(expectedUniquePetList, uniquePetList);","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"YuanXun9834"},"content":"    public void setPets_listWithDuplicatePets_throwsDuplicatePetException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"YuanXun9834"},"content":"        List\u003cPet\u003e listWithDuplicatePets \u003d Arrays.asList(WHISKERS, WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":162,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(DuplicatePetException.class, () -\u003e uniquePetList.setPets(listWithDuplicatePets));","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"YuanXun9834"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"YuanXun9834"},"content":"            -\u003e uniquePetList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"shuimeihe":13,"YuanXun9834":157}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.storage.JsonAdaptedPet.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalPets.WOOFERS;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"public class JsonAdaptedPetTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    private static final String INVALID_OWNER_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    private static final String VALID_OWNER_NAME \u003d WOOFERS.getOwnerName().toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    private static final String VALID_NAME \u003d WOOFERS.getName().toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"    private static final String VALID_PHONE \u003d WOOFERS.getPhone().toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    private static final String VALID_EMAIL \u003d WOOFERS.getEmail().toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    private static final String VALID_ADDRESS \u003d WOOFERS.getAddress().toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    private static final String VALID_TIMESTAMP \u003d WOOFERS.getTimeStamp().toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"    private static final String VALID_DEADLINE \u003d WOOFERS.getDeadline().toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d WOOFERS.getTags().stream()","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"    private static final String VALID_MARK \u003d \"Unmarked\";","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"    public void toModelType_validPetDetails_returnsPet() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(WOOFERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(WOOFERS, pet.toModelType());","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"                new JsonAdaptedPet(VALID_OWNER_NAME, INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"                        VALID_ADDRESS, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, VALID_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"    public void toModelType_invalidOwnerName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"shuimeihe"},"content":"                new JsonAdaptedPet(INVALID_OWNER_NAME, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"                        VALID_ADDRESS, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, VALID_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"        String expectedMessage \u003d OwnerName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_OWNER_NAME, null, VALID_PHONE,","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, VALID_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"                new JsonAdaptedPet(VALID_OWNER_NAME, VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, VALID_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_OWNER_NAME, VALID_NAME, null,","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, VALID_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"                new JsonAdaptedPet(VALID_OWNER_NAME, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"                        INVALID_EMAIL, VALID_ADDRESS, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, VALID_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_OWNER_NAME, VALID_NAME,","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"shuimeihe"},"content":"                VALID_PHONE, null, VALID_ADDRESS, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, VALID_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"YuanXun9834"},"content":"                new JsonAdaptedPet(VALID_OWNER_NAME, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"                        VALID_EMAIL, INVALID_ADDRESS, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, VALID_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d new JsonAdaptedPet(VALID_OWNER_NAME, VALID_NAME,","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"                VALID_PHONE, VALID_EMAIL, null, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, VALID_TAGS);","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"        JsonAdaptedPet pet \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"shuimeihe"},"content":"                new JsonAdaptedPet(VALID_OWNER_NAME, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"shuimeihe"},"content":"                        VALID_ADDRESS, VALID_TIMESTAMP, VALID_DEADLINE, VALID_MARK, invalidTags);","lastModifiedDate":"2023-03-31"},{"lineNumber":131,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, pet::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"shuimeihe":14,"YuanXun9834":48,"-":72}},{"path":"src/test/java/seedu/address/storage/JsonPetPalStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalPets.HOON;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalPets.IDA;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.WHISKERS;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalArchive;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"public class JsonPetPalStorageTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonPetPalStorageTest\");","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    @TempDir","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    public void readPetPal_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPetPal(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"    private java.util.Optional\u003cReadOnlyPetPal\u003e readPetPal(String filePath) throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"shuimeihe"},"content":"        Path fP \u003d Paths.get(filePath);","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"        return new JsonPetPalStorage(fP, fP)","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"shuimeihe"},"content":"                .readPetPal(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"                : null;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"        assertFalse(readPetPal(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPetPal(\"notJsonFormatPetPal.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"    public void readPetPal_invalidPersonPetPal_throwDataConversionException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPetPal(\"invalidPetPetPal.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"    public void readPetPal_invalidAndValidPersonPetPal_throwDataConversionException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPetPal(\"invalidAndValidPetPetPal.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"    public void readAndSavePetPal_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"wengkit1"},"content":"        Path filePath \u003d TEST_DATA_FOLDER.resolve(\"TempPetPal.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"        Path archiveFilePath \u003d TEST_DATA_FOLDER.resolve(\"TempArchive.json\");","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"        PetPal original \u003d getTypicalPetPal();","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"        PetPal ogArchive \u003d getTypicalArchive();","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"shuimeihe"},"content":"        JsonPetPalStorage jsonPetPalStorage \u003d new JsonPetPalStorage(filePath, archiveFilePath);","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"        jsonPetPalStorage.savePetPal(original, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"        jsonPetPalStorage.savePetPalArchive(ogArchive, archiveFilePath);","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"wengkit1"},"content":"        Path fP \u003d Paths.get(\"src/test/data/JsonPetPalStorageTest/TempPetPal.json\");","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"YuanXun9834"},"content":"        ReadOnlyPetPal readBack \u003d jsonPetPalStorage.readPetPal(filePath).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"shuimeihe"},"content":"        ReadOnlyPetPal readArchive \u003d jsonPetPalStorage.readPetPalArchive(filePath).get();","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"wengkit1"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(original, new PetPal(readBack));","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"shuimeihe"},"content":"        assertEquals(ogArchive, new PetPal(readArchive));","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"YuanXun9834"},"content":"        original.addPet(HOON);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"YuanXun9834"},"content":"        original.removePet(WHISKERS);","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"YuanXun9834"},"content":"        jsonPetPalStorage.savePetPal(original, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"        readBack \u003d jsonPetPalStorage.readPetPal(filePath).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(original, new PetPal(readBack));","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"YuanXun9834"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"YuanXun9834"},"content":"        original.addPet(IDA);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"YuanXun9834"},"content":"        jsonPetPalStorage.savePetPal(original); // file path not specified","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"        readBack \u003d jsonPetPalStorage.readPetPal().get(); // file path not specified","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(original, new PetPal(readBack));","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"YuanXun9834"},"content":"    public void savePetPal_nullPetPal_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePetPal(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"YuanXun9834"},"content":"     * Saves {@code PetPal} at the specified {@code filePath}.","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"YuanXun9834"},"content":"    private void savePetPal(ReadOnlyPetPal petPal, String filePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"YuanXun9834"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"            new JsonPetPalStorage(Paths.get(filePath), Paths.get(filePath))","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"YuanXun9834"},"content":"                    .savePetPal(petPal, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"YuanXun9834"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"YuanXun9834"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"YuanXun9834"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"YuanXun9834"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"YuanXun9834"},"content":"    public void savePetPal_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePetPal(new PetPal(), null));","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"wengkit1":3,"shuimeihe":15,"YuanXun9834":105}},{"path":"src/test/java/seedu/address/storage/JsonSerializablePetPalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.testutil.TypicalPets;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"public class JsonSerializablePetPalTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializablePetPalTest\");","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    private static final Path TYPICAL_PET_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPetPetPal.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"    private static final Path INVALID_PET_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPetPetPal.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"    private static final Path DUPLICATE_PET_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePetPetPal.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    public void toModelType_typicalPetFile_success() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"        JsonSerializablePetPal dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PET_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"                JsonSerializablePetPal.class).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"        PetPal petPalFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"        PetPal typicalPetPetPal \u003d TypicalPets.getTypicalPetPal();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"        assertEquals(petPalFromFile, typicalPetPetPal);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"        JsonSerializablePetPal dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PET_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"                JsonSerializablePetPal.class).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    public void toModelType_duplicatePet_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        JsonSerializablePetPal dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PET_FILE,","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"                JsonSerializablePetPal.class).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePetPal.MESSAGE_DUPLICATE_PET,","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"YuanXun9834":19,"-":28}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"wengkit1"},"content":"        userPrefs.setPetPalFilePath(Paths.get(\"data/petpal.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"wengkit1":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wengkit1"},"content":"import static seedu.address.testutil.TypicalPets.getTypicalPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"wengkit1"},"content":"import seedu.address.model.ReadOnlyPetPal;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"        JsonPetPalStorage petPalStorage \u003d new JsonPetPalStorage(getTempFilePath(\"ab\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"                getTempFilePath(\"cd\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"        storageManager \u003d new StorageManager(petPalStorage, userPrefsStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"    public void petPalReadSave() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"         * {@link JsonPetPalStorage} class.","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPetPalStorageTest} class.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"wengkit1"},"content":"        PetPal original \u003d getTypicalPetPal();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"wengkit1"},"content":"        storageManager.savePetPal(original);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"wengkit1"},"content":"        ReadOnlyPetPal retrieved \u003d storageManager.readPetPal().get();","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"wengkit1"},"content":"        assertEquals(original, new PetPal(retrieved));","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"    public void getPetPalFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"wengkit1"},"content":"        assertNotNull(storageManager.getPetPalFilePath());","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wengkit1":8,"shuimeihe":2,"YuanXun9834":5,"-":54}},{"path":"src/test/java/seedu/address/testutil/EditPetDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":" * A utility class to help with building EditPetDescriptor objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"public class EditPetDescriptorBuilder {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"    private EditPetDescriptor descriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    public EditPetDescriptorBuilder() {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"        descriptor \u003d new EditPetDescriptor();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    public EditPetDescriptorBuilder(EditPetDescriptor descriptor) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"        this.descriptor \u003d new EditPetDescriptor(descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"     * Returns an {@code EditPetDescriptor} with fields containing {@code pet}\u0027s details","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    public EditPetDescriptorBuilder(Pet pet) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"        descriptor \u003d new EditPetDescriptor();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setName(pet.getName());","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setPhone(pet.getPhone());","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setEmail(pet.getEmail());","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setAddress(pet.getAddress());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setTags(pet.getTags());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"     * Sets the {@code Name} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    public EditPetDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"     * Sets the {@code Phone} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"    public EditPetDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"     * Sets the {@code Email} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"    public EditPetDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"YuanXun9834"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"     * Sets the {@code Address} of the {@code EditPetDescriptor} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"    public EditPetDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPetDescriptor}","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"     * that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"YuanXun9834"},"content":"    public EditPetDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"YuanXun9834"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"YuanXun9834"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"YuanXun9834"},"content":"    public EditPetDescriptor build() {","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"YuanXun9834"},"content":"        return descriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"YuanXun9834":87}},{"path":"src/test/java/seedu/address/testutil/PetBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.OwnerName;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"import seedu.address.model.pet.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":" * A utility class to help with building Pet objects.","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"public class PetBuilder {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"    public static final String DEFAULT_OWNER_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee Woof\";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    public static final LocalDateTime DEFAULT_TIMESTAMP \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"shuimeihe"},"content":"    public static final Deadline DEFAULT_DEADLINE \u003d new Deadline(\"Feed medicine\",","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"shuimeihe"},"content":"            LocalDateTime.now().plusDays(1));","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"shuimeihe"},"content":"    public static final boolean DEFAULT_MARK_STATE \u003d false;","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    private OwnerName ownerName;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"    private LocalDateTime timestamp;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"    private Deadline deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"     * Creates a {@code PetBuilder} with the default details.","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"    public PetBuilder() {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"        ownerName \u003d new OwnerName(DEFAULT_OWNER_NAME);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"YuanXun9834"},"content":"        timestamp \u003d DEFAULT_TIMESTAMP;","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"        deadline \u003d DEFAULT_DEADLINE;","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"shuimeihe"},"content":"        isMarked \u003d DEFAULT_MARK_STATE;","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"     * Initializes the PetBuilder with the data of {@code petToCopy}.","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"shuimeihe"},"content":"    public PetBuilder(Pet petToCopy) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"shuimeihe"},"content":"        ownerName \u003d petToCopy.getOwnerName();","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"shuimeihe"},"content":"        name \u003d petToCopy.getName();","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"        phone \u003d petToCopy.getPhone();","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"        email \u003d petToCopy.getEmail();","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"        address \u003d petToCopy.getAddress();","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"        timestamp \u003d petToCopy.getTimeStamp();","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"        deadline \u003d petToCopy.getDeadline();","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"shuimeihe"},"content":"        isMarked \u003d petToCopy.getIsMarked();","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"shuimeihe"},"content":"        tags \u003d new HashSet\u003c\u003e(petToCopy.getTags());","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"     * Sets the {@code Name} of the {@code Pet} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"    public PetBuilder withOwnerName(String ownerName) {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"        this.ownerName \u003d new OwnerName(ownerName);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"shuimeihe"},"content":"     * Sets the {@code Name} of the {@code Pet} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"YuanXun9834"},"content":"    public PetBuilder withName(String name) {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Pet} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"YuanXun9834"},"content":"    public PetBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"     * Sets the {@code Address} of the {@code Pet} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"YuanXun9834"},"content":"    public PetBuilder withAddress(String address) {","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"shuimeihe"},"content":"     * Sets the {@code Phone} of the {@code Pet} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"YuanXun9834"},"content":"    public PetBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"shuimeihe"},"content":"     * Sets the {@code Email} of the {@code Pet} that we are building.","lastModifiedDate":"2023-04-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"YuanXun9834"},"content":"    public PetBuilder withEmail(String email) {","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"YuanXun9834"},"content":"     * Sets the {@code Timestamp} of the {@code Pet} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"YuanXun9834"},"content":"    public PetBuilder withTimestamp(LocalDateTime t) {","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"YuanXun9834"},"content":"        this.timestamp \u003d t;","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"YuanXun9834"},"content":"        return this;","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"YuanXun9834"},"content":"     * Sets the {@code Deadline} of the {@code Pet} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"YuanXun9834"},"content":"    public PetBuilder withDeadline(String d, LocalDateTime t) {","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"YuanXun9834"},"content":"        this.deadline \u003d new Deadline(d, t);","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"YuanXun9834"},"content":"        return this;","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"shuimeihe"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"shuimeihe"},"content":"     * Sets the {@code isMarked} of the {@code Pet} that we are building","lastModifiedDate":"2023-04-05"},{"lineNumber":138,"author":{"gitId":"shuimeihe"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":139,"author":{"gitId":"shuimeihe"},"content":"    public PetBuilder withMarked(String marked) {","lastModifiedDate":"2023-04-05"},{"lineNumber":140,"author":{"gitId":"shuimeihe"},"content":"        this.isMarked \u003d marked.equals(\"Marked\");","lastModifiedDate":"2023-04-05"},{"lineNumber":141,"author":{"gitId":"shuimeihe"},"content":"        return this;","lastModifiedDate":"2023-04-05"},{"lineNumber":142,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":143,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"YuanXun9834"},"content":"    public Pet build() {","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"YuanXun9834"},"content":"        return new Pet(ownerName, name, phone, email, address, timestamp, deadline, tags);","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"shuimeihe":37,"YuanXun9834":44,"-":67}},{"path":"src/test/java/seedu/address/testutil/PetPalBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuanXun9834"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"YuanXun9834"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"YuanXun9834"},"content":" * A utility class to help with building PetPal objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"YuanXun9834"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":" *     {@code PetPal ab \u003d new PetPalBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"public class PetPalBuilder {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"    private PetPal petPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"YuanXun9834"},"content":"    public PetPalBuilder() {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"YuanXun9834"},"content":"        petPal \u003d new PetPal();","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"YuanXun9834"},"content":"    public PetPalBuilder(PetPal petPal) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"        this.petPal \u003d petPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"YuanXun9834"},"content":"     * Adds a new {@code Person} to the {@code PetPal} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"    public PetPalBuilder withPet(Pet pet) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"YuanXun9834"},"content":"        petPal.addPet(pet);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"YuanXun9834"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"    public PetPal build() {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"        return petPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"YuanXun9834":36}},{"path":"src/test/java/seedu/address/testutil/PetUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.logic.commands.EditCommand.EditPetDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"YuanXun9834"},"content":" * A utility class for Pet.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"public class PetUtil {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"YuanXun9834"},"content":"     * Returns an add command string for adding the {@code pet}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"    public static String getAddCommand(Pet pet) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPetDetails(pet);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"YuanXun9834"},"content":"     * Returns the part of command string for the given {@code pet}\u0027s details.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"YuanXun9834"},"content":"    public static String getPetDetails(Pet pet) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"        sb.append(PREFIX_NAME + pet.getOwnerName().fullName + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"YuanXun9834"},"content":"        sb.append(PREFIX_NAME + pet.getName().fullName + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"        sb.append(PREFIX_PHONE + pet.getPhone().value + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"        sb.append(PREFIX_EMAIL + pet.getEmail().value + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"        sb.append(PREFIX_ADDRESS + pet.getAddress().value + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"shuimeihe"},"content":"        sb.append(PREFIX_TIMESTAMP + pet.getTimeStamp().toString() + \" \");","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"YuanXun9834"},"content":"        pet.getTags().stream().forEach(","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"     * Returns the part of command string for the given {@code EditPetDescriptor}\u0027s details.","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"    public static String getEditPetDescriptorDetails(EditPetDescriptor descriptor) {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"        descriptor.getOwnerName().ifPresent(ownerName -\u003e sb.append(PREFIX_NAME).append(ownerName.fullName).append(\" \"));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"shuimeihe":3,"YuanXun9834":18,"-":46}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"YuanXun9834"},"content":"     * Returns the middle index of the pet in the {@code model}\u0027s pet list.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"        return Index.fromOneBased(model.getFilteredPetList().size() / 2);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"YuanXun9834"},"content":"     * Returns the last index of the pet in the {@code model}\u0027s pet list.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"        return Index.fromOneBased(model.getFilteredPetList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"YuanXun9834"},"content":"     * Returns the pet in the {@code model}\u0027s pet list at {@code index}.","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"    public static Pet getPet(Model model, Index index) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"        return model.getFilteredPetList().get(index.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YuanXun9834":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"YuanXun9834"},"content":"    public static final Index INDEX_FIRST_PET \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"YuanXun9834"},"content":"    public static final Index INDEX_SECOND_PET \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"YuanXun9834"},"content":"    public static final Index INDEX_THIRD_PET \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"YuanXun9834":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPets.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_AMY1;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_AMY2;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_BOB1;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_BOB2;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CAT;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DOG;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIMESTAMP_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"shuimeihe"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIMESTAMP_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"YuanXun9834"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.PetPal;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"YuanXun9834"},"content":"import seedu.address.model.pet.Pet;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"shuimeihe"},"content":" * A utility class containing a list of {@code Pet} objects to be used in tests.","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"YuanXun9834"},"content":"public class TypicalPets {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"YuanXun9834"},"content":"    public static final Pet WHISKERS \u003d new PetBuilder().withOwnerName(\"Alice Pauline\")","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"YuanXun9834"},"content":"            .withName(\"Whiskers\")","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"shuimeihe"},"content":"            .withPhone(\"94351253\").withTags(\"MaineCoon\").withMarked(\"Unmarked\")","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"YuanXun9834"},"content":"            .withTimestamp(LocalDateTime.now().minusDays(1))","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"YuanXun9834"},"content":"            .withDeadline(\"Feed cat\", LocalDateTime.now().plusDays(3)).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"YuanXun9834"},"content":"    public static final Pet WOOFERS \u003d new PetBuilder().withOwnerName(\"Benson Meier\")","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"YuanXun9834"},"content":"            .withName(\"Woofers\")","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":42,"author":{"gitId":"shuimeihe"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withMarked(\"Unmarked\")","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"shuimeihe"},"content":"            .withDeadline(\"Feed dog\", LocalDateTime.now().plusDays(4))","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"shuimeihe"},"content":"            .withTimestamp(LocalDateTime.now().minusDays(1))","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"YuanXun9834"},"content":"            .withTags(\"GoldenRetriever\", \"Male\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"YuanXun9834"},"content":"    public static final Pet BOBBY \u003d new PetBuilder().withOwnerName(\"Yuan Xun\")","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"YuanXun9834"},"content":"            .withName(\"Bobby\")","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"YuanXun9834"},"content":"            .withAddress(\"311, Kent Ridge Ave 2, #04-25\")","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"shuimeihe"},"content":"            .withEmail(\"yx@example.com\").withPhone(\"91111111\").withMarked(\"Unmarked\")","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"shuimeihe"},"content":"            .withDeadline(\"Feed turtle\", LocalDateTime.now().plusDays(3))","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"shuimeihe"},"content":"            .withTimestamp(LocalDateTime.now().minusDays(1))","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"YuanXun9834"},"content":"            .withTags(\"Turtle\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"YuanXun9834"},"content":"    public static final Pet GREGORY \u003d new PetBuilder().withOwnerName(\"Weng Kit\")","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"YuanXun9834"},"content":"            .withName(\"GREGORY\")","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"YuanXun9834"},"content":"            .withAddress(\"411, Bukit Panjang Ave 2, #02-25\")","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"shuimeihe"},"content":"            .withEmail(\"wk@example.com\").withPhone(\"98761234\").withMarked(\"Unmarked\")","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"shuimeihe"},"content":"            .withDeadline(\"Feed mouse\", LocalDateTime.now().plusDays(3))","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"shuimeihe"},"content":"            .withTimestamp(LocalDateTime.now().minusDays(1))","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"YuanXun9834"},"content":"            .withTags(\"Mouse\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"YuanXun9834"},"content":"    public static final Pet PENGY \u003d new PetBuilder().withOwnerName(\"Daniel Irwan\")","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"YuanXun9834"},"content":"            .withName(\"Pengy\")","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"YuanXun9834"},"content":"            .withAddress(\"122, Bukit Batok Ave 10, #06-25\")","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"shuimeihe"},"content":"            .withEmail(\"dirwan@example.com\").withPhone(\"93323334\").withMarked(\"Unmarked\")","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"shuimeihe"},"content":"            .withDeadline(\"Feed penguin\", LocalDateTime.now().plusDays(3))","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"shuimeihe"},"content":"            .withTimestamp(LocalDateTime.now().minusDays(1))","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"YuanXun9834"},"content":"            .withTags(\"Penguin\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"YuanXun9834"},"content":"    public static final Pet SHARKY \u003d new PetBuilder().withOwnerName(\"Shui Mei\")","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"YuanXun9834"},"content":"            .withName(\"SHARKY\")","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"YuanXun9834"},"content":"            .withAddress(\"444, Chinatown St 2, #01-25\")","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"shuimeihe"},"content":"            .withEmail(\"shuimei@example.com\").withPhone(\"12345678\").withMarked(\"Unmarked\")","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"shuimeihe"},"content":"            .withDeadline(\"Feed parrot\", LocalDateTime.now().plusDays(3))","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"shuimeihe"},"content":"            .withTimestamp(LocalDateTime.now().minusDays(1))","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"YuanXun9834"},"content":"            .withTags(\"Parrot\", \"Female\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"YuanXun9834"},"content":"    public static final Pet GRIZZLY \u003d new PetBuilder().withOwnerName(\"Yang Shan\")","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"YuanXun9834"},"content":"            .withName(\"Grizzly\")","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"YuanXun9834"},"content":"            .withAddress(\"888, Shenton Ave 2, #02-25\")","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"shuimeihe"},"content":"            .withEmail(\"ys123@example.com\").withPhone(\"92313222\").withMarked(\"Unmarked\")","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"shuimeihe"},"content":"            .withDeadline(\"Vaccination\", LocalDateTime.now().plusDays(10))","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"shuimeihe"},"content":"            .withTimestamp(LocalDateTime.now().minusDays(1))","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"YuanXun9834"},"content":"            .withTags(\"Snake\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"shuimeihe"},"content":"    public static final Pet HOON \u003d new PetBuilder().withOwnerName(\"Hoon Meier\").withName(\"Doggo\").withPhone(\"8482424\")","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"shuimeihe"},"content":"            .withMarked(\"Unmarked\").withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"YuanXun9834"},"content":"    public static final Pet IDA \u003d new PetBuilder().withOwnerName(\"Ida Mueller\").withName(\"catto\").withPhone(\"8482131\")","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"shuimeihe"},"content":"            .withMarked(\"Unmarked\").withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":88,"author":{"gitId":"shuimeihe"},"content":"    // Manually added - Pet\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"shuimeihe"},"content":"    public static final Pet EXAMPLE_CAT \u003d new PetBuilder().withOwnerName(VALID_NAME_AMY).withName(VALID_NAME_CAT)","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"shuimeihe"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"YuanXun9834"},"content":"            .withTimestamp(VALID_TIMESTAMP_AMY).withDeadline(VALID_DEADLINE_AMY1, VALID_DEADLINE_AMY2)","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"shuimeihe"},"content":"            .withMarked(\"Unmarked\")","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"shuimeihe"},"content":"            .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"shuimeihe"},"content":"    public static final Pet EXAMPLE_DOG \u003d new PetBuilder().withOwnerName(VALID_NAME_BOB).withName(VALID_NAME_DOG)","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"shuimeihe"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"YuanXun9834"},"content":"            .withTimestamp(VALID_TIMESTAMP_BOB).withDeadline(VALID_DEADLINE_BOB1, VALID_DEADLINE_BOB2)","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"shuimeihe"},"content":"            .withMarked(\"Unmarked\")","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":103,"author":{"gitId":"YuanXun9834"},"content":"    private TypicalPets() {} // prevents instantiation","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"wengkit1"},"content":"     * Returns an {@code PetPal} with all the typical pets.","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"YuanXun9834"},"content":"    public static PetPal getTypicalPetPal() {","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"YuanXun9834"},"content":"        PetPal pp \u003d new PetPal();","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"shuimeihe"},"content":"        for (Pet pet : getTypicalPet()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"shuimeihe"},"content":"            pp.addPet(pet);","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":113,"author":{"gitId":"YuanXun9834"},"content":"        return pp;","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":116,"author":{"gitId":"shuimeihe"},"content":"    public static PetPal getTypicalArchive() {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"shuimeihe"},"content":"        return new PetPal();","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"shuimeihe"},"content":"    public static PetPal getFilledArchive() {","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"shuimeihe"},"content":"        PetPal pp \u003d new PetPal();","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"shuimeihe"},"content":"        for (Pet pet : getTypicalPet()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"shuimeihe"},"content":"            pp.addPet(pet);","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"shuimeihe"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"shuimeihe"},"content":"        return pp;","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"shuimeihe"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"shuimeihe"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"YuanXun9834"},"content":"    public static List\u003cPet\u003e getTypicalPet() {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"YuanXun9834"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(WHISKERS, WOOFERS, GREGORY, PENGY, BOBBY, SHARKY, GRIZZLY));","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":131,"author":{"gitId":"YuanXun9834"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"wengkit1":1,"shuimeihe":63,"YuanXun9834":41,"-":27}}]
