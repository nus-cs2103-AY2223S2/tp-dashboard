[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W10-3/tp/branch/master/graph/badge.svg?token\u003d4F64F7O6TM)](https://codecov.io/gh/AY2223S2-CS2103T-W10-3/tp)","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"- This is a **project for admin clerks working in the military that handles the information of many military personnel**.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"  - manage the rank, section, platoon, company, unit, etc. of many military personnel","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"  - track different leaves of personnel for admin purposes","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"- The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"  - It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"  - It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"- It is named `AddressBook Level 3` (`AB3` for short) because it was initially created as a part of a series of `AddressBook` projects (`Level 1`, `Level 2`, `Level 3` ...).","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"- For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"jugheadjones10":9,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"    String javaFxVersion \u003d \u002716\u0027","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"rexcyrio"},"content":"    archiveFileName \u003d \u0027fails.jar\u0027","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rexcyrio":1,"jugheadjones10":1,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"### Lee Wei Chong Stefan","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"rexcyrio"},"content":"\u003cimg src\u003d\"images/rexcyrio.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"rexcyrio"},"content":"\\[[github](https://github.com/rexcyrio)\\] \\[[portfolio](team/rexcyrio.md)\\]","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"- Role: Team Lead","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"rexcyrio"},"content":"- Responsibilities: Code Quality","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"### Kim Young Jin","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"\u003cimg src\u003d\"images/jugheadjones10.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"rexcyrio"},"content":"\\[[github](http://github.com/jugheadjones10)\\] \\[[portfolio](team/jugheadjones10.md)\\]","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"- Role: Developer","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"rexcyrio"},"content":"- Responsibilities: Testing","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"### Neo Ming Hao","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"\u003cimg src\u003d\"images/minosx31.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"rexcyrio"},"content":"\\[[github](http://github.com/minosx31)\\] \\[[portfolio](team/minosx31.md)\\]","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"rexcyrio"},"content":"- Role: Developer","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"rexcyrio"},"content":"- Responsibilities: Deliverables and deadlines","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"### Fun Leon","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"\u003cimg src\u003d\"images/niekis.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"rexcyrio"},"content":"\\[[github](http://github.com/niekis)\\] \\[[portfolio](team/niekis.md)\\]","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"rexcyrio"},"content":"- Role: Developer","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"rexcyrio"},"content":"- Responsibilities: Documentation","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"rexcyrio":14,"minosx31":2,"niekis":2,"jugheadjones10":2,"-":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"rexcyrio"},"content":"- [**Acknowledgements**](#acknowledgements)","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"rexcyrio"},"content":"- [**Setting up, getting started**](#setting-up-getting-started)","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"rexcyrio"},"content":"- [**Design**](#design)","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"rexcyrio"},"content":"  - [Architecture](#architecture)","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"rexcyrio"},"content":"  - [UI component](#ui-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"rexcyrio"},"content":"  - [Logic component](#logic-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"  - [Model component](#model-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"rexcyrio"},"content":"  - [Storage component](#storage-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"rexcyrio"},"content":"  - [Common classes](#common-classes)","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"- [**Implementation**](#implementation)","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"rexcyrio"},"content":"  - [Undo feature](#undo-feature)","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"    - [Current Implementation](#current-implementation)","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"    - [Design considerations](#design-considerations)","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"  - [Filter feature](#filter-feature)","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"    - [Current Filter Implementation](#current-filter-implementation)","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"  - [Copy feature](#copy-feature)","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"    - [Current Copy Implementation](#current-copy-implementation)","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"  - [\\[Proposed\\] Data archiving](#proposed-data-archiving)","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"- [**Documentation, logging, testing, configuration, dev-ops**](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"rexcyrio"},"content":"- [**Appendix: Requirements**](#appendix-requirements)","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"rexcyrio"},"content":"  - [Product scope](#product-scope)","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"  - [User stories](#user-stories)","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"rexcyrio"},"content":"  - [Use cases](#use-cases)","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"rexcyrio"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"rexcyrio"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"rexcyrio"},"content":"- [**Appendix: Instructions for manual testing**](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"rexcyrio"},"content":"  - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"rexcyrio"},"content":"  - [Deleting a person](#deleting-a-person)","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"rexcyrio"},"content":"  - [Saving data](#saving-data)","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":40,"author":{"gitId":"rexcyrio"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"jugheadjones10"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"rexcyrio"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"rexcyrio"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"rexcyrio"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"rexcyrio"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"rexcyrio"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"rexcyrio"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"jugheadjones10"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"jugheadjones10"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"rexcyrio"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point)","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"rexcyrio"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"rexcyrio"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"rexcyrio"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"rexcyrio"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"rexcyrio"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"rexcyrio"},"content":":information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"rexcyrio"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"rexcyrio"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"rexcyrio"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"jugheadjones10"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"rexcyrio"},"content":"- stores a `UserPref` object that represents the user\u0027s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"rexcyrio"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"rexcyrio"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"rexcyrio"},"content":":information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"rexcyrio"},"content":"- can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"rexcyrio"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"rexcyrio"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"rexcyrio"},"content":"### Undo feature","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"rexcyrio"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"rexcyrio"},"content":"The current undo mechanism is handled by `AddressBook`. It stores the address book history internally as an `addressBookStateList` and uses a `currentStatePointer` to track where the current address book state is in the history. Additionally, it implements the following operations:","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"rexcyrio"},"content":"- `AddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"rexcyrio"},"content":"- `AddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"rexcyrio"},"content":"These operations are exposed in the `Model` interface as `Model#commit()` and `Model#undo()` respectively.","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"rexcyrio"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"rexcyrio"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"rexcyrio"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"rexcyrio"},"content":":information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"rexcyrio"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"rexcyrio"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"rexcyrio"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"rexcyrio"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"rexcyrio"},"content":"Given below is an example usage scenario and how the undo mechanism behaves at each step:","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"rexcyrio"},"content":"1. The user launches the application for the first time. The `AddressBook` will be initialized with the initial address book state, and the `currentStatePointer` will point to that single address book state.","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigure style\u003d\"text-align: center;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"rexcyrio"},"content":"   ![UndoState0](images/UndoState0.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigcaption\u003eFigure 1: Initial state of the address book history upon startup\u003c/figcaption\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":231,"author":{"gitId":"rexcyrio"},"content":"   \u003c/figure\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"rexcyrio"},"content":"1. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commit()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigure style\u003d\"text-align: center;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"rexcyrio"},"content":"   ![UndoState1](images/UndoState1.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigcaption\u003eFigure 2: State of the address book history after calling \u003ccode\u003edelete 5\u003c/code\u003e\u003c/figcaption\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"rexcyrio"},"content":"   \u003c/figure\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"rexcyrio"},"content":"1. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commit()`, causing another modified address book state to be saved into the `addressBookStateList` as shown below.","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigure style\u003d\"text-align: center;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"rexcyrio"},"content":"   ![UndoState2](images/UndoState2.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigcaption\u003eFigure 3: State of the address book history after calling \u003ccode\u003eadd n/David …​\u003c/code\u003e\u003c/figcaption\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"rexcyrio"},"content":"   \u003c/figure\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"rexcyrio"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":255,"author":{"gitId":"rexcyrio"},"content":"   :information_source: **Note:** If a command fails its execution (e.g., the `add` command syntax was incorrect), it will not call `Model#commit()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"rexcyrio"},"content":"1. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undo()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigure style\u003d\"text-align: center;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"rexcyrio"},"content":"   ![UndoState3](images/UndoState3.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigcaption\u003eFigure 4: State of the address book history after calling \u003ccode\u003eundo\u003c/code\u003e\u003c/figcaption\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":267,"author":{"gitId":"rexcyrio"},"content":"   \u003c/figure\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"rexcyrio"},"content":"1. The user then decides to execute the command `list`. Commands that do not modify the address book (such as `list`) will usually not call `Model#commit()` or `Model#undo()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigure style\u003d\"text-align: center;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"rexcyrio"},"content":"   ![UndoState4](images/UndoState4.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigcaption\u003eFigure 5: State of the address book history after calling \u003ccode\u003elist\u003c/code\u003e. Note that it hasn\u0027t changed from Figure 4\u003c/figcaption\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":277,"author":{"gitId":"rexcyrio"},"content":"   \u003c/figure\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"rexcyrio"},"content":"1. The user decides to call the `undo` command again.","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigure style\u003d\"text-align: center;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"rexcyrio"},"content":"   ![UndoState5](images/UndoState5.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigcaption\u003eFigure 6: State of the address book history after calling \u003ccode\u003eundo\u003c/code\u003e again\u003c/figcaption\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"rexcyrio"},"content":"   \u003c/figure\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"rexcyrio"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":291,"author":{"gitId":"rexcyrio"},"content":"   :information_source: **Note:** The `undo` command will first call `Model#canUndo()` to check if there are address book states to restore. If there are none (i.e., the `currentStatePointer` is at index 0 already), it will return an error to the user rather than attempt to perform the undo.","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"rexcyrio"},"content":"1. The user executes `clear`, which calls `Model#commit()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigure style\u003d\"text-align: center;\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"rexcyrio"},"content":"   ![UndoState6](images/UndoState6.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"rexcyrio"},"content":"   \u003cfigcaption\u003eFigure 7: State of the address book history after having \"overwritten\" old states\u003c/figcaption\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"rexcyrio"},"content":"   \u003c/figure\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"rexcyrio"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"rexcyrio"},"content":"#### Design considerations","lastModifiedDate":"2023-03-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"rexcyrio"},"content":"**Aspect: How undo executes:**","lastModifiedDate":"2023-03-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"rexcyrio"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":312,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":313,"author":{"gitId":"rexcyrio"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2023-03-05"},{"lineNumber":314,"author":{"gitId":"rexcyrio"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-03-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"rexcyrio"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-03-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"rexcyrio"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-03-05"},{"lineNumber":319,"author":{"gitId":"rexcyrio"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-03-05"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"niekis"},"content":"### Filter feature","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"niekis"},"content":"#### Current Filter Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"niekis"},"content":"The current filter feature is facilitated by `FilterCommand` which extends `Command`. The `FilterCommand`","lastModifiedDate":"2023-03-24"},{"lineNumber":328,"author":{"gitId":"niekis"},"content":"has a constructor that requires a non-null `FilterDescriptor`, which is an inner class of `FilterCommand`.","lastModifiedDate":"2023-03-24"},{"lineNumber":329,"author":{"gitId":"niekis"},"content":"It is used to store the desired filter\u0027s information. `FilterDescriptor` has all the fields that a `Person`","lastModifiedDate":"2023-03-24"},{"lineNumber":330,"author":{"gitId":"niekis"},"content":"object has (i.e. `Phone`, `Email`,`Rank`, etc), except that the field values can be empty","lastModifiedDate":"2023-03-24"},{"lineNumber":331,"author":{"gitId":"niekis"},"content":"and do not need to follow any format or restriction.","lastModifiedDate":"2023-03-24"},{"lineNumber":332,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":333,"author":{"gitId":"niekis"},"content":"When `FilterCommand` receives a valid `FilterDescriptor`, it creates a `FieldContainsPartialKeywordsPredicate`","lastModifiedDate":"2023-03-24"},{"lineNumber":334,"author":{"gitId":"niekis"},"content":"using all of the `FilterDescriptor`\u0027s information. This `Predicate` is used go through all the `Person` objects that are","lastModifiedDate":"2023-03-24"},{"lineNumber":335,"author":{"gitId":"niekis"},"content":"currently in the `Model`. A `Person` is filtered out if it does not contain the keyword in the corresponding field.","lastModifiedDate":"2023-03-24"},{"lineNumber":336,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":337,"author":{"gitId":"niekis"},"content":"The following sequence diagram shows an example of how the filter feature runs with user input:","lastModifiedDate":"2023-03-24"},{"lineNumber":338,"author":{"gitId":"niekis"},"content":"`filter e/gmail r/3sg`.","lastModifiedDate":"2023-03-24"},{"lineNumber":339,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"niekis"},"content":"![FilterSequenceDiagram](images/FilterSequenceDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":342,"author":{"gitId":"niekis"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":344,"author":{"gitId":"niekis"},"content":":information_source: **Note:** The lifeline for `FilterCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-24"},{"lineNumber":345,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":346,"author":{"gitId":"niekis"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":347,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":348,"author":{"gitId":"minosx31"},"content":"### Copy feature","lastModifiedDate":"2023-03-24"},{"lineNumber":349,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":350,"author":{"gitId":"niekis"},"content":"#### Current Copy Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":351,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":352,"author":{"gitId":"minosx31"},"content":"The copy feature is implemented by extracting information of the specified `Person` and then setting it as the content of the user\u0027s system\u0027s clipboard. The copy mechanism is facilitated by `CopyCommand` which extends `Command`.","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"minosx31"},"content":"Since the information of a `Person` is required, the `Model#getFilteredPersonList()` operation is invoked to retrieve the specified `Person` and the information is extracted and copied into the user\u0027s system\u0027s clipboard.","lastModifiedDate":"2023-03-23"},{"lineNumber":354,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":355,"author":{"gitId":"minosx31"},"content":"The following sequence diagram shows how the copy operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":356,"author":{"gitId":"minosx31"},"content":"![CopySequenceDiagram](images/CopySequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":357,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":358,"author":{"gitId":"minosx31"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":359,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":360,"author":{"gitId":"minosx31"},"content":":information_source: **Note:** The lifeline for `CopyCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-24"},{"lineNumber":361,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":362,"author":{"gitId":"minosx31"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":363,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":364,"author":{"gitId":"minosx31"},"content":"In the scenario where the user\u0027s system\u0027s clipboard is not accessible, the requested information will be displayed in the UI for the user to manually copy it.","lastModifiedDate":"2023-03-23"},{"lineNumber":365,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":366,"author":{"gitId":"jugheadjones10"},"content":"### New army-specific fields","lastModifiedDate":"2023-03-24"},{"lineNumber":367,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":368,"author":{"gitId":"jugheadjones10"},"content":"#### Current Copy Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":369,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":370,"author":{"gitId":"jugheadjones10"},"content":"New army-specific fields include Rank, Unit, Company, and Platoon. Rank is compulsory, hence its implementation is similar to that of other compulsory fields like Name. Unit, Company, and Platoon are optional as a military personnel might not always be assigned to a unit, company, or platoon. For these, fields, implementation is similar to the Tag field as tags are optional as well. When new users are being created and Unit, Company, and Platoon fields are not specified, they will automatically be set to \"N/A\" at first.","lastModifiedDate":"2023-03-24"},{"lineNumber":371,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":372,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2023-03-24"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":374,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2023-03-24"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":376,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"rexcyrio"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":381,"author":{"gitId":"rexcyrio"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":382,"author":{"gitId":"rexcyrio"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":383,"author":{"gitId":"rexcyrio"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":384,"author":{"gitId":"rexcyrio"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"minosx31"},"content":"**Target user profile**: Military admin clerk who handles information of other military personnel","lastModifiedDate":"2023-03-04"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"rexcyrio"},"content":"**Value proposition**: Contains dedicated fields in a contact card that manages military-specific information (e.g., rank, company, unit, etc.)","lastModifiedDate":"2023-03-05"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"rexcyrio"},"content":"Priority:","lastModifiedDate":"2023-03-05"},{"lineNumber":399,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":400,"author":{"gitId":"rexcyrio"},"content":"- 1 \u003d must have","lastModifiedDate":"2023-03-05"},{"lineNumber":401,"author":{"gitId":"rexcyrio"},"content":"- 2 \u003d nice to have","lastModifiedDate":"2023-03-05"},{"lineNumber":402,"author":{"gitId":"rexcyrio"},"content":"- 3 \u003d unlikely to have","lastModifiedDate":"2023-03-05"},{"lineNumber":403,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":404,"author":{"gitId":"rexcyrio"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":405,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":406,"author":{"gitId":"rexcyrio"},"content":"| Priority | As a/an...                | I can...                                                                                | so that...                                                                                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":407,"author":{"gitId":"jugheadjones10"},"content":"| -------- | ------------------------- | --------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2023-03-24"},{"lineNumber":408,"author":{"gitId":"rexcyrio"},"content":"| 1        | fast typer                | type in a command and the contact details to create a new contact                       | I can save time (instead of using the mouse to interact with the software which is slower)                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":409,"author":{"gitId":"rexcyrio"},"content":"| 1        | fast typer                | type in a command to delete a contact                                                   | I can save time (instead of using the mouse to interact with the software which is slower)                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":410,"author":{"gitId":"rexcyrio"},"content":"| 1        | fast typer                | type in a command to view all contacts                                                  | I can save time (instead of using the mouse to interact with the software which is slower)                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":411,"author":{"gitId":"rexcyrio"},"content":"| 2        | beginner                  | view the user guide                                                                     | I look up the syntax of a command that I had forgotten                                                         |","lastModifiedDate":"2023-03-05"},{"lineNumber":412,"author":{"gitId":"rexcyrio"},"content":"| 2        | beginner                  | search for a contact by name                                                            | I can save time (instead of searching manually)                                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":413,"author":{"gitId":"rexcyrio"},"content":"| 2        | beginner                  | edit an existing contact                                                                | I don\u0027t have to create an entirely new contact just because of a small typo                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":414,"author":{"gitId":"rexcyrio"},"content":"| 2        | beginner                  | tag contacts with extra information (e.g., leader of XYZ)                               | I can find the leader of XYZ easily                                                                            |","lastModifiedDate":"2023-03-05"},{"lineNumber":415,"author":{"gitId":"rexcyrio"},"content":"| 2        | seasoned user             | filter and sort contacts                                                                | I can quickly find contacts that meet the criteria (instead of searching manually)                             |","lastModifiedDate":"2023-03-05"},{"lineNumber":416,"author":{"gitId":"rexcyrio"},"content":"| 3        | security conscious person | set up an app password                                                                  | I can prevent others from reading the sensitive information on the military personnel                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":417,"author":{"gitId":"rexcyrio"},"content":"| 3        | security conscious person | change the app password                                                                 | I can ensure the security of the password                                                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":418,"author":{"gitId":"rexcyrio"},"content":"| 3        | new user                  | import contacts from a CSV file                                                         | I can easily migrate from other contacts management systems                                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":419,"author":{"gitId":"rexcyrio"},"content":"| 3        | clumsy user               | undo the previous action                                                                | I can rectify grave mistakes quickly                                                                           |","lastModifiedDate":"2023-03-05"},{"lineNumber":420,"author":{"gitId":"rexcyrio"},"content":"| 3        | forgetful user            | search for a contact by any identifying details                                         | I can still find a contact even if I have forgotten the person\u0027s name                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":421,"author":{"gitId":"rexcyrio"},"content":"| 3        | busy user                 | see recently viewed contacts                                                            | I can revisit previously accessed contacts quickly (instead of searching for them again)                       |","lastModifiedDate":"2023-03-05"},{"lineNumber":422,"author":{"gitId":"rexcyrio"},"content":"| 3        | busy user                 | generate a nicely formatted text template that contains all of the person\u0027s information | I do not need to re-type the same headers / tables whenever I send a new email                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":423,"author":{"gitId":"rexcyrio"},"content":"| 3        | seasoned user             | save commonly used contacts as favourites                                               | I can quickly look up commonly used contacts                                                                   |","lastModifiedDate":"2023-03-05"},{"lineNumber":424,"author":{"gitId":"rexcyrio"},"content":"| 3        | seasoned user             | hide unavailable personnel (using filters)                                              | I can see only those people that are currently available                                                       |","lastModifiedDate":"2023-03-05"},{"lineNumber":425,"author":{"gitId":"rexcyrio"},"content":"| 3        | seasoned user             | be shown daily tips on how to use some advanced features of FAILS                       | I can continuously learn how to save even more time (and become an advanced user)                              |","lastModifiedDate":"2023-03-05"},{"lineNumber":426,"author":{"gitId":"rexcyrio"},"content":"| 3        | seasoned user             | see a count of the number of people in the current list                                 | I can quickly calculate the number of people in each subset of the military                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":427,"author":{"gitId":"rexcyrio"},"content":"| 3        | advanced user             | export all FAILS data to a FAILS data file                                              | I don\u0027t lose my data when I change computers / departments                                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":428,"author":{"gitId":"rexcyrio"},"content":"| 3        | advanced user             | import all FAILS data from a FAILS data file                                            | I don\u0027t lose my data when I change computers / departments                                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":429,"author":{"gitId":"rexcyrio"},"content":"| 3        | advanced user             | delete all the data on the FAILS                                                        | I can ensure that the sensitive data will not remain on the old computer when I change computers / departments |","lastModifiedDate":"2023-03-05"},{"lineNumber":430,"author":{"gitId":"rexcyrio"},"content":"| 3        | advanced user             | automatically see the ORD date of a recruit                                             | I can inform them of the administrative processes that must completed before they ORD                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":431,"author":{"gitId":"rexcyrio"},"content":"| 3        | advanced user             | mark that a person is on leave from `start_date` to `end_date`                          | I can tell if the soldier is available or not (and when he will be available)                                  |","lastModifiedDate":"2023-03-05"},{"lineNumber":432,"author":{"gitId":"rexcyrio"},"content":"| 3        | advanced user             | make simultaneous edits to multiple contacts at once (e.g., update rank)                | I can save time by rectifying mass mistakes / save time by updating multiple people\u0027s information quickly      |","lastModifiedDate":"2023-03-05"},{"lineNumber":433,"author":{"gitId":"rexcyrio"},"content":"| 3        | advanced user             | view two contacts side by side                                                          | I can compare two contacts side by side easily (instead of having to open up another instance of the app)      |","lastModifiedDate":"2023-03-05"},{"lineNumber":434,"author":{"gitId":"rexcyrio"},"content":"| 3        | advanced user             | save commonly used combinations of filters as favourites                                | I can view the updated data quickly without having to apply the same combination of filters again              |","lastModifiedDate":"2023-03-05"},{"lineNumber":435,"author":{"gitId":"rexcyrio"},"content":"| 3        | inaccurate typer          | search for contacts even with typos (fuzzy search)                                      | I can search fast even with minor typos                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":436,"author":{"gitId":"rexcyrio"},"content":"| 3        | slower typer              | see suggested names when searching                                                      | I can easily autocomplete my search query                                                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":437,"author":{"gitId":"rexcyrio"},"content":"| 3        | slower typer              | see all contacts that match my current search query even before I press ENTER           | I do not need to type out my complete search query to start seeing results                                     |","lastModifiedDate":"2023-03-05"},{"lineNumber":438,"author":{"gitId":"rexcyrio"},"content":"| 3        | ration manager            | filter and count the number of people that need halal meals / are allergic to seafood   | I know how many halal / non-seafood food packs to order                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":439,"author":{"gitId":"rexcyrio"},"content":"| 3        | artistic user             | edit the theme of the app/font of the UI                                                | I can personalize the look of the app to be more aesthetically pleasing to me                                  |","lastModifiedDate":"2023-03-05"},{"lineNumber":440,"author":{"gitId":"rexcyrio"},"content":"| 3        | person with bad eyesight  | increase the font size/UI size of the whole app                                         | I can see text better                                                                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"minosx31"},"content":"(For all use cases below, the **System** is the `Fast Army Internal Lookup System (FAILS)`, unless specified otherwise)","lastModifiedDate":"2023-03-04"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"minosx31"},"content":"**Use case: UC2 - Create a new military personnel**","lastModifiedDate":"2023-03-04"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"minosx31"},"content":"**Actor: Admin clerk**","lastModifiedDate":"2023-03-04"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"minosx31"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":451,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":452,"author":{"gitId":"minosx31"},"content":"1. Admin clerk creates a new military personnel contact by entering the command.","lastModifiedDate":"2023-03-04"},{"lineNumber":453,"author":{"gitId":"rexcyrio"},"content":"1. FAILS creates and displays the newly created military personnel contact to the admin clerk.","lastModifiedDate":"2023-03-05"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"rexcyrio"},"content":"- 1a. FAILS detects an error in the command (e.g. missing information, incorrect syntax).","lastModifiedDate":"2023-03-05"},{"lineNumber":460,"author":{"gitId":"rexcyrio"},"content":"  - 1a1. FAILS displays an error message to the admin clerk.","lastModifiedDate":"2023-03-05"},{"lineNumber":461,"author":{"gitId":"rexcyrio"},"content":"  - 1a2. Admin clerk re-enters the information to create the military personnel contact.","lastModifiedDate":"2023-03-05"},{"lineNumber":462,"author":{"gitId":"rexcyrio"},"content":"  - Steps 1a1-1a2 are repeated until the information provided is acceptable.","lastModifiedDate":"2023-03-05"},{"lineNumber":463,"author":{"gitId":"rexcyrio"},"content":"  - Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":464,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":465,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"minosx31"},"content":"**Use case: UC101 - Update the rank of person named \"Lawrence Tay\"**","lastModifiedDate":"2023-03-04"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"minosx31"},"content":"**Actor: Admin clerk**","lastModifiedDate":"2023-03-04"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":473,"author":{"gitId":"minosx31"},"content":"1. Admin clerk \u003cins\u003esearches for a person named \"Lawrence Tay\" (UC5)\u003c/ins\u003e.","lastModifiedDate":"2023-03-04"},{"lineNumber":474,"author":{"gitId":"jugheadjones10"},"content":"1. Admin clerk \u003cins\u003eedits the _rank_ information of \"Lawrence Tay\" (UC6)\u003c/ins\u003e.","lastModifiedDate":"2023-03-24"},{"lineNumber":475,"author":{"gitId":"jugheadjones10"},"content":"1. FAILS displays the updated _rank_ information of \"Lawrence Tay\".","lastModifiedDate":"2023-03-24"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":477,"author":{"gitId":"rexcyrio"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":479,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":481,"author":{"gitId":"rexcyrio"},"content":"- 1a. After searching, there is more than one \"Lawrence Tay\" in the displayed list.","lastModifiedDate":"2023-03-05"},{"lineNumber":482,"author":{"gitId":"rexcyrio"},"content":"  - 1a1. Admin clerk scrolls through the list of \"Lawrence Tay\"s and mentally notes down the index of the exact \"Lawrence Tay\" person she is looking for.","lastModifiedDate":"2023-03-05"},{"lineNumber":483,"author":{"gitId":"rexcyrio"},"content":"  - Use cases resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":485,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"minosx31"},"content":"**Use case: UC102 - Import contacts from CSV file**","lastModifiedDate":"2023-03-04"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"minosx31"},"content":"**Actor: Admin clerk**","lastModifiedDate":"2023-03-04"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"minosx31"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":493,"author":{"gitId":"minosx31"},"content":"1. Admin clerk chooses to import a CSV file containing the personal information of military personnel from her computer.","lastModifiedDate":"2023-03-04"},{"lineNumber":494,"author":{"gitId":"rexcyrio"},"content":"1. FAILS imports the CSV file.","lastModifiedDate":"2023-03-05"},{"lineNumber":495,"author":{"gitId":"jugheadjones10"},"content":"1. FAILS prompts the admin clerk whether the information in the CSV file should _replace_ or be _added_ to the existing list of contacts.","lastModifiedDate":"2023-03-24"},{"lineNumber":496,"author":{"gitId":"rexcyrio"},"content":"1. Admin clerk chooses one of the options.","lastModifiedDate":"2023-03-05"},{"lineNumber":497,"author":{"gitId":"jugheadjones10"},"content":"1. If the option was to _replace_, FAILS will delete all existing all contacts. Otherwise, FAILS does nothing in this step.","lastModifiedDate":"2023-03-24"},{"lineNumber":498,"author":{"gitId":"rexcyrio"},"content":"1. FAILS adds the CSV contacts to the existing list of contacts.","lastModifiedDate":"2023-03-05"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":500,"author":{"gitId":"rexcyrio"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":501,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":502,"author":{"gitId":"minosx31"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":504,"author":{"gitId":"rexcyrio"},"content":"- 2a. FAILS is unable to automatically match the CSV column names to FAILS contact fields.","lastModifiedDate":"2023-03-05"},{"lineNumber":505,"author":{"gitId":"rexcyrio"},"content":"  - 2a1. FAILS prompts the admin clerk to decide which CSV column refer to which FAILS contact field (e.g., the CSV might have a column called \"mobile_number\" whereas FAILS has a field called \"phone\").","lastModifiedDate":"2023-03-05"},{"lineNumber":506,"author":{"gitId":"rexcyrio"},"content":"  - Use case resumes at step 3.","lastModifiedDate":"2023-03-05"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"jugheadjones10"},"content":"_{More to be added}_","lastModifiedDate":"2023-03-24"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"rexcyrio"},"content":"1. FAILS must store the personal data of military personnel securely.","lastModifiedDate":"2023-03-05"},{"lineNumber":513,"author":{"gitId":"rexcyrio"},"content":"1. FAILS must only allow the authorised admin clerk access to the military personnel data (in compliance with PDPA).","lastModifiedDate":"2023-03-05"},{"lineNumber":514,"author":{"gitId":"rexcyrio"},"content":"1. FAILS must not leak the personal data of military personnel even during a computer crash.","lastModifiedDate":"2023-03-05"},{"lineNumber":515,"author":{"gitId":"rexcyrio"},"content":"1. FAILS must not connect to the Internet.","lastModifiedDate":"2023-03-05"},{"lineNumber":516,"author":{"gitId":"rexcyrio"},"content":"1. FAILS must be able to handle at least 1000 military personnel contacts.","lastModifiedDate":"2023-03-05"},{"lineNumber":517,"author":{"gitId":"rexcyrio"},"content":"1. FAILS should be easy to use even for non-technical persons like an admin clerk.","lastModifiedDate":"2023-03-05"},{"lineNumber":518,"author":{"gitId":"rexcyrio"},"content":"1. FAILS should be efficient enough that it performs well even on lower-tier hardware (e.g., like those found in everyday office computers that admin clerks use).","lastModifiedDate":"2023-03-05"},{"lineNumber":519,"author":{"gitId":"rexcyrio"},"content":"1. FAILS should respond within 1 second for any command the user inputs.","lastModifiedDate":"2023-03-05"},{"lineNumber":520,"author":{"gitId":"rexcyrio"},"content":"1. FAILS must not lose critical data on military personnel even during a computer crash.","lastModifiedDate":"2023-03-05"},{"lineNumber":521,"author":{"gitId":"rexcyrio"},"content":"1. FAILS must be accessible to military personnel with disabilities.","lastModifiedDate":"2023-03-05"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"rexcyrio"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-03-05"},{"lineNumber":526,"author":{"gitId":"rexcyrio"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2023-03-05"},{"lineNumber":527,"author":{"gitId":"rexcyrio"},"content":"- **Non-technical person**: Someone who is able to execute basic tasks using the computer\u0027s point-and-click interface and has the ability to use simple GUI applications.","lastModifiedDate":"2023-03-05"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"rexcyrio"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":536,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":537,"author":{"gitId":"jugheadjones10"},"content":":information*source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-03-24"},{"lineNumber":538,"author":{"gitId":"jugheadjones10"},"content":"testers are expected to do more \\_exploratory* testing.","lastModifiedDate":"2023-03-24"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-03-24"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-03-24"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2023-03-24"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"rexcyrio":209,"minosx31":33,"niekis":29,"jugheadjones10":28,"-":270}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"rexcyrio"},"content":"Fast Army Internal Lookup System (FAILS) is a **desktop app for managing the personal information of military personnel, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FAILS can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"rexcyrio"},"content":"\u003c!-- omit from toc --\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"rexcyrio"},"content":"## Table of Contents","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"rexcyrio"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"- [Features](#features)","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"rexcyrio"},"content":"  - [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"rexcyrio"},"content":"  - [Adding a person: `add`](#adding-a-person-add)","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"  - [Listing all persons : `list`](#listing-all-persons--list)","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"rexcyrio"},"content":"  - [Editing a person : `edit`](#editing-a-person--edit)","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"  - [Locating persons by name: `find`](#locating-persons-by-name-find)","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"  - [Deleting a person : `delete`](#deleting-a-person--delete)","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"rexcyrio"},"content":"  - [Clearing all entries : `clear`](#clearing-all-entries--clear)","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"  - [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"rexcyrio"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"  - [Archiving data files `[coming in v2.0]`](#archiving-data-files-coming-in-v20)","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"rexcyrio"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"rexcyrio"},"content":"1. Download the latest `fails.jar` from [~~here~~](https://github.com/AY2223S2-CS2103T-W10-3/tp/releases) (*coming soon*).","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"rexcyrio"},"content":"1. Copy the file to the folder you want to use as the *home folder* for your FAILS.","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"rexcyrio"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar fails.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"rexcyrio"},"content":"    - `list` : Lists all contacts.","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"rexcyrio"},"content":"    - `add n/Jaden Ng p/91297723 e/jadend@gmail.com a/Smith street, block 13, #07-04 r/3SG u/alpha c/SIR pl/4` adds a new person `Jaden Ng` to the FAILS with the following information:","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"rexcyrio"},"content":"      | Field        | Value                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"rexcyrio"},"content":"      |--------------|--------------------------------|","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"rexcyrio"},"content":"      | name         | Jaden Ng                       |","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"rexcyrio"},"content":"      | phone number | 91297723                       |","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"rexcyrio"},"content":"      | email        | jadend@gmail.com               |","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"rexcyrio"},"content":"      | address      | Smith street, block 13, #07-04 |","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"rexcyrio"},"content":"      | rank         | 3SG                            |","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"rexcyrio"},"content":"      | unit         | alpha                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"rexcyrio"},"content":"      | company      | SIR                            |","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"rexcyrio"},"content":"      | platoon      | 4                              |","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"rexcyrio"},"content":"    - `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"rexcyrio"},"content":"    - `clear` : Deletes all contacts.","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"rexcyrio"},"content":"    - `exit` : Exits the app.","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"rexcyrio"},"content":"**:information_source: Notes about the command format:**","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"rexcyrio"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"rexcyrio"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"rexcyrio"},"content":"- Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"rexcyrio"},"content":"  e.g. `[t/TAG]…​` can be used as \u003ccode\u003e\u0026nbsp;\u003c/code\u003e (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"rexcyrio"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"rexcyrio"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":90,"author":{"gitId":"rexcyrio"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"rexcyrio"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"rexcyrio"},"content":"\u003c!-- ![help message](images/helpMessage.png) --\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"rexcyrio"},"content":"Adds a person to the FAILS.","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"rexcyrio"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​ r/RANK [u/UNIT] [c/COMPANY] [pl/PLATOON]`","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"rexcyrio"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"rexcyrio"},"content":":bulb: **Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"rexcyrio"},"content":"- `add n/Jaden Ng p/91297723 e/jadend@gmail.com a/Smith street, block 13, #07-04 r/3SG u/alpha c/SIR pl/4` adds a new person `Jaden Ng` to the FAILS with the following information:","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"rexcyrio"},"content":"  | Field        | Value                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"rexcyrio"},"content":"  |--------------|--------------------------------|","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"rexcyrio"},"content":"  | name         | Jaden Ng                       |","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"rexcyrio"},"content":"  | phone number | 91297723                       |","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"rexcyrio"},"content":"  | email        | jadend@gmail.com               |","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"rexcyrio"},"content":"  | address      | Smith street, block 13, #07-04 |","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"rexcyrio"},"content":"  | rank         | 3SG                            |","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"rexcyrio"},"content":"  | unit         | alpha                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"rexcyrio"},"content":"  | company      | SIR                            |","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"rexcyrio"},"content":"  | platoon      | 4                              |","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"rexcyrio"},"content":"- `add n/Lawrence Tay t/platoon-leader e/lawrencetay@gmail.com a/124 Drummond Street p/91649723 r/3SG u/801 t/allergy-seafood` adds a new person `Lawrence Tay` to the FAILS with the following information:","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"rexcyrio"},"content":"  | Field        | Value                  |","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"rexcyrio"},"content":"  |--------------|------------------------|","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"rexcyrio"},"content":"  | name         | Lawrence Tay           |","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"rexcyrio"},"content":"  | phone number | 91649723               |","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"rexcyrio"},"content":"  | email        | lawrencetay@gmail.com  |","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"rexcyrio"},"content":"  | address      | 124 Drummond Street    |","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"rexcyrio"},"content":"  | rank         | 3SG                    |","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"rexcyrio"},"content":"  | unit         | 801                    |","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"rexcyrio"},"content":"  | tag          | platoon-leader         |","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"rexcyrio"},"content":"  | tag          | allergy-seafood        |","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"rexcyrio"},"content":"Shows a list of all persons in the FAILS.","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"rexcyrio"},"content":"Edits an existing person in the FAILS.","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"rexcyrio"},"content":":information_source: Note: editing a person\u0027s rank, unit, company and platoon is currently not supported.","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"rexcyrio"},"content":"- Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"rexcyrio"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"rexcyrio"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"rexcyrio"},"content":"- When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"rexcyrio"},"content":"- You can remove all the person\u0027s tags by typing `t/` without","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"rexcyrio"},"content":"- `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"rexcyrio"},"content":"- `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"rexcyrio"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-03-02"},{"lineNumber":176,"author":{"gitId":"rexcyrio"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"rexcyrio"},"content":"- Only the name is searched.","lastModifiedDate":"2023-03-02"},{"lineNumber":178,"author":{"gitId":"rexcyrio"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-03-02"},{"lineNumber":179,"author":{"gitId":"rexcyrio"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":184,"author":{"gitId":"rexcyrio"},"content":"- `find John` returns `john` and `John Doe`","lastModifiedDate":"2023-03-02"},{"lineNumber":185,"author":{"gitId":"rexcyrio"},"content":"- `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"rexcyrio"},"content":"Deletes the specified person from the FAILS.","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"rexcyrio"},"content":"- Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"rexcyrio"},"content":"- The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-02"},{"lineNumber":196,"author":{"gitId":"rexcyrio"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-02"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":200,"author":{"gitId":"rexcyrio"},"content":"- `list` followed by `delete 2` deletes the 2nd person in the FAILS.","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"rexcyrio"},"content":"- `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2023-03-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"rexcyrio"},"content":"Clears all entries from the FAILS.","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"rexcyrio"},"content":"FAILS data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"rexcyrio"},"content":"FAILS data is saved as a JSON file `[JAR file location]/data/fails.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"rexcyrio"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":224,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":225,"author":{"gitId":"rexcyrio"},"content":":exclamation: **Caution:** If your changes to the data file makes its format invalid, FAILS will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"rexcyrio"},"content":"(*coming soon*)","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"rexcyrio"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FAILS home folder.","lastModifiedDate":"2023-03-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"rexcyrio"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… r/RANK [u/UNIT] [c/COMPANY] [pl/PLATOON]` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague r/RCT u/BRAVO c/207 pl/1`","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rexcyrio":116,"-":136}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jugheadjones10"},"content":"    content: \"Fast Army Internal Lookup System\";","lastModifiedDate":"2023-02-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jugheadjones10":1,"-":294}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"Person *--\u003e Rank","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"Person *--\u003e Unit","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"Person *--\u003e Company","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"Person *--\u003e Platoon","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jugheadjones10":4,"-":21}},{"path":"docs/diagrams/CopySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"participant \"c:CopyCommand\" as CopyCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"[-\u003e LogicManager : execute(copy)","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(copy)","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"create CopyCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"AddressBookParser -\u003e CopyCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"activate CopyCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"CopyCommand --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"deactivate CopyCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"LogicManager -\u003e CopyCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"activate CopyCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"CopyCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"Model --\u003e CopyCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"CopyCommand --\u003e CopyCommand :getInformation(Person)","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"CopyCommand --\u003e CopyCommand :copyToClipboard()","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"CopyCommand --\u003e LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"deactivate CopyCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"CopyCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"destroy CopyCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"minosx31":49}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"participant \"fd:FilterDescriptor\" as FilterDescriptor LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"participant \"fc:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"participant \"fp :FieldContainsPartialKeywordsPredicate\" as FieldContainsPartialKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"[-\u003e LogicManager : execute(\"filter e/gmail r/3sg\")","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter e/gmail r/3sg\")","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"create FilterCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"AddressBookParser -\u003e FilterCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"activate FilterCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"FilterCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"AddressBookParser -\u003e FilterCommandParser : parse(\"e/gmail r/3sg\")","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"activate FilterCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"create FilterDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"FilterCommandParser -\u003e FilterDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"activate FilterDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"FilterDescriptor --\u003e FilterCommandParser : fd","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"deactivate FilterDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"FilterCommandParser -\u003e FilterDescriptor : setEmailValue(\"gmail\")","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"activate FilterDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"FilterDescriptor --\u003e FilterCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"deactivate FilterDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"FilterCommandParser -\u003e FilterDescriptor : setRankValue(\"3sg\")","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"activate FilterDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"FilterDescriptor --\u003e FilterCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"deactivate FilterDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"create FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"FilterCommandParser -\u003e FilterCommand : FilterCommand(fd)","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"activate FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"FilterCommand -\u003e FilterCommand : createFilterPredicate(fd)","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"activate FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"create FieldContainsPartialKeywordsPredicate","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"FilterCommand -\u003e FieldContainsPartialKeywordsPredicate","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"activate FieldContainsPartialKeywordsPredicate","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"FieldContainsPartialKeywordsPredicate --\u003e FilterCommand : fp","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"deactivate FieldContainsPartialKeywordsPredicate","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"FilterCommand --\u003e FilterCommand : fp","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"deactivate FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"FilterCommand --\u003e FilterCommandParser : fc","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"deactivate FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"FilterCommandParser --\u003e AddressBookParser : fc","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"FilterCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"destroy FilterCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"AddressBookParser --\u003e LogicManager : fc","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"LogicManager -\u003e FilterCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"activate FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"FilterCommand -\u003e Model : updateFilteredPersonList(fp)","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"FilterCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"CommandResult --\u003e FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"FilterCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"niekis"},"content":"deactivate FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"niekis"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"niekis"},"content":"FilterCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"niekis"},"content":"destroy FilterCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"niekis"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"niekis"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"niekis"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"niekis":111}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"Class Rank","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"Class Unit","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"Class Platoon","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"Class Company","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"Person *--\u003e Rank","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"Person *--\u003e Unit","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"Person *--\u003e Company","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"Person *--\u003e Platoon","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"jugheadjones10"},"content":"Email -[hidden]right-\u003e Rank","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"Rank -[hidden]right-\u003e Unit","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"jugheadjones10"},"content":"Unit -[hidden]right-\u003e Company","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"jugheadjones10"},"content":"Company -[hidden]right-\u003e Platoon","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jugheadjones10":12,"-":50}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"rexcyrio"},"content":"UndoCommand -\u003e Model : undo()","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"rexcyrio"},"content":"Model -\u003e AddressBook : undo()","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"rexcyrio"},"content":"activate AddressBook","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"rexcyrio"},"content":"AddressBook -\u003e AddressBook :resetData(ReadOnlyAddressBook)","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"rexcyrio"},"content":"AddressBook --\u003e Model :","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"rexcyrio"},"content":"deactivate AddressBook","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rexcyrio":7,"-":46}},{"path":"docs/diagrams/UndoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"skinparam ClassBackgroundColor #fefece","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"Pointer -up[#a80036]-\u003e State1","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rexcyrio":4,"-":18}},{"path":"docs/diagrams/UndoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"skinparam ClassBackgroundColor #fefece","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"rexcyrio"},"content":"Pointer -up[#a80036]-\u003e State2","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rexcyrio":3,"-":20}},{"path":"docs/diagrams/UndoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"skinparam ClassBackgroundColor #fefece","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"rexcyrio"},"content":"title After command \"add n/David ...\"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"Pointer -up[#a80036]-\u003e State3","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rexcyrio":4,"-":17}},{"path":"docs/diagrams/UndoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"skinparam ClassBackgroundColor #fefece","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"Pointer -up[#a80036]-\u003e State2","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rexcyrio":3,"-":18}},{"path":"docs/diagrams/UndoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"skinparam ClassBackgroundColor #fefece","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"Pointer -up[#a80036]-\u003e State2","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rexcyrio":3,"-":18}},{"path":"docs/diagrams/UndoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"skinparam ClassBackgroundColor #fefece","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"rexcyrio"},"content":"title After command \"undo\" again","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"Pointer -up[#a80036]-\u003e State1","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"rexcyrio":4,"-":17}},{"path":"docs/diagrams/UndoState6.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rexcyrio"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"rexcyrio"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"rexcyrio"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"rexcyrio"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"skinparam ClassBackgroundColor #fefece","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"rexcyrio"},"content":"skinparam NoteBackgroundColor #yellow","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"rexcyrio"},"content":"title After command \"clear\"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"rexcyrio"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"rexcyrio"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"    class State2 as \"__ab3:AddressBook__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"rexcyrio"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"rexcyrio"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"rexcyrio"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"hide State3","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"rexcyrio"},"content":"Pointer -up[#a80036]-\u003e State2","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"note right on link: Both states ab1 and ab2 are deleted.","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"@end","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"rexcyrio":24}},{"path":"docs/team/jugheadjones10.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"title: Kim Young Jin\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"### Project: Fast Army Internal Lookup System","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"Fast Army Internal Lookup System is a desktop address book application built to handle the personal information of military personnel. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djugheadjones10\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"rexcyrio"},"content":"- **Enhancements implemented**:","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"- **Contributions to the UG**:","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"- **Contributions to the DG**:","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"- **Testing contributed**:","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"rexcyrio"},"content":"- **Review/mentoring contributions**:","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"rexcyrio":11,"jugheadjones10":16}},{"path":"docs/team/minosx31.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"title: Neo Ming Hao\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"### Project: Fast Army Internal Lookup System","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"rexcyrio"},"content":"Fast Army Internal Lookup System is a desktop address book application built to handle the personal information of military personnel. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"- **New Feature**:","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dminosx31\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"- **Project management**:","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"- **Documentation**:","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"  - User Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"rexcyrio"},"content":"    - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"  - Developer Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"rexcyrio"},"content":"    - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"rexcyrio"},"content":"- **Community**:","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"rexcyrio"},"content":"- **Tools**:","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"rexcyrio":17,"minosx31":17}},{"path":"docs/team/niekis.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rexcyrio"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"rexcyrio"},"content":"layout: page","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"rexcyrio"},"content":"title: Fun Leon\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"rexcyrio"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"rexcyrio"},"content":"### Project: Fast Army Internal Lookup System","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"rexcyrio"},"content":"Fast Army Internal Lookup System is a desktop address book application built to handle the personal information of military personnel. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"rexcyrio"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"- **New Feature**:","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dniekis\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"- **Project management**:","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"- **Documentation**:","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"  - User Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"rexcyrio"},"content":"    - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"  - Developer Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"rexcyrio"},"content":"    - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"rexcyrio"},"content":"- **Community**:","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"rexcyrio"},"content":"- **Tools**:","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"rexcyrio":34}},{"path":"docs/team/rexcyrio.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rexcyrio"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"rexcyrio"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"rexcyrio"},"content":"title: Lee Wei Chong Stefan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"rexcyrio"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"rexcyrio"},"content":"### Project: Fast Army Internal Lookup System","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"rexcyrio"},"content":"Fast Army Internal Lookup System is a desktop address book application built to handle the personal information of military personnel. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"rexcyrio"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"- **New Feature**:","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003drexcyrio\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"- **Project management**:","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"- **Documentation**:","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"  - User Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"rexcyrio"},"content":"    - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"  - Developer Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"rexcyrio"},"content":"    - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"rexcyrio"},"content":"- **Community**:","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"rexcyrio"},"content":"- **Tools**:","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"rexcyrio"},"content":"  - *to be added soon*","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"rexcyrio":34}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"niekis":4,"-":21}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"minosx31":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"    public static final String MESSAGE_PERSONS_FILTERED_OVERVIEW \u003d \"Showing %1$d persons. (%2$d persons hidden)\";","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"niekis":1,"-":13}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"     * Returns true if {@code strings} contain any elements that are not blank.","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"    public static boolean isAnyNotBlank(String... strings) {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"        return strings !\u003d null \u0026\u0026 Arrays.stream(strings).anyMatch(s -\u003e !s.equals(\"\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"niekis":7,"-":35}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"     * Returns true if the {@code sentence} contains the {@code string}.","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"     * Ignores case and a partial substring match is enough.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"ab\") \u003d\u003d true","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"c D\") \u003d\u003d true","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"bcd\") \u003d\u003d false //not a full word match","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"     * @param string   cannot be null, cannot be empty","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"    public static boolean containsStringIgnoreCase(String sentence, String string) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"        requireNonNull(string);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"        String preppedString \u003d string.trim().toLowerCase();","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"        checkArgument(!preppedString.isEmpty(), \"String parameter cannot be empty\");","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"        return preppedSentence.contains(preppedString);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"niekis":27,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATOON;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RANK;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"            + PREFIX_RANK + \"RANK \"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"            + \"[\" + PREFIX_UNIT + \"UNIT] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"            + \"[\" + PREFIX_PLATOON + \"PLATOON] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"            + PREFIX_RANK + \"REC \"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"            + PREFIX_UNIT + \"Alpha \"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"            + PREFIX_COMPANY + \"Bravo \"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"            + PREFIX_PLATOON + \"Charlie \"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"rexcyrio"},"content":"        model.commit(model.getAddressBook());","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rexcyrio":2,"jugheadjones10":13,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"rexcyrio"},"content":"        model.commit(model.getAddressBook());","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rexcyrio":3,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CopyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import java.awt.HeadlessException;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import java.awt.datatransfer.Clipboard;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":" * Copies the details of an existing person in the address book to the user\u0027s clipboard.","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"public class CopyCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    public static final String COMMAND_WORD \u003d \"copy\";","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"            + \": Copies the information of the person identified by \"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"            + \"the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"    public static final String MESSAGE_COPY_SUCCESS \u003d \"Successfully copied information to clipboard!\";","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"    public static final String MESSAGE_NO_CLIPBOARD_FOUND \u003d \"Clipboard does not exist in your environment! \"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"            + \"Displaying information for you:\\n\\n\";","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"    public CopyCommand(Index targetIndex) {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"        Person personToCopy \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"        String informationToCopy \u003d getInformation(personToCopy);","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"            copyToClipboard(informationToCopy);","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"            return new CommandResult(MESSAGE_COPY_SUCCESS);","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"        } catch (HeadlessException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"            return new CommandResult(MESSAGE_NO_CLIPBOARD_FOUND + informationToCopy);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"                || (other instanceof CopyCommand // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"                \u0026\u0026 targetIndex.equals(((CopyCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"    public String getInformation(Person personToCopy) {","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"        final StringBuilder infoBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"        infoBuilder.append(\"Name: \" + personToCopy.getName() + \"\\n\")","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"                .append(\"Phone: \" + personToCopy.getPhone() + \"\\n\")","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"                .append(\"Email: \" + personToCopy.getEmail() + \"\\n\")","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"                .append(\"Address: \" + personToCopy.getAddress() + \"\\n\")","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"                .append(\"Rank: \" + personToCopy.getRank() + \"\\n\")","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"                .append(\"Unit: \" + personToCopy.getUnit() + \"\\n\")","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"                .append(\"Company: \" + personToCopy.getCompany() + \"\\n\")","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"minosx31"},"content":"                .append(\"Platoon: \" + personToCopy.getPlatoon() + \"\\n\");","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"minosx31"},"content":"        return infoBuilder.toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"     * Copies the information to user\u0027s clipboard","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"minosx31"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"minosx31"},"content":"     * @param information information to copy","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"minosx31"},"content":"    public void copyToClipboard(String information) {","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"minosx31"},"content":"        StringSelection stringSelection \u003d new StringSelection(information);","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"minosx31"},"content":"        Clipboard clipboard \u003d Toolkit.getDefaultToolkit().getSystemClipboard();","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"minosx31"},"content":"        clipboard.setContents(stringSelection, null);","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"minosx31":87}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"rexcyrio"},"content":"        model.commit(model.getAddressBook());","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rexcyrio":2,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATOON;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RANK;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"            + \"[\" + PREFIX_RANK + \"RANK] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"            + \"[\" + PREFIX_UNIT + \"UNIT] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jugheadjones10"},"content":"            + \"[\" + PREFIX_PLATOON + \"PLATOON] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"jugheadjones10"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"jugheadjones10"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"jugheadjones10"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"jugheadjones10"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"jugheadjones10"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"jugheadjones10"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"jugheadjones10"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"jugheadjones10"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"jugheadjones10"},"content":"        Rank updatedRank \u003d editPersonDescriptor.getRank().orElse(personToEdit.getRank());","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jugheadjones10"},"content":"        Unit updatedUnit \u003d editPersonDescriptor.getUnit().orElse(personToEdit.getUnit());","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"jugheadjones10"},"content":"        Company updatedCompany \u003d editPersonDescriptor.getCompany().orElse(personToEdit.getCompany());","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"jugheadjones10"},"content":"        Platoon updatedPlatoon \u003d editPersonDescriptor.getPlatoon().orElse(personToEdit.getPlatoon());","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"jugheadjones10"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"jugheadjones10"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRank,","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"jugheadjones10"},"content":"                updatedUnit, updatedCompany, updatedPlatoon, updatedTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"rexcyrio"},"content":"        model.commit(model.getAddressBook());","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"jugheadjones10"},"content":"        private Rank rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"jugheadjones10"},"content":"        private Unit unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"jugheadjones10"},"content":"        private Company company;","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"jugheadjones10"},"content":"        private Platoon platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"jugheadjones10"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"jugheadjones10"},"content":"            setRank(toCopy.rank);","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"jugheadjones10"},"content":"            setUnit(toCopy.unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"jugheadjones10"},"content":"            setCompany(toCopy.company);","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"jugheadjones10"},"content":"            setPlatoon(toCopy.platoon);","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"jugheadjones10"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, rank, unit, company, platoon, tags);","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"jugheadjones10"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"jugheadjones10"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"jugheadjones10"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"jugheadjones10"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"jugheadjones10"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"jugheadjones10"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"jugheadjones10"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"jugheadjones10"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"jugheadjones10"},"content":"        public Optional\u003cRank\u003e getRank() {","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"jugheadjones10"},"content":"            return Optional.ofNullable(rank);","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"jugheadjones10"},"content":"        public void setRank(Rank rank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"jugheadjones10"},"content":"            this.rank \u003d rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"jugheadjones10"},"content":"        public Optional\u003cUnit\u003e getUnit() {","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"jugheadjones10"},"content":"            return Optional.ofNullable(unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"jugheadjones10"},"content":"        public void setUnit(Unit unit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"jugheadjones10"},"content":"            this.unit \u003d unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"jugheadjones10"},"content":"        public Optional\u003cCompany\u003e getCompany() {","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"jugheadjones10"},"content":"            return Optional.ofNullable(company);","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"jugheadjones10"},"content":"        public void setCompany(Company company) {","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"jugheadjones10"},"content":"            this.company \u003d company;","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"jugheadjones10"},"content":"        public Optional\u003cPlatoon\u003e getPlatoon() {","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"jugheadjones10"},"content":"            return Optional.ofNullable(platoon);","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"jugheadjones10"},"content":"        public void setPlatoon(Platoon platoon) {","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"jugheadjones10"},"content":"            this.platoon \u003d platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"jugheadjones10"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"jugheadjones10"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"jugheadjones10"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"jugheadjones10"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"jugheadjones10"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"jugheadjones10"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"jugheadjones10"},"content":"                    \u0026\u0026 getRank().equals(e.getRank())","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"jugheadjones10"},"content":"                    \u0026\u0026 getUnit().equals(e.getUnit())","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"jugheadjones10"},"content":"                    \u0026\u0026 getCompany().equals(e.getCompany())","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"jugheadjones10"},"content":"                    \u0026\u0026 getPlatoon().equals(e.getPlatoon())","lastModifiedDate":"2023-03-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"rexcyrio":1,"jugheadjones10":88,"-":201}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_FILTERED_OVERVIEW;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATOON;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RANK;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"import seedu.address.model.person.FieldContainsPartialKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":" * Lists all persons in the address book, filtering out persons whose fields do not contain","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":" * the given filters. Keyword matching is case insensitive.","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters through all persons in the address \"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"            + \"book, removing persons whose fields fail to contain the specified keywords (case-insensitive)\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"            + \"[\" + PREFIX_RANK + \"RANK] \"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"            + \"[\" + PREFIX_UNIT + \"UNIT] \"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"            + \"[\" + PREFIX_PLATOON + \"PLATOON] \"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"            + PREFIX_NAME + \"jo \"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"            + PREFIX_PHONE + \"98 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"            + PREFIX_EMAIL + \"example.com \"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"            + PREFIX_ADDRESS + \"clementi \"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"            + PREFIX_RANK + \"3SG \"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"            + PREFIX_UNIT + \"6SIR \"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"            + PREFIX_COMPANY + \"Alpha \"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"            + PREFIX_PLATOON + \"2 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"            + PREFIX_TAG + \"2ic \"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"            + PREFIX_TAG + \"logistics \";","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"    public static final String MESSAGE_NO_FIELD_GIVEN \u003d \"At least one field must be provided to filter.\";","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"    public static final String MESSAGE_EMPTY_FIELD \u003d \"Field values should not be blank\";","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"    private final FilterDescriptor filterDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"    private final FieldContainsPartialKeywordsPredicate predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"     * @param filterDescriptor descriptor containing details used to filter","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"    public FilterCommand(FilterDescriptor filterDescriptor) {","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"        requireNonNull(filterDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"        this.filterDescriptor \u003d filterDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"        this.predicate \u003d createFilterPredicate(filterDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"     * Creates and returns a {@code FieldContainsKeywordsPredicatePartial} object with","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"     * the field values of {@code filterDescriptor}.","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"    private static FieldContainsPartialKeywordsPredicate createFilterPredicate(","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"            FilterDescriptor filterDescriptor) {","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"        return new FieldContainsPartialKeywordsPredicate(filterDescriptor.nameValue,","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"                filterDescriptor.phoneValue, filterDescriptor.emailValue,","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"                filterDescriptor.addressValue, filterDescriptor.rankValue,","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"                filterDescriptor.unitValue, filterDescriptor.companyValue,","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"                filterDescriptor.platoonValue, filterDescriptor.tagValues.stream().collect(Collectors.toList()));","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"        int originalCount \u003d model.getAddressBook().getPersonList().size();","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"        int currentCount \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"        int hiddenCount \u003d originalCount - currentCount;","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"                MESSAGE_PERSONS_FILTERED_OVERVIEW, currentCount, hiddenCount));","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"niekis"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"niekis"},"content":"        // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"niekis"},"content":"        FilterCommand f \u003d (FilterCommand) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"niekis"},"content":"        return filterDescriptor.equals(f.filterDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"niekis"},"content":"     * Stores the details to filter with. Each non-empty field value will be used as a","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"niekis"},"content":"     * filter, removing contacts that do not match.","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"niekis"},"content":"    public static class FilterDescriptor {","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"niekis"},"content":"        private static final String BLANK \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"niekis"},"content":"        private String nameValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"niekis"},"content":"        private String phoneValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"niekis"},"content":"        private String emailValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"niekis"},"content":"        private String addressValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"niekis"},"content":"        private String rankValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"niekis"},"content":"        private String unitValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"niekis"},"content":"        private String companyValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"niekis"},"content":"        private String platoonValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"niekis"},"content":"        private List\u003cString\u003e tagValues;","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"niekis"},"content":"        /**","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"niekis"},"content":"         * Constructs default FilterDescriptor that is used to contain details of a filter.","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"niekis"},"content":"         * Is created with blanks in all of its fields and an empty set for the set of tag","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"niekis"},"content":"         * values.","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"niekis"},"content":"         */","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"niekis"},"content":"        public FilterDescriptor() {","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"niekis"},"content":"            nameValue \u003d BLANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"niekis"},"content":"            phoneValue \u003d BLANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"niekis"},"content":"            emailValue \u003d BLANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"niekis"},"content":"            addressValue \u003d BLANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"niekis"},"content":"            rankValue \u003d BLANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"niekis"},"content":"            unitValue \u003d BLANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"niekis"},"content":"            companyValue \u003d BLANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"niekis"},"content":"            platoonValue \u003d BLANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"niekis"},"content":"            tagValues \u003d Collections.emptyList();","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"niekis"},"content":"        /**","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"niekis"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"niekis"},"content":"         */","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"niekis"},"content":"        public boolean hasNonEmptyField() {","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"niekis"},"content":"            return (CollectionUtil.isAnyNotBlank(nameValue, phoneValue, emailValue, addressValue, rankValue, unitValue,","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"niekis"},"content":"                    companyValue, platoonValue) || !(tagValues.isEmpty()));","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"niekis"},"content":"        public String getNameValue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"niekis"},"content":"            return nameValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"niekis"},"content":"        public void setNameValue(String nameValue) {","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"niekis"},"content":"            this.nameValue \u003d nameValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"niekis"},"content":"        public String getPhoneValue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"niekis"},"content":"            return phoneValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"niekis"},"content":"        public void setPhoneValue(String phoneValue) {","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"niekis"},"content":"            this.phoneValue \u003d phoneValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"niekis"},"content":"        public String getEmailValue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"niekis"},"content":"            return emailValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"niekis"},"content":"        public void setEmailValue(String emailValue) {","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"niekis"},"content":"            this.emailValue \u003d emailValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"niekis"},"content":"        public String getAddressValue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"niekis"},"content":"            return addressValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"niekis"},"content":"        public void setAddressValue(String addressValue) {","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"niekis"},"content":"            this.addressValue \u003d addressValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"niekis"},"content":"        public String getRankValue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"niekis"},"content":"            return rankValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"niekis"},"content":"        public void setRankValue(String rankValue) {","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"niekis"},"content":"            this.rankValue \u003d rankValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"niekis"},"content":"        public String getUnitValue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"niekis"},"content":"            return unitValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"niekis"},"content":"        public void setUnitValue(String unitValue) {","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"niekis"},"content":"            this.unitValue \u003d unitValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"niekis"},"content":"        public String getCompanyValue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"niekis"},"content":"            return companyValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"niekis"},"content":"        public void setCompanyValue(String companyValue) {","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"niekis"},"content":"            this.companyValue \u003d companyValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"niekis"},"content":"        public String getPlatoonValue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"niekis"},"content":"            return platoonValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"niekis"},"content":"        public void setPlatoonValue(String platoonValue) {","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"niekis"},"content":"            this.platoonValue \u003d platoonValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"niekis"},"content":"        public List\u003cString\u003e getTagValues() {","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"niekis"},"content":"            return tagValues;","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"niekis"},"content":"        public void setTagValues(List\u003cString\u003e tagValues) {","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"niekis"},"content":"            this.tagValues \u003d tagValues;","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"niekis"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"niekis"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"niekis"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"niekis"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"niekis"},"content":"                return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"niekis"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"niekis"},"content":"            if (!(other instanceof FilterDescriptor)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"niekis"},"content":"                return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"niekis"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"niekis"},"content":"            // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"niekis"},"content":"            FilterDescriptor e \u003d (FilterDescriptor) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"niekis"},"content":"            return getNameValue().equals(e.getNameValue())","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"niekis"},"content":"                    \u0026\u0026 getPhoneValue().equals(e.getPhoneValue())","lastModifiedDate":"2023-03-15"},{"lineNumber":242,"author":{"gitId":"niekis"},"content":"                    \u0026\u0026 getEmailValue().equals(e.getEmailValue())","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"niekis"},"content":"                    \u0026\u0026 getAddressValue().equals(e.getAddressValue())","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"niekis"},"content":"                    \u0026\u0026 getRankValue().equals(e.getRankValue())","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"niekis"},"content":"                    \u0026\u0026 getUnitValue().equals(e.getUnitValue())","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"niekis"},"content":"                    \u0026\u0026 getCompanyValue().equals(e.getCompanyValue())","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"niekis"},"content":"                    \u0026\u0026 getPlatoonValue().equals(e.getPlatoonValue())","lastModifiedDate":"2023-03-15"},{"lineNumber":248,"author":{"gitId":"niekis"},"content":"                    \u0026\u0026 getTagValues().equals(e.getTagValues());","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":251,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"niekis":251}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rexcyrio"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"rexcyrio"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"rexcyrio"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"rexcyrio"},"content":" * Undo the last modification done to the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"rexcyrio"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"rexcyrio"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"rexcyrio"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"            + \": Undo the last modification done to the address book.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"rexcyrio"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"    public static final String MESSAGE_UNDO_SUCCESS \u003d \"Undo success!\";","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"rexcyrio"},"content":"    public static final String MESSAGE_NOTHING_TO_UNDO \u003d \"There is nothing to undo\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"rexcyrio"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"rexcyrio"},"content":"        if (model.canUndo()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"rexcyrio"},"content":"            model.undo();","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"            return new CommandResult(MESSAGE_UNDO_SUCCESS);","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"rexcyrio"},"content":"        } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"rexcyrio"},"content":"            return new CommandResult(MESSAGE_NOTHING_TO_UNDO);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"rexcyrio"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"rexcyrio"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"rexcyrio":32}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATOON;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RANK;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_RANK,","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"                        PREFIX_UNIT, PREFIX_COMPANY, PREFIX_PLATOON, PREFIX_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_RANK)","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"jugheadjones10"},"content":"        Rank rank \u003d ParserUtil.parseRank(argMultimap.getValue(PREFIX_RANK).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"        Unit unit \u003d ParserUtil.parseUnit(argMultimap.getValue(PREFIX_UNIT).orElse(\"N/A\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"        Company company \u003d ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).orElse(\"N/A\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"        Platoon platoon \u003d ParserUtil.parsePlatoon(argMultimap.getValue(PREFIX_PLATOON).orElse(\"N/A\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"        Person person \u003d new Person(name, phone, email, address, rank, unit, company, platoon, tagList);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jugheadjones10":25,"-":49}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"minosx31"},"content":"        case CopyCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"minosx31"},"content":"            return new CopyCommandParser().parse(arguments);","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"rexcyrio"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"rexcyrio"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rexcyrio":4,"minosx31":4,"niekis":4,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"    public static final Prefix PREFIX_RANK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"    public static final Prefix PREFIX_UNIT \u003d new Prefix(\"u/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public static final Prefix PREFIX_PLATOON \u003d new Prefix(\"pl/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jugheadjones10":4,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/CopyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":" * Parses input arguments and creates a new CopyCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"public class CopyCommandParser implements Parser\u003cCopyCommand\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"     * Parses the given {@code String} of arguments in the context of the CopyCommand","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"     * and returns an CopyCommand object for execution.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"    public CopyCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"            return new CopyCommand(index);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CopyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"minosx31":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATOON;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RANK;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_RANK,","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"                        PREFIX_UNIT, PREFIX_COMPANY, PREFIX_PLATOON, PREFIX_TAG);","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"        if (argMultimap.getValue(PREFIX_RANK).isPresent()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"            editPersonDescriptor.setRank(ParserUtil.parseRank(argMultimap.getValue(PREFIX_RANK).get()));","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"        if (argMultimap.getValue(PREFIX_UNIT).isPresent()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"            editPersonDescriptor.setUnit(ParserUtil.parseUnit(argMultimap.getValue(PREFIX_UNIT).get()));","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"jugheadjones10"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"jugheadjones10"},"content":"            editPersonDescriptor.setCompany(ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"jugheadjones10"},"content":"        if (argMultimap.getValue(PREFIX_PLATOON).isPresent()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"jugheadjones10"},"content":"            editPersonDescriptor.setPlatoon(ParserUtil.parsePlatoon(argMultimap.getValue(PREFIX_PLATOON).get()));","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jugheadjones10":19,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATOON;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand.FilterDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":" * Parses input arguments and creates a new {@code FilterCommand} object","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code FilterCommand}","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"     * and returns a {@code FilterCommand} object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_RANK,","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"                        PREFIX_UNIT, PREFIX_COMPANY, PREFIX_PLATOON, PREFIX_TAG);","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"        FilterDescriptor filterDescriptor \u003d new FilterDescriptor();","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"            String nameValue \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"            requireFieldValueNotBlank(nameValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"            filterDescriptor.setNameValue(nameValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"            String phoneValue \u003d argMultimap.getValue(PREFIX_PHONE).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"            requireFieldValueNotBlank(phoneValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"            filterDescriptor.setPhoneValue(phoneValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"            String emailValue \u003d argMultimap.getValue(PREFIX_EMAIL).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"            requireFieldValueNotBlank(emailValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"            filterDescriptor.setEmailValue(emailValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"            String addressValue \u003d argMultimap.getValue(PREFIX_ADDRESS).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"            requireFieldValueNotBlank(addressValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"            filterDescriptor.setAddressValue(addressValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"        if (argMultimap.getValue(PREFIX_RANK).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"            String rankValue \u003d argMultimap.getValue(PREFIX_RANK).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"            requireFieldValueNotBlank(rankValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"            filterDescriptor.setRankValue(rankValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"        if (argMultimap.getValue(PREFIX_UNIT).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"            String unitValue \u003d argMultimap.getValue(PREFIX_UNIT).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"            requireFieldValueNotBlank(unitValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"            filterDescriptor.setUnitValue(unitValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"            String companyValue \u003d argMultimap.getValue(PREFIX_COMPANY).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"            requireFieldValueNotBlank(companyValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"            filterDescriptor.setCompanyValue(companyValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"        if (argMultimap.getValue(PREFIX_PLATOON).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"            String platoonValue \u003d argMultimap.getValue(PREFIX_PLATOON).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"            requireFieldValueNotBlank(platoonValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"            filterDescriptor.setPlatoonValue(platoonValue);","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"        List\u003cString\u003e tagValues \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"        assert tagValues !\u003d null;","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"        if (tagValues.stream().anyMatch(t -\u003e t.equals(\"\"))) {","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"            throw new ParseException(FilterCommand.MESSAGE_EMPTY_FIELD);","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"        filterDescriptor.setTagValues(tagValues);","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"        if (!filterDescriptor.hasNonEmptyField()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"            throw new ParseException(FilterCommand.MESSAGE_NO_FIELD_GIVEN);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"        return new FilterCommand(filterDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"    private String requireFieldValueNotBlank(String fieldValue) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"        if (fieldValue.isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"            throw new ParseException(FilterCommand.MESSAGE_EMPTY_FIELD);","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"        return fieldValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"niekis":103}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"jugheadjones10"},"content":"     * Parses a {@code String rank} into an {@code Rank}.","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"jugheadjones10"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"jugheadjones10"},"content":"     * @throws ParseException if the given {@code rank} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jugheadjones10"},"content":"    public static Rank parseRank(String rank) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"jugheadjones10"},"content":"        requireNonNull(rank);","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"jugheadjones10"},"content":"        String trimmedRank \u003d rank.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"jugheadjones10"},"content":"        if (!Rank.isValidRank(trimmedRank)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"jugheadjones10"},"content":"            throw new ParseException(Rank.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jugheadjones10"},"content":"        return new Rank(trimmedRank);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jugheadjones10"},"content":"     * Parses a {@code String unit} into an {@code Unit}.","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"jugheadjones10"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jugheadjones10"},"content":"     * @throws ParseException if the given {@code unit} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jugheadjones10"},"content":"    public static Unit parseUnit(String unit) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jugheadjones10"},"content":"        requireNonNull(unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jugheadjones10"},"content":"        String trimmedUnit \u003d unit.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jugheadjones10"},"content":"        if (!Unit.isValidUnit(trimmedUnit)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jugheadjones10"},"content":"            throw new ParseException(Unit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jugheadjones10"},"content":"        return new Unit(trimmedUnit);","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jugheadjones10"},"content":"     * Parses a {@code String company} into an {@code Company}.","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jugheadjones10"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jugheadjones10"},"content":"     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"jugheadjones10"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"jugheadjones10"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jugheadjones10"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"jugheadjones10"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jugheadjones10"},"content":"            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"jugheadjones10"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"jugheadjones10"},"content":"     * Parses a {@code String platoon} into an {@code Platoon}.","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"jugheadjones10"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"jugheadjones10"},"content":"     * @throws ParseException if the given {@code platoon} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"jugheadjones10"},"content":"    public static Platoon parsePlatoon(String platoon) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"jugheadjones10"},"content":"        requireNonNull(platoon);","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"jugheadjones10"},"content":"        String trimmedPlatoon \u003d platoon.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"jugheadjones10"},"content":"        if (!Platoon.isValidPlatoon(trimmedPlatoon)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"jugheadjones10"},"content":"            throw new ParseException(Platoon.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"jugheadjones10"},"content":"        return new Platoon(trimmedPlatoon);","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jugheadjones10":65,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"    private final ArrayList\u003cReadOnlyAddressBook\u003e addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"rexcyrio"},"content":"    private int currentStatePointer;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"rexcyrio"},"content":"    public AddressBook() {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"rexcyrio"},"content":"        addressBookStateList.add(toBeCopied);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"rexcyrio"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"rexcyrio"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"rexcyrio"},"content":"     * Saves the current address book state to history.","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"rexcyrio"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"rexcyrio"},"content":"     * @param currentState The current state of the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"rexcyrio"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"rexcyrio"},"content":"    public void commit(ReadOnlyAddressBook currentState) {","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"rexcyrio"},"content":"        if (currentStatePointer \u003c addressBookStateList.size() - 1) {","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"rexcyrio"},"content":"            // need to remove all states to the right","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"rexcyrio"},"content":"            int numStatesToRemove \u003d addressBookStateList.size() - 1 - currentStatePointer;","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"rexcyrio"},"content":"            for (int i \u003d 0; i \u003c numStatesToRemove; i++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"rexcyrio"},"content":"                addressBookStateList.remove(addressBookStateList.size() - 1);","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"rexcyrio"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"rexcyrio"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"rexcyrio"},"content":"        addressBookStateList.add(new AddressBook(currentState));","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"rexcyrio"},"content":"        currentStatePointer +\u003d 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"rexcyrio"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"rexcyrio"},"content":"     * Restores the previous address book state from history.","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"rexcyrio"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"rexcyrio"},"content":"    public void undo() {","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"rexcyrio"},"content":"        ReadOnlyAddressBook previousState \u003d addressBookStateList.get(currentStatePointer - 1);","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"rexcyrio"},"content":"        resetData(previousState);","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"rexcyrio"},"content":"        currentStatePointer -\u003d 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"rexcyrio"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"rexcyrio"},"content":"     * Checks whether there are old address book states in history to undo.","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"rexcyrio"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"rexcyrio"},"content":"     * @return A boolean indicating if there are old address book states in history.","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"rexcyrio"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"rexcyrio"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"rexcyrio"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"rexcyrio"},"content":"        return persons.toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"rexcyrio"},"content":"        // return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rexcyrio":46,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"rexcyrio"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"rexcyrio"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"rexcyrio"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"rexcyrio"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"rexcyrio"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"rexcyrio"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"rexcyrio"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"rexcyrio"},"content":"     * Saves the current address book state to history.","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"rexcyrio"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"rexcyrio"},"content":"     * @param currentState The current state of the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"rexcyrio"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"rexcyrio"},"content":"    void commit(ReadOnlyAddressBook currentState);","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"rexcyrio"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"rexcyrio"},"content":"     * Restores the previous address book state from history.","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"rexcyrio"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"rexcyrio"},"content":"    void undo();","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"rexcyrio"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"rexcyrio"},"content":"     * Checks whether there are old address book states in history to undo.","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"rexcyrio"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"rexcyrio"},"content":"     * @return A boolean indicating if there are old address book states in history.","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"rexcyrio"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"rexcyrio"},"content":"    boolean canUndo();","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"rexcyrio"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"rexcyrio"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"rexcyrio"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"rexcyrio"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rexcyrio":35,"-":78}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"rexcyrio"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"rexcyrio"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"rexcyrio"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"rexcyrio"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"rexcyrio"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"rexcyrio"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"rexcyrio"},"content":"        return addressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"rexcyrio"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"rexcyrio"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"rexcyrio"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"rexcyrio"},"content":"    public void commit(ReadOnlyAddressBook currentState) {","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"rexcyrio"},"content":"        addressBook.commit(currentState);","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"rexcyrio"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"rexcyrio"},"content":"    public void undo() {","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"rexcyrio"},"content":"        addressBook.undo();","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"rexcyrio"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"rexcyrio"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"rexcyrio"},"content":"        return addressBook.canUndo();","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rexcyrio":24,"-":141}},{"path":"src/main/java/seedu/address/model/person/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":" * Represents a Person\u0027s company in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompany(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"public class Company {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"            \"Company should be alphanumeric phrase or word\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9 /]+$\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"     * Constructs a {@code Company}.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"     * @param company A valid company.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"    public Company(String company) {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"        requireNonNull(company);","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"        checkArgument(isValidCompany(company), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"        value \u003d company;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"     * Returns true if a given string is a valid company.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"                || (other instanceof Company // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"                \u0026\u0026 value.equals(((Company) other).value)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jugheadjones10":54}},{"path":"src/main/java/seedu/address/model/person/FieldContainsPartialKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":" * Tests if all of a {@code Person}\u0027s field values ({@code Name, Phone, Email,","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":" * Address, Tags}) match all the keywords given. A match is found only if the","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":" * keyword matches any subpart of a {@code Person}\u0027s field value.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"public class FieldContainsPartialKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"    private final String nameKeyword;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"    private final String phoneKeyword;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"    private final String emailKeyword;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"    private final String addressKeyword;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"    private final String rankKeyword;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"    private final String unitKeyword;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"    private final String companyKeyword;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"    private final String platoonKeyword;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"    private final List\u003cString\u003e tagKeywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"     * Create a FieldContainsKeywordsPredicatePartial to determine","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"     * if a {@code Person}\u0027s field values match all the keywords given.","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"     * @param nameKeyword keyword given for the name field. Can be left blank.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"     * @param phoneKeyword keyword given for the phone field. Can be left blank.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"     * @param emailKeyword keyword given for the email field. Can be left blank.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"     * @param addressKeyword keyword given for the address field. Can be left blank.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"     * @param tagKeywords list of keywords given for the tag field. Can be left blank.","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"    public FieldContainsPartialKeywordsPredicate(String nameKeyword, String phoneKeyword,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"            String emailKeyword, String addressKeyword, String rankKeyword, String unitKeyword,","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"            String companyKeyword, String platoonKeyword, List\u003cString\u003e tagKeywords) {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"        this.nameKeyword \u003d nameKeyword;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"        this.phoneKeyword \u003d phoneKeyword;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"        this.emailKeyword \u003d emailKeyword;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"        this.addressKeyword \u003d addressKeyword;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"        this.rankKeyword \u003d rankKeyword;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"        this.unitKeyword \u003d unitKeyword;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"        this.companyKeyword \u003d companyKeyword;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"        this.platoonKeyword \u003d platoonKeyword;","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"        this.tagKeywords \u003d tagKeywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"        boolean namePass \u003d nameKeyword.isEmpty()","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"                || StringUtil.containsStringIgnoreCase(person.getName().toString(), nameKeyword);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"        boolean phonePass \u003d phoneKeyword.isEmpty()","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"                || StringUtil.containsStringIgnoreCase(person.getPhone().toString(), phoneKeyword);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"        boolean emailPass \u003d emailKeyword.isEmpty()","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"                || StringUtil.containsStringIgnoreCase(person.getEmail().toString(), emailKeyword);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"        boolean addressPass \u003d addressKeyword.isEmpty()","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"                || StringUtil.containsStringIgnoreCase(person.getAddress().toString(), addressKeyword);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"        boolean rankPass \u003d rankKeyword.isEmpty()","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"                || StringUtil.containsStringIgnoreCase(person.getRank().toString(), rankKeyword);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"        boolean unitPass \u003d unitKeyword.isEmpty()","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"                || StringUtil.containsStringIgnoreCase(person.getUnit().toString(), unitKeyword);","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"        boolean companyPass \u003d companyKeyword.isEmpty()","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"                || StringUtil.containsStringIgnoreCase(person.getCompany().toString(), companyKeyword);","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"        boolean platoonPass \u003d platoonKeyword.isEmpty()","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"                || StringUtil.containsStringIgnoreCase(person.getPlatoon().toString(), platoonKeyword);","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"        boolean tagsPass \u003d tagKeywords.stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"                .allMatch(keyword -\u003e person.getTags().stream().anyMatch(","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"                        tag -\u003e StringUtil.containsStringIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"        return namePass \u0026\u0026 phonePass \u0026\u0026 emailPass \u0026\u0026 addressPass \u0026\u0026 rankPass \u0026\u0026 unitPass \u0026\u0026 companyPass","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 platoonPass \u0026\u0026 tagsPass;","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"                || (other instanceof FieldContainsPartialKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 nameKeyword.equals(((FieldContainsPartialKeywordsPredicate) other).nameKeyword)","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 phoneKeyword.equals(((FieldContainsPartialKeywordsPredicate) other).phoneKeyword)","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 emailKeyword.equals(((FieldContainsPartialKeywordsPredicate) other).emailKeyword)","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 addressKeyword.equals(((FieldContainsPartialKeywordsPredicate) other).addressKeyword)","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 rankKeyword.equals(((FieldContainsPartialKeywordsPredicate) other).rankKeyword)","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 unitKeyword.equals(((FieldContainsPartialKeywordsPredicate) other).unitKeyword)","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 companyKeyword.equals(((FieldContainsPartialKeywordsPredicate) other).companyKeyword)","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 platoonKeyword.equals(((FieldContainsPartialKeywordsPredicate) other).platoonKeyword)","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"                \u0026\u0026 tagKeywords.equals(((FieldContainsPartialKeywordsPredicate) other).tagKeywords)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"niekis":88}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":" * A match is found only if the keyword matches the a whole word in a {@code Person}\u0027s","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":" * {@code Name}.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"niekis":2,"-":31}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"    private final Rank rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"    private final Unit unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    private final Company company;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"    private final Platoon platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Rank rank,","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"                  Unit unit, Company company, Platoon platoon, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"        requireAllNonNull(name, phone, email, address, rank, unit, company, platoon, tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"        this.company \u003d company;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"        this.platoon \u003d platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"    public Rank getRank() {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"        return rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"    public Unit getUnit() {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"        return unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"jugheadjones10"},"content":"    public Company getCompany() {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jugheadjones10"},"content":"        return company;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"jugheadjones10"},"content":"    public Platoon getPlatoon() {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"jugheadjones10"},"content":"        return platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"jugheadjones10"},"content":"                \u0026\u0026 otherPerson.getRank().equals(getRank())","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jugheadjones10"},"content":"                \u0026\u0026 otherPerson.getUnit().equals(getUnit())","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jugheadjones10"},"content":"                \u0026\u0026 otherPerson.getCompany().equals(getCompany())","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jugheadjones10"},"content":"                \u0026\u0026 otherPerson.getPlatoon().equals(getPlatoon())","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"jugheadjones10"},"content":"        return Objects.hash(name, phone, email, address, rank, unit, company, platoon, tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"jugheadjones10"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jugheadjones10"},"content":"                .append(\"; Rank: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jugheadjones10"},"content":"                .append(getRank())","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"jugheadjones10"},"content":"                .append(\"; Unit: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"jugheadjones10"},"content":"                .append(getUnit())","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"jugheadjones10"},"content":"                .append(\"; Company: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"jugheadjones10"},"content":"                .append(getCompany())","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"jugheadjones10"},"content":"                .append(\"; Platoon: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"jugheadjones10"},"content":"                .append(getPlatoon());","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jugheadjones10":41,"-":119}},{"path":"src/main/java/seedu/address/model/person/Platoon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":" * Represents a Person\u0027s platoon in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPlatoon(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"public class Platoon {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"            \"Platoon should be alphanumeric phrase or word\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9 /]+$\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"     * Constructs a {@code Platoon}.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"     * @param platoon A valid platoon.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"    public Platoon(String platoon) {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"        requireNonNull(platoon);","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"        checkArgument(isValidPlatoon(platoon), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"        value \u003d platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"     * Returns true if a given string is a valid platoon.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"    public static boolean isValidPlatoon(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"                || (other instanceof Platoon // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"                \u0026\u0026 value.equals(((Platoon) other).value)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jugheadjones10":54}},{"path":"src/main/java/seedu/address/model/person/Rank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":" * Represents a Person\u0027s rank in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRank(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"public class Rank {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"            \"Rank should only be from the following list: REC, PTE, CPL, 3SG, 2LT and it should not be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"    public static final HashSet\u003cString\u003e VALID_RANKS \u003d new HashSet\u003c\u003e(Arrays.asList(\"REC\", \"PTE\", \"CPL\", \"3SG\", \"2LT\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"    public final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"     * Constructs a {@code Rank}.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"     * @param rank A valid rank.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    public Rank(String rank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"        requireNonNull(rank);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"        checkArgument(isValidRank(rank), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"        value \u003d rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"     * Returns true if a given string is a valid rank.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"    public static boolean isValidRank(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"        requireNonNull(test);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"        return VALID_RANKS.contains(test);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"                || (other instanceof Rank // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"                \u0026\u0026 value.equals(((Rank) other).value)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"jugheadjones10"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jugheadjones10":58}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"rexcyrio"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"rexcyrio"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"rexcyrio"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"rexcyrio"},"content":"        return internalList.stream().map(Object::toString).collect(Collectors.joining(\", \"));","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rexcyrio":7,"-":136}},{"path":"src/main/java/seedu/address/model/person/Unit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":" * Represents a Person\u0027s unit in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUnit(String)}","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"public class Unit {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"            \"Unit should be alphanumeric phrase or word\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9 /]+$\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"     * Constructs a {@code Unit}.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"     * @param unit A valid unit.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"    public Unit(String unit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"        requireNonNull(unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"        checkArgument(isValidUnit(unit), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"        value \u003d unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"     * Returns true if a given string is a valid unit.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"    public static boolean isValidUnit(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"                || (other instanceof Unit // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"                \u0026\u0026 value.equals(((Unit) other).value)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jugheadjones10":54}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"                        new Rank(\"REC\"), new Unit(\"BMT\"), new Company(\"Coy\"), new Platoon(\"Plt\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"                        new Rank(\"CPL\"), new Unit(\"Bravo\"), new Company(\"Charlie\"), new Platoon(\"Tiger 123\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"                        new Rank(\"PTE\"), new Unit(\"Alpha\"), new Company(\"Bravo\"), new Platoon(\"Tiger 123\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"                        new Rank(\"3SG\"), new Unit(\"Charlie1\"), new Company(\"12 Bravo\"), new Platoon(\"Fierce 123\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"                        new Rank(\"2LT\"), new Unit(\"Charlie2\"), new Company(\"12 Bravo\"), new Platoon(\"Fierce 123\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"                        new Rank(\"PTE\"), new Unit(\"Alpha Males\"), new Company(\"Boo Bravo\"), new Platoon(\"Tiger 123\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jugheadjones10":10,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"    private final String rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"    private final String unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"    private final String company;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"    private final String platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"                             @JsonProperty(\"rank\") String rank, @JsonProperty(\"unit\") String unit,","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"                             @JsonProperty(\"company\") String company, @JsonProperty(\"platoon\") String platoon,","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"jugheadjones10"},"content":"        this.rank \u003d rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"jugheadjones10"},"content":"        this.unit \u003d unit \u003d\u003d null ? \"N/A\" : unit;","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"        this.company \u003d company \u003d\u003d null ? \"N/A\" : company;","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"jugheadjones10"},"content":"        this.platoon \u003d platoon \u003d\u003d null ? \"N/A\" : platoon;","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jugheadjones10"},"content":"        rank \u003d source.getRank().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"jugheadjones10"},"content":"        unit \u003d source.getUnit().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"jugheadjones10"},"content":"        company \u003d source.getCompany().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jugheadjones10"},"content":"        platoon \u003d source.getPlatoon().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"jugheadjones10"},"content":"        if (rank \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jugheadjones10"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rank.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jugheadjones10"},"content":"        if (!Rank.isValidRank(rank)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jugheadjones10"},"content":"            throw new IllegalValueException(Rank.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jugheadjones10"},"content":"        final Rank modelRank \u003d new Rank(rank);","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jugheadjones10"},"content":"        if (unit \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jugheadjones10"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rank.class.getSimpleName()));","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jugheadjones10"},"content":"        if (!Unit.isValidUnit(unit)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jugheadjones10"},"content":"            throw new IllegalValueException(Unit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jugheadjones10"},"content":"        final Unit modelUnit \u003d new Unit(unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"jugheadjones10"},"content":"        if (company \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jugheadjones10"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rank.class.getSimpleName()));","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jugheadjones10"},"content":"        if (!Company.isValidCompany(company)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jugheadjones10"},"content":"            throw new IllegalValueException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"jugheadjones10"},"content":"        final Company modelCompany \u003d new Company(company);","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"jugheadjones10"},"content":"        if (platoon \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"jugheadjones10"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Platoon.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"jugheadjones10"},"content":"        if (!Platoon.isValidPlatoon(platoon)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"jugheadjones10"},"content":"            throw new IllegalValueException(Platoon.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"jugheadjones10"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"jugheadjones10"},"content":"        final Platoon modelPlatoon \u003d new Platoon(platoon);","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"jugheadjones10"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRank,","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"jugheadjones10"},"content":"                modelUnit, modelCompany, modelPlatoon, modelTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jugheadjones10":55,"-":107}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    private Label rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"    private Label unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"    private Label company;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"    private Label platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"        rank.setText(person.getRank().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"        unit.setText(person.getUnit().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"jugheadjones10"},"content":"        company.setText(person.getCompany().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"jugheadjones10"},"content":"        platoon.setText(person.getPlatoon().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jugheadjones10":18,"-":77}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"            \u003cLabel fx:id\u003d\"rank\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$rank\"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"            \u003cLabel fx:id\u003d\"unit\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$unit\"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"            \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$company\"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"            \u003cLabel fx:id\u003d\"platoon\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$platoon\"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jugheadjones10":5,"-":34}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"niekis"},"content":"    //---------------- Tests for containsStringIgnoreCase --------------------------------------","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"niekis"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"niekis"},"content":"     * Invalid equivalence partitions for string: null, empty","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"niekis"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"niekis"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"niekis"},"content":"    public void containsStringIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"niekis"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsStringIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"niekis"},"content":"    public void containsStringIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"niekis"},"content":"        assertThrows(IllegalArgumentException.class, \"String parameter cannot be empty\", ()","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"niekis"},"content":"                -\u003e StringUtil.containsStringIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"niekis"},"content":"    public void containsStringIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"niekis"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsStringIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"niekis"},"content":"    /*","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"niekis"},"content":"     * Valid equivalence partitions for string:","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"niekis"},"content":"     *   - single word","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"niekis"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"niekis"},"content":"     *   - multiple words seperated with spaces","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"niekis"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"niekis"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"niekis"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"niekis"},"content":"     *   - empty string","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"niekis"},"content":"     *   - one word","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"niekis"},"content":"     *   - multiple words","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"niekis"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"niekis"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"niekis"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"niekis"},"content":"     *   - matches substring taken from the front of sentence","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"niekis"},"content":"     *   - matches substring taken from the back of sentence","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"niekis"},"content":"     *   - matches substring taken from middle of sentence","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"niekis"},"content":"     *   - matches multiple portions in the sentence","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"niekis"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"niekis"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"niekis"},"content":"     *   - sentence contains substrings that match part of the query string","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"niekis"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"niekis"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"niekis"},"content":"    public void containsStringIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"niekis"},"content":"        // Empty sentence","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"niekis"},"content":"        assertFalse(StringUtil.containsStringIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"niekis"},"content":"        assertFalse(StringUtil.containsStringIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"niekis"},"content":"        // Sentence containing substrings of query string","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"niekis"},"content":"        assertFalse(StringUtil.containsStringIgnoreCase(\"bbb\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"niekis"},"content":"        assertFalse(StringUtil.containsStringIgnoreCase(\"bbb b\", \"bbbb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"niekis"},"content":"        // Either sentence or query string has extra spaces in the middle of the substring","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"niekis"},"content":"        assertFalse(StringUtil.containsStringIgnoreCase(\"  AAA   bBb  ccc  \", \"aaa  b\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"niekis"},"content":"        assertFalse(StringUtil.containsStringIgnoreCase(\"  AAA  bBb  ccc  \", \"    aaa   b\")); // String has extra spaces","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"niekis"},"content":"        // Matches substring in the sentence, different upper/lower case letters","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"niekis"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"aaa bBb ccc\", \"AaA Bbb\")); // Substring at the start","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"niekis"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Substring at the end","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"niekis"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"aaa bBb ccc@1\", \"a bBB c\")); // Substring in the middle","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"niekis"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"niekis"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"niekis"},"content":"        // Matches multiple substrings in sentence","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"niekis"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"AAA bBb ccc  bbb cAbcc\", \"bbB c\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"niekis":75,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RANK_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"jugheadjones10"},"content":"                + ADDRESS_DESC_AMY + RANK_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"jugheadjones10"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jugheadjones10":8,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"rexcyrio"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"rexcyrio"},"content":"        assertEquals(Collections.singletonList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"rexcyrio"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"rexcyrio"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"rexcyrio"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"rexcyrio"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"rexcyrio"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"rexcyrio"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"rexcyrio"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"rexcyrio"},"content":"        public void commit(ReadOnlyAddressBook currentState) {","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"rexcyrio"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"rexcyrio"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"rexcyrio"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"rexcyrio"},"content":"        public void undo() {","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"rexcyrio"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"rexcyrio"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"rexcyrio"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"rexcyrio"},"content":"        public boolean canUndo() {","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"rexcyrio"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"rexcyrio"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"rexcyrio"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":208,"author":{"gitId":"rexcyrio"},"content":"        public void commit(ReadOnlyAddressBook currentState) {","lastModifiedDate":"2023-03-10"},{"lineNumber":209,"author":{"gitId":"rexcyrio"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":210,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"rexcyrio":31,"-":180}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATOON;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RANK;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"import seedu.address.testutil.FilterDescriptorBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALID_RANK_AMY \u003d \"PTE\";","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALID_RANK_BOB \u003d \"CPL\";","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALID_UNIT_AMY \u003d \"Alpha123\";","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALID_UNIT_BOB \u003d \"Bravoado123123\";","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALID_COMPANY_AMY \u003d \"qaweqf\";","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALID_COMPANY_BOB \u003d \"hahaimthebestsoldier\";","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALID_PLATOON_AMY \u003d \"123N/A\";","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"    public static final String VALID_PLATOON_BOB \u003d \"N/A\";","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"jugheadjones10"},"content":"    public static final String RANK_DESC_AMY \u003d \" \" + PREFIX_RANK + VALID_RANK_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"jugheadjones10"},"content":"    public static final String RANK_DESC_BOB \u003d \" \" + PREFIX_RANK + VALID_RANK_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"jugheadjones10"},"content":"    public static final String UNIT_DESC_AMY \u003d \" \" + PREFIX_UNIT + VALID_UNIT_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"    public static final String UNIT_DESC_BOB \u003d \" \" + PREFIX_UNIT + VALID_UNIT_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"    public static final String COMPANY_DESC_AMY \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"    public static final String COMPANY_DESC_BOB \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"    public static final String PLATOON_DESC_AMY \u003d \" \" + PREFIX_PLATOON + VALID_PLATOON_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"    public static final String PLATOON_DESC_BOB \u003d \" \" + PREFIX_PLATOON + VALID_PLATOON_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"jugheadjones10"},"content":"    public static final String INVALID_RANK_DESC \u003d \" \" + PREFIX_RANK + \"human\"; // not one of the valid ranks","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"jugheadjones10"},"content":"    public static final String INVALID_UNIT_DESC \u003d \" \" + PREFIX_UNIT + \"!@#\"; // only alphanumeric characters allowed","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"jugheadjones10"},"content":"    public static final String INVALID_COMPANY_DESC \u003d \" \" + PREFIX_COMPANY + \"%^\u0026^\"; // not one of the valid units","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"jugheadjones10"},"content":"    public static final String INVALID_PLATOON_DESC \u003d \" \" + PREFIX_PLATOON + \")(*n\"; //not one of the valid units","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"    public static final EditCommand.EditPersonDescriptor EDIT_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"    public static final EditCommand.EditPersonDescriptor EDIT_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"    public static final FilterCommand.FilterDescriptor FILTER_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"    public static final FilterCommand.FilterDescriptor FILTER_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"        EDIT_DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"                .withRank(VALID_RANK_AMY).withUnit(VALID_UNIT_AMY).withCompany(VALID_COMPANY_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"                .withPlatoon(VALID_PLATOON_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"        EDIT_DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"                .withRank(VALID_RANK_BOB).withUnit(VALID_UNIT_BOB).withCompany(VALID_COMPANY_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"                .withPlatoon(VALID_PLATOON_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"    static {","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"        FILTER_DESC_AMY \u003d new FilterDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"niekis"},"content":"                .withRank(VALID_RANK_AMY).withUnit(VALID_UNIT_AMY).withCompany(VALID_COMPANY_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"niekis"},"content":"                .withPlatoon(VALID_PLATOON_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"niekis"},"content":"        FILTER_DESC_BOB \u003d new FilterDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"niekis"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"niekis"},"content":"                .withRank(VALID_RANK_BOB).withUnit(VALID_UNIT_BOB).withCompany(VALID_COMPANY_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"niekis"},"content":"                .withPlatoon(VALID_PLATOON_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"niekis"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"niekis":24,"jugheadjones10":25,"-":120}},{"path":"src/test/java/seedu/address/logic/commands/CopyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"import java.awt.GraphicsEnvironment;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"public class CopyCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"    private final Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"minosx31"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"minosx31"},"content":"    public void execute_copyValidIndex_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"minosx31"},"content":"        if (GraphicsEnvironment.isHeadless()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"minosx31"},"content":"            CopyCommand copyCommand \u003d new CopyCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"minosx31"},"content":"            Person personToCopy \u003d expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"minosx31"},"content":"            String expectedMessage \u003d CopyCommand.MESSAGE_NO_CLIPBOARD_FOUND + copyCommand.getInformation(personToCopy);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"minosx31"},"content":"            assertCommandSuccess(copyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"minosx31"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"minosx31"},"content":"            CopyCommand copyCommand \u003d new CopyCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"minosx31"},"content":"            assertCommandSuccess(copyCommand, model, CopyCommand.MESSAGE_COPY_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"minosx31"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"minosx31"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"minosx31"},"content":"    public void execute_copyInvalidIndex_throwsCommandException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"minosx31"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"minosx31"},"content":"        CopyCommand copyCommand \u003d new CopyCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"minosx31"},"content":"        assertCommandFailure(copyCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"minosx31"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"minosx31"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"minosx31"},"content":"        CopyCommand copyFirstCommand \u003d new CopyCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"minosx31"},"content":"        CopyCommand copySecondCommand \u003d new CopyCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"minosx31"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"minosx31"},"content":"        assertTrue(copyFirstCommand.equals(copyFirstCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"minosx31"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"minosx31"},"content":"        CopyCommand copyFirstCommandCopy \u003d new CopyCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"minosx31"},"content":"        assertTrue(copyFirstCommand.equals(copyFirstCommandCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"minosx31"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"minosx31"},"content":"        assertFalse(copyFirstCommand.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"minosx31"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"minosx31"},"content":"        assertFalse(copyFirstCommand.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"minosx31"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"minosx31"},"content":"        assertFalse(copyFirstCommand.equals(copySecondCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"minosx31":72}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"rexcyrio"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"rexcyrio"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"rexcyrio"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"rexcyrio"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"rexcyrio"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"rexcyrio":8,"-":102}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDIT_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDIT_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"niekis"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, EDIT_DESC_AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"niekis"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(EDIT_DESC_AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"niekis"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"niekis"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"niekis"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"niekis"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"niekis"},"content":"        assertNotEquals(standardCommand, new EditCommand(INDEX_SECOND_PERSON, EDIT_DESC_AMY));","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"niekis"},"content":"        assertNotEquals(standardCommand, new EditCommand(INDEX_FIRST_PERSON, EDIT_DESC_BOB));","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"niekis":13,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDIT_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EDIT_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLATOON_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RANK_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIT_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(EDIT_DESC_AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"        assertTrue(EDIT_DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"        assertTrue(EDIT_DESC_AMY.equals(EDIT_DESC_AMY));","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(5));","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(EDIT_DESC_BOB));","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"        // different rank -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withRank(VALID_RANK_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"        // different unit -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withUnit(VALID_UNIT_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"        // different company -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withCompany(VALID_COMPANY_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"        // different platoon -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withPlatoon(VALID_PLATOON_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"niekis":39,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_FILTERED_OVERVIEW;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILTER_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILTER_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand.FilterDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"import seedu.address.model.person.FieldContainsPartialKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"import seedu.address.testutil.FilterDescriptorBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"public class FilterCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"    private int totalSize \u003d model.getAddressBook().getPersonList().size();","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"        final FilterCommand standardCommand \u003d new FilterCommand(FILTER_DESC_AMY);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"        FilterDescriptor copyDescriptor \u003d new FilterDescriptorBuilder(FILTER_DESC_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"        FilterCommand commandWithSameValues \u003d new FilterCommand(copyDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"        assertNotEquals(standardCommand, new FilterCommand(FILTER_DESC_BOB));","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"    public void execute_zeroKeywords_noPersonFiltered() {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"        FilterDescriptor emptyDescriptor \u003d new FilterDescriptor();","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"        FilterCommand command \u003d new FilterCommand(emptyDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"        assertCommandSuccess(command, model,","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"                String.format(MESSAGE_PERSONS_FILTERED_OVERVIEW, totalSize, 0), expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"        assertEquals(expectedModel.getFilteredPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"    public void execute_singleTag_multiplePersonsFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"        FilterDescriptor filterDescriptor \u003d new FilterDescriptor();","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"        filterDescriptor.setTagValues(List.of(\"friend\")); // intentional \u0027s\u0027 missing","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"        Predicate\u003cPerson\u003e predicate \u003d preparePredicate(filterDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"        FilterCommand command \u003d new FilterCommand(filterDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"        assertCommandSuccess(command, model,","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"                String.format(MESSAGE_PERSONS_FILTERED_OVERVIEW, 3, totalSize - 3), expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"        FilterDescriptor personDescriptor \u003d new FilterDescriptor();","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"        personDescriptor.setNameValue(\"l\");","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"        personDescriptor.setAddressValue(\"street\");","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"        personDescriptor.setEmailValue(\"example.co\");","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"        Predicate\u003cPerson\u003e predicate \u003d preparePredicate(personDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"        FilterCommand command \u003d new FilterCommand(personDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"        assertCommandSuccess(command, model,","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"                String.format(MESSAGE_PERSONS_FILTERED_OVERVIEW, 2, totalSize - 2), expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"     * Parses {@code PersonDescriptor} into a {@code FieldContainsPartialKeywordsPredicate}.","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"    private FieldContainsPartialKeywordsPredicate preparePredicate(FilterDescriptor filterDescriptor) {","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"        return new FieldContainsPartialKeywordsPredicate(filterDescriptor.getNameValue(),","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"                filterDescriptor.getPhoneValue(), filterDescriptor.getEmailValue(),","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"niekis"},"content":"                filterDescriptor.getAddressValue(), filterDescriptor.getRankValue(),","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"niekis"},"content":"                filterDescriptor.getUnitValue(), filterDescriptor.getCompanyValue(),","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"niekis"},"content":"                filterDescriptor.getPlatoonValue(), filterDescriptor.getTagValues());","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"niekis":108}},{"path":"src/test/java/seedu/address/logic/commands/FilterDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILTER_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILTER_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"import seedu.address.testutil.FilterDescriptorBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"public class FilterDescriptorTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"    public void equals() {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"        assertTrue(FILTER_DESC_AMY.equals(FILTER_DESC_AMY));","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"        assertFalse(FILTER_DESC_AMY.equals(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"        assertFalse(FILTER_DESC_AMY.equals(5));","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"        assertFalse(FILTER_DESC_AMY.equals(FILTER_DESC_BOB));","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"        FilterCommand.FilterDescriptor editedAmy \u003d new FilterDescriptorBuilder(FILTER_DESC_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"        assertFalse(FILTER_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new FilterDescriptorBuilder(FILTER_DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"        assertFalse(FILTER_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new FilterDescriptorBuilder(FILTER_DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"        assertFalse(FILTER_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new FilterDescriptorBuilder(FILTER_DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"        assertFalse(FILTER_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"        editedAmy \u003d new FilterDescriptorBuilder(FILTER_DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"        assertFalse(FILTER_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"niekis":54}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"rexcyrio"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"rexcyrio"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"rexcyrio"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"rexcyrio"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"rexcyrio":8,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rexcyrio"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"rexcyrio"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"rexcyrio"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"rexcyrio"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"rexcyrio"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"rexcyrio"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"rexcyrio"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"rexcyrio"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"rexcyrio"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"rexcyrio"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"rexcyrio"},"content":"    private Model model;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"rexcyrio"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"rexcyrio"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"rexcyrio"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"rexcyrio"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"rexcyrio"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"rexcyrio"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"rexcyrio"},"content":"    public void execute_nothingToUndo_showErrorMessage() {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"rexcyrio"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"rexcyrio"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_NOTHING_TO_UNDO;","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"rexcyrio"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"rexcyrio"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"rexcyrio"},"content":"    public void execute_undoAddPerson_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"rexcyrio"},"content":"        Person rachel \u003d new PersonBuilder().withName(\"Rachel\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"rexcyrio"},"content":"        AddCommand addRachelCommand \u003d new AddCommand(rachel);","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"rexcyrio"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"rexcyrio"},"content":"            addRachelCommand.execute(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"rexcyrio"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"rexcyrio"},"content":"            // should never happen since there is no person with name \"Rachel\" in TypicalPersons","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"rexcyrio"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"rexcyrio"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"rexcyrio"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"rexcyrio"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_SUCCESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"rexcyrio"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"rexcyrio"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"rexcyrio"},"content":"    public void execute_undoEditPerson_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"rexcyrio"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"rexcyrio"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"rexcyrio"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"rexcyrio"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"rexcyrio"},"content":"                .build();","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"rexcyrio"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"rexcyrio"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"rexcyrio"},"content":"            editCommand.execute(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"rexcyrio"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"rexcyrio"},"content":"            // should never happen since the EditPersonDescriptor is valid","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"rexcyrio"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"rexcyrio"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"rexcyrio"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"rexcyrio"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_SUCCESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"rexcyrio"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"rexcyrio"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"rexcyrio"},"content":"    public void execute_undoClearCommand_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"rexcyrio"},"content":"        ClearCommand clearCommand \u003d new ClearCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"rexcyrio"},"content":"        clearCommand.execute(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"rexcyrio"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"rexcyrio"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_SUCCESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"rexcyrio"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"rexcyrio"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"rexcyrio"},"content":"    public void execute_undoDeletePerson_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"rexcyrio"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"rexcyrio"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"rexcyrio"},"content":"            deleteCommand.execute(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"rexcyrio"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"rexcyrio"},"content":"            // should never happen since there is at least one person in the TypicalPersons","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"rexcyrio"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"rexcyrio"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"rexcyrio"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"rexcyrio"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_UNDO_SUCCESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"rexcyrio"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"rexcyrio"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"rexcyrio"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"rexcyrio":103}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLATOON_DESC;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RANK_DESC;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_UNIT_DESC;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RANK_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RANK_DESC_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RANK_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Platoon;","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Rank;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Unit;","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"jugheadjones10"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"jugheadjones10"},"content":"                + ADDRESS_DESC_BOB + RANK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"                + ADDRESS_DESC_BOB + RANK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"jugheadjones10"},"content":"                + ADDRESS_DESC_BOB + RANK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"jugheadjones10"},"content":"                + ADDRESS_DESC_BOB + RANK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"jugheadjones10"},"content":"                + ADDRESS_DESC_BOB + RANK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"rexcyrio"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"jugheadjones10"},"content":"        // multiple ranks - last rank accepted","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"jugheadjones10"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"jugheadjones10"},"content":"                + RANK_DESC_AMY + RANK_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":88,"author":{"gitId":"jugheadjones10"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + RANK_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":96,"author":{"gitId":"jugheadjones10"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + RANK_DESC_AMY,","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + RANK_DESC_BOB,","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + RANK_DESC_BOB,","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB + RANK_DESC_BOB,","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB + RANK_DESC_BOB,","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"jugheadjones10"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"jugheadjones10"},"content":"        // missing rank prefix","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + VALID_RANK_BOB,","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"jugheadjones10"},"content":"                + RANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"jugheadjones10"},"content":"                + RANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"jugheadjones10"},"content":"                + RANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"jugheadjones10"},"content":"                + RANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"jugheadjones10"},"content":"        // invalid rank","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"jugheadjones10"},"content":"                + INVALID_RANK_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Rank.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"jugheadjones10"},"content":"        // invalid unit","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"jugheadjones10"},"content":"                + RANK_DESC_BOB + INVALID_UNIT_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Unit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"jugheadjones10"},"content":"        // invalid company","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"jugheadjones10"},"content":"                        + RANK_DESC_BOB + INVALID_COMPANY_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"jugheadjones10"},"content":"                Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"jugheadjones10"},"content":"        // invalid platoon","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"jugheadjones10"},"content":"                        + RANK_DESC_BOB + INVALID_PLATOON_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"jugheadjones10"},"content":"                Platoon.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"jugheadjones10"},"content":"                + RANK_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"jugheadjones10"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"jugheadjones10"},"content":"                INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + RANK_DESC_BOB,","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"jugheadjones10"},"content":"                        + ADDRESS_DESC_BOB + RANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"rexcyrio":1,"jugheadjones10":56,"-":122}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FILTER_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand.FilterDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"        FilterDescriptor descriptor \u003d FILTER_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"                + PersonUtil.getFilterDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"        assertEquals(new FilterCommand(descriptor), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"niekis":11,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/CopyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"minosx31"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"minosx31"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"minosx31"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"minosx31"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"minosx31"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"minosx31"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"minosx31"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"minosx31"},"content":"public class CopyCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"minosx31"},"content":"    private final CopyCommandParser parser \u003d new CopyCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"minosx31"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"minosx31"},"content":"    public void parse_validArgs_returnCopyCommand() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"minosx31"},"content":"        assertParseSuccess(parser, \"1\", new CopyCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"minosx31"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"minosx31"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"minosx31"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"minosx31"},"content":"        assertParseFailure(parser, \"x\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, CopyCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"minosx31"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"minosx31"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"minosx31":25}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLATOON_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RANK_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UNIT_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLATOON_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RANK_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIT_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand.FilterDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"import seedu.address.testutil.FilterDescriptorBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"    private static final String PHONE_EMPTY \u003d \" \" + PREFIX_PHONE;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"    private final FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"        // no field given","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"        assertParseFailure(parser, \"\", FilterCommand.MESSAGE_NO_FIELD_GIVEN);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"        // preamble given","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"        assertParseFailure(parser, \"random string\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"        assertParseFailure(parser, \"123\" + EMAIL_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"        // empty command","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"        assertParseFailure(parser, \"\", FilterCommand.MESSAGE_NO_FIELD_GIVEN);","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"        // single empty field","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"        assertParseFailure(parser, PHONE_EMPTY, FilterCommand.MESSAGE_EMPTY_FIELD);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"        assertParseFailure(parser, TAG_EMPTY + \"    \", FilterCommand.MESSAGE_EMPTY_FIELD);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"        // empty phone followed by valid email","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"        assertParseFailure(parser, PHONE_EMPTY + EMAIL_DESC_AMY, FilterCommand.MESSAGE_EMPTY_FIELD);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"        // valid email followed by empty tag","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + TAG_EMPTY, FilterCommand.MESSAGE_EMPTY_FIELD);","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"        String userInput \u003d PHONE_DESC_AMY + TAG_DESC_HUSBAND + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND + RANK_DESC_AMY + PLATOON_DESC_AMY + UNIT_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"                + COMPANY_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"        FilterDescriptor descriptor \u003d new FilterDescriptorBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRank(VALID_RANK_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"                .withUnit(VALID_UNIT_AMY).withCompany(VALID_COMPANY_AMY).withPlatoon(VALID_PLATOON_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"        String userInput \u003d PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"        FilterDescriptor descriptor \u003d new FilterDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"niekis"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"niekis"},"content":"        // name","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"niekis"},"content":"        String userInput \u003d NAME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"niekis"},"content":"        FilterDescriptor descriptor \u003d new FilterDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"niekis"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"niekis"},"content":"        // phone","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"niekis"},"content":"        userInput \u003d PHONE_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"niekis"},"content":"        descriptor \u003d new FilterDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"niekis"},"content":"        expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"niekis"},"content":"        // email","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"niekis"},"content":"        userInput \u003d EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"niekis"},"content":"        descriptor \u003d new FilterDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"niekis"},"content":"        expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"niekis"},"content":"        // address","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"niekis"},"content":"        userInput \u003d ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"niekis"},"content":"        descriptor \u003d new FilterDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"niekis"},"content":"        expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"niekis"},"content":"        // rank","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"niekis"},"content":"        userInput \u003d RANK_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"niekis"},"content":"        descriptor \u003d new FilterDescriptorBuilder().withRank(VALID_RANK_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"niekis"},"content":"        expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"niekis"},"content":"        // unit","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"niekis"},"content":"        userInput \u003d UNIT_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"niekis"},"content":"        descriptor \u003d new FilterDescriptorBuilder().withUnit(VALID_UNIT_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"niekis"},"content":"        expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"niekis"},"content":"        // company","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"niekis"},"content":"        userInput \u003d COMPANY_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"niekis"},"content":"        descriptor \u003d new FilterDescriptorBuilder().withCompany(VALID_COMPANY_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"niekis"},"content":"        expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"niekis"},"content":"        // platoon","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"niekis"},"content":"        userInput \u003d PLATOON_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"niekis"},"content":"        descriptor \u003d new FilterDescriptorBuilder().withPlatoon(VALID_PLATOON_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"niekis"},"content":"        expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"niekis"},"content":"        // tags","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"niekis"},"content":"        userInput \u003d TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"niekis"},"content":"        descriptor \u003d new FilterDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"niekis"},"content":"        expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"niekis"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"niekis"},"content":"        String userInput \u003d PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"niekis"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"niekis"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"niekis"},"content":"        FilterDescriptor descriptor \u003d new FilterDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"niekis"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"niekis"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"niekis"},"content":"                .build();","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"niekis"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"niekis"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"niekis":178}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rexcyrio"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"rexcyrio"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"rexcyrio"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(modelManager, new ModelManager(differentAddressBook, userPrefs));","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, userPrefs));","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"rexcyrio"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, differentUserPrefs));","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"rexcyrio":8,"-":125}},{"path":"src/test/java/seedu/address/model/person/CompanyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"public class CompanyTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Company(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public void constructor_invalidCompany_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"        String invalidCompany \u003d \"!@#\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Company(invalidCompany));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"    public void isValidCompany() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"        // null company","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(NullPointerException.class, () -\u003e Company.isValidCompany(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"        // invalid company","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Company.isValidCompany(\"\")); // empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Company.isValidCompany(\"*\u0026^%$#@!\")); // not alphanumeric","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"        // valid company","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Company.isValidCompany(\"Team bravo 123\")); // alphanumeric","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Company.isValidCompany(\"N/A\")); // slashes are allowed","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jugheadjones10":35}},{"path":"src/test/java/seedu/address/model/person/FieldContainsPartialKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLATOON_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLATOON_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RANK_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RANK_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIT_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UNIT_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"public class FieldContainsPartialKeywordsPredicateTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"        List\u003cString\u003e firstTagKeywordList \u003d Collections.singletonList(VALID_TAG_FRIEND);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"        FieldContainsPartialKeywordsPredicate firstPredicateAmy \u003d new FieldContainsPartialKeywordsPredicate(","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"                VALID_NAME_AMY, VALID_PHONE_AMY, VALID_EMAIL_AMY, VALID_ADDRESS_AMY, VALID_RANK_AMY, VALID_UNIT_AMY,","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"                VALID_COMPANY_AMY, VALID_PLATOON_AMY, firstTagKeywordList","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"        List\u003cString\u003e secondTagKeywordList \u003d Arrays.asList(VALID_TAG_FRIEND, VALID_TAG_HUSBAND);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"        FieldContainsPartialKeywordsPredicate secondPredicateBob \u003d new FieldContainsPartialKeywordsPredicate(","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"                VALID_NAME_BOB, VALID_PHONE_BOB, VALID_EMAIL_BOB, VALID_ADDRESS_BOB, VALID_RANK_BOB, VALID_UNIT_BOB,","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"                VALID_COMPANY_BOB, VALID_PLATOON_BOB, secondTagKeywordList","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"        assertTrue(firstPredicateAmy.equals(firstPredicateAmy));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"        FieldContainsPartialKeywordsPredicate firstPredicateAmyCopy \u003d new FieldContainsPartialKeywordsPredicate(","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"                VALID_NAME_AMY, VALID_PHONE_AMY, VALID_EMAIL_AMY, VALID_ADDRESS_AMY, VALID_RANK_AMY, VALID_UNIT_AMY,","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"                VALID_COMPANY_AMY, VALID_PLATOON_AMY, firstTagKeywordList","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"        assertTrue(firstPredicateAmy.equals(firstPredicateAmyCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"        assertFalse(firstPredicateAmy.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"        assertFalse(firstPredicateAmy.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"        assertFalse(firstPredicateAmy.equals(secondPredicateBob));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"        // One keyword","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"niekis":103}},{"path":"src/test/java/seedu/address/model/person/PlatoonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"public class PlatoonTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Platoon(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public void constructor_invalidPlatoon_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"        String invalidPlatoon \u003d \"!@#\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Platoon(invalidPlatoon));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"    public void isValidPlatoon() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"        // null platoon","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(NullPointerException.class, () -\u003e Platoon.isValidPlatoon(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"        // invalid platoon","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Platoon.isValidPlatoon(\"\")); // empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Platoon.isValidPlatoon(\"*\u0026^%$#@!\")); // not alphanumeric","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"        // valid platoon","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Platoon.isValidPlatoon(\"Team bravo 123\")); // alphanumeric","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Platoon.isValidPlatoon(\"N/A\")); // slashes are allowed","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jugheadjones10":35}},{"path":"src/test/java/seedu/address/model/person/RankTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"public class RankTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Rank(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public void constructor_invalidRank_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"        String invalidRank \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rank(invalidRank));","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"    public void isValidRank() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"        // null rank","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(NullPointerException.class, () -\u003e Rank.isValidRank(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"        // invalid rank","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Rank.isValidRank(\"\")); // empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Rank.isValidRank(\" \")); // spaces only","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Rank.isValidRank(\"pte\")); // not in valid ranks list","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Rank.isValidRank(\"hello\")); // not in valid ranks list","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"        // valid rank","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Rank.isValidRank(\"REC\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Rank.isValidRank(\"PTE\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Rank.isValidRank(\"CPL\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Rank.isValidRank(\"3SG\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Rank.isValidRank(\"2LT\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jugheadjones10":40}},{"path":"src/test/java/seedu/address/model/person/UnitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jugheadjones10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"jugheadjones10"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"public class UnitTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Unit(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"jugheadjones10"},"content":"    public void constructor_invalidUnit_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jugheadjones10"},"content":"        String invalidUnit \u003d \"!@#\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Unit(invalidUnit));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"    public void isValidUnit() {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"        // null unit","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(NullPointerException.class, () -\u003e Unit.isValidUnit(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"        // invalid unit","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Unit.isValidUnit(\"\")); // empty string","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"        assertFalse(Unit.isValidUnit(\"*\u0026^%$#@!\")); // not alphanumeric","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"        // valid unit","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Unit.isValidUnit(\"Team bravo 123\")); // alphanumeric","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"        assertTrue(Unit.isValidUnit(\"N/A\")); // slashes are allowed","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jugheadjones10":35}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"    private static final String INVALID_RANK \u003d \"example\";","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"    private static final String INVALID_UNIT \u003d \"%!@#\";","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jugheadjones10"},"content":"    private static final String INVALID_COMPANY \u003d \"%!@#\";","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"jugheadjones10"},"content":"    private static final String INVALID_PLATOON \u003d \"%!@#\";","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"    private static final String VALID_RANK \u003d BENSON.getRank().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"jugheadjones10"},"content":"    private static final String VALID_UNIT \u003d BENSON.getUnit().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"    private static final String VALID_COMPANY \u003d BENSON.getCompany().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"    private static final String VALID_PLATOON \u003d BENSON.getPlatoon().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"jugheadjones10"},"content":"                        VALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"                VALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"jugheadjones10"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"jugheadjones10"},"content":"                        VALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"jugheadjones10"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"jugheadjones10"},"content":"                VALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"jugheadjones10"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"jugheadjones10"},"content":"                        VALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"jugheadjones10"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"jugheadjones10"},"content":"                VALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"jugheadjones10"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"jugheadjones10"},"content":"                        VALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"jugheadjones10"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jugheadjones10"},"content":"                VALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jugheadjones10"},"content":"    public void toModelType_invalidRank_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jugheadjones10"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jugheadjones10"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jugheadjones10"},"content":"                        INVALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jugheadjones10"},"content":"        String expectedMessage \u003d Rank.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jugheadjones10"},"content":"    public void toModelType_nullRank_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jugheadjones10"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jugheadjones10"},"content":"                null, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jugheadjones10"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Rank.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jugheadjones10"},"content":"    public void toModelType_invalidUnit_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"jugheadjones10"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jugheadjones10"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jugheadjones10"},"content":"                        VALID_RANK, INVALID_UNIT, VALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"jugheadjones10"},"content":"        String expectedMessage \u003d Unit.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"jugheadjones10"},"content":"    public void toModelType_invalidCompany_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"jugheadjones10"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"jugheadjones10"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"jugheadjones10"},"content":"                        VALID_RANK, VALID_UNIT, INVALID_COMPANY, VALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"jugheadjones10"},"content":"        String expectedMessage \u003d Company.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"jugheadjones10"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"jugheadjones10"},"content":"    public void toModelType_invalidPlatoon_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"jugheadjones10"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"jugheadjones10"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"jugheadjones10"},"content":"                        VALID_RANK, VALID_UNIT, VALID_COMPANY, INVALID_PLATOON, VALID_TAGS);","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"jugheadjones10"},"content":"        String expectedMessage \u003d Platoon.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"jugheadjones10"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"jugheadjones10"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"jugheadjones10"},"content":"                        VALID_RANK, VALID_UNIT, VALID_COMPANY, VALID_PLATOON, invalidTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jugheadjones10":76,"-":101}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Platoon;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Rank;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Unit;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"jugheadjones10"},"content":"    private final EditPersonDescriptor descriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.setRank(person.getRank());","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.setUnit(person.getUnit());","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.setCompany(person.getCompany());","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.setPlatoon(person.getPlatoon());","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the {@code Rank} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"jugheadjones10"},"content":"    public EditPersonDescriptorBuilder withRank(String rank) {","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.setRank(new Rank(rank));","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"jugheadjones10"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the {@code Unit} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"jugheadjones10"},"content":"    public EditPersonDescriptorBuilder withUnit(String unit) {","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.setUnit(new Unit(unit));","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"jugheadjones10"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the {@code Company} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"jugheadjones10"},"content":"    public EditPersonDescriptorBuilder withCompany(String company) {","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.setCompany(new Company(company));","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"jugheadjones10"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the {@code Platoon} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"jugheadjones10"},"content":"    public EditPersonDescriptorBuilder withPlatoon(String platoon) {","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.setPlatoon(new Platoon(platoon));","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"jugheadjones10"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jugheadjones10":41,"-":86}},{"path":"src/test/java/seedu/address/testutil/FilterDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"niekis"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"niekis"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand.FilterDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"niekis"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"niekis"},"content":" * A utility class to help with building {@code FilterDescriptor} objects.","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"niekis"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"niekis"},"content":"public class FilterDescriptorBuilder {","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"niekis"},"content":"    private final FilterDescriptor descriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder() {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"niekis"},"content":"        descriptor \u003d new FilterDescriptor();","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"niekis"},"content":"     * Creates a copy of the given {@code FilterDescriptor} with identical fields","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder(FilterDescriptor descriptor) {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"niekis"},"content":"        this.descriptor \u003d new FilterDescriptor();","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"niekis"},"content":"        this.descriptor.setNameValue(descriptor.getNameValue());","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"niekis"},"content":"        this.descriptor.setPhoneValue(descriptor.getPhoneValue());","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"niekis"},"content":"        this.descriptor.setEmailValue(descriptor.getEmailValue());","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"niekis"},"content":"        this.descriptor.setAddressValue(descriptor.getAddressValue());","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"niekis"},"content":"        this.descriptor.setRankValue(descriptor.getRankValue());","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"niekis"},"content":"        this.descriptor.setUnitValue(descriptor.getUnitValue());","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"niekis"},"content":"        this.descriptor.setCompanyValue(descriptor.getCompanyValue());","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"niekis"},"content":"        this.descriptor.setPlatoonValue(descriptor.getPlatoonValue());","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"niekis"},"content":"        this.descriptor.setTagValues(descriptor.getTagValues());","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"niekis"},"content":"     * Sets the name of the {@code FilterDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"niekis"},"content":"        descriptor.setNameValue(name);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"niekis"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"niekis"},"content":"     * Sets the phone of the {@code FilterDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"niekis"},"content":"        descriptor.setPhoneValue(phone);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"niekis"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"niekis"},"content":"     * Sets the email of the {@code FilterDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"niekis"},"content":"        descriptor.setEmailValue(email);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"niekis"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"niekis"},"content":"     * Sets the address of the {@code FilterDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"niekis"},"content":"        descriptor.setAddressValue(address);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"niekis"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"niekis"},"content":"     * Sets the rank of the {@code FilterDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder withRank(String rank) {","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"niekis"},"content":"        descriptor.setRankValue(rank);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"niekis"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"     * Sets the unit of the {@code FilterDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder withUnit(String unit) {","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"        descriptor.setUnitValue(unit);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"     * Sets the company of the {@code FilterDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder withCompany(String company) {","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"        descriptor.setCompanyValue(company);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"     * Sets the platoon of the {@code FilterDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder withPlatoon(String platoon) {","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"        descriptor.setPlatoonValue(platoon);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code FilterDescriptor}","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"     * that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"    public FilterDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"        descriptor.setTagValues(Arrays.asList(tags));","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"niekis"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"niekis"},"content":"    public FilterDescriptor build() {","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"niekis"},"content":"        return descriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"niekis"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"niekis":110}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"jugheadjones10"},"content":"import seedu.address.model.person.Unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"jugheadjones10"},"content":"    public static final String DEFAULT_RANK \u003d \"3SG\";","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jugheadjones10"},"content":"    public static final String DEFAULT_UNIT \u003d \"N/A\";","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jugheadjones10"},"content":"    public static final String DEFAULT_COMPANY \u003d \"N/A\";","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"    public static final String DEFAULT_PLATOON \u003d \"N/A\";","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"jugheadjones10"},"content":"    private Rank rank;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"    private Unit unit;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jugheadjones10"},"content":"    private Company company;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"    private Platoon platoon;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"jugheadjones10"},"content":"        rank \u003d new Rank(DEFAULT_RANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"        unit \u003d new Unit(DEFAULT_UNIT);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jugheadjones10"},"content":"        company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"jugheadjones10"},"content":"        platoon \u003d new Platoon(DEFAULT_PLATOON);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"jugheadjones10"},"content":"        rank \u003d personToCopy.getRank();","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jugheadjones10"},"content":"        unit \u003d personToCopy.getUnit();","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"jugheadjones10"},"content":"        company \u003d personToCopy.getCompany();","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"jugheadjones10"},"content":"        platoon \u003d personToCopy.getPlatoon();","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the {@code Rank} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"jugheadjones10"},"content":"    public PersonBuilder withRank(String rank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"jugheadjones10"},"content":"        this.rank \u003d new Rank(rank);","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"jugheadjones10"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the {@code Unit} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"jugheadjones10"},"content":"    public PersonBuilder withUnit(String unit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"jugheadjones10"},"content":"        this.unit \u003d new Unit(unit);","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"jugheadjones10"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the {@code Company} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"jugheadjones10"},"content":"    public PersonBuilder withCompany(String company) {","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"jugheadjones10"},"content":"        this.company \u003d new Company(company);","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"jugheadjones10"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"jugheadjones10"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"jugheadjones10"},"content":"     * Sets the {@code Platoon} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"jugheadjones10"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"jugheadjones10"},"content":"    public PersonBuilder withPlatoon(String platoon) {","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"jugheadjones10"},"content":"        this.platoon \u003d new Platoon(platoon);","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"jugheadjones10"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"jugheadjones10"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"jugheadjones10"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":146,"author":{"gitId":"jugheadjones10"},"content":"        return new Person(name, phone, email, address, rank, unit, company, platoon, tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jugheadjones10":54,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLATOON;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RANK;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNIT;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"niekis"},"content":"import seedu.address.logic.commands.FilterCommand.FilterDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"        sb.append(PREFIX_RANK + person.getRank().value + \" \");","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"jugheadjones10"},"content":"        sb.append(PREFIX_UNIT + person.getUnit().value + \" \");","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"        sb.append(PREFIX_COMPANY + person.getCompany().value + \" \");","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"jugheadjones10"},"content":"        sb.append(PREFIX_PLATOON + person.getPlatoon().value + \" \");","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.getRank().ifPresent(rank -\u003e sb.append(PREFIX_RANK).append(rank.value).append(\" \"));","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.getUnit().ifPresent(unit -\u003e sb.append(PREFIX_UNIT).append(unit.value).append(\" \"));","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.getCompany().ifPresent(company -\u003e sb.append(PREFIX_COMPANY).append(company.value).append(\" \"));","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"        descriptor.getPlatoon().ifPresent(platoon -\u003e sb.append(PREFIX_PLATOON).append(platoon.value).append(\" \"));","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"niekis"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"niekis"},"content":"    public static String getFilterDescriptorDetails(FilterDescriptor descriptor) {","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"niekis"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"niekis"},"content":"        if (!descriptor.getNameValue().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"niekis"},"content":"            sb.append(PREFIX_NAME).append(descriptor.getNameValue()).append(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"niekis"},"content":"        if (!descriptor.getPhoneValue().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"niekis"},"content":"            sb.append(PREFIX_PHONE).append(descriptor.getPhoneValue()).append(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"niekis"},"content":"        if (!descriptor.getEmailValue().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"niekis"},"content":"            sb.append(PREFIX_EMAIL).append(descriptor.getEmailValue()).append(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"niekis"},"content":"        if (!descriptor.getAddressValue().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"niekis"},"content":"            sb.append(PREFIX_ADDRESS).append(descriptor.getAddressValue()).append(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"niekis"},"content":"        if (!descriptor.getRankValue().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"niekis"},"content":"            sb.append(PREFIX_RANK).append(descriptor.getRankValue()).append(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"niekis"},"content":"        if (!descriptor.getUnitValue().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"niekis"},"content":"            sb.append(PREFIX_UNIT).append(descriptor.getUnitValue()).append(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"niekis"},"content":"        if (!descriptor.getCompanyValue().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"niekis"},"content":"            sb.append(PREFIX_COMPANY).append(descriptor.getCompanyValue()).append(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"niekis"},"content":"        if (!descriptor.getPlatoonValue().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"niekis"},"content":"            sb.append(PREFIX_PLATOON).append(descriptor.getPlatoonValue()).append(\" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"niekis"},"content":"        if (!descriptor.getTagValues().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"niekis"},"content":"            descriptor.getTagValues().forEach(s -\u003e sb.append(PREFIX_TAG).append(s).append(\" \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"niekis"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"niekis"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"niekis"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"niekis":33,"jugheadjones10":12,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RANK_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jugheadjones10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RANK_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"jugheadjones10"},"content":"            .withPhone(\"94351253\").withRank(\"REC\").withUnit(\"N/A\").withCompany(\"N/A\").withPlatoon(\"N/A\")","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withRank(\"PTE\").withUnit(\"N/A\")","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"jugheadjones10"},"content":"            .withCompany(\"hey\").withPlatoon(\"bravo 1\")","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withRank(\"CPL\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withRank(\"3SG\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withRank(\"2LT\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withRank(\"3SG\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withRank(\"CPL\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withRank(\"3SG\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withRank(\"3SG\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"jugheadjones10"},"content":"            .withRank(VALID_RANK_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"jugheadjones10"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"jugheadjones10"},"content":"            .withRank(VALID_RANK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"jugheadjones10"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jugheadjones10"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jugheadjones10":18,"-":63}}]
