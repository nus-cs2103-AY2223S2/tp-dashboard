[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"# Docedex","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-F12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-F12-1/tp/actions)","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"### What is Docedex?","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"Docedex is a **desktop application for managing doctors and patients within hospitals**, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you type fast, Doc√©dex can get your patient management tasks done faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"### For users","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"To begin using the application, follow the steps under **Quick Start** in our **[Docedex User Guide](https://ay2223s2-cs2103t-f12-1.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"### For developers","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"To view the detailed documentation of this project, see the **[Docedex Developer Guide](https://ay2223s2-cs2103t-f12-1.github.io/tp/DeveloperGuide.html)**.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"### Find out more!","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"Check out the **[Docedex Product Website](https://ay2223s2-cs2103t-f12-1.github.io/tp)** to find out more about Docedex!","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"### Credits","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"owen-yap":1,"praveenkrishna0512":19,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"    archiveFileName \u003d \u0027docedex.jar\u0027","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"praveenkrishna0512":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"We are the Docedex team! We are undergraduates based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"**_Our contact information will be updated soon!_**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Vigneshwar Hariharan","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"\u003cimg src\u003d\"images/vigonometry.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[github](http://github.com/vigonometry)]","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"[[portfolio](team/vigonometry.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"* Role: Code quality","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"### Amos Hung","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"\u003cimg src\u003d\"images/bobfree546.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[github](http://github.com/Bobfree546)] [[portfolio](team/amos.md)]","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"* Role: Testing","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Krishnamoorthi Praveen","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"\u003cimg src\u003d\"images/praveenkrishna0512.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"[[github](http://github.com/praveenkrishna0512)]","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"[[portfolio](team/praveenkrishna0512.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"* Role: Documentation","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"* Responsibilities: Responsible for the quality of various project documents.","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Owen Yap Yuhan","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"\u003cimg src\u003d\"images/owen-yap.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[[github](http://github.com/owen-yap)]","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"[[portfolio](team/owen-yap.md)]","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"* Role: Project Manager","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"* Responsibilities: Responsible for overall project coordination and in charge of defining, \\","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"assigning, and tracking project tasks.","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Bobfree546":3,"owen-yap":11,"praveenkrishna0512":2,"vigonometry":2,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"The set-up guide is still **_in progress_**","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"## Architecture","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"The documentation for Architecture is still **_in progress_**","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"**Target user profile**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"We hope to target admin staff within a clinic who have to settle triaging of patients.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"Here are some characteristics of our target user profile: \u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"* needs to assign patients to the appropriate doctors quickly","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"**Value proposition**: Perform quick lookup and assignment of appropriate doctors to each patient in triage, faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"In the table below, **_user_** refers to the triage admin staff.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"| Priority | As a ‚Ä¶‚Äã | I want to ‚Ä¶‚Äã                                                      | So that I can‚Ä¶‚Äã                                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"|----------|---------|-------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"| `* * *`  | user    | add doctor contacts into my address book                          | store their contacts in case I need them in the future                           |","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"| `* * *`  | user    | look up doctors by their name, specialty, department and position | assign patients to relevant doctors                                              |","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"| `* * *`  | user    | sort doctors based on specialty                                   | assign patients to doctors according to nature of condition                      |","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"| `* * *`  | user    | sort doctors based on years of experience                         | assign patients to doctors according to severity of condition                    |","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"| `* * *`  | user    | sort doctors based on availability                                | assign patients to doctors currently present in the clinic                       |","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"| `* * *`  | user    | edit the doctor contacts in Docedex                               | keep the doctor contacts up to date                                              |","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"| `* * *`  | user    | delete doctors that have left the hospital or have retired        | ensure all doctor contacts reflect doctors in the hospital                       |","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"| `* * *`  | user    | save my doctor contacts in my desktop                             | refer to doctor contacts in the future                                           |","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"| `* * *`  | user    | load my contacts from a file when I boot up the application       | refer to doctor contacts created in the past                                     |","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | add patient contacts into my address book                         | store their contacts in case I need them in the future                           |","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | look up patients by their name                                    | view medical history of the patient including doctors that have treated them     |","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | tag patients with a priority (triage)                             | determine assignment priorities to doctors                                       |","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | sort patients according to their priority                         | tag patients according to severity of condition                                  |","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | detect duplicate entries                                          | either halt operation or update information.                                     |","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"| `* *`    | user    | access the help menu                                              | know how to use the commands within Docedex                                      |","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"| `* *`    | user    | tag patients to the doctor                                        | keep track of patients treated by the doctor                                     |","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"| `* *`    | user    | tag doctors to the patients                                       | keep track of doctors treating the patient                                       |","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"| `* *`    | user    | exit the application through the CLI                              | terminate use of the application                                                 |","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"| `* *`    | user    | access the help menu                                              | know how to use the commands within Docedex                                      |","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"| `*`      | user    | add remarks for doctors                                           | store additional information on each doctor                                      |","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"| `*`      | user    | star certain doctors as important                                 | perform quick retrieval of information pertaining to important doctors           |","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"| `*`      | user    | see the history of doctors I viewed recently                      | re-access recently queried doctor contacts quickly                               |","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"| `*`      | user    | retrieve the size of my contact book for doctors                  | verify the number of doctors in my clinic                                        |","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"| `*`      | user    | archive doctors that are no longer working                        | retain information about such doctors without having them appear in my searches  |","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"| `*`      | user    | classify patients by compliance                                   | keep track of non-compliant cases and warn doctors                               |","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"| `*`      | user    | archive patients that have died or no longer visit this hospital. | retain information about such patients without having them appear in my searches |","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"| `*`      | user    | self-destruct my address book                                     | protect clinic\u0027s information in the event of a cyber-attack (last-ditch effort). |","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"| `*`      | user    | create a new address book instance for a new clinic               | track doctors and patients across different clinics                              |","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"(For all use cases below, the **System** is `Docedex` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"**Use case: UC1 - Add Doctor**","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"Actor: User","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"Precondition: User is logged in and has access to the add doctor feature.","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"1. User requests to add a doctor and enters the doctor\u0027s contact information, including name, department, and specialty..","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"2. Docedex confirms the addition of the doctor contact.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"   Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"* 1a. User enters invalid command.","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"      * 1a. Docedex detects error in command.","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"        * 1a1. Docedex prompts user to correct the format of the command. \u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"        * 1a2. User enters command and information to add a doctor.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"        Steps 1a1-1a2 are repeated until a valid add command is entered.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"        Use case resumes from step 2.","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"      * 1b. Docedex detects duplicate information within the address book.","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"        * 1b1. Docedex prompts user to confirm if they would like a new entry or \u003cu\u003eUCx Edit information.\u003c/u\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        * 1b2. User chooses the option they desire.","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"        Use cases resumes from step 2","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"**Use case: UC3 - Delete Doctor**","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"Actor: User","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"1. User requests to find doctors.","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"2. Docedex shows a list of doctors.","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"3. User request to delete a specific doctor from the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"4. Docedex confirms the deletion of the doctor contact.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"* 1a. Docedex detects an error in the command.","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"  * 1a1. Docedex requests to correct the format of the command.","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"  * 1a2. User enters command to delete a doctor.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"  Steps 1a1-1a2 are repeated until a valid delete command is entered.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"2. Should be able to hold up to 1000 doctor contacts and 30,000 patient contacts without noticeable reduction in performance.","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"4. Should not utilize any network to transmit any information.","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"5. The average time required to boot up the application should be under 5 seconds.","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"6. Feedback from Docedex should be displayed within 2 seconds of the user\u0027s input.","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"7. The file size of the application\u0027s `jar` should not exceed 100MB.","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"8. Should utilize less than 300MB of memory when in use.","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"* **User**: Triage Admin Staff within the clinic.","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"* **Contact**: Data entry that stores the contact information of a doctor or patient in Docedex.","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"praveenkrishna0512":41,"vigonometry":36,"-":71}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"Doc√©dex is a **desktop application for managing doctors and patients within hospitals**, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you type fast, Doc√©dex can get your patient management tasks done faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"1. Make sure that you have **Java 11 or above** installed on your computer.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"2. Download the latest jar file (`docedex.jar`) from our [Github Releases](https://github.com/AY2223S2-CS2103T-F12-1/tp).","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"3. Place the jar file into a new folder. This folder will be used as the home folder for the Docedex application.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"4. Open a command terminal within the home folder.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"5. Enter `java -jar docedex.jar` in the command terminal","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"   1. You should notice the GUI of the application pop up.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`list-doc`** and pressing Enter will display all doctors stored in Docedex.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"   1. Some example commands you can try:","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"      * `help` : Opens up the help menu.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"      * `add-doc n/John Doe p/98765432` : Adds a doctor contact named `John Doe` to Docedex.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"      * `del-doc 3` : Deletes the doctor with the associated ID of 3.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"      * `find-doc Gabriel` : Finds all doctors contacts that have the keyword \u0027Gabriel\u0027","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items with `‚Ä¶`‚Äã after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]‚Ä¶‚Äã` can be used as `¬†` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list-doc`, `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"### Adding a person: `add-doc n/NAME p/PHONE_NUMBER e/EMAIL s/SPECIALITY y/YEARS_OF_EXPERIENCE [t/TAGS]‚Ä¶`","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"Adds a doctor to the address book.","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"Format: `add-doc n/NAME p/PHONE_NUMBER e/EMAIL s/SPECIALITY y/YEARS_OF_EXPERIENCE [t/TAGS]‚Ä¶`","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"* `add n/Gabriel Tan p/98765432 e/gtan@health.org s/Cardiology y/5`","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"### Editing a doctor : `edit-doc`","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"Users can edit specific doctors in the clinic by providing at least one of the optional fields. Existing values will be updated to the input values and all other values will remain the same.","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"Format: `edit-doc INDEX [n/NAME] [p/PHONE_NUMBER]`","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"* Edits the doctor at the specified `INDEX`. The index refers to the index number shown in the displayed doctor list. The index **must be a positive integer** 1, 2, 3, ‚Ä¶‚Äã","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* You can remove all the person‚Äôs tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"*  `edit 1 p/91234567` Edits the phone number of the 1st doctor to be `91234567`.","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"*  `edit-doc 2 n/Gabriel Tan p/12345678 t/` Edits the name and phone number of the 2nd doctor to be `Gabriel Tan` and `91234567` respectively. Adding t/ also clears all existing tags.","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"### Deleting a doctor : `del-doc`","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"Deletes the specified doctor from the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"Format: `del-doc INDEX`","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"* Deletes the doctor at the specified `INDEX`.","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, ‚Ä¶‚Äã","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"* `list` followed by `del-doc 2` deletes the 2nd doctor in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"* `find-doc Gabriel` followed by `delete 1` deletes the 1st doctor in the results of the `find-doc` command.","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"Bobfree546"},"content":"### Finding a doctor","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Bobfree546"},"content":"Command: `find-doc KEYWORD`","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Bobfree546"},"content":"Users can search up doctors that contain a specific text (KEYWORD) using this command.","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"Bobfree546"},"content":"* KEYWORD can contain multiple words.","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Bobfree546"},"content":"    \u003e e.g. The command `find-doc Hans Bo` will use `Hans Bo` as the KEYWORD.","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Bobfree546"},"content":"* The search is case-insensitive.","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Bobfree546"},"content":"    \u003e e.g. `hans` will match `Hans`.","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"Bobfree546"},"content":"* All doctor entries that contain KEYWORD in their fields will be listed.","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"Bobfree546"},"content":"### Listing all doctors","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"Bobfree546"},"content":"Command: `list-doc`","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"Bobfree546"},"content":"This command will list all doctors saved in Docedex together with their information.","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"### Exiting the program","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Bobfree546"},"content":"Command: `exit`","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"Bobfree546"},"content":"Exit the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex data is saved automatically after any command that changes data. There is no need to save manually.","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex data is saved as a JSON file at this specified path: `[JAR file location]/data/docedex.json`.","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":157,"author":{"gitId":"praveenkrishna0512"},"content":"DO NOT modify data directly, as it might result in the malfunction of the application. In the worst case scenario, all your data may be reset. Only modify data directly if you know what you are doing and accept the risks of such actions.","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"praveenkrishna0512"},"content":"**Q**: How can I load data from another computer into Docedex installed on another computer?\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"praveenkrishna0512"},"content":"**A**: Delete the `docedex.json` file (stored at `[JAR file location]/data/docedex.json`) from the computer that you wish to use Docedex on. Then, copy over the `docedex.json` file from the computer which you no longer wish to use Docedex on. After which, boot up Docedex to check whether your doctor information is properly loaded into the new computer.","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"praveenkrishna0512"},"content":"**Add Doctor** | `add-doc n/NAME p/PHONE_NUMBER` \u003cbr\u003e E.g. `add-doc n/Gabriel p/81119666`","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"praveenkrishna0512"},"content":"**Delete Doctor** | `del-doc INDEX`\u003cbr\u003e E.g. `del-doc 3`","lastModifiedDate":"2023-03-02"},{"lineNumber":173,"author":{"gitId":"praveenkrishna0512"},"content":"**Edit Doctor** | `edit-doc INDEX [n/NAME] [p/PHONE_NUMBER]`\u003cbr\u003e E.g. `edit-doc 3 n/Gabriel Tan p/12345678`","lastModifiedDate":"2023-03-02"},{"lineNumber":174,"author":{"gitId":"praveenkrishna0512"},"content":"**Find Doctor** | `find-doc KEYWORD`\u003cbr\u003e E.g. `find-doc Gabriel`","lastModifiedDate":"2023-03-02"},{"lineNumber":175,"author":{"gitId":"praveenkrishna0512"},"content":"**List Doctors** | `list-doc`","lastModifiedDate":"2023-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"praveenkrishna0512"},"content":"**Exit** | `exit`","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Bobfree546":13,"owen-yap":6,"praveenkrishna0512":28,"vigonometry":10,"-":120}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"praveenkrishna0512"},"content":"    content: \"Docedex\";","lastModifiedDate":"2023-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"praveenkrishna0512":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"title: Docedex","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-F12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-F12-1/tp/actions)","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"[//]: # (TODO: Change this link after codecov created!)","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-F12-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-F12-1/tp/)","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"praveenkrishna0512":5,"-":16}},{"path":"docs/team/bobfree546.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"title: Amos Hung\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"### Doc√©dex","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"Doc√©dex is a **desktop application for managing doctors and patients within hospitals**, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you type fast, Doc√©dex can get your patient management tasks done faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"* Table of Contents","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"{:toc}","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"#### Code contributed:","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"* View [RepoSense](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbobfree546\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"#### Enhancements implemented:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"#### Contributions to the User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"#### Contributions to the Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"#### Contributions to team-based tasks:","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"#### Review/mentoring contributions:","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"#### Other contributions:","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Bobfree546":42}},{"path":"docs/team/owen-yap.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"layout: page","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"title: Owen Yap\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"### Project: Docedex","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"Docedex is a **desktop application for managing doctors and patients within hospitals**, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you type fast, Doc√©dex can get your patient management tasks done faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"#### Code contributed","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"My code contributions can be visualised through [RepoSense](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dpraveenkrishna0512\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other).","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"Here is a summary of the enhancements you implemented.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"(to be added)","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"Here are my contributions to the UG.","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"- Implementing the template of the UG","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"- Completing Command Summary","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"- Adding description for **_Saving the data file_** and **_Editing the data file_**","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"Here are my contributions to the DG","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"- Sections","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"  - (to be added)","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"- UML diagrams","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"  - (to be added)","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"Here are my contributions to team-based tasks","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"- Brainstorming of user stories and use cases","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"- Envisioning product design (ie. problem statement, target audience)","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"#### Review/mentoring contributions","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"Here are the PRs that I have reviewed","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"- (to be added)","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"Here are some ways through which I have aided my team members","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"- (to be added)","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"owen-yap":45}},{"path":"docs/team/praveenkrishna0512.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Krishnamoorthi Praveen\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"### Doc√©dex","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"Doc√©dex is a **desktop application for managing doctors and patients within hospitals**, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you type fast, Doc√©dex can get your patient management tasks done faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"* Table of Contents","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"{:toc}","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"#### Code contributed","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"My code contributions can be visualised through [RepoSense](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dpraveenkrishna0512\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other).","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"Here is a summary of the enhancements you implemented.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"(to be added)","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"Here are my contributions to the UG.","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"- Implementing the template of the UG","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"- Completing Command Summary","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"- Adding description for **_Saving the data file_** and **_Editing the data file_**","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"Here are my contributions to the DG","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"- Sections","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"  - (to be added)","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"- UML diagrams","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"  - (to be added)","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"Here are my contributions to team-based tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"- Brainstorming of user stories and use cases","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"- Envisioning product design (ie. problem statement, target audience)","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"#### Review/mentoring contributions","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"Here are the PRs that I have reviewed","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"- (to be added)","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"Here are some ways through which I have aided my team members","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"- (to be added)","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"praveenkrishna0512":31,"-":16}},{"path":"docs/team/vigonometry.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"title: Vigneshwar Hariharan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"### Doc√©dex","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"Doc√©dex is a **desktop application for managing doctors and patients within hospitals**, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you type fast, Doc√©dex can get your patient management tasks done faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"* Table of Contents","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"  {:toc}","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"#### Code contributed","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"My code contributions can be visualised through [RepoSense](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dvigonometry\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other).","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"Here is a summary of the enhancements you implemented.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"(to be added)","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"Here are my contributions to the UG.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"(to be added)","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"Here are my contributions to the DG","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"- Sections","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    - (to be added)","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"- UML diagrams","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    - (to be added)","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"Here are my contributions to team-based tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"- Brainstorming of user stories and use cases","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"- Envisioning product design (ie. problem statement, target audience)","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"#### Review/mentoring contributions","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"Here are the PRs that I have reviewed","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"- (to be added)","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"Here are some ways through which I have aided my team members","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"- (to be added)","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"vigonometry":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command‚Äâ‚Äî‚Äâ`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We‚Äôll assume that you have already set up the development environment as outlined in the Developer‚Äôs Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let‚Äôs start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let‚Äôs keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let‚Äôs change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let‚Äôs change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let‚Äôs change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let‚Äôs move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let‚Äôs take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let‚Äôs find out what we need to do in order to obtain the Index and String that we need. Let‚Äôs look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user‚Äôs input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don‚Äôt forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let‚Äôs lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person‚Äôs name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let‚Äôs change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let‚Äôs go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"praveenkrishna0512"},"content":"Simply add the following to [`seedu.address.ui.DoctorCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don‚Äôt worry‚Äâ‚Äî‚Äâwe will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That‚Äôs it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library‚Äâ‚Äî‚ÄâJackson. Let‚Äôs update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook‚Äôs storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression‚Äâ‚Äî‚Äâwe went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don‚Äôt slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let‚Äôs verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let‚Äôs create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let‚Äôs change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let‚Äôs use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"praveenkrishna0512":1,"-":400}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String LOG_FILE \u003d \"docedex.log\";","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX \u003d \"The doctor index provided is invalid\";","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"owen-yap":1,"-":13}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"     * Returns true if the {@code sentence} contains the {@code substring}.","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"     *   Ignores case, whitespaces are matched","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"AC\") \u003d\u003d false","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"CD\") \u003d\u003d false //whitespace","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"Bobfree546"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"     * @param substring cannot be null","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Bobfree546"},"content":"    public static boolean containsSubstringIgnoreCase(String sentence, String substring) {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(substring);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"        return sentence.toLowerCase().contains(substring.toLowerCase());","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Bobfree546":20,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    /** Returns an unmodifiable view of the filtered list of doctors */","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"owen-yap":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"        return model.getFilteredDoctorList();","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"owen-yap":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":" * Adds a doctor to the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"public class AddDoctorCommand extends AddCommand {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    public static final String COMMAND_WORD \u003d \"add-doc\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_SPECIALTY + \"SPECIALTY \"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_YOE + \"YEARS OF EXPERIENCE \"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_SPECIALTY + \"Cardiology \"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_YOE + \"5 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_TAG + \"Head of Department \";","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New doctor added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"    public static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"This doctor already exists in the address book\";","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    private final Doctor toAdd;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"     * Creates an AddDoctorCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"    public AddDoctorCommand(Doctor doctor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        super(doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        toAdd \u003d doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        if (model.hasDoctor(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        model.addDoctor(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"                || (other instanceof AddDoctorCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 toAdd.equals(((AddDoctorCommand) other).toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"owen-yap":3,"vigonometry":67}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":" * Deletes doctor from the address book","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"public class DeleteDoctorCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    public static final String COMMAND_WORD \u003d \"del-doc\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"            + \": Deletes the doctor identified by the index number used in the displayed doctor list.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    public static final String MESSAGE_DELETE_DOCTOR_SUCCESS \u003d \"Deleted Doctor: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    public DeleteDoctorCommand(Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"        Doctor doctorToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"        model.deleteDoctor(doctorToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DOCTOR_SUCCESS, doctorToDelete));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"                || (other instanceof DeleteDoctorCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteDoctorCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"vigonometry":50}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedTags);","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"owen-yap":2,"-":209}},{"path":"src/main/java/seedu/address/logic/commands/EditDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DOCTORS;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Yoe;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":" * Edits the details of an existing doctor in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"public class EditDoctorCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"    public static final String COMMAND_WORD \u003d \"edit-doc\";","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the doctor identified \"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"            + \"by the index number used in the displayed doctors list. \"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_SPECIALTY + \"SPECIALTY \"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_YOE + \"YEARS OF EXPERIENCE \"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_SPECIALTY + \"Family Medicine \";","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_EDIT_DOCTOR_SUCCESS \u003d \"Edited Doctor: %1$s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"This doctor already exists in the address book.\";","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"    private final Index index;","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"    private final EditDoctorDescriptor editDoctorDescriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"     * @param index of the doctor in the filtered doctor list to edit","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"     * @param editDoctorDescriptor details to edit the doctor with","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorCommand(Index index, EditDoctorDescriptor editDoctorDescriptor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(editDoctorDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"        this.editDoctorDescriptor \u003d new EditDoctorDescriptor(editDoctorDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"        Doctor doctorToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        Doctor editedDoctor \u003d createEditedDoctor(doctorToEdit, editDoctorDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        if (!doctorToEdit.isSameDoctor(editedDoctor) \u0026\u0026 model.hasDoctor(editedDoctor)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        model.setDoctor(doctorToEdit, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        model.updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_DOCTOR_SUCCESS, editedDoctor));","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"     * Creates and returns a {@code Doctor} with the details of {@code doctorToEdit}","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"     * edited with {@code editDoctorDescriptor}.","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"    private static Doctor createEditedDoctor(Doctor doctorToEdit, EditDoctorDescriptor editDoctorDescriptor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"        assert doctorToEdit !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"        Name updatedName \u003d editDoctorDescriptor.getName().orElse(doctorToEdit.getName());","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"        Phone updatedPhone \u003d editDoctorDescriptor.getPhone().orElse(doctorToEdit.getPhone());","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"        Email updatedEmail \u003d editDoctorDescriptor.getEmail().orElse(doctorToEdit.getEmail());","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        Specialty updatedSpecialty \u003d editDoctorDescriptor.getSpecialty().orElse(doctorToEdit.getSpecialty());","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        Yoe updatedYoe \u003d editDoctorDescriptor.getYoe().orElse(doctorToEdit.getYoe());","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"        Set\u003cTag\u003e updatedTags \u003d editDoctorDescriptor.getTags().orElse(doctorToEdit.getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"        return new Doctor(updatedName, updatedPhone, updatedEmail, updatedSpecialty, updatedYoe, updatedTags);","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"        if (!(other instanceof EditDoctorCommand)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"        // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand e \u003d (EditDoctorCommand) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 editDoctorDescriptor.equals(e.editDoctorDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"     * Stores the details to edit the doctor with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"     * corresponding field value of the doctor.","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"    public static class EditDoctorDescriptor {","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"        private Name name;","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"        private Phone phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"        private Email email;","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"        private Specialty specialty;","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"        private Yoe yoe;","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"        public EditDoctorDescriptor() {}","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"        public EditDoctorDescriptor(EditDoctorDescriptor toCopy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"owen-yap"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"owen-yap"},"content":"            setSpecialty(toCopy.specialty);","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"            setYoe(toCopy.yoe);","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"owen-yap"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"owen-yap"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"owen-yap"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"owen-yap"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"owen-yap"},"content":"        public void setSpecialty(Specialty specialty) {","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"owen-yap"},"content":"            this.specialty \u003d specialty;","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cSpecialty\u003e getSpecialty() {","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(specialty);","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"owen-yap"},"content":"        public void setYoe(Yoe yoe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"owen-yap"},"content":"            this.yoe \u003d yoe;","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cYoe\u003e getYoe() {","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(yoe);","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"owen-yap"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"owen-yap"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"owen-yap"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"owen-yap"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":208,"author":{"gitId":"owen-yap"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"owen-yap"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"owen-yap"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-11"},{"lineNumber":211,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-11"},{"lineNumber":213,"author":{"gitId":"owen-yap"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-03-11"},{"lineNumber":214,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":215,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":216,"author":{"gitId":"owen-yap"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":217,"author":{"gitId":"owen-yap"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"owen-yap"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":219,"author":{"gitId":"owen-yap"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":220,"author":{"gitId":"owen-yap"},"content":"                return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":221,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":222,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":223,"author":{"gitId":"owen-yap"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":224,"author":{"gitId":"owen-yap"},"content":"            if (!(other instanceof EditDoctorDescriptor)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":225,"author":{"gitId":"owen-yap"},"content":"                return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":226,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"owen-yap"},"content":"            // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"owen-yap"},"content":"            EditDoctorDescriptor e \u003d (EditDoctorDescriptor) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"owen-yap"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getSpecialty().equals(e.getSpecialty())","lastModifiedDate":"2023-03-11"},{"lineNumber":235,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getYoe().equals(e.getYoe())","lastModifiedDate":"2023-03-11"},{"lineNumber":236,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":237,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":238,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":239,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"owen-yap":239}},{"path":"src/main/java/seedu/address/logic/commands/FindDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":" * Finds and lists all doctors in address book matching the respective parameters.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":" * Parameter matching is case-insensitive and substrings are matched.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":" * At least one parameter is required","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":" * Tags are matched fully","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"public class FindDoctorCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"    public static final String COMMAND_WORD \u003d \"find-doc\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds a doctor in the address book. \"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"            + \"(\" + PREFIX_NAME + \"NAME) \"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"            + \"(\" + PREFIX_PHONE + \"PHONE) \"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"            + \"(\" + PREFIX_EMAIL + \"EMAIL) \"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"            + \"(\" + PREFIX_SPECIALTY + \"SPECIALITY) \"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"            + \"(\" + PREFIX_YOE + \"YEARS OF EXPERIENCE) \"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"            + \"At least one of the parameters must be present. \\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"            + \"Only one of each parameter (excluding \" + PREFIX_TAG + \"TAG) may be present. \\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"            + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"    private final DoctorContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"    public FindDoctorCommand(DoctorContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        model.updateFilteredDoctorList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Bobfree546"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Bobfree546"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"                || (other instanceof FindDoctorCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 predicate.equals(((FindDoctorCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bobfree546":57,"owen-yap":2,"vigonometry":1}},{"path":"src/main/java/seedu/address/logic/commands/ListDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DOCTORS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":" * Lists all doctors in Docedex to the user.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"public class ListDoctorCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"    public static final String COMMAND_WORD \u003d \"list-doc\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all doctors\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"        model.updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Bobfree546":24}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        Person person \u003d new Person(name, phone, email, tagList);","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"owen-yap":3,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/AddDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Yoe;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"public class AddDoctorCommandParser implements Parser\u003cAddDoctorCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    public AddDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE,","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE)","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        Specialty specialty \u003d ParserUtil.parseSpecialty(argMultimap.getValue(PREFIX_SPECIALTY).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        Yoe yoe \u003d ParserUtil.parseYoe(argMultimap.getValue(PREFIX_YOE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        Doctor doctor \u003d new Doctor(name, phone, email, specialty, yoe, tagList);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        return new AddDoctorCommand(doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"owen-yap":4,"vigonometry":61}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.EditDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.FindDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.ListDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        case AddDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"            return new AddDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        case EditDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"            return new EditDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"        case DeleteDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"            return new DeleteDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"Bobfree546"},"content":"        case FindDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"Bobfree546"},"content":"            return new FindDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"Bobfree546"},"content":"        case ListDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Bobfree546"},"content":"            return new ListDoctorCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Bobfree546":6,"owen-yap":3,"vigonometry":10,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public static final Prefix PREFIX_SPECIALTY \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"    public static final Prefix PREFIX_YOE \u003d new Prefix(\"y/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"owen-yap":1,"vigonometry":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":" * Parses input arguments and creates a new DeleteDoctorCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"public class DeleteDoctorCommandParser implements Parser\u003cDeleteDoctorCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    public DeleteDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"            return new DeleteDoctorCommand(index);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDoctorCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"vigonometry":30}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"owen-yap":1,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/EditDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditDoctorCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":" * Parses input arguments and creates a new EditDoctorCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"public class EditDoctorCommandParser implements Parser\u003cEditDoctorCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"     * Parses the given {@code String} of arguments in the context of the EditDoctorCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"     * and returns an EditDoctorCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE,","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"                    EditDoctorCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor editDoctorDescriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_SPECIALTY).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setSpecialty(ParserUtil.parseSpecialty(argMultimap.getValue(PREFIX_SPECIALTY).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_YOE).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setYoe(ParserUtil.parseYoe(argMultimap.getValue(PREFIX_YOE).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editDoctorDescriptor::setTags);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        if (!editDoctorDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"            throw new ParseException(EditDoctorCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"        return new EditDoctorCommand(index, editDoctorDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"owen-yap":88}},{"path":"src/main/java/seedu/address/logic/parser/FindDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.FindDoctorCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.DoctorFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":" * Parses input arguments and creates a new FindDoctorCommand object","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"public class FindDoctorCommandParser implements Parser\u003cFindDoctorCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"    public FindDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE,","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"        if (!hasAtLeastOnePrefix(argMultimap, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"                PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE, PREFIX_TAG)","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"        String name \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\").trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"        String phone \u003d argMultimap.getValue(PREFIX_PHONE).orElse(\"\").trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"        String email \u003d argMultimap.getValue(PREFIX_EMAIL).orElse(\"\").trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        String specialty \u003d argMultimap.getValue(PREFIX_SPECIALTY).orElse(\"\").trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"        String yoe \u003d argMultimap.getValue(PREFIX_YOE).orElse(\"\").trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cString\u003e tagList \u003d argMultimap.getAllValues(PREFIX_TAG)","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"                .stream().map(tag -\u003e tag.toLowerCase().trim()).collect(Collectors.toSet());","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"        if (name.isEmpty() \u0026\u0026 phone.isEmpty() \u0026\u0026 email.isEmpty()","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 specialty.isEmpty() \u0026\u0026 yoe.isEmpty() \u0026\u0026 tagList.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Bobfree546"},"content":"        DoctorFilter doctorFilter \u003d new DoctorFilter(name, phone, email, specialty, yoe, tagList);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"        return new FindDoctorCommand(new DoctorContainsKeywordsPredicate(doctorFilter));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"     * Returns true if at least one of the prefix contains {@code Optional} values in the given","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"    private static boolean hasAtLeastOnePrefix(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bobfree546":62,"owen-yap":4}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Yoe;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"     * Parses a {@code String speciality} into an {@code Speciality}.","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the given {@code speciality} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"    public static Specialty parseSpecialty(String speciality) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(speciality);","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"        String trimmedSpeciality \u003d speciality.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"        if (!Specialty.isValidSpecialty(trimmedSpeciality)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(Specialty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"        return new Specialty(trimmedSpeciality);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"     * Parses a {@code String yoe} into an {@code Yoe}.","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the given {@code yoe} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"    public static Yoe parseYoe(String yoe) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(yoe);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        String trimmedYoe \u003d yoe.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"        if (!Yoe.isValidYoe(trimmedYoe)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(Yoe.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"        return new Yoe(trimmedYoe);","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"owen-yap":1,"vigonometry":31,"-":108}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.UniqueDoctorList;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"    private final UniqueDoctorList doctors;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        doctors \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"     * Replaces the contents of the doctor list with {@code doctors}.","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"     * {@code doctors} must not contain duplicate doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"        this.doctors.setDoctors(doctors);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        setDoctors(newData.getDoctorList());","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a doctor with the same identity as {@code doctor} exists in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"        return doctors.contains(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"     * Adds a doctor to the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"     * The doctor must not already exist in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"     * @param doctor","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        doctors.add(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"     * Replaces the given doctor {@code target} in the list with {@code editedDoctor}.","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"     * The doctor identity of {@code editedDoctor} must not be the same as another existing doctor in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"        doctors.setDoctor(target, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"vigonometry"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"vigonometry"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"vigonometry"},"content":"    public void removeDoctor(Doctor key) {","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"vigonometry"},"content":"        doctors.remove(key);","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"    public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"        return doctors.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owen-yap":45,"vigonometry":9,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    Predicate\u003cDoctor\u003e PREDICATE_SHOW_ALL_DOCTORS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"     * Returns true if a doctor with the same identity as {@code doctor} exists in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"    boolean hasDoctor(Doctor doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"     * Adds the given doctor.","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"     * {@code doctor} must not already exist in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"    void addDoctor(Doctor doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"     * Replaces the given doctor {@code target} with {@code editedDoctor}.","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"     * The doctor identity of {@code editedDoctor} must not be the same as another existing doctor in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"    void setDoctor(Doctor target, Doctor editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    /** Returns an unmodifiable view of the filtered doctor list */","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"     * Updates the filter of the filtered doctor list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"    void updateFilteredDoctorList(Predicate\u003c? extends Person\u003e predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"     * Deletes the given doctor.","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"    void deleteDoctor(Doctor target);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"owen-yap":16,"vigonometry":21,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    private final FilteredList\u003cDoctor\u003e filteredDoctors;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        filteredDoctors \u003d new FilteredList\u003c\u003e(this.addressBook.getDoctorList());","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"        return addressBook.hasDoctor(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"    public void deleteDoctor(Doctor target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"        addressBook.removeDoctor(target);","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"    public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"        addressBook.addDoctor(doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(target, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"        addressBook.setDoctor(target, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"        return filteredDoctors;","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"vigonometry"},"content":"    public void updateFilteredDoctorList(Predicate\u003c? extends Person\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"vigonometry"},"content":"        filteredDoctors.setPredicate((Predicate\u003c? super Doctor\u003e) predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 filteredDoctors.equals(other.filteredDoctors);","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owen-yap":27,"vigonometry":13,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"     * Returns an unmodifiable view of the doctors list.","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    ObservableList\u003cDoctor\u003e getDoctorList();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owen-yap":6,"-":17}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"docedex.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":1,"-":86}},{"path":"src/main/java/seedu/address/model/person/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":" * Represents a Doctor in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"public class Doctor extends Person {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"    // Identity fields","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    private final Specialty specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"    private final Yoe yoe;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"    public Doctor(Name name, Phone phone, Email email, Specialty specialty, Yoe yoe, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(name, phone, email, specialty, yoe, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        this.yoe \u003d yoe;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    public Specialty getSpecialty() {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        return specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"    public Yoe getYoe() {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        return yoe;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"     * Returns true if both doctors have the same name.","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"     * This defines a weaker notion of equality between two doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"    public boolean isSameDoctor(Doctor otherDoctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        if (otherDoctor \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        return otherDoctor !\u003d null","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getName().equals(getName());","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"     * Returns true if both doctors have the same identity and data fields.","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"     * This defines a stronger notion of equality between two doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        if (!(other instanceof Doctor)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"        Doctor otherDoctor \u003d (Doctor) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"        return otherDoctor.getName().equals(getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getSpecialty().equals(getSpecialty())","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getYoe().equals(getYoe())","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getTags().equals(getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getSpecialty(), getYoe(), getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"                .append(getPhone())","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Specialty: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"                .append(getSpecialty())","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"                .append(\"; YOE: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"                .append(getYoe());","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"owen-yap":96}},{"path":"src/main/java/seedu/address/model/person/DoctorContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":" * Tests that a {@code Doctor\u0027s fields} matches the {@code DoctorFilter} given.","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"public class DoctorContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"    private final DoctorFilter doctorFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"    public DoctorContainsKeywordsPredicate(DoctorFilter doctorFilter) {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"        this.doctorFilter \u003d doctorFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"        return (person instanceof Doctor) \u0026\u0026 doctorFilter.isMatch((Doctor) person);","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"                || (other instanceof DoctorContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 doctorFilter.equals(((DoctorContainsKeywordsPredicate) other).doctorFilter)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bobfree546":26,"vigonometry":2}},{"path":"src/main/java/seedu/address/model/person/DoctorFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":" * Filter Class for passing to DoctorContainsKeywordsPredicate","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"public class DoctorFilter {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"    //Filter fields","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"    private final String nameFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"    private final String phoneFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"    private final String emailFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"    private final String specialtyFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"    private final String yoeFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"    private final Set\u003cString\u003e tagsFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"     * Constructs a {@code DoctorFilter}.","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"     * @param name name in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"     * @param phone phone in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"     * @param email email in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"     * @param specialty specialty in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"     * @param yoe yoe in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"     * @param tags set of tags in string (can be empty list).","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"    public DoctorFilter(String name,","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"                        String phone,","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"                        String email,","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"                        String specialty,","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"                        String yoe, Set\u003cString\u003e tags) {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"        this.nameFilter \u003d name;","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"        this.phoneFilter \u003d phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"        this.emailFilter \u003d email;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"        this.specialtyFilter \u003d specialty;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"        this.yoeFilter \u003d yoe;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"        this.tagsFilter \u003d tags;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"     * Matches filter fields to doctor","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"     * Returns true if each filter field is a substring of the respective field of doctor","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"    public boolean isMatch(Doctor doctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"Bobfree546"},"content":"        boolean result \u003d StringUtil.containsSubstringIgnoreCase(doctor.getName().fullName, nameFilter)","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(doctor.getPhone().value, phoneFilter)","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(doctor.getEmail().value, emailFilter)","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(doctor.getSpecialty().specialty, specialtyFilter)","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(doctor.getYoe().value, yoeFilter);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"        if (!tagsFilter.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"            Set\u003cString\u003e tagStringSet \u003d doctor","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"                    .getTags()","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"                    .stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"                    .map(tag -\u003e tag.tagName.toLowerCase())","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"                    .collect(Collectors.toSet());","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"            result \u003d result \u0026\u0026 tagStringSet.containsAll(tagsFilter","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"                    .stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"                    .map(String::toLowerCase)","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"                    .collect(Collectors.toSet()));","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"        return result;","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bobfree546":70}},{"path":"src/main/java/seedu/address/model/person/DoctorStub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":" * Represents a Doctor with pre-filled attributes.","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"public class DoctorStub extends Doctor {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"     * Constructor for {@code DoctorStub}","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    public DoctorStub() {","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"        super(new Name(\"John Doe\"), new Phone(\"88887777\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"                new Email(\"prawn@gmail.com\"), new Specialty(\"GP\"), new Yoe(\"1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"                new HashSet\u003c\u003e(List.of(new Tag(\"Friend\"), new Tag(\"College\"))));","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"owen-yap":1,"praveenkrishna0512":19}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    public Person(Name name, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"                .append(getEmail());","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"owen-yap":4,"-":111}},{"path":"src/main/java/seedu/address/model/person/Specialty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":" * Represents a Doctor\u0027s specialty in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSpecialty(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class Specialty {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"            \"Specialty should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    /*","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"     * The first character of the specialty must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    public final String specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code Specialty}.","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"     * @param specialty A valid specialty.","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    public Specialty(String specialty) {","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(specialty);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        checkArgument(isValidSpecialty(specialty), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a given string is a valid specialty.","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    public static boolean isValidSpecialty(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        return specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof Specialty // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 specialty.equals(((Specialty) other).specialty)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"        return specialty.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"owen-yap":57}},{"path":"src/main/java/seedu/address/model/person/UniqueDoctorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":" * A list of doctors that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":" * A doctor is considered unique by comparing using {@code Doctor#isSameDoctor(Doctor)}. As such, adding and updating of","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":" * doctors uses Doctor#isSameDoctor(Doctor) for equality so as to ensure that the doctor being added or updated is","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":" * unique in terms of identity in the UniqueDoctorList. However, the removal of a doctor uses Doctor#equals(Object) so","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":" * as to ensure that the doctor with exactly the same fields will be removed.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":" *","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":" *","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":" * @see Doctor#isSameDoctor(Doctor)","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"public class UniqueDoctorList implements Iterable\u003cDoctor\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    private final ObservableList\u003cDoctor\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    private final ObservableList\u003cDoctor\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"     * Returns true if the list contains an equivalent doctor as the given argument.","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    public boolean contains(Doctor toCheck) {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"     * Adds a doctor to the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"     * The doctor must not already exist in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"    public void add(Doctor toAdd) {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"     * Replaces the doctor {@code target} in the list with {@code editedDoctor}.","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"     * The doctor identity of {@code editedDoctor} must not be the same as another existing doctor in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(target, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"        if (!target.isSameDoctor(editedDoctor) \u0026\u0026 contains(editedDoctor)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"        internalList.set(index, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"     * Removes the equivalent doctor from the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"     * The doctor must exist in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"    public void remove(Doctor toRemove) {","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors(UniqueDoctorList replacement) {","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"     * Replaces the contents of this list with {@code doctors}.","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"     * {@code doctors} must not contain duplicate doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(doctors);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        if (!doctorsAreUnique(doctors)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"        internalList.setAll(doctors);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public ObservableList\u003cDoctor\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"    public Iterator\u003cDoctor\u003e iterator() {","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof UniqueDoctorList // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 internalList.equals(((UniqueDoctorList) other).internalList));","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"     * Returns true if {@code doctors} contains only unique doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"    private boolean doctorsAreUnique(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"        for (int i \u003d 0; i \u003c doctors.size() - 1; i++) {","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"            for (int j \u003d i + 1; j \u003c doctors.size(); j++) {","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"                if (doctors.get(i).isSameDoctor(doctors.get(j))) {","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"                    return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"                }","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"        return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"owen-yap":137}},{"path":"src/main/java/seedu/address/model/person/Yoe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":" * Represents a Doctor\u0027s Years of Experience (YOE) in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidYoe(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class Yoe {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"            \"Years of Experience (YOE) should only contain numbers, and it should be at most 2 digits long\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"    public static final String VALIDATION_REGEX \u003d \"^0*[1-9][0-9]{0,1}$\";","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    public final String value;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code YOE}.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"     * @param yoe A valid number of years.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    public Yoe(String yoe) {","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(yoe);","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        checkArgument(isValidYoe(yoe), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"        yoe \u003d yoe.replaceFirst(\"^0+(?!$)\", \"\");","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"        value \u003d yoe;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a given string is a valid years of experience.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    public static boolean isValidYoe(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        return value;","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof Yoe // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 value.equals(((Yoe) other).value)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"owen-yap":53}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDoctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Yoe;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":" * Jackson-friendly version of {@link Doctor}.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"class JsonAdaptedDoctor extends JsonAdaptedPerson {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Doctor\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String specialty;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String yearsOfExperience;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code JsonAdaptedDoctor} with the given doctor details.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    public JsonAdaptedDoctor(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"specialty\") String specialty,","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"yearsOfExperience\") String yearsOfExperience,","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"        super(name, phone, email, tagged);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"        this.yearsOfExperience \u003d yearsOfExperience;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"     * Converts a given {@code Doctor} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    public JsonAdaptedDoctor(Doctor source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        super(source);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        yearsOfExperience \u003d source.getYoe().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        specialty \u003d source.getSpecialty().specialty;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Doctor} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted doctor.","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    public Doctor toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        if (specialty \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Specialty.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!Specialty.isValidSpecialty(specialty)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(Specialty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"        final Specialty modelSpecialty \u003d new Specialty(specialty);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"        if (yearsOfExperience \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Yoe.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!Yoe.isValidYoe(yearsOfExperience)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(Yoe.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        final Yoe modelYearsOfExperience \u003d new Yoe(yearsOfExperience);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        Person doctorPerson \u003d super.toModelType();","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Doctor(doctorPerson.getName(), doctorPerson.getPhone(), doctorPerson.getEmail(),","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"                modelSpecialty, modelYearsOfExperience, doctorPerson.getTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"owen-yap":2,"praveenkrishna0512":73}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelTags);","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"owen-yap":2,"-":94}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"@JsonRootName(value \u003d \"docedex\")","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"Doctors list contains duplicate doctors(s).\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    private final List\u003cJsonAdaptedDoctor\u003e doctors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given doctors.","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"doctors\") List\u003cJsonAdaptedDoctor\u003e doctors) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        this.doctors.addAll(doctors);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        doctors.addAll(source.getDoctorList().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"                .map(JsonSerializableAddressBook::convertToJsonAdaptedDoctor).collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"     * Converts a given {@code Doctor} into a JsonAdaptedDoctor.","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param doctor a doctor object.","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a JsonAdaptedDoctor.","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    private static JsonAdaptedDoctor convertToJsonAdaptedDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        return new JsonAdaptedDoctor(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        for (JsonAdaptedDoctor jsonAdaptedDoctor : doctors) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"            Doctor doctor \u003d jsonAdaptedDoctor.toModelType();","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"            if (addressBook.hasDoctor(doctor)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"            addressBook.addDoctor(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"owen-yap":3,"praveenkrishna0512":21,"-":49}},{"path":"src/main/java/seedu/address/ui/DoctorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":" * An UI component that displays the name, phone number, email and tags of a {@code Doctor}.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"public class DoctorCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"DoctorListCard.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    public final Doctor doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code DoctorCard} with the given {@code Doctor} and index to display.","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    public DoctorCard(Doctor doctor, int displayedIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        name.setText(doctor.getName().fullName);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        phone.setText(doctor.getPhone().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"        email.setText(doctor.getEmail().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"        doctor.getTags().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!(other instanceof DoctorCard)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        DoctorCard card \u003d (DoctorCard) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 doctor.equals(card.doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"praveenkrishna0512":15,"-":59}},{"path":"src/main/java/seedu/address/ui/DoctorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"public class DoctorListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"DoctorListPanel.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DoctorListPanel.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    private ListView\u003cDoctor\u003e doctorListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private Doctor selectedDoctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code DoctorListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    public DoctorListPanel(ObservableList\u003cDoctor\u003e doctorList, EnlargedContactCard enlargedContactCard) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"        super(FXML);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListView.setItems(doctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListView.setCellFactory(listView -\u003e new DoctorListViewCell());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"        setSelectedDoctor(doctorList);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"        showSelectedDoctorInfo(enlargedContactCard);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns the {@code Doctor} selected by the user.","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return doctor selected by user","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    public Doctor getSelectedDoctor() {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.selectedDoctor;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"     * Sets the {@code Doctor} selected by the user.","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param doctorList list of {@code Doctor} objects queried by the user","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"    private void setSelectedDoctor(ObservableList\u003cDoctor\u003e doctorList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"        selectedDoctor \u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!doctorList.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"            selectedDoctor \u003d doctorList.get(0);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"     * Prompts {@code EnlargedContactCard} to display the information of the {@code Doctor} selected by the user.","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"     * This is done by configuring a {@code ChangeListener} to listen to user selection.","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param enlargedContactCard the UI part displaying the information of {@code Doctor} selected","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    private void showSelectedDoctorInfo(EnlargedContactCard enlargedContactCard) {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        ChangeListener\u003cDoctor\u003e changeListener \u003d (observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"            selectedDoctor \u003d observable.getValue();","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"            enlargedContactCard.updateSelectedDoctor(selectedDoctor);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        };","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListView.getSelectionModel().selectedItemProperty().addListener(changeListener);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Doctor} using a {@code DoctorCard}.","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    class DoctorListViewCell extends ListCell\u003cDoctor\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"        protected void updateItem(Doctor doctor, boolean empty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"            super.updateItem(doctor, empty);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"            if (empty || doctor \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"                setText(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"                setGraphic(new DoctorCard(doctor, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"praveenkrishna0512":89}},{"path":"src/main/java/seedu/address/ui/EnlargedContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":" * An UI component that displays all information of a {@code Doctor}.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"public class EnlargedContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"EnlargedContactCard.fxml\";","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private Doctor selectedDoctor;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    private VBox enlargedContactCard;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label name;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label email;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label specialty;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label yearsOfExperience;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code EnlargedContactCard} with the given {@code Doctor}.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    public EnlargedContactCard(Doctor selectedDoctor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"        super(FXML);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"        updateSelectedDoctor(selectedDoctor);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the information shown on the {@code EnlargedContactCard}","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"     * with that of the given {@code Doctor}.","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param selectedDoctor the given {@code Doctor}","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateSelectedDoctor(Doctor selectedDoctor) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"        this.selectedDoctor \u003d selectedDoctor;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        name.setText(selectedDoctor.getName().fullName);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"        phone.setText(selectedDoctor.getPhone().value);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"        email.setText(selectedDoctor.getEmail().value);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"        specialty.setText(selectedDoctor.getSpecialty().specialty);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        yearsOfExperience.setText(selectedDoctor.getYoe().value);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        selectedDoctor.getTags().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!(other instanceof EnlargedContactCard)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"        // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"        EnlargedContactCard card \u003d (EnlargedContactCard) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"        return selectedDoctor.equals(card.selectedDoctor);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"praveenkrishna0512":86}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-f12-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"praveenkrishna0512":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.DoctorStub;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    private EnlargedContactCard enlargedContactCard;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    private DoctorListPanel doctorListPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    private StackPane enlargedContactCardPlaceholder;","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"        // TODO: Change EnlargedContactCard to show nothing if doctor list is empty","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"        // TODO: Separation of Concerns here does not seem strong","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"        Doctor initDoctor \u003d new DoctorStub();","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!logic.getFilteredDoctorList().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"            initDoctor \u003d logic.getFilteredDoctorList().get(0);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedContactCard \u003d new EnlargedContactCard(initDoctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedContactCardPlaceholder.getChildren().add(enlargedContactCard.getRoot());","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListPanel \u003d new DoctorListPanel(logic.getFilteredDoctorList(), enlargedContactCard);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"        personListPanelPlaceholder.getChildren().add(doctorListPanel.getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"praveenkrishna0512"},"content":"    public DoctorListPanel getPersonListPanel() {","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"praveenkrishna0512"},"content":"        return doctorListPanel;","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"praveenkrishna0512":20,"-":191}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/css/DarkTheme.css\");","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"praveenkrishna0512":1,"-":87}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cStackPane styleClass\u003d\"command-box, primary-border\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"praveenkrishna0512":1,"-":8}},{"path":"src/main/resources/view/DoctorListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" styleClass\u003d\"contact-card-pane\"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cInsets right\u003d\"5\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"          styleClass\u003d\"only-bottom-primary-border\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":7,"-":33}},{"path":"src/main/resources/view/DoctorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"primary-border\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"only-bottom-primary-border\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel fx:id\u003d\"contactListTitle\" styleClass\u003d\"label-header-3\" text\u003d\"Doctors\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cListView fx:id\u003d\"doctorListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"contact-listview\"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":7,"-":6}},{"path":"src/main/resources/view/EnlargedContactCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cVBox fx:id\u003d\"enlargedContactCard\" styleClass\u003d\"enlarged-contact-card, primary-border\"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"only-bottom-primary-border\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"label-header-3\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cVBox styleClass\u003d\"enlarged-contacts-details-pane\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cInsets top\u003d\"15\" right\u003d\"15\" bottom\u003d\"15\" left\u003d\"15\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Phone Number:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"value-label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Email:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"value-label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Specialty:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel fx:id\u003d\"specialty\" styleClass\u003d\"value-label\" text\u003d\"\\$specialty\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Years of Experience:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel fx:id\u003d\"yearsOfExperience\" styleClass\u003d\"value-label\" text\u003d\"\\$yearsOfExperience\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Tags:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"praveenkrishna0512":29}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cURL value\u003d\"@css/HelpWindow.css\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"praveenkrishna0512":1,"-":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"         title\u003d\"Docedex\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cURL value\u003d\"@css/DarkTheme.css\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cURL value\u003d\"@css/Extensions.css\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cVBox styleClass\u003d\"background\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\" styleClass\u003d\"menu-bar\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"          \u003cVBox styleClass\u003d\"body\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                       minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003cGridPane alignment\u003d\"CENTER_LEFT\" hgap\u003d\"10\" vgap\u003d\"10\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"              \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"                \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"225\" prefWidth\u003d\"250\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"              \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"              \u003cVBox fx:id\u003d\"personList\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"                    GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"2\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"              \u003cVBox fx:id\u003d\"enlargedContactPane\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"                    GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"                \u003cStackPane fx:id\u003d\"enlargedContactCardPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"praveenkrishna0512":23,"-":50}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cStackPane xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"praveenkrishna0512":2,"-":8}},{"path":"src/main/resources/view/css/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":" * Background Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #0A1928;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"    background-color: #0A1928; /* Used in the default.html file */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":" * Menu Bar Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":".menu-bar {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #0059B2;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":".menu .left-container {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":" * Application Body Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":".body {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 5 5 5 5;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":" * Command Box Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":".command-box {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #2A3745;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":" * Result Display Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":".result-display {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-control-inner-background: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":" * Contact Pane Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":".contact-listview {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":".contact-listview .scroll-bar:vertical{","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":" * Contact Card Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":".contact-card-pane {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"#cardPane {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #000534;","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":" * Enlarged Contact Card Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contact-card {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contacts-details-pane {","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contact-card .description-label {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: #828282;","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 4 0 0 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contact-card .value-label {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":" * Scroll Bar styles","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar {","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-color: #A0A0A0;","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-width: 0px 0px 0px 1px;","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #99CCFF;","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-radius: 100px;","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":" * Label Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"praveenkrishna0512"},"content":".label-header-3 {","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: #3399FF;","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"praveenkrishna0512"},"content":" * Border Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"praveenkrishna0512"},"content":".primary-border {","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-color: #A0A0A0;","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"praveenkrishna0512"},"content":".only-bottom-primary-border {","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-color: #A0A0A0;","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"praveenkrishna0512"},"content":" * ID based stylings","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"praveenkrishna0512"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"praveenkrishna0512"},"content":"#commandTextField {","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"praveenkrishna0512"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"praveenkrishna0512"},"content":"#tags {","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"praveenkrishna0512"},"content":"#tags .label {","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"praveenkrishna0512"},"content":" * Unorganized styles","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":328,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":331,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":389,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":391,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":392,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":394,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":404,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":410,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":413,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":415,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":417,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":419,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":421,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":423,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":425,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":427,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":431,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":433,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":435,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":437,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":442,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":190,"-":252}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.ListDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"        String listDoctorCommand \u003d ListDoctorCommand.COMMAND_WORD;","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"        assertCommandSuccess(listDoctorCommand, ListDoctorCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Bobfree546":3,"owen-yap":1,"-":156}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"        public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"        public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"owen-yap"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"vigonometry"},"content":"        public void updateFilteredDoctorList(Predicate\u003c? extends Person\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"owen-yap"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"vigonometry"},"content":"        public void deleteDoctor(Doctor target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"owen-yap":11,"vigonometry":12,"-":202}},{"path":"src/test/java/seedu/address/logic/commands/AddDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"public class AddDoctorCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    public void constructor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDoctorCommand(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    public void execute_doctorAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommandTest.ModelStubAcceptingDoctorAdded modelStub \u003d new AddDoctorCommandTest","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"                .ModelStubAcceptingDoctorAdded();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        CommandResult commandResult \u003d new AddDoctorCommand(validDoctor).execute(modelStub);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        assertEquals(String.format(AddDoctorCommand.MESSAGE_SUCCESS, validDoctor), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        assertEquals(Arrays.asList(validDoctor), modelStub.doctorsAdded);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    public void execute_duplicateDoctor_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommand addDoctorCommand \u003d new AddDoctorCommand(validDoctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommandTest.ModelStub modelStub \u003d new AddDoctorCommandTest.ModelStubWithDoctor(validDoctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        assertThrows(CommandException.class, AddDoctorCommand.MESSAGE_DUPLICATE_DOCTOR, () -\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"                addDoctorCommand.execute(modelStub));","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        Doctor alice \u003d new DoctorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        Doctor bob \u003d new DoctorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommand addAliceCommand \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommand addBobCommand \u003d new AddDoctorCommand(bob);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommand addAliceCommandCopy \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"        public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"vigonometry"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"vigonometry"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"vigonometry"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"vigonometry"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"vigonometry"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"vigonometry"},"content":"        public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"vigonometry"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"vigonometry"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"vigonometry"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"vigonometry"},"content":"        public void updateFilteredDoctorList(Predicate\u003c? extends Person\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"vigonometry"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"vigonometry"},"content":"        public void deleteDoctor(Doctor target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"vigonometry"},"content":"     * A Model stub that contains a single doctor.","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"vigonometry"},"content":"    private class ModelStubWithDoctor extends ModelStub {","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"vigonometry"},"content":"        private final Doctor doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"vigonometry"},"content":"        ModelStubWithDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"vigonometry"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"vigonometry"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"vigonometry"},"content":"            return this.doctor.isSameDoctor(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"vigonometry"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"vigonometry"},"content":"    private class ModelStubAcceptingDoctorAdded extends ModelStub {","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"vigonometry"},"content":"        final ArrayList\u003cDoctor\u003e doctorsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"vigonometry"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"vigonometry"},"content":"            return doctorsAdded.stream().anyMatch(doctor::isSamePerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"vigonometry"},"content":"        public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"vigonometry"},"content":"            doctorsAdded.add(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"vigonometry"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"vigonometry"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"vigonometry":228}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.DoctorFilter;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.EditDoctorDescriptorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_SPECIALTY_AMY \u003d \"Orthopaedics\";","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_SPECIALTY_BOB \u003d \"Paediatrics\";","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_YOE_AMY \u003d \"12\";","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_YOE_BOB \u003d \"4\";","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    public static final String SPECIALTY_DESC_AMY \u003d \" \" + PREFIX_SPECIALTY + VALID_SPECIALTY_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    public static final String SPECIALTY_DESC_BOB \u003d \" \" + PREFIX_SPECIALTY + VALID_SPECIALTY_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"    public static final String YOE_DESC_AMY \u003d \" \" + PREFIX_YOE + VALID_YOE_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"    public static final String YOE_DESC_BOB \u003d \" \" + PREFIX_YOE + VALID_YOE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"    public static final String PREFIX_SPECIALTY_DESC \u003d \" \" + PREFIX_SPECIALTY + \"GP\u0026\"; // \u0027\u0026\u0027 not allowed in specialty","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"    public static final String INVALID_YOE_DESC \u003d \" \" + PREFIX_YOE + \"129037\"; // YOE maximum 2 digits","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"    public static final EditDoctorCommand.EditDoctorDescriptor DESC_DR_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"    public static final EditDoctorCommand.EditDoctorDescriptor DESC_DR_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        DESC_DR_AMY \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withSpecialty(VALID_SPECIALTY_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"                .withYoe(VALID_YOE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        DESC_DR_BOB \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withSpecialty(VALID_SPECIALTY_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"                .withYoe(VALID_YOE_BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"vigonometry"},"content":"     * Updates {@code model}\u0027s filtered list to show only the doctor at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"vigonometry"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"vigonometry"},"content":"    public static void showDoctorAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"vigonometry"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredDoctorList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"vigonometry"},"content":"        Doctor doctor \u003d model.getFilteredDoctorList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"vigonometry"},"content":"        final String[] splitName \u003d doctor.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"vigonometry"},"content":"        model.updateFilteredDoctorList(new DoctorContainsKeywordsPredicate(new DoctorFilter(splitName[0], \"\",","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"vigonometry"},"content":"                \"\", \"\", \"\", new HashSet\u003c\u003e())));","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"vigonometry"},"content":"        assertEquals(1, model.getFilteredDoctorList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"owen-yap":24,"vigonometry":18,"-":119}},{"path":"src/test/java/seedu/address/logic/commands/DeleteDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":" * {@code DeleteDoctorCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"public class DeleteDoctorCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"        Doctor doctorToDelete \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteDoctorCommand \u003d new DeleteDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(DeleteDoctorCommand.MESSAGE_DELETE_DOCTOR_SUCCESS, doctorToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"        expectedModel.deleteDoctor(doctorToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(deleteDoctorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteDoctorCommand \u003d new DeleteDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(deleteDoctorCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        Doctor doctorToDelete \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteDoctorCommand \u003d new DeleteDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(DeleteDoctorCommand.MESSAGE_DELETE_DOCTOR_SUCCESS, doctorToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        expectedModel.deleteDoctor(doctorToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        showNoDoctor(expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(deleteDoctorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getDoctorList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteDoctorCommand \u003d new DeleteDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(deleteDoctorCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteFirstCommand \u003d new DeleteDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteSecondCommand \u003d new DeleteDoctorCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteFirstCommandCopy \u003d new DeleteDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"        // different doctor -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"    private void showNoDoctor(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"        model.updateFilteredDoctorList(p -\u003e false);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        assertTrue(model.getFilteredDoctorList().isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"vigonometry":110}},{"path":"src/test/java/seedu/address/logic/commands/ListDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"public class ListDoctorCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"        assertCommandSuccess(new ListDoctorCommand(), model, ListDoctorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"        assertCommandSuccess(new ListDoctorCommand(), model, ListDoctorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Bobfree546":6,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY,","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_TAG_DESC","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"                + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"owen-yap":21,"-":103}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.ListDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"Bobfree546"},"content":"    public void parseCommand_list_doc() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(parser.parseCommand(ListDoctorCommand.COMMAND_WORD) instanceof ListDoctorCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(parser.parseCommand(ListDoctorCommand.COMMAND_WORD + \" 3\") instanceof ListDoctorCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Bobfree546":4,"-":97}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"owen-yap":9,"-":187}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        private final ObservableList\u003cDoctor\u003e doctors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"        public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"            return doctors;","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"owen-yap":9,"-":98}},{"path":"src/test/java/seedu/address/model/person/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YOE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalDoctors.ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalDoctors.BENSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"public class DoctorTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"        Doctor doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e doctor.getTags().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    public void isSameDoctor() {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ALICE.isSameDoctor(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.isSameDoctor(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"                .withSpecialty(VALID_SPECIALTY_BOB).withYoe(VALID_YOE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ALICE.isSameDoctor(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.isSameDoctor(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        Doctor editedBenson \u003d new DoctorBuilder(BENSON).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        assertFalse(BENSON.isSameDoctor(editedBenson));","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        editedBenson \u003d new DoctorBuilder(BENSON).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        assertFalse(BENSON.isSameDoctor(editedBenson));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        Doctor aliceCopy \u003d new DoctorBuilder(ALICE).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(BENSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"        // different specialty -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withSpecialty(VALID_SPECIALTY_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"        // different yoe -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withYoe(VALID_YOE_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":96}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"owen-yap":1,"-":74}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"owen-yap":1,"-":85}},{"path":"src/test/java/seedu/address/model/person/SpecialtyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"public class SpecialtyTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Specialty(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    public void constructor_invalidSpecialty_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"        String invalidSpecialty \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Specialty(invalidSpecialty));","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public void isValidSpecialty() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        // null name","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e Specialty.isValidSpecialty(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"        // invalid name","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Specialty.isValidSpecialty(\"\")); // empty string","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Specialty.isValidSpecialty(\" \")); // spaces only","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Specialty.isValidSpecialty(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Specialty.isValidSpecialty(\"medicine*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        // valid name","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"general medicine\")); // alphabets only","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"12345\")); // numbers only","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"general medicine 2nd year\")); // alphanumeric characters","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"General Medicine\")); // with capital letters","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"general medicine and family medicine\")); // long names","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":40}},{"path":"src/test/java/seedu/address/model/person/UniqueDoctorListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalDoctors.ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalDoctors.BENSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"public class UniqueDoctorListTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    private final UniqueDoctorList uniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    public void contains_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.contains(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"    public void contains_doctorNotInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        assertFalse(uniqueDoctorList.contains(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"    public void contains_doctorInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertTrue(uniqueDoctorList.contains(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    public void contains_doctorWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        assertTrue(uniqueDoctorList.contains(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"    public void add_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.add(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    public void add_duplicateDoctor_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueDoctorList.add(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_nullTargetDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctor(null, ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_nullEditedDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctor(ALICE, null));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_targetDoctorNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueDoctorList.setDoctor(ALICE, ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_editedDoctorIsSameDoctor_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctor(ALICE, ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_editedDoctorHasSameIdentity_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctor(ALICE, editedAlice);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(editedAlice);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_editedDoctorHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctor(ALICE, BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_editedDoctorHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueDoctorList.setDoctor(ALICE, BENSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"    public void remove_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.remove(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"    public void remove_doctorDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueDoctorList.remove(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"    public void remove_existingDoctor_removesDoctor() {","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.remove(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_nullUniqueDoctorList_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctors((UniqueDoctorList) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_uniqueDoctorList_replacesOwnListWithProvidedUniqueDoctorList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctors(expectedUniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctors((List\u003cDoctor\u003e) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"owen-yap"},"content":"        List\u003cDoctor\u003e doctorList \u003d Collections.singletonList(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctors(doctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_listWithDuplicateDoctors_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"        List\u003cDoctor\u003e listWithDuplicateDoctors \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueDoctorList.setDoctors(listWithDuplicateDoctors));","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"                -\u003e uniqueDoctorList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":168}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"owen-yap":2,"-":166}},{"path":"src/test/java/seedu/address/model/person/YoeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class YoeTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public void constructor_validYoe_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"        Yoe yoe \u003d new Yoe(\"00005\");","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"        assertEquals(\"5\", yoe.value);","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Yoe(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public void constructor_invalidYoe_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        String invalidYoe \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Yoe(invalidYoe));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    public void isValidYoe() {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        // null yoe number","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e Yoe.isValidYoe(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        // invalid yoe numbers","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"\")); // empty string","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\" \")); // spaces only","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"912\")); // more than 2 digits","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"yoe\")); // non-numeric","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"p3\")); // alphabets within digits","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"0x1\")); // hexadecimal digits","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"5a\")); // hexadecimal digits","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"1 2\")); // spaces within digits","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        // valid yoe numbers","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Yoe.isValidYoe(\"91\")); // exactly 2 numbers","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Yoe.isValidYoe(\"1\")); // exactly 1 numbers","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Yoe.isValidYoe(\"000012\")); // leading 0s with 2 digits","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":48}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidTags);","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"owen-yap":7,"-":85}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"    //    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    //    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"    //        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"    //        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"    //        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"    //","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    //        // Save in new file and read back","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"    //        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"    //        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"    //        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"    //","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"    //        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"    //        original.addPerson(HOON);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"    //        original.removePerson(ALICE);","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"    //        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"    //        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"    //        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    //","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"    //        // Save and read without specifying file path","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    //        original.addPerson(IDA);","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"    //        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"    //        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"    //        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"    //    }","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"praveenkrishna0512":24,"-":80}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    //    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    //    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    //        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    //        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    //        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    //    }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    //","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    //    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    //    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    //        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    //    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    //","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    //    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    //    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    //        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    //                dataFromFile::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    //    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"praveenkrishna0512":23,"-":14}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"docedex.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"praveenkrishna0512":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    //    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    //    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"    //        /*","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    //         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"    //         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    //         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"    //         */","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"    //        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"    //        storageManager.saveAddressBook(original);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"    //        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    //        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"    //    }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":12,"-":53}},{"path":"src/test/java/seedu/address/testutil/DoctorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Yoe;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":" * A utility class to help with building Doctor objects.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"public class DoctorBuilder {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_NAME \u003d \"John Appleseed\";","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_EMAIL \u003d \"johna@nuhs.org\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_SPECIALTY \u003d \"General Medicine\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_YOE \u003d \"5\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"    private Name name;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    private Phone phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    private Email email;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    private Specialty specialty;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    private Yoe yoe;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder() {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"        specialty \u003d new Specialty(DEFAULT_SPECIALTY);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        yoe \u003d new Yoe(DEFAULT_YOE);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder(Doctor doctorToCopy) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        name \u003d doctorToCopy.getName();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        phone \u003d doctorToCopy.getPhone();","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        email \u003d doctorToCopy.getEmail();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        specialty \u003d doctorToCopy.getSpecialty();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        yoe \u003d doctorToCopy.getYoe();","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        tags \u003d new HashSet\u003c\u003e(doctorToCopy.getTags());","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Name} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withName(String name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Phone} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Email} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Specialty} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withSpecialty(String specialty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"        this.specialty \u003d new Specialty(specialty);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Yoe} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withYoe(String yoe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"        this.yoe \u003d new Yoe(yoe);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"    public Doctor build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        return new Doctor(name, phone, email, specialty, yoe, tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"vigonometry":111}},{"path":"src/test/java/seedu/address/testutil/EditDoctorDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Specialty;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Yoe;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":" * A utility class to help with building EditDoctorDescriptor objects.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"public class EditDoctorDescriptorBuilder {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    private EditDoctorDescriptor descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder(EditDoctorDescriptor descriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        this.descriptor \u003d new EditDoctorDescriptor(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"     * Returns an {@code EditDoctorDescriptor} with fields containing {@code doctor}\u0027s details","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        descriptor.setName(doctor.getName());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        descriptor.setPhone(doctor.getPhone());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        descriptor.setEmail(doctor.getEmail());","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        descriptor.setSpecialty(doctor.getSpecialty());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        descriptor.setYoe(doctor.getYoe());","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        descriptor.setTags(doctor.getTags());","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Name} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Phone} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Email} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Specialty} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withSpecialty(String specialty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        descriptor.setSpecialty(new Specialty(specialty));","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Yoe} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withYoe(String yoe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        descriptor.setYoe(new Yoe(yoe));","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditDoctorDescriptor}","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"     * that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptor build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        return descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":98}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        return new Person(name, phone, email, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"owen-yap":1,"-":82}},{"path":"src/test/java/seedu/address/testutil/TypicalDoctors.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":" * A utility class containing a list of {@code Doctor} objects to be used in tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"public class TypicalDoctors {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor ALICE \u003d new DoctorBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"            .withSpecialty(\"General Medicine\")","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"            .withYoe(\"5\")","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor BENSON \u003d new DoctorBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withSpecialty(\"General Medicine\")","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"            .withYoe(\"5\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor CARL \u003d new DoctorBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"            .withEmail(\"carlk@example.com\").withSpecialty(\"General Medicine\").withYoe(\"5\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor DANIEL \u003d new DoctorBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"            .withEmail(\"danielm@example.com\").withSpecialty(\"Neurosurgery\").withYoe(\"10\")","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"            .withTags(\"HoD\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"    private TypicalDoctors() {} // prevents instantiation","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"     * Returns an {@code AddressBook} with all the typical doctors.","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        for (Doctor doctor : getTypicalDoctors()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"            ab.addDoctor(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        return ab;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    public static List\u003cDoctor\u003e getTypicalDoctors() {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL));","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"vigonometry":52}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"vigonometry":1,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"            .withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"            .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"owen-yap":10,"-":63}}]
