[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"# Docedex","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-F12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-F12-1/tp/actions)","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-F12-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-F12-1/tp/)","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"![NewUi](docs/images/NewUi.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"## Welcome to Docedex","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"***Taking control of hospital administrative management is just a few keystrokes away!***","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex is a **desktop application** built for **medical administrative assistants**","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"to manage doctors and patients within clinics.","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"Here\u0027s a **quick snapshot** of how Docedex can help you","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"streamline your hospital management processes.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"- Store and edit information about your patients and doctors","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"- Track the status of your patients and doctors","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"- Assign patients to doctors upon triaging","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"On top of these functionalities, we believe that patient management must be **efficient**.","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"Therefore, Docedex is **optimized for** use via a **Command Line Interface (CLI)**","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"while still having the benefits of a **Graphical User Interface (GUI).**","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"If you type fast, Docedex can get your hospital management tasks done faster","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"than current GUI apps in the industry.","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"### For users","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"To begin using the application, follow the steps under **Quick Start** in our **[Docedex User Guide](https://ay2223s2-cs2103t-f12-1.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"### For developers","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"To view the detailed documentation of this project, see the **[Docedex Developer Guide](https://ay2223s2-cs2103t-f12-1.github.io/tp/DeveloperGuide.html)**.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"### Find out more!","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"Check out the **[Docedex Product Website](https://ay2223s2-cs2103t-f12-1.github.io/tp)** to find out more about Docedex!","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"### Credits","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"praveenkrishna0512":36,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"    archiveFileName \u003d \u0027docedex.jar\u0027","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"praveenkrishna0512":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"We are the Docedex team! We are undergraduates based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"**_Our contact information will be updated soon!_**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"### Vigneshwar Hariharan","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"\u003cimg src\u003d\"images/vigonometry.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"[[github](http://github.com/vigonometry)]","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"[[portfolio](team/vigonometry.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"* Role: QA Testing, Product Development, Documentation","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"* Responsibilities:","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"  * Implementation of themes and CRUD commands.","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"  * Ensure adherence to code quality and test coverage.","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"  * Ensure quality of various documents.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"### Amos Hung","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"\u003cimg src\u003d\"images/bobfree546.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"[[github](http://github.com/Bobfree546)] [[portfolio](team/amos.md)]","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"* Role: Testing","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time.","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"### Krishnamoorthi Praveen","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"\u003cimg src\u003d\"images/praveenkrishna0512.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"[[github](http://github.com/praveenkrishna0512)]","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"[[portfolio](team/praveenkrishna0512.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"* Role: GUI, Storage and Documentation","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"* Responsibilities: Responsible for the implementation of the GUI and Storage within Docedex,","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"as well as the quality of various project documents.","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"### Owen Yap Yuhan","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"\u003cimg src\u003d\"images/owen-yap.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[[github](http://github.com/owen-yap)]","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"[[portfolio](team/owen-yap.md)]","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"* Role: Project Manager","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"* Responsibilities: Responsible for overall project coordination and in charge of defining, \\","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"assigning, and tracking project tasks.","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Bobfree546":3,"owen-yap":7,"praveenkrishna0512":5,"vigonometry":7,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"## Table Of Contents","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"Refer to the guide [_Setting up and getting started._](./SettingUp.md)","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"[diagrams](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/docs/diagrams/) folder.","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"to learn how to create and edit diagrams.","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"**`Main`** has two classes called","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"[`Main`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/Main.java) and","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"[`MainApp`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"It is responsible for,","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"the command `del-doc 1`.","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagramUpdated.png\" width\u003d\"574\" alt\u003d\"ArchitectureSeqDiagramUpdated\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"**API** : [`Ui.java`](https://github.com/AY2223S2-CS2103T-F12-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"The UI consists of a `MainWindow` that is made up of multiple smaller components. Some notable examples are","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"`CommandBox`, `ResultDisplay` and `ContactDisplay`. All these, including the `MainWindow`,","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"represent parts of the visible GUI.","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"The `UI` component uses the JavaFX UI framework. The layout of these UI parts are defined in matching","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"`.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"[`MainWindow`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"is specified","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/resources/##view/MainWindow.fxml)","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"The `UI` component does the following","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"* depends on some classes in the `Model` component, as it displays `Doctor` or `Patient` object residing in the `Model`.","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"#### Main Window","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"The `MainWindow` houses all the components that make up the visual display of Docedex. Its primary","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"function is to listen to user input through the `CommandBox`, initiate the execution of the command,","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"and display the result through the `ResultDisplay` and/or `ContactDisplay`.","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"Here is a table containing a brief description of the purpose of the smaller components within `MainWindow`.","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"| **Name of component** | **Description**                                                                                                                                                                            |","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"|-----------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"| `CommandBox`          | Allows users to enter Docedex commands.                                                                                                                                                    |","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"| `ResultDisplay`       | Provides CLI-based feedback upon a user command.\u003cbr/\u003eAllows users to see if their command was successful or not.\u003cbr/\u003eProvides error messages to guide user on how to use Docedex commands. |","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"| `ContactDisplay`      | Contains components that provide visual feedback upon manipulation of doctors and patients.\u003cbr/\u003e\u003cbr/\u003eMore details about these components can be found [here](#contact-display).            |","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"| `HelpWindow`          | Displays a help window containing a link to the User Guide.                                                                                                                                |","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"| `StatusBarFooter`     | Shows the location of the Docedex storage.                                                                                                                                                 |","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"The implementations of `CommandBox`, `ResultDisplay`, `StatusBarFooter`, and `HelpWindow` are relatively","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"straightforward. Therefore, this guide will not dive deeper into how these components are implemented.","lastModifiedDate":"2023-04-08"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"You may refer to their implementations here","lastModifiedDate":"2023-04-08"},{"lineNumber":139,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"* [Classes](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/ui)","lastModifiedDate":"2023-04-08"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"* [FXML](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/resources/view)","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"#### Contact Display","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":"The `ContactDisplay` houses all the components that provide visual feedback after the manipulation","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"of doctors and patients within Docedex.","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"praveenkrishna0512"},"content":"Here is a table containing a brief description of the purpose of the smaller components within `ContactDisplay`.","lastModifiedDate":"2023-04-08"},{"lineNumber":151,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"praveenkrishna0512"},"content":"| **Name of component**     | **Description**                                                                                                                                                                                                                                                          |","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"vigonometry"},"content":"|---------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-09"},{"lineNumber":154,"author":{"gitId":"praveenkrishna0512"},"content":"| `DoctorListPanel`         | Shows a list of `DoctorCard`. This list can be manipulated through commands.\u003cbr/\u003e\u003cbr/\u003eUpon starting the app, this list will reflect all doctors in Docedex.\u003cbr/\u003e\u003cbr/\u003eUpon selection of a `PatientCard`, this list will filter to show doctors assigned to said patient.  |","lastModifiedDate":"2023-04-08"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"| `DoctorCard`              | Displays key information about a doctor, such as name, phone number, email and tags.                                                                                                                                                                                     |","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"praveenkrishna0512"},"content":"| `PatientListPanel`        | Shows a list of `PatientCard`. This list can be manipulated through commands.\u003cbr/\u003e\u003cbr/\u003eUpon starting the app, this list will reflect all patients in Docedex.\u003cbr/\u003e\u003cbr/\u003eUpon selection of a `DoctorCard`, this list will filter to show patients assigned to said doctor. |","lastModifiedDate":"2023-04-08"},{"lineNumber":157,"author":{"gitId":"praveenkrishna0512"},"content":"| `PatientCard`             | Displays key information about a patient, such as name, phone number, email and tags.                                                                                                                                                                                    |","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"praveenkrishna0512"},"content":"| `EnlargedDoctorInfoCard`  | Displays all information about a selected doctor.                                                                                                                                                                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"praveenkrishna0512"},"content":"| `EnlargedPatientInfoCard` | Displays all information about a selected patient.                                                                                                                                                                                                                       |","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":161,"author":{"gitId":"praveenkrishna0512"},"content":"Here is a class diagram of how these components come together within the `ContactDisplay`.","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":163,"author":{"gitId":"praveenkrishna0512"},"content":"![Structure of the Contact Display](images/ContactDisplayClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"praveenkrishna0512"},"content":"How the `ContactDisplay` works:","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":167,"author":{"gitId":"praveenkrishna0512"},"content":"1. Upon a user command through the `CommandBox`, the `setFeedbackToUser(CommandResult commandResult)` method","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"praveenkrishna0512"},"content":"   takes in the result of the command entered. The `CommandResult` contains information on whether the command","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"praveenkrishna0512"},"content":"   requires an update to the GUI. If such an update is required, `ContactDisplay` will proceed to update","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"praveenkrishna0512"},"content":"   all relevant components.","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"praveenkrishna0512"},"content":"2. Upon a mouse click on a `DoctorCard` or `PatientCard`, the following sequence of actions is similar to","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"praveenkrishna0512"},"content":"   that described above. However, instead of `setFeedbackToUser(CommandResult commandResult)` being called,","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"praveenkrishna0512"},"content":"   either `setFeedbackUponSelectingDoctor(Doctor doctor)` or `setFeedbackUponSelectingPatient(Patient patient)`","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"praveenkrishna0512"},"content":"   is called respectively.","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"praveenkrishna0512"},"content":"To illustrate how these interactions work, let\u0027s say that the user selects a doctor through the `sd` command.","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"praveenkrishna0512"},"content":"The Sequence Diagram below illustrates the interactions within the `ContactDisplay` component upon such a command.","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"praveenkrishna0512"},"content":"![Sequence Diagram of the Contact Display Upon Command](images/ContactDisplaySequenceDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":180,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"praveenkrishna0512"},"content":"Upon a user command, we see from the diagram that the `setFeedbackToUser(CommandResult commandResult)` method","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"praveenkrishna0512"},"content":"accomplished the following:","lastModifiedDate":"2023-04-08"},{"lineNumber":183,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":184,"author":{"gitId":"praveenkrishna0512"},"content":"- Update filtered patients list in `LogicManager` to show the patients assigned to the selected doctor.","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"praveenkrishna0512"},"content":"- Select the requested doctor within the `DoctorListPanel`. (This is a purely cosmetic selection, to provide","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"praveenkrishna0512"},"content":"  visual feedback to the user)","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"praveenkrishna0512"},"content":"- Update the `EnlargedDoctorInfoCard` to display the information of the selected doctor.","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"praveenkrishna0512"},"content":"- Place the updated `EnlargedDoctorInfoCard` onto the placeholder `StackPane` which resides on the right-most","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"praveenkrishna0512"},"content":"  column of the `ContactDisplay`. For more information on this specific step, click [here](#enlarged-info-card-feature).","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":191,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2023-04-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":195,"author":{"gitId":"vigonometry"},"content":"**API","lastModifiedDate":"2023-04-09"},{"lineNumber":196,"author":{"gitId":"vigonometry"},"content":"** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-04-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2023-04-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":200,"author":{"gitId":"vigonometry"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"450\" alt\u003d\"LogicClassDiagram\"/\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-04-06"},{"lineNumber":203,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2023-04-06"},{"lineNumber":205,"author":{"gitId":"vigonometry"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddDoctorCommand`)","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"vigonometry"},"content":"   which is executed by the `LogicManager`.","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"vigonometry"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a doctor).","lastModifiedDate":"2023-04-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-04-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":210,"author":{"gitId":"vigonometry"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete-doc 1\")`","lastModifiedDate":"2023-04-08"},{"lineNumber":211,"author":{"gitId":"vigonometry"},"content":"API call.","lastModifiedDate":"2023-04-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"vigonometry"},"content":"![Interactions Inside the Logic Component for the `del-doc 1` Command](images/DeleteDoctorSequenceDiagram.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":215,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteDoctorCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-04-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2023-04-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":220,"author":{"gitId":"vigonometry"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\" alt\u003d\"ParserClasses\"/\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2023-04-06"},{"lineNumber":223,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":224,"author":{"gitId":"vigonometry"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2023-04-08"},{"lineNumber":225,"author":{"gitId":"vigonometry"},"content":"  placeholder for the specific command name e.g., `AddDoctorCommandParser`) which uses the other classes shown above to","lastModifiedDate":"2023-04-08"},{"lineNumber":226,"author":{"gitId":"vigonometry"},"content":"  parse the user command and create a `XYZCommand` object (e.g., `AddDoctorCommand`) which the `AddressBookParser`","lastModifiedDate":"2023-04-08"},{"lineNumber":227,"author":{"gitId":"vigonometry"},"content":"  returns back as a `Command` object.","lastModifiedDate":"2023-04-08"},{"lineNumber":228,"author":{"gitId":"vigonometry"},"content":"* All `XYZCommandParser` classes (e.g., `AddDoctorCommandParser`, `DeleteDoctorCommandParser`, ...) inherit from","lastModifiedDate":"2023-04-08"},{"lineNumber":229,"author":{"gitId":"vigonometry"},"content":"  the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-04-08"},{"lineNumber":230,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2023-04-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":235,"author":{"gitId":"vigonometry"},"content":"**API","lastModifiedDate":"2023-04-09"},{"lineNumber":236,"author":{"gitId":"vigonometry"},"content":"** : [`Model.java`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-04-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":238,"author":{"gitId":"vigonometry"},"content":"\u003cimg src\u003d\"images/UpdatedModelClassDiagram.png\" width\u003d\"450\" alt\u003d\"UpdatedModelClassDiagram\"/\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":239,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":240,"author":{"gitId":"vigonometry"},"content":"\u003cimg src\u003d\"images/PersonPackageClassDiagram.png\" alt\u003d\"PersonPackageClassDiagram\" /\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2023-04-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":244,"author":{"gitId":"vigonometry"},"content":"* stores the address book data i.e., all `Doctor` and `Patient` objects (which are contained in a `UniqueDoctorList`","lastModifiedDate":"2023-04-08"},{"lineNumber":245,"author":{"gitId":"vigonometry"},"content":"  and `UniquePatientList` object).","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"vigonometry"},"content":"* stores the currently \u0027selected\u0027 `Doctor` and `Patient` objects (e.g., results of a search query) as a separate","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"vigonometry"},"content":"  _filteredDoctors_ and _filteredPatients_ list which is exposed to outsiders as an","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"vigonometry"},"content":"  unmodifiable `ObservableList\u003cDoctor\u003e` and `ObservableList\u003cPatient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2023-04-08"},{"lineNumber":249,"author":{"gitId":"vigonometry"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-04-08"},{"lineNumber":250,"author":{"gitId":"vigonometry"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"vigonometry"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"vigonometry"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"vigonometry"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2023-04-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":255,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":257,"author":{"gitId":"praveenkrishna0512"},"content":"### Storage component","lastModifiedDate":"2023-04-06"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":259,"author":{"gitId":"vigonometry"},"content":"**API","lastModifiedDate":"2023-04-09"},{"lineNumber":260,"author":{"gitId":"vigonometry"},"content":"** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-04-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":262,"author":{"gitId":"praveenkrishna0512"},"content":"![Structure of the Storage](images/StorageClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":264,"author":{"gitId":"praveenkrishna0512"},"content":"The `Storage` component does the following:","lastModifiedDate":"2023-04-08"},{"lineNumber":265,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":266,"author":{"gitId":"praveenkrishna0512"},"content":"* Saves both address book and user preference data in JSON format after every command","lastModifiedDate":"2023-04-08"},{"lineNumber":267,"author":{"gitId":"praveenkrishna0512"},"content":"* Read saved data and create the corresponding objects when starting up Docedex.","lastModifiedDate":"2023-04-08"},{"lineNumber":268,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":269,"author":{"gitId":"praveenkrishna0512"},"content":"Notes about the `Storage` component","lastModifiedDate":"2023-04-08"},{"lineNumber":270,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":271,"author":{"gitId":"praveenkrishna0512"},"content":"* Inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as","lastModifiedDate":"2023-04-08"},{"lineNumber":272,"author":{"gitId":"praveenkrishna0512"},"content":"  either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-04-08"},{"lineNumber":273,"author":{"gitId":"praveenkrishna0512"},"content":"* Depends on some classes in the `Model` component (because the `Storage` component\u0027s","lastModifiedDate":"2023-04-08"},{"lineNumber":274,"author":{"gitId":"praveenkrishna0512"},"content":"  job is to save/load objects that belong to the `Model`)","lastModifiedDate":"2023-04-08"},{"lineNumber":275,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":276,"author":{"gitId":"praveenkrishna0512"},"content":"#### Notes about storing assignments between doctors and patients","lastModifiedDate":"2023-04-08"},{"lineNumber":277,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":278,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":280,"author":{"gitId":"praveenkrishna0512"},"content":"In our `Model`, the `Doctor` contains a list of `Patient` that they are assigned to,","lastModifiedDate":"2023-04-08"},{"lineNumber":281,"author":{"gitId":"praveenkrishna0512"},"content":"and the `Patient` contains a list of `Doctor` that they are assigned to.","lastModifiedDate":"2023-04-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":283,"author":{"gitId":"praveenkrishna0512"},"content":"However, this causes issues when we try to store these objects as is, since the bidirectional","lastModifiedDate":"2023-04-08"},{"lineNumber":284,"author":{"gitId":"praveenkrishna0512"},"content":"navigability will result in an endless loop if we try to convert these objects into their JSON","lastModifiedDate":"2023-04-08"},{"lineNumber":285,"author":{"gitId":"praveenkrishna0512"},"content":"format. While the creation of an association class to store information about assignment is ideal,","lastModifiedDate":"2023-04-08"},{"lineNumber":286,"author":{"gitId":"praveenkrishna0512"},"content":"this will be implemented in the future due to time constraints.","lastModifiedDate":"2023-04-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":288,"author":{"gitId":"praveenkrishna0512"},"content":"Therefore, as of v1.4, `Storage` only stores the information of assignment within the `JsonAdaptedDoctor`.","lastModifiedDate":"2023-04-08"},{"lineNumber":289,"author":{"gitId":"praveenkrishna0512"},"content":"In essence, it stores the doctors together with their assigned patients. So each doctor will have a JSON key","lastModifiedDate":"2023-04-08"},{"lineNumber":290,"author":{"gitId":"praveenkrishna0512"},"content":"named `patients` that stores a dictionary of `JsonAdaptedPatient` that represent each assigned patient.","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":292,"author":{"gitId":"praveenkrishna0512"},"content":"That leaves us with the unassigned patients within the `Model`. These patients are stored separately","lastModifiedDate":"2023-04-08"},{"lineNumber":293,"author":{"gitId":"praveenkrishna0512"},"content":"under another JSON key named `unassignedPatients`.","lastModifiedDate":"2023-04-08"},{"lineNumber":294,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"praveenkrishna0512"},"content":"`JsonAdaptedPatient` does not store any information about the doctors that were assigned to each patient.","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":297,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":299,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2023-04-06"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2023-04-06"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":304,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":305,"author":{"gitId":"praveenkrishna0512"},"content":"---","lastModifiedDate":"2023-04-06"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2023-04-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":309,"author":{"gitId":"vigonometry"},"content":"### Add Doctor Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":311,"author":{"gitId":"praveenkrishna0512"},"content":"#### What it does","lastModifiedDate":"2023-04-06"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":313,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":315,"author":{"gitId":"vigonometry"},"content":"Adds a doctor to the bottom of the list of currently existing doctors. Users are able to add any valid doctor to the","lastModifiedDate":"2023-04-08"},{"lineNumber":316,"author":{"gitId":"vigonometry"},"content":"list. If a record of the same doctor already exists in the list, the command will not be allowed and an error will be","lastModifiedDate":"2023-04-08"},{"lineNumber":317,"author":{"gitId":"vigonometry"},"content":"thrown to alert user.","lastModifiedDate":"2023-04-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"vigonometry"},"content":"Example Use: `add-doc n/John Doe p/98765432 e/johnd@example.com s/Cardiology y/5 t/surgeon`","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"praveenkrishna0512"},"content":"#### Implementation","lastModifiedDate":"2023-04-06"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":323,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"vigonometry"},"content":"Upon entry of the add doctor command, an `AddDoctorCommand` class is created. The `AddDoctorCommand` class extends the","lastModifiedDate":"2023-04-08"},{"lineNumber":326,"author":{"gitId":"vigonometry"},"content":"abstract `Command` class and implements the `execute()` method. Upon execution of this method, a `Doctor` object is","lastModifiedDate":"2023-04-08"},{"lineNumber":327,"author":{"gitId":"vigonometry"},"content":"added to the model’s list of doctors if all the attributes provided are valid and a duplicate instance does not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"vigonometry"},"content":"Given below is an example usage scenario of how the add doctor command behaves at each step.","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"vigonometry"},"content":"Step 1. User launches the application","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"vigonometry"},"content":"Step 2. User executes `add-doc n/John Doe p/98765432 e/johnd@example.com s/Cardiology y/5 t/surgeon` to save a doctor.","lastModifiedDate":"2023-03-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"vigonometry"},"content":"Step 3. The doctor is added to the model’s list of doctors if valid.","lastModifiedDate":"2023-03-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"vigonometry"},"content":"The following sequence diagram illustrates how the add doctor operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"vigonometry"},"content":"![](images/AddDoctorSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":340,"author":{"gitId":"vigonometry"},"content":"*args: Refers to a valid sequence of arguments provided by the user. Example: \"n/John Doe p/98765432 e/johnd@example.com","lastModifiedDate":"2023-04-08"},{"lineNumber":341,"author":{"gitId":"vigonometry"},"content":"s/Cardiology y/5 t/surgeon\"","lastModifiedDate":"2023-04-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":343,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":345,"author":{"gitId":"vigonometry"},"content":"### Add Patient Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":347,"author":{"gitId":"praveenkrishna0512"},"content":"#### What it does","lastModifiedDate":"2023-04-06"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":349,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":351,"author":{"gitId":"vigonometry"},"content":"Adds a patient to the bottom of the list of currently existing patients. Users are able to add any valid patient to the","lastModifiedDate":"2023-04-08"},{"lineNumber":352,"author":{"gitId":"vigonometry"},"content":"list. If a record of the same patient already exists in the list, the command will not be allowed and an error will be","lastModifiedDate":"2023-04-08"},{"lineNumber":353,"author":{"gitId":"vigonometry"},"content":"thrown to alert user.","lastModifiedDate":"2023-04-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":355,"author":{"gitId":"vigonometry"},"content":"Example","lastModifiedDate":"2023-04-08"},{"lineNumber":356,"author":{"gitId":"vigonometry"},"content":"Use: `add-ptn n/John Doe p/98765432 e/jdoe@gmail.com h/1.85 w/70.5 d/Fever st/Outpatient r/Patient was given paracetamol for fever t/friends`","lastModifiedDate":"2023-04-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":358,"author":{"gitId":"praveenkrishna0512"},"content":"#### Implementation","lastModifiedDate":"2023-04-06"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":360,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"vigonometry"},"content":"Upon entry of the add patient command, an `AddPatientCommand` class is created. The `AddPatientCommand` class extends","lastModifiedDate":"2023-04-08"},{"lineNumber":363,"author":{"gitId":"vigonometry"},"content":"the abstract `Command` class and implements the `execute()` method. Upon execution of this method, a `Patient` object is","lastModifiedDate":"2023-04-08"},{"lineNumber":364,"author":{"gitId":"vigonometry"},"content":"added to the model’s list of patients if all the attributes provided are valid and a duplicate instance does not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":366,"author":{"gitId":"vigonometry"},"content":"Given below is an example usage scenario of how the add doctor command behaves at each step.","lastModifiedDate":"2023-03-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":368,"author":{"gitId":"vigonometry"},"content":"Step 1. User launches the application","lastModifiedDate":"2023-03-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":370,"author":{"gitId":"vigonometry"},"content":"Step 2. User","lastModifiedDate":"2023-04-08"},{"lineNumber":371,"author":{"gitId":"vigonometry"},"content":"executes `add-ptn n/John Doe p/98765432 e/jdoe@gmail.com h/1.85 w/70.5 d/Fever st/Outpatient r/Patient was given paracetamol for fever t/friends`","lastModifiedDate":"2023-04-08"},{"lineNumber":372,"author":{"gitId":"vigonometry"},"content":"to save a patient.","lastModifiedDate":"2023-04-08"},{"lineNumber":373,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":374,"author":{"gitId":"vigonometry"},"content":"Step 3. The patient is added to the model’s list of patients if valid.","lastModifiedDate":"2023-03-23"},{"lineNumber":375,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":376,"author":{"gitId":"vigonometry"},"content":"The following sequence diagram illustrates how the add doctor operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":377,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":378,"author":{"gitId":"vigonometry"},"content":"![](images/AddPatientSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":379,"author":{"gitId":"vigonometry"},"content":"*args: Refers to a sequence of valid arguments provided by the user. Example: \"n/John Doe p/98765432 e/jdoe@gmail.com","lastModifiedDate":"2023-04-08"},{"lineNumber":380,"author":{"gitId":"vigonometry"},"content":"h/1.85 w/70.5 d/Fever st/Outpatient r/Patient was given paracetamol for fever t/friends\"","lastModifiedDate":"2023-04-08"},{"lineNumber":381,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":382,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":383,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":384,"author":{"gitId":"praveenkrishna0512"},"content":"### Edit Doctor Feature","lastModifiedDate":"2023-04-08"},{"lineNumber":385,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":386,"author":{"gitId":"praveenkrishna0512"},"content":"#### What it does","lastModifiedDate":"2023-04-08"},{"lineNumber":387,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":388,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":389,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":390,"author":{"gitId":"owen-yap"},"content":"Users can edit specific doctors in the clinic by providing at least one of the optional fields. Existing values will be","lastModifiedDate":"2023-03-24"},{"lineNumber":391,"author":{"gitId":"owen-yap"},"content":"updated to the input values and all other values will remain the same. The doctor to be edited can be specified through","lastModifiedDate":"2023-03-24"},{"lineNumber":392,"author":{"gitId":"owen-yap"},"content":"the doctor\u0027s index.","lastModifiedDate":"2023-03-24"},{"lineNumber":393,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":394,"author":{"gitId":"owen-yap"},"content":"Example Use: `edit-doc 2 n/Gabriel Tan p/12345678 s/Cardiology`","lastModifiedDate":"2023-03-24"},{"lineNumber":395,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":396,"author":{"gitId":"praveenkrishna0512"},"content":"#### Implementation","lastModifiedDate":"2023-04-08"},{"lineNumber":397,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":398,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":399,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":400,"author":{"gitId":"owen-yap"},"content":"Upon entry of the edit doctor command, an `EditDoctorCommand` class is created. The `EditDoctorCommand` class extends","lastModifiedDate":"2023-03-24"},{"lineNumber":401,"author":{"gitId":"vigonometry"},"content":"the abstract `Command` class and implements the `execute()` method. The `EditDoctorDescriptor` is created with the","lastModifiedDate":"2023-04-08"},{"lineNumber":402,"author":{"gitId":"vigonometry"},"content":"arguments given","lastModifiedDate":"2023-04-08"},{"lineNumber":403,"author":{"gitId":"vigonometry"},"content":"by the user. A new `Doctor` object is created with the new arguments, with the attributes of the old `Doctor` object","lastModifiedDate":"2023-04-08"},{"lineNumber":404,"author":{"gitId":"vigonometry"},"content":"copied over","lastModifiedDate":"2023-04-08"},{"lineNumber":405,"author":{"gitId":"vigonometry"},"content":"if the argument for that specific attribute is not provided by the user. `EditDoctorDescriptor` is then passed","lastModifiedDate":"2023-04-08"},{"lineNumber":406,"author":{"gitId":"vigonometry"},"content":"to `EditDoctorCommandParser`.","lastModifiedDate":"2023-04-08"},{"lineNumber":407,"author":{"gitId":"vigonometry"},"content":"The `EditDoctorCommand` is created using the `EditDoctorDescriptor`. Upon execution of `EditDoctorCommand`, a `Doctor`","lastModifiedDate":"2023-04-08"},{"lineNumber":408,"author":{"gitId":"vigonometry"},"content":"object is added to the model’s list of doctors if all the attributes provided are valid and a duplicate instance does","lastModifiedDate":"2023-04-08"},{"lineNumber":409,"author":{"gitId":"vigonometry"},"content":"not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":410,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":411,"author":{"gitId":"owen-yap"},"content":"The following activity diagram illustrates the user flow for editing a doctor:","lastModifiedDate":"2023-03-24"},{"lineNumber":412,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":413,"author":{"gitId":"owen-yap"},"content":"![](images/EditDoctorActivityDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":414,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":415,"author":{"gitId":"owen-yap"},"content":"Given below is an example usage scenario of how the add doctor command behaves at each step.","lastModifiedDate":"2023-03-24"},{"lineNumber":416,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":417,"author":{"gitId":"owen-yap"},"content":"Step 1. User launches the application","lastModifiedDate":"2023-03-24"},{"lineNumber":418,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":419,"author":{"gitId":"owen-yap"},"content":"Step 2. User executes `edit-doc n/Simon` to edit a doctor.","lastModifiedDate":"2023-03-24"},{"lineNumber":420,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":421,"author":{"gitId":"owen-yap"},"content":"Step 3. The doctor is edited and saved to the model’s list of doctors if valid.","lastModifiedDate":"2023-03-24"},{"lineNumber":422,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":423,"author":{"gitId":"owen-yap"},"content":"The following sequence diagram illustrates how the edit doctor operation works:","lastModifiedDate":"2023-03-24"},{"lineNumber":424,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":425,"author":{"gitId":"owen-yap"},"content":"![](images/EditDoctorSequenceDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":426,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":427,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":428,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":429,"author":{"gitId":"vigonometry"},"content":"### Delete Doctor Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":430,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":431,"author":{"gitId":"praveenkrishna0512"},"content":"#### What it does","lastModifiedDate":"2023-04-06"},{"lineNumber":432,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":433,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":434,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":435,"author":{"gitId":"vigonometry"},"content":"Deletes a doctor at the specified **one-based index** of list of currently existing/found doctors. Users are able to","lastModifiedDate":"2023-04-08"},{"lineNumber":436,"author":{"gitId":"vigonometry"},"content":"delete any doctor in the list. If an index larger than or equal to the size of the doctor’s list is provided, the","lastModifiedDate":"2023-04-08"},{"lineNumber":437,"author":{"gitId":"vigonometry"},"content":"command will not be allowed and an error will be thrown to alert user.","lastModifiedDate":"2023-04-08"},{"lineNumber":438,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":439,"author":{"gitId":"vigonometry"},"content":"Example Use: `del-doc 1`","lastModifiedDate":"2023-03-23"},{"lineNumber":440,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":441,"author":{"gitId":"praveenkrishna0512"},"content":"#### Implementation","lastModifiedDate":"2023-04-06"},{"lineNumber":442,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":443,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":444,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":445,"author":{"gitId":"vigonometry"},"content":"Upon entry of the delete doctor command, a `DeleteDoctorCommand` class is created. The `DeleteDoctorCommand` class","lastModifiedDate":"2023-04-08"},{"lineNumber":446,"author":{"gitId":"vigonometry"},"content":"extends the abstract `Command` class and implements the `execute()` method. Upon execution of this method, the doctor at","lastModifiedDate":"2023-04-08"},{"lineNumber":447,"author":{"gitId":"vigonometry"},"content":"specified **one-based index** is removed if the index provided is valid.","lastModifiedDate":"2023-04-08"},{"lineNumber":448,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":449,"author":{"gitId":"vigonometry"},"content":"Given below is an example usage scenario of how the delete doctor command behaves at each step.","lastModifiedDate":"2023-03-23"},{"lineNumber":450,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":451,"author":{"gitId":"vigonometry"},"content":"Step 1. User launches the application","lastModifiedDate":"2023-03-23"},{"lineNumber":452,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":453,"author":{"gitId":"vigonometry"},"content":"Step 2. User executes `del-doc 1` to delete the doctor at index 1 (one-based indexing).","lastModifiedDate":"2023-03-23"},{"lineNumber":454,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":455,"author":{"gitId":"vigonometry"},"content":"Step 3. The doctor at this index is removed if the index provided is valid.","lastModifiedDate":"2023-03-23"},{"lineNumber":456,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":457,"author":{"gitId":"vigonometry"},"content":"The following sequence diagram illustrates how the delete doctor operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":458,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":459,"author":{"gitId":"vigonometry"},"content":"![](images/DeleteDoctorSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":460,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":461,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":462,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":463,"author":{"gitId":"vigonometry"},"content":"### Delete Patient Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":464,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":465,"author":{"gitId":"praveenkrishna0512"},"content":"#### What it does","lastModifiedDate":"2023-04-06"},{"lineNumber":466,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":467,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":468,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":469,"author":{"gitId":"vigonometry"},"content":"Deletes a patient at the specified **one-based index** of list of currently existing/found patient. Users are able to","lastModifiedDate":"2023-04-08"},{"lineNumber":470,"author":{"gitId":"vigonometry"},"content":"delete any patient in the list. If an index larger than or equal to the size of the patient’s list is provided, the","lastModifiedDate":"2023-04-08"},{"lineNumber":471,"author":{"gitId":"vigonometry"},"content":"command will not be allowed and an error will be thrown to alert user.","lastModifiedDate":"2023-04-08"},{"lineNumber":472,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":473,"author":{"gitId":"vigonometry"},"content":"Example Use: `del-ptn 1`","lastModifiedDate":"2023-03-23"},{"lineNumber":474,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":475,"author":{"gitId":"praveenkrishna0512"},"content":"#### Implementation","lastModifiedDate":"2023-04-06"},{"lineNumber":476,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":477,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":478,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":479,"author":{"gitId":"vigonometry"},"content":"Upon entry of the delete doctor command, a `DeletePatientCommand` class is created. The `DeletePatientCommand` class","lastModifiedDate":"2023-04-08"},{"lineNumber":480,"author":{"gitId":"vigonometry"},"content":"extends the abstract `Command` class and implements the `execute()` method. Upon execution of this method, the patient","lastModifiedDate":"2023-04-08"},{"lineNumber":481,"author":{"gitId":"vigonometry"},"content":"at specified **one-based index** is removed if the index provided is valid.","lastModifiedDate":"2023-04-08"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":483,"author":{"gitId":"vigonometry"},"content":"Given below is an example usage scenario of how the delete patient command behaves at each step.","lastModifiedDate":"2023-03-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":485,"author":{"gitId":"vigonometry"},"content":"Step 1. User launches the application","lastModifiedDate":"2023-03-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":487,"author":{"gitId":"vigonometry"},"content":"Step 2. User executes `del-ptn 1` to delete the patient at index 1 (one-based indexing).","lastModifiedDate":"2023-03-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":489,"author":{"gitId":"vigonometry"},"content":"Step 3. The patient at this index is removed if the index provided is valid.","lastModifiedDate":"2023-03-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":491,"author":{"gitId":"vigonometry"},"content":"The following sequence diagram illustrates how the delete patient operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":493,"author":{"gitId":"vigonometry"},"content":"![](images/DeletePatientSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":495,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":497,"author":{"gitId":"praveenkrishna0512"},"content":"### GUI Features","lastModifiedDate":"2023-04-05"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":499,"author":{"gitId":"praveenkrishna0512"},"content":"#### Enlarged Info Card feature","lastModifiedDate":"2023-04-05"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":501,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":503,"author":{"gitId":"praveenkrishna0512"},"content":"As triage staff manage the contacts of doctors and patients, they may wish to pull up","lastModifiedDate":"2023-03-22"},{"lineNumber":504,"author":{"gitId":"praveenkrishna0512"},"content":"the information related to the doctor or patient. Therefore, the right-most column within","lastModifiedDate":"2023-04-08"},{"lineNumber":505,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex has been reserved to show the personal information of the selected doctor or patient.","lastModifiedDate":"2023-03-22"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":507,"author":{"gitId":"praveenkrishna0512"},"content":"![](images/NewUi.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":509,"author":{"gitId":"praveenkrishna0512"},"content":"##### Brief introduction to the components involved","lastModifiedDate":"2023-04-05"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":511,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":512,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":513,"author":{"gitId":"praveenkrishna0512"},"content":"Let\u0027s call the card which displays this information **info cards**. However, the information","lastModifiedDate":"2023-03-22"},{"lineNumber":514,"author":{"gitId":"praveenkrishna0512"},"content":"displayed for a doctor compared to a patient has a few differences. Thus, two different info cards","lastModifiedDate":"2023-03-22"},{"lineNumber":515,"author":{"gitId":"praveenkrishna0512"},"content":"are required - one to display patient information and one to display doctor information.","lastModifiedDate":"2023-03-22"},{"lineNumber":516,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":517,"author":{"gitId":"praveenkrishna0512"},"content":"Let\u0027s call these cards `EnlargedDoctorInfoCard` and `EnlargedPatientInfoCard`. However, we","lastModifiedDate":"2023-03-23"},{"lineNumber":518,"author":{"gitId":"praveenkrishna0512"},"content":"only have one `StackPane` to display the information of the queried doctor or patient. This","lastModifiedDate":"2023-04-08"},{"lineNumber":519,"author":{"gitId":"praveenkrishna0512"},"content":"`StackPane` spans over the right-most column seen in the GUI above, and serves as a placeholder","lastModifiedDate":"2023-04-08"},{"lineNumber":520,"author":{"gitId":"praveenkrishna0512"},"content":"for the info cards. So, we now need a way to toggle between displaying either card, depending","lastModifiedDate":"2023-04-08"},{"lineNumber":521,"author":{"gitId":"praveenkrishna0512"},"content":"on whether the user has selected a doctor or patient to view.","lastModifiedDate":"2023-04-08"},{"lineNumber":522,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":523,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":524,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":525,"author":{"gitId":"praveenkrishna0512"},"content":"##### Exploring the user journey","lastModifiedDate":"2023-04-05"},{"lineNumber":526,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":527,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":528,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":529,"author":{"gitId":"praveenkrishna0512"},"content":"To explore how this is implemented, we will focus on the user clicking on a `DoctorListViewCell`","lastModifiedDate":"2023-03-23"},{"lineNumber":530,"author":{"gitId":"praveenkrishna0512"},"content":"representing a doctor, though the ideas below can be extended to the user clicking on a","lastModifiedDate":"2023-03-23"},{"lineNumber":531,"author":{"gitId":"praveenkrishna0512"},"content":"`PatientListViewCell`, as well as other ways of querying for a doctor or patient","lastModifiedDate":"2023-03-23"},{"lineNumber":532,"author":{"gitId":"praveenkrishna0512"},"content":"(ie. through [`sd`](./UserGuide.md#select-doctor) or [`sp`](./UserGuide.md#select-patient) command).","lastModifiedDate":"2023-04-08"},{"lineNumber":533,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":534,"author":{"gitId":"praveenkrishna0512"},"content":"Below, we see the sequence diagram of how a mouse click from the user on the `DoctorListViewCell`","lastModifiedDate":"2023-03-23"},{"lineNumber":535,"author":{"gitId":"praveenkrishna0512"},"content":"causes the display of information related to the doctor card through the `EnlargedDoctorInfoCard`.","lastModifiedDate":"2023-03-23"},{"lineNumber":536,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":537,"author":{"gitId":"praveenkrishna0512"},"content":"![](images/UserClickDoctorCardSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":538,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":539,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":540,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":541,"author":{"gitId":"praveenkrishna0512"},"content":"##### More details on implementation","lastModifiedDate":"2023-04-05"},{"lineNumber":542,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":543,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-06"},{"lineNumber":544,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":545,"author":{"gitId":"praveenkrishna0512"},"content":"Before diving into the details, here are a few key points to note:","lastModifiedDate":"2023-04-08"},{"lineNumber":546,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":547,"author":{"gitId":"praveenkrishna0512"},"content":"- The `ContactDisplay` contains all three columns shown in the middle of the GUI.","lastModifiedDate":"2023-04-08"},{"lineNumber":548,"author":{"gitId":"praveenkrishna0512"},"content":"  These columns represent the doctors list, patients list and an info card respectively,","lastModifiedDate":"2023-04-08"},{"lineNumber":549,"author":{"gitId":"praveenkrishna0512"},"content":"  from left to right.","lastModifiedDate":"2023-04-08"},{"lineNumber":550,"author":{"gitId":"praveenkrishna0512"},"content":"- There is always only one instance of the `EnlargedDoctorInfoCard`,","lastModifiedDate":"2023-04-08"},{"lineNumber":551,"author":{"gitId":"praveenkrishna0512"},"content":"  `EnlargedPatientInfoCard`, `ContactDisplay` and placeholder `StackPane`.","lastModifiedDate":"2023-04-08"},{"lineNumber":552,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":553,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":554,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":555,"author":{"gitId":"praveenkrishna0512"},"content":"When the user clicks on a `DoctorListViewCell`, the `setFeedbackUponSelectingDoctor()`","lastModifiedDate":"2023-04-08"},{"lineNumber":556,"author":{"gitId":"praveenkrishna0512"},"content":"call initiates the process of updating the relevant UI components to display","lastModifiedDate":"2023-04-08"},{"lineNumber":557,"author":{"gitId":"praveenkrishna0512"},"content":"information about the doctor. As part of this function, the `ContactDisplay` updates the","lastModifiedDate":"2023-04-08"},{"lineNumber":558,"author":{"gitId":"praveenkrishna0512"},"content":"doctor displayed in the `EnlargedDoctorInfoCard`. Lastly, the `ContactDisplay` clears the","lastModifiedDate":"2023-04-08"},{"lineNumber":559,"author":{"gitId":"praveenkrishna0512"},"content":"current display within the placeholder `StackPane`, and adds the `EnlargedDoctorInfoCard`","lastModifiedDate":"2023-04-08"},{"lineNumber":560,"author":{"gitId":"praveenkrishna0512"},"content":"as the child node of the `StackPane`.","lastModifiedDate":"2023-04-08"},{"lineNumber":561,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":562,"author":{"gitId":"praveenkrishna0512"},"content":"At the end of this journey, the `EnlargedDoctorInfoCard` containing the information","lastModifiedDate":"2023-04-08"},{"lineNumber":563,"author":{"gitId":"praveenkrishna0512"},"content":"of the selected doctor is displayed on the right-most column on the Docedex GUI.","lastModifiedDate":"2023-04-08"},{"lineNumber":564,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":565,"author":{"gitId":"praveenkrishna0512"},"content":"A similar process happens when the user clicks on a `PatientListViewCell`, with","lastModifiedDate":"2023-04-08"},{"lineNumber":566,"author":{"gitId":"praveenkrishna0512"},"content":"the `EnlargedPatientInfoCard` being populated with the appropriate data and displayed instead.","lastModifiedDate":"2023-04-08"},{"lineNumber":567,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":568,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":569,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":570,"author":{"gitId":"praveenkrishna0512"},"content":"##### Alternatives considered","lastModifiedDate":"2023-04-06"},{"lineNumber":571,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":572,"author":{"gitId":"praveenkrishna0512"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-08"},{"lineNumber":573,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":574,"author":{"gitId":"praveenkrishna0512"},"content":"In the past, we had a different implementation of this feature, where the `DoctorListViewCell`","lastModifiedDate":"2023-04-08"},{"lineNumber":575,"author":{"gitId":"praveenkrishna0512"},"content":"called a function in a controller named `EnlargedInfoCardController` instead of the `ContactDisplay`.","lastModifiedDate":"2023-04-08"},{"lineNumber":576,"author":{"gitId":"praveenkrishna0512"},"content":"The controller would be in charge of keeping the state of whether to display the doctor or patient.","lastModifiedDate":"2023-04-08"},{"lineNumber":577,"author":{"gitId":"praveenkrishna0512"},"content":"All UI components would then refer to this controller to update themselves.","lastModifiedDate":"2023-04-08"},{"lineNumber":578,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":579,"author":{"gitId":"praveenkrishna0512"},"content":"However, upon implementation, it was realised that the `ContactDisplay` contained all the UI components","lastModifiedDate":"2023-04-08"},{"lineNumber":580,"author":{"gitId":"praveenkrishna0512"},"content":"that needs to be updated when a user selects a doctor or patient. Therefore, it was simpler and more","lastModifiedDate":"2023-04-08"},{"lineNumber":581,"author":{"gitId":"praveenkrishna0512"},"content":"purposeful to let the `ContactDisplay` handle this update. Hence, the controller was removed and the","lastModifiedDate":"2023-04-08"},{"lineNumber":582,"author":{"gitId":"praveenkrishna0512"},"content":"current design was favoured.","lastModifiedDate":"2023-04-08"},{"lineNumber":583,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":584,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":586,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-06"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":588,"author":{"gitId":"vigonometry"},"content":"## **Documentation, Logging, Testing, Configuration, Dev-Ops**","lastModifiedDate":"2023-04-08"},{"lineNumber":589,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":590,"author":{"gitId":"praveenkrishna0512"},"content":"Here are some useful links on the following!","lastModifiedDate":"2023-04-06"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":592,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2023-04-06"},{"lineNumber":593,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2023-04-06"},{"lineNumber":594,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2023-04-06"},{"lineNumber":595,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2023-04-06"},{"lineNumber":596,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2023-04-06"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":598,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":599,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":600,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-22"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":602,"author":{"gitId":"praveenkrishna0512"},"content":"## Appendix A: Planned Enhancements","lastModifiedDate":"2023-04-06"},{"lineNumber":603,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":604,"author":{"gitId":"praveenkrishna0512"},"content":"### User Interface","lastModifiedDate":"2023-04-05"},{"lineNumber":605,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":606,"author":{"gitId":"praveenkrishna0512"},"content":"#### Problem 1: Selection of doctor or patient cards is not cleared upon certain commands","lastModifiedDate":"2023-04-09"},{"lineNumber":607,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":608,"author":{"gitId":"praveenkrishna0512"},"content":"- **Scenario**: User selected a patient on Docedex, before entering `list-doc`.","lastModifiedDate":"2023-04-09"},{"lineNumber":609,"author":{"gitId":"praveenkrishna0512"},"content":"- **What you see**: All the doctors in Docedex are listed on the GUI, as requested by the `list-doc` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":610,"author":{"gitId":"praveenkrishna0512"},"content":"  However, the user interface does not clear the selection of the previously selected patient card.","lastModifiedDate":"2023-04-09"},{"lineNumber":611,"author":{"gitId":"praveenkrishna0512"},"content":"- **Potential issue**: Confusion may arise on whether the listed doctors are assigned","lastModifiedDate":"2023-04-09"},{"lineNumber":612,"author":{"gitId":"praveenkrishna0512"},"content":"  to the previously selected patient.","lastModifiedDate":"2023-04-09"},{"lineNumber":613,"author":{"gitId":"praveenkrishna0512"},"content":"- **Why did it happen**: `list-doc` did not clear the previous selection of patient cards.","lastModifiedDate":"2023-04-09"},{"lineNumber":614,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":615,"author":{"gitId":"praveenkrishna0512"},"content":"Note: This issue exists for the all commands that do not involve selection of doctor","lastModifiedDate":"2023-04-09"},{"lineNumber":616,"author":{"gitId":"praveenkrishna0512"},"content":"or patient cards (ie. [`list-doc`](./UserGuide.md#listing-all-doctors),","lastModifiedDate":"2023-04-09"},{"lineNumber":617,"author":{"gitId":"praveenkrishna0512"},"content":"[`find-doc`](./UserGuide.md#finding-a-doctor), [`del-doc`](./UserGuide.md#deleting-a-doctor),","lastModifiedDate":"2023-04-09"},{"lineNumber":618,"author":{"gitId":"praveenkrishna0512"},"content":"[`list-ptn`](./UserGuide.md#listing-all-patients), [`find-ptn`](./UserGuide.md#finding-a-patient)","lastModifiedDate":"2023-04-09"},{"lineNumber":619,"author":{"gitId":"praveenkrishna0512"},"content":"or [`del-ptn`](./UserGuide.md#deleting-a-patient)).","lastModifiedDate":"2023-04-09"},{"lineNumber":620,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":621,"author":{"gitId":"praveenkrishna0512"},"content":"**Solution:** Any commands that do not involve selection of doctor or patient cards will","lastModifiedDate":"2023-04-09"},{"lineNumber":622,"author":{"gitId":"praveenkrishna0512"},"content":"clear selection of all patient and doctor cards.","lastModifiedDate":"2023-04-09"},{"lineNumber":623,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":624,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":625,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":626,"author":{"gitId":"praveenkrishna0512"},"content":"#### Problem 2: Titles of patient/doctor lists do not well describe its contents","lastModifiedDate":"2023-04-09"},{"lineNumber":627,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":628,"author":{"gitId":"praveenkrishna0512"},"content":"- **Scenario**: User adds a doctor using the [`add-doc` command](./UserGuide.md#adding-a-doctor).","lastModifiedDate":"2023-04-09"},{"lineNumber":629,"author":{"gitId":"praveenkrishna0512"},"content":"- **What you see**: Docedex automatically selects the newly added doctor. Selection of a doctor","lastModifiedDate":"2023-04-09"},{"lineNumber":630,"author":{"gitId":"praveenkrishna0512"},"content":"  will result in an update to the patients list, as described [here](./UserGuide.md#selecting-doctors-or-patients-through-commands).","lastModifiedDate":"2023-04-09"},{"lineNumber":631,"author":{"gitId":"praveenkrishna0512"},"content":"  Since the newly added doctor has no assigned patients, the patients list is cleared.","lastModifiedDate":"2023-04-09"},{"lineNumber":632,"author":{"gitId":"praveenkrishna0512"},"content":"- **Potential issue**: Confusion may arise as no visual feedback is provided that the patients list is","lastModifiedDate":"2023-04-09"},{"lineNumber":633,"author":{"gitId":"praveenkrishna0512"},"content":"  reflecting the newly added doctor\u0027s assigned patients. Previously, some users have confused this","lastModifiedDate":"2023-04-09"},{"lineNumber":634,"author":{"gitId":"praveenkrishna0512"},"content":"  behaviour with all patients being deleted from Docedex.","lastModifiedDate":"2023-04-09"},{"lineNumber":635,"author":{"gitId":"praveenkrishna0512"},"content":"- **Why did it happen**: Titles of patient/doctor lists is not updated to describe the contents of","lastModifiedDate":"2023-04-09"},{"lineNumber":636,"author":{"gitId":"praveenkrishna0512"},"content":"  the list upon user input.","lastModifiedDate":"2023-04-09"},{"lineNumber":637,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":638,"author":{"gitId":"vigonometry"},"content":"Note to users and developers: This problem exists if you add a patient using `add-ptn` too.","lastModifiedDate":"2023-04-08"},{"lineNumber":639,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":640,"author":{"gitId":"praveenkrishna0512"},"content":"**Solution:** The title of the patients list will be updated to display \"XXX\u0027s Patients\"","lastModifiedDate":"2023-04-09"},{"lineNumber":641,"author":{"gitId":"praveenkrishna0512"},"content":"when any doctor is selected, where XXX is the name of the doctor. The same fix will be done for the","lastModifiedDate":"2023-04-09"},{"lineNumber":642,"author":{"gitId":"praveenkrishna0512"},"content":"displayed doctors list upon selection of patients.","lastModifiedDate":"2023-04-09"},{"lineNumber":643,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":644,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":645,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":646,"author":{"gitId":"vigonometry"},"content":"#### Problem 3: The command usage message is not consistent across the UserGuide and EditXYZCommands","lastModifiedDate":"2023-04-08"},{"lineNumber":647,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":648,"author":{"gitId":"praveenkrishna0512"},"content":"- **Scenario**: User enters an invalid variation of the `edit-doc` or `edit-ptn` commands","lastModifiedDate":"2023-04-09"},{"lineNumber":649,"author":{"gitId":"praveenkrishna0512"},"content":"- **What you see**: Error message that does not indicate that the entry of only one update parameter is compulsory while all","lastModifiedDate":"2023-04-09"},{"lineNumber":650,"author":{"gitId":"vigonometry"},"content":"  others are optional.","lastModifiedDate":"2023-04-08"},{"lineNumber":651,"author":{"gitId":"praveenkrishna0512"},"content":"- **Potential issue**: User assumes that all fields are compulsory","lastModifiedDate":"2023-04-09"},{"lineNumber":652,"author":{"gitId":"praveenkrishna0512"},"content":"- **Why did it happen**: Implementation of feature freeze prior to resolution","lastModifiedDate":"2023-04-09"},{"lineNumber":653,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":654,"author":{"gitId":"vigonometry"},"content":"**Solution:** Update the `MESSAGE_USAGE` field","lastModifiedDate":"2023-04-08"},{"lineNumber":655,"author":{"gitId":"vigonometry"},"content":"in [`EditDoctorCommand`](https://github.com/AY2223S2-CS2103T-F12-1/tp/tree/master/src/main/java/seedu/address/logic/commands/EditDoctorCommand.java), [`EditPatientCommand`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/logic/commands/EditPatientCommand.java)","lastModifiedDate":"2023-04-08"},{"lineNumber":656,"author":{"gitId":"vigonometry"},"content":"and associated","lastModifiedDate":"2023-04-08"},{"lineNumber":657,"author":{"gitId":"vigonometry"},"content":"tests ([`EditDoctorCommandTest`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/test/java/seedu/address/logic/commands/EditDoctorCommandTest.java), [`EditPatientCommandTest`](https://github.com/AY2223S2-CS2103T-F12-1/tp/blob/master/src/test/java/seedu/address/logic/commands/EditPatientCommandTest.java))","lastModifiedDate":"2023-04-08"},{"lineNumber":658,"author":{"gitId":"vigonometry"},"content":"with parameter information and notation present in the [UserGuide](./UserGuide.md#editing-a-doctor) and the","lastModifiedDate":"2023-04-08"},{"lineNumber":659,"author":{"gitId":"vigonometry"},"content":"line `\"At least one parameter other than INDEX should be provided\\n\"`.","lastModifiedDate":"2023-04-08"},{"lineNumber":660,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":661,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":662,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":663,"author":{"gitId":"vigonometry"},"content":"#### Problem 4: Use of association classes instead of lists to capture doctor-patient relationship on assignment","lastModifiedDate":"2023-04-08"},{"lineNumber":664,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":665,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":666,"author":{"gitId":"vigonometry"},"content":"To be added","lastModifiedDate":"2023-04-08"},{"lineNumber":667,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":668,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":669,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":670,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":671,"author":{"gitId":"praveenkrishna0512"},"content":"#### Problem 5: Adding input validation to find commands","lastModifiedDate":"2023-04-09"},{"lineNumber":672,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":673,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":674,"author":{"gitId":"vigonometry"},"content":"To be added","lastModifiedDate":"2023-04-08"},{"lineNumber":675,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":676,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":677,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":679,"author":{"gitId":"praveenkrishna0512"},"content":"#### Problem 6: Improving regex validation","lastModifiedDate":"2023-04-09"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":681,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":682,"author":{"gitId":"vigonometry"},"content":"To be added","lastModifiedDate":"2023-04-08"},{"lineNumber":683,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":684,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":685,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":686,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":687,"author":{"gitId":"praveenkrishna0512"},"content":"#### Problem 7: Use of enums as patient statuses","lastModifiedDate":"2023-04-09"},{"lineNumber":688,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":689,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":690,"author":{"gitId":"vigonometry"},"content":"To be added","lastModifiedDate":"2023-04-08"},{"lineNumber":691,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":692,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":693,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":695,"author":{"gitId":"vigonometry"},"content":"## **Appendix B: Product scope**","lastModifiedDate":"2023-04-08"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"praveenkrishna0512"},"content":"**Target user profile**","lastModifiedDate":"2023-03-03"},{"lineNumber":698,"author":{"gitId":"praveenkrishna0512"},"content":"We hope to target admin staff within a clinic who have to settle triaging of patients.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":699,"author":{"gitId":"praveenkrishna0512"},"content":"Here are some characteristics of our target user profile: \u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":700,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":701,"author":{"gitId":"praveenkrishna0512"},"content":"* needs to manipulate patient and doctor information quickly","lastModifiedDate":"2023-04-06"},{"lineNumber":702,"author":{"gitId":"praveenkrishna0512"},"content":"* needs to assign patients to the appropriate doctors quickly","lastModifiedDate":"2023-03-03"},{"lineNumber":703,"author":{"gitId":"praveenkrishna0512"},"content":"* prefer desktop apps over other mediums","lastModifiedDate":"2023-04-06"},{"lineNumber":704,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":706,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"praveenkrishna0512"},"content":"**Value proposition**: Perform quick lookup and assignment of appropriate doctors to each patient in triage,","lastModifiedDate":"2023-04-06"},{"lineNumber":709,"author":{"gitId":"praveenkrishna0512"},"content":"faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-04-06"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":713,"author":{"gitId":"vigonometry"},"content":"## **Appendix C: User stories**","lastModifiedDate":"2023-04-08"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"praveenkrishna0512"},"content":"In the table below, **_user_** refers to the triage admin staff.","lastModifiedDate":"2023-03-03"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":717,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                                              | So that I can…​                                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"vigonometry"},"content":"|----------|---------|---------------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":721,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | add doctor/patient contacts into my address book                          | store their contacts in case I need them in the future                           |","lastModifiedDate":"2023-04-06"},{"lineNumber":722,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | look up doctors by their name, specialty and/or years of experience       | assign patients to relevant doctors                                              |","lastModifiedDate":"2023-04-06"},{"lineNumber":723,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | look up patients by their name,                                           | view which doctors treated found patients or verify their diagnosis              |","lastModifiedDate":"2023-04-06"},{"lineNumber":724,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | edit the doctor/patient contacts in Docedex                               | keep the doctor/patient contacts up to date                                      |","lastModifiedDate":"2023-04-06"},{"lineNumber":725,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | delete doctors/patients that have left the hospital, died or have retired | ensure all doctor/patient contacts are relevant                                  |","lastModifiedDate":"2023-04-06"},{"lineNumber":726,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | save my doctor/patient contacts in my desktop                             | refer to doctor/patient contacts in the future                                   |","lastModifiedDate":"2023-04-06"},{"lineNumber":727,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | load my contacts from a file when I boot up the application               | refer to doctor/patient contacts created in the past                             |","lastModifiedDate":"2023-04-06"},{"lineNumber":728,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | tag patients with a status                                                | determine assignment priorities to doctors                                       |","lastModifiedDate":"2023-04-06"},{"lineNumber":729,"author":{"gitId":"vigonometry"},"content":"| `* * *`  | user    | detect duplicate entries                                                  | either halt operation or update information.                                     |","lastModifiedDate":"2023-03-04"},{"lineNumber":730,"author":{"gitId":"vigonometry"},"content":"| `* *`    | user    | access the help menu                                                      | know how to use the commands within Docedex                                      |","lastModifiedDate":"2023-03-04"},{"lineNumber":731,"author":{"gitId":"vigonometry"},"content":"| `* *`    | user    | tag patients to the doctor                                                | keep track of patients treated by the doctor                                     |","lastModifiedDate":"2023-03-04"},{"lineNumber":732,"author":{"gitId":"vigonometry"},"content":"| `* *`    | user    | tag doctors to the patients                                               | keep track of doctors treating the patient                                       |","lastModifiedDate":"2023-03-04"},{"lineNumber":733,"author":{"gitId":"vigonometry"},"content":"| `* *`    | user    | exit the application through the CLI                                      | terminate use of the application                                                 |","lastModifiedDate":"2023-03-04"},{"lineNumber":734,"author":{"gitId":"praveenkrishna0512"},"content":"| `*`      | user    | see the history of doctors I viewed recently                              | re-access recently queried doctor contacts quickly                               |","lastModifiedDate":"2023-03-03"},{"lineNumber":735,"author":{"gitId":"vigonometry"},"content":"| `*`      | user    | self-destruct my address book                                             | protect clinic\u0027s information in the event of a cyber-attack (last-ditch effort). |","lastModifiedDate":"2023-03-04"},{"lineNumber":736,"author":{"gitId":"vigonometry"},"content":"| `*`      | user    | select doctors/patients through the CLI                                   | minimize the use of a mouse/pointing device                                      |","lastModifiedDate":"2023-04-06"},{"lineNumber":737,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":738,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":739,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":740,"author":{"gitId":"vigonometry"},"content":"## **Appendix D: Use cases**","lastModifiedDate":"2023-04-08"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"praveenkrishna0512"},"content":"For all use cases below, we assume the following unless specified otherwise","lastModifiedDate":"2023-04-06"},{"lineNumber":743,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":744,"author":{"gitId":"praveenkrishna0512"},"content":"- The **System** is `Docedex`","lastModifiedDate":"2023-04-06"},{"lineNumber":745,"author":{"gitId":"praveenkrishna0512"},"content":"- The **Actor** is the `user`","lastModifiedDate":"2023-04-06"},{"lineNumber":746,"author":{"gitId":"praveenkrishna0512"},"content":"- The following preconditions","lastModifiedDate":"2023-04-06"},{"lineNumber":747,"author":{"gitId":"praveenkrishna0512"},"content":"    - The `user` has launched the `Docedex` application.","lastModifiedDate":"2023-04-06"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"vigonometry"},"content":"Furthermore, a lot of **use cases are similar when manipulating","lastModifiedDate":"2023-04-06"},{"lineNumber":750,"author":{"gitId":"vigonometry"},"content":"doctors and patients**. Therefore, to keep the developer guide concise, the","lastModifiedDate":"2023-04-06"},{"lineNumber":751,"author":{"gitId":"praveenkrishna0512"},"content":"use cases elaborated upon below are only detailed for doctors. Nonetheless, they","lastModifiedDate":"2023-04-06"},{"lineNumber":752,"author":{"gitId":"praveenkrishna0512"},"content":"can be extrapolated for patients too, without changes to the major details within","lastModifiedDate":"2023-04-06"},{"lineNumber":753,"author":{"gitId":"praveenkrishna0512"},"content":"the use case. Such associated pairs of use cases are listed in the table below.","lastModifiedDate":"2023-04-06"},{"lineNumber":754,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":755,"author":{"gitId":"praveenkrishna0512"},"content":"| **Doctor Use Case**            | **Respective Patient Use Case** |","lastModifiedDate":"2023-04-06"},{"lineNumber":756,"author":{"gitId":"praveenkrishna0512"},"content":"|--------------------------------|---------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":757,"author":{"gitId":"praveenkrishna0512"},"content":"| UC1 - Add Doctor               | UC7 - Add Patient               |","lastModifiedDate":"2023-04-06"},{"lineNumber":758,"author":{"gitId":"praveenkrishna0512"},"content":"| UC2 - Delete Doctor            | UC8 - Delete Patient            |","lastModifiedDate":"2023-04-06"},{"lineNumber":759,"author":{"gitId":"praveenkrishna0512"},"content":"| UC3 - Edit Doctor              | UC9 - Edit Patient              |","lastModifiedDate":"2023-04-06"},{"lineNumber":760,"author":{"gitId":"praveenkrishna0512"},"content":"| UC4 - Find Doctor              | UC10 - Find Patient             |","lastModifiedDate":"2023-04-06"},{"lineNumber":761,"author":{"gitId":"praveenkrishna0512"},"content":"| UC5 - List Doctor              | UC11 - List Patient             |","lastModifiedDate":"2023-04-06"},{"lineNumber":762,"author":{"gitId":"praveenkrishna0512"},"content":"| UC6 - Assign Doctor to Patient | UC12 - Assign Patient to Doctor |","lastModifiedDate":"2023-04-06"},{"lineNumber":763,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":764,"author":{"gitId":"vigonometry"},"content":"#### Use case: UC1 - Add Doctor","lastModifiedDate":"2023-04-08"},{"lineNumber":765,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":766,"author":{"gitId":"praveenkrishna0512"},"content":"**MSS**","lastModifiedDate":"2023-04-06"},{"lineNumber":767,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":768,"author":{"gitId":"praveenkrishna0512"},"content":"1. User requests to add a doctor by specifying information about the doctor.","lastModifiedDate":"2023-04-06"},{"lineNumber":769,"author":{"gitId":"praveenkrishna0512"},"content":"2. Docedex confirms the addition of the doctor.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":770,"author":{"gitId":"vigonometry"},"content":"   Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":771,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":772,"author":{"gitId":"vigonometry"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":773,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":774,"author":{"gitId":"vigonometry"},"content":"* 1a. User enters invalid command.","lastModifiedDate":"2023-03-04"},{"lineNumber":775,"author":{"gitId":"vigonometry"},"content":"    * 1a. Docedex detects error in command.","lastModifiedDate":"2023-03-04"},{"lineNumber":776,"author":{"gitId":"vigonometry"},"content":"        * 1a1. Docedex prompts user to correct the format of the command. \u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":777,"author":{"gitId":"vigonometry"},"content":"        * 1a2. User enters command and information to add a doctor.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":778,"author":{"gitId":"vigonometry"},"content":"          Steps 1a1-1a2 are repeated until a valid add command is entered.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":779,"author":{"gitId":"vigonometry"},"content":"          Use case resumes from step 2.","lastModifiedDate":"2023-03-04"},{"lineNumber":780,"author":{"gitId":"praveenkrishna0512"},"content":"* 1b. Docedex detects duplicate doctor entry.","lastModifiedDate":"2023-04-06"},{"lineNumber":781,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1b1. Docedex prompts user to not enter duplicate information \u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":782,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1b2. User re-enters command to add a doctor.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":783,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1b1-1b2 are repeated until a unique entry is entered.\u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":784,"author":{"gitId":"praveenkrishna0512"},"content":"      Use cases resumes from step 2.","lastModifiedDate":"2023-03-23"},{"lineNumber":785,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":786,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":787,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":788,"author":{"gitId":"vigonometry"},"content":"#### Use case: UC2 - Delete Doctor","lastModifiedDate":"2023-04-08"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"praveenkrishna0512"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"praveenkrishna0512"},"content":"1. User requests to delete a specific doctor.","lastModifiedDate":"2023-04-06"},{"lineNumber":793,"author":{"gitId":"praveenkrishna0512"},"content":"2. Docedex confirms the deletion of the doctor contact.\u003cbr\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":794,"author":{"gitId":"praveenkrishna0512"},"content":"   Use case ends.","lastModifiedDate":"2023-03-14"},{"lineNumber":795,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":796,"author":{"gitId":"praveenkrishna0512"},"content":"**Extensions**","lastModifiedDate":"2023-03-14"},{"lineNumber":797,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":798,"author":{"gitId":"praveenkrishna0512"},"content":"* 1a. Docedex detects an error in the command format.","lastModifiedDate":"2023-04-06"},{"lineNumber":799,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a1. Docedex requests to correct the format of the command.","lastModifiedDate":"2023-03-14"},{"lineNumber":800,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a2. User enters command to delete a doctor.\u003cbr\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":801,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1a1-1a2 are repeated until a valid delete command is entered.\u003cbr\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":802,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-03-14"},{"lineNumber":803,"author":{"gitId":"praveenkrishna0512"},"content":"* 1b. Docedex detects that the requested doctor does not exist.","lastModifiedDate":"2023-04-06"},{"lineNumber":804,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1b1. Docedex alerts the user that the requested doctor does not exist.","lastModifiedDate":"2023-04-06"},{"lineNumber":805,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1b2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":806,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1b1-1b2 are repeated until the user enters a doctor that exists in Docedex.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":807,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-04-06"},{"lineNumber":808,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":809,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":811,"author":{"gitId":"vigonometry"},"content":"#### Use case: UC3 - Edit Doctor","lastModifiedDate":"2023-04-08"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":813,"author":{"gitId":"praveenkrishna0512"},"content":"**MSS**","lastModifiedDate":"2023-04-06"},{"lineNumber":814,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":815,"author":{"gitId":"praveenkrishna0512"},"content":"1. User requests to edit a doctor\u0027s information by specifying the updated information.","lastModifiedDate":"2023-04-06"},{"lineNumber":816,"author":{"gitId":"praveenkrishna0512"},"content":"2. Docedex confirms the update of the doctor\u0027s information.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":817,"author":{"gitId":"praveenkrishna0512"},"content":"   Use case ends.","lastModifiedDate":"2023-04-06"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":819,"author":{"gitId":"praveenkrishna0512"},"content":"**Extensions**","lastModifiedDate":"2023-04-06"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":821,"author":{"gitId":"praveenkrishna0512"},"content":"* 1a. Docedex detects an error in the command format.","lastModifiedDate":"2023-04-06"},{"lineNumber":822,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a1. Docedex requests to correct the format of the command.","lastModifiedDate":"2023-04-06"},{"lineNumber":823,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a2. User enters command to delete a doctor.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":824,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1a1-1a2 are repeated until a valid delete command is entered.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":825,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-04-06"},{"lineNumber":826,"author":{"gitId":"praveenkrishna0512"},"content":"* 1b. Docedex detects duplicate doctor entry.","lastModifiedDate":"2023-04-06"},{"lineNumber":827,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1b1. Docedex prompts user to not enter duplicate information \u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":828,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1b2. User re-enters command to edit a doctor.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":829,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1b1-1b2 are repeated until the edited doctor does not exist in Docedex.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":830,"author":{"gitId":"praveenkrishna0512"},"content":"      Use cases resumes from step 2.","lastModifiedDate":"2023-04-06"},{"lineNumber":831,"author":{"gitId":"praveenkrishna0512"},"content":"* 1c. Docedex detects that the requested doctor does not exist.","lastModifiedDate":"2023-04-06"},{"lineNumber":832,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1c1. Docedex alerts the user that the requested doctor does not exist.","lastModifiedDate":"2023-04-06"},{"lineNumber":833,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1c2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":834,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1c1-1c2 are repeated until the user enters a doctor that exists in Docedex.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":835,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-04-06"},{"lineNumber":836,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":837,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":838,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":839,"author":{"gitId":"vigonometry"},"content":"#### Use case: UC4 - Find Doctor","lastModifiedDate":"2023-04-08"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":841,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-14"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":843,"author":{"gitId":"praveenkrishna0512"},"content":"1. User requests to find doctors that meet a particular criteria","lastModifiedDate":"2023-04-06"},{"lineNumber":844,"author":{"gitId":"praveenkrishna0512"},"content":"2. Docedex shows a list of doctors that meet the criteria requested by user.","lastModifiedDate":"2023-03-14"},{"lineNumber":845,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"praveenkrishna0512"},"content":"* 1a. Docedex detects an error in the command format.","lastModifiedDate":"2023-04-06"},{"lineNumber":850,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a1. Docedex requests to correct the format of the command.","lastModifiedDate":"2023-04-06"},{"lineNumber":851,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a2. User enters command to delete a doctor.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":852,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1a1-1a2 are repeated until a valid delete command is entered.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":853,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-04-06"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":855,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":856,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":857,"author":{"gitId":"vigonometry"},"content":"#### Use case: UC5 - List Doctor","lastModifiedDate":"2023-04-08"},{"lineNumber":858,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":859,"author":{"gitId":"praveenkrishna0512"},"content":"**MSS**","lastModifiedDate":"2023-04-06"},{"lineNumber":860,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":861,"author":{"gitId":"praveenkrishna0512"},"content":"1. User requests to list all doctors in Docedex.","lastModifiedDate":"2023-04-06"},{"lineNumber":862,"author":{"gitId":"praveenkrishna0512"},"content":"2. Docedex shows a list of all doctors stored.","lastModifiedDate":"2023-04-06"},{"lineNumber":863,"author":{"gitId":"praveenkrishna0512"},"content":"   Use case ends.","lastModifiedDate":"2023-04-06"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":865,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-04-06"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":867,"author":{"gitId":"praveenkrishna0512"},"content":"* 1a. Docedex detects an error in the command format.","lastModifiedDate":"2023-04-06"},{"lineNumber":868,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a1. Docedex requests to correct the format of the command.","lastModifiedDate":"2023-04-06"},{"lineNumber":869,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a2. User enters command to delete a doctor.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":870,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1a1-1a2 are repeated until a valid delete command is entered.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":871,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-04-06"},{"lineNumber":872,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":873,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":874,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":875,"author":{"gitId":"vigonometry"},"content":"#### Use case: UC6 - Assign Doctor To Patient","lastModifiedDate":"2023-04-08"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":877,"author":{"gitId":"praveenkrishna0512"},"content":"**MSS**","lastModifiedDate":"2023-04-06"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":879,"author":{"gitId":"praveenkrishna0512"},"content":"1. User requests to assign a doctor to a patient in Docedex.","lastModifiedDate":"2023-04-06"},{"lineNumber":880,"author":{"gitId":"praveenkrishna0512"},"content":"2. Docedex confirms the assignment of the doctor to the patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":881,"author":{"gitId":"praveenkrishna0512"},"content":"   Use case ends.","lastModifiedDate":"2023-04-06"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":883,"author":{"gitId":"praveenkrishna0512"},"content":"**Extensions**","lastModifiedDate":"2023-04-06"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":885,"author":{"gitId":"praveenkrishna0512"},"content":"* 1a. Docedex detects an error in the command format.","lastModifiedDate":"2023-04-06"},{"lineNumber":886,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a1. Docedex requests to correct the format of the command.","lastModifiedDate":"2023-03-03"},{"lineNumber":887,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1a2. User enters command to delete a doctor.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":888,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1a1-1a2 are repeated until a valid delete command is entered.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":889,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-03-03"},{"lineNumber":890,"author":{"gitId":"praveenkrishna0512"},"content":"* 1b. Docedex detects that the requested doctor does not exist.","lastModifiedDate":"2023-04-06"},{"lineNumber":891,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1b1. Docedex alerts the user that the requested doctor does not exist.","lastModifiedDate":"2023-04-06"},{"lineNumber":892,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1b2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":893,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1b1-1b2 are repeated until the user enters a doctor that exists in Docedex.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":894,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-04-06"},{"lineNumber":895,"author":{"gitId":"praveenkrishna0512"},"content":"* 1c. Docedex detects that the requested patient does not exist.","lastModifiedDate":"2023-04-06"},{"lineNumber":896,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1c1. Docedex alerts the user that the requested patient does not exist.","lastModifiedDate":"2023-04-06"},{"lineNumber":897,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1c2. User re-enters the command.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":898,"author":{"gitId":"praveenkrishna0512"},"content":"      Steps 1c1-1c2 are repeated until the user enters a patient that exists in Docedex.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":899,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-04-06"},{"lineNumber":900,"author":{"gitId":"praveenkrishna0512"},"content":"* 1d. Docedex detects that the patient and doctor are already assigned to each other.","lastModifiedDate":"2023-04-06"},{"lineNumber":901,"author":{"gitId":"praveenkrishna0512"},"content":"    * 1d1. Docedex alerts the user that the patient and doctor are already assigned to each other.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":902,"author":{"gitId":"praveenkrishna0512"},"content":"      Use case ends.","lastModifiedDate":"2023-04-06"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":906,"author":{"gitId":"vigonometry"},"content":"## **Appendix E: Non-Functional Requirements**","lastModifiedDate":"2023-04-08"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"vigonometry"},"content":"2. Should be able to hold up to 1000 doctor contacts and 1000 patient contacts without noticeable reduction in","lastModifiedDate":"2023-04-08"},{"lineNumber":910,"author":{"gitId":"vigonometry"},"content":"   performance.","lastModifiedDate":"2023-04-08"},{"lineNumber":911,"author":{"gitId":"praveenkrishna0512"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands)","lastModifiedDate":"2023-04-06"},{"lineNumber":912,"author":{"gitId":"praveenkrishna0512"},"content":"   should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-04-06"},{"lineNumber":913,"author":{"gitId":"praveenkrishna0512"},"content":"4. Should not utilize any network to transmit any information.","lastModifiedDate":"2023-03-03"},{"lineNumber":914,"author":{"gitId":"praveenkrishna0512"},"content":"5. The average time required to boot up the application should be under 10 seconds.","lastModifiedDate":"2023-04-06"},{"lineNumber":915,"author":{"gitId":"praveenkrishna0512"},"content":"6. Feedback from Docedex should be displayed within 2 seconds of the user\u0027s input.","lastModifiedDate":"2023-03-03"},{"lineNumber":916,"author":{"gitId":"praveenkrishna0512"},"content":"7. The file size of the application\u0027s `jar` should not exceed 100MB.","lastModifiedDate":"2023-03-03"},{"lineNumber":917,"author":{"gitId":"praveenkrishna0512"},"content":"8. Should utilize less than 2GB of memory when in use.","lastModifiedDate":"2023-04-05"},{"lineNumber":918,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":920,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":921,"author":{"gitId":"vigonometry"},"content":"## **Appendix F: Glossary**","lastModifiedDate":"2023-04-08"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"praveenkrishna0512"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2023-03-03"},{"lineNumber":924,"author":{"gitId":"praveenkrishna0512"},"content":"* **User**: Triage Admin Staff within the clinic.","lastModifiedDate":"2023-03-03"},{"lineNumber":925,"author":{"gitId":"praveenkrishna0512"},"content":"* **Contact**: Data entry that stores the contact information of a doctor or patient in Docedex.","lastModifiedDate":"2023-03-03"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":929,"author":{"gitId":"vigonometry"},"content":"## **Appendix G: Effort**","lastModifiedDate":"2023-04-08"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":931,"author":{"gitId":"praveenkrishna0512"},"content":"This section is still being updated!","lastModifiedDate":"2023-04-06"},{"lineNumber":932,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":933,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":934,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":935,"author":{"gitId":"vigonometry"},"content":"## **Appendix H: Instructions for manual testing**","lastModifiedDate":"2023-04-08"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":937,"author":{"gitId":"praveenkrishna0512"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2023-04-06"},{"lineNumber":938,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":939,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2023-04-06"},{"lineNumber":940,"author":{"gitId":"praveenkrishna0512"},"content":"**Note:** These instructions only provide a starting point for testers to work on.","lastModifiedDate":"2023-04-06"},{"lineNumber":941,"author":{"gitId":"praveenkrishna0512"},"content":"Testers are encouraged to do more *exploratory* testing.","lastModifiedDate":"2023-04-06"},{"lineNumber":942,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":944,"author":{"gitId":"praveenkrishna0512"},"content":"#### Launch and shutdown","lastModifiedDate":"2023-04-06"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":946,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2023-04-06"},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":948,"author":{"gitId":"praveenkrishna0512"},"content":"1. Download the jar file and copy into an empty folder","lastModifiedDate":"2023-04-06"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":950,"author":{"gitId":"praveenkrishna0512"},"content":"1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-04-06"},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":952,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2023-04-06"},{"lineNumber":953,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":954,"author":{"gitId":"praveenkrishna0512"},"content":"1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2023-04-06"},{"lineNumber":955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":956,"author":{"gitId":"praveenkrishna0512"},"content":"1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":957,"author":{"gitId":"praveenkrishna0512"},"content":"   Expected: The most recent window size and location is retained.","lastModifiedDate":"2023-04-06"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":959,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-04-06"},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":961,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":962,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":963,"author":{"gitId":"vigonometry"},"content":"#### Deleting a doctor","lastModifiedDate":"2023-04-06"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":965,"author":{"gitId":"vigonometry"},"content":"1. Deleting a doctor while all doctors are being shown","lastModifiedDate":"2023-04-06"},{"lineNumber":966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":967,"author":{"gitId":"vigonometry"},"content":"1. Prerequisites: List all doctors using the `list-doc` command. Multiple doctors in the list.","lastModifiedDate":"2023-04-06"},{"lineNumber":968,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":969,"author":{"gitId":"vigonometry"},"content":"1. Test case: `del-doc 1`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":970,"author":{"gitId":"vigonometry"},"content":"   Expected: First doctor contact is deleted from the displayed doctors list. Details of the deleted contact shown in","lastModifiedDate":"2023-04-08"},{"lineNumber":971,"author":{"gitId":"vigonometry"},"content":"   the status message.","lastModifiedDate":"2023-04-08"},{"lineNumber":972,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":973,"author":{"gitId":"vigonometry"},"content":"1. Test case: `del-doc 0`\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":974,"author":{"gitId":"vigonometry"},"content":"   Expected: No doctor is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":976,"author":{"gitId":"vigonometry"},"content":"1. Other incorrect delete commands to try: `delete`, `del-doc x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":977,"author":{"gitId":"praveenkrishna0512"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2023-04-06"},{"lineNumber":978,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":979,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-04-06"},{"lineNumber":980,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":981,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":982,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":983,"author":{"gitId":"praveenkrishna0512"},"content":"#### Saving data","lastModifiedDate":"2023-04-06"},{"lineNumber":984,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":985,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2023-04-06"},{"lineNumber":986,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":987,"author":{"gitId":"praveenkrishna0512"},"content":"1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2023-04-06"},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":989,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-04-06"},{"lineNumber":990,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":991,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-08"},{"lineNumber":992,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":993,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"owen-yap":25,"vigonometry":340,"praveenkrishna0512":385,"-":243}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"First, **fork** this [repository](https://github.com/AY2223S2-CS2103T-F12-1/tp), and **clone** the fork into your computer.","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Docedex’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"vigonometry":2,"-":46}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"## Welcome to Docedex","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"***Taking control of hospital administrative management is just a few keystrokes away!***","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex is a **desktop application** built for **medical administrative assistants**","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"to manage doctors and patients within clinics.","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"Here\u0027s an **overview** of how Docedex can help you streamline your hospital management processes.","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"- Store and edit information about your patients and doctors","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"- Track the status of your patients and doctors","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"- Assign patients to doctors upon triaging","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"On top of these functionalities, we believe that patient management must be **efficient**.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"Therefore, Docedex is **optimized for** use via a **Command Line Interface (CLI)**","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"while still having the benefits of a **Graphical User Interface (GUI).**","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"If you type fast, Docedex can get your hospital management tasks done faster","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"than current GUI apps in the industry.","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"**If you are new here**, visit our [quick start](#quick-start) guide to onboard onto Docedex smoothly!","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"## Table of Contents","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"{: .no_toc}","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"## **Quick start**","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"1. Make sure that you have **Java 11 or above** installed on your computer.","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"   - [How do I check my version of Java?](#checking-java-version)","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"2. Download the latest jar file (`docedex.jar`) from our [Github Releases](https://github.com/AY2223S2-CS2103T-F12-1/tp/releases/).","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"   ![DownloadDocedex](images/DownloadDocedex.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"3. Move the jar file to a folder where you want to store the data of the doctors and patients.","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"- Create a new folder called (you can name it Docedex) where you would like to house the application (e.g., Desktop, Documents, etc.).","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"- Move the downloaded jar file to this folder as shown below.","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"  - For Mac Users:","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"    ![DownloadDocedexMac](images/DownloadDocedexMac.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"  \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"  - For Windows Users:","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"  ![DownloadDocedexWindows](images/DocedexInFileWin.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"4. Launch Docedex","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"- For Mac Users:","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"  - Right-click `docedex.jar` \u003e Open With \u003e JavaLauncher.app","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"  - First time users may be prompted with a warning that the file was downloaded from the Internet. Simply click Open in the prompt to continue.","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"- For Windows Users:","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"  - Double-click `docedex.jar` to launch the application.","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"- If this still does not work follow the instructions listed [here.](#launching-docedex)","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"- You should notice the GUI of the application pop up.","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"5. Learn more about navigating the GUI [here](#navigating-the-graphical-user-interface-gui).","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"6. For **new users**, learn to use Docedex [here](#docedex-tutorial-for-new-users).","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"7. For **advanced users**, view all feature details [here](#features).","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"## **Glossary**","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"Here are some descriptions of the words we use throughout the User Guide:","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"- Parameter: Parameters are like fields in a form you are required to fill up. They include details you would include about the doctor/patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"### Parameter Information","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"The information below specifies parameter description, constraints and usage through valid and invalid examples.","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"#### Common Parameters","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"| Parameter         | Description                        | Constraints                                                                     | Valid Examples                    | Invalid Examples                             |","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"|-------------------|------------------------------------|---------------------------------------------------------------------------------|-----------------------------------|----------------------------------------------|","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"| n/                | Name of the doctor/patient         | Alphanumeric characters (a to z, A to Z, 0 to 9)                                | Will Hunting, Elizabeth 2         | 成龍,  潔 いさぎ 世 よ 一 いち, Ganesh s/o Ravichandran |","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"| e/                | Email of the doctor/patient        | Email prefix: Alphanumeric characters (a to z, A to Z, 0 to 9), @, Email Domain | whunting@gmail.com, eliz2@mit.edu | whunting@, eliz2                             |","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"| p/                | Phone number of the doctor/patient | Positive integer with 3 or more digits                                          | 999, 94565625                     | 0, -1                                        |","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"| t/                | Tags (optional parameter)          | Single string of characters not separated by any whitespace                     | pendingReview, recurrentProblem   | N/A                                          |","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"| INDEX\u003csup\u003e*\u003c/sup\u003e | Index in doctors/patients list     | Positive integer less than or equal to 2147483649                               | 1, 2147483647                     | -1, 2147483649                               |","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"\u003csup\u003e*\u003c/sup\u003eIndex is prefaced by doc/ and ptn/ in the commands [`assign-ptn`](#assigning-a-patient-to-a-doctor) and [`unassign-ptn`](#unassigning-a-patient-from-a-doctor)","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"#### Doctor Parameters","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"| Parameter | Description             | Constraints                                      | Valid Examples        | Invalid Examples                                 |","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"|-----------|-------------------------|--------------------------------------------------|-----------------------|--------------------------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"| s/        | Specialty of the doctor | Alphanumeric characters (a to z, A to Z, 1 to 9) | Cardiology, Neurology | N/A (45 specialties are recognized in Singapore) |","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"| y/        | Years of experience     | Positive integer between 0 and 99.               | 0, 99                 | -1, 100                                          |","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"#### Patient Parameters","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"| Parameter | Description                             | Constraints                                                                                                                                 | Valid Examples        | Invalid Examples   |","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"|-----------|-----------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------|-----------------------|--------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"| h/        | Height of the patient in metres (m)     | Floating point number with 2 decimal places                                                                                                 | 1.63, 1.99            | 1, 1.2, 1.234      |","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"| w/        | Weight of the patient in kilograms (kg) | Floating point number with 1 decimal place                                                                                                  | 85.0, 63.2            | 85, 63.20          |","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"| d/        | Diagnosis                               | Alphanumeric characters (a to z, A to Z, 0 to 9)                                                                                            | Fever, Cancer         | 发烧                 |","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"| st/       | Status                                  | Can only take one of the following values: Inpatient, Outpatient, Observation, Emergency Department, Intensive Care Unit, Transitional Care | Inpatient, Outpatient | Baymax, HelloWorld |","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"## **Navigating the Graphical User Interface (GUI)**","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex comes with a GUI to allow for a nice visual feedback for our users. Here","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"is a quick runthrough of the different sections of our GUI, as well as some notes","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"regarding the use of the GUI.","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"### Quick Orientation","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"![GuiOrientation](images/gui-display-annotated.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"Here is a quick summary of each GUI component within Docedex.","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"| **Name of component** | **Description**                                                                                                                                                                                                                                                             |","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"|-----------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"| **Menu Bar**          | Contains dropdown menu options for the Docedex application.                                                                                                                                                                                                                 |","lastModifiedDate":"2023-04-05"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"| **Command Box**       | Allows users to enter Docedex commands.                                                                                                                                                                                                                                     |","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"| **Result Display**    | Provides CLI-based feedback upon a user command.\u003cbr\u003eAllows users to see if their command was successful or not.\u003cbr\u003eProvides error messages to guide user on how to use Docedex commands.                                                                                    |","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"| **Doctor List**       | Shows a list of **Doctor Cards**. This list can be manipulated through commands.\u003cbr\u003e\u003cbr\u003eUpon starting the app, this list will reflect all doctors in Docedex.\u003cbr\u003e\u003cbr\u003eUpon selection of a **Patient Card**, this list will filter to show doctors assigned to said patient.  |","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"| **Doctor Card**       | Displays key information about a doctor, such as name, phone number, email and tags.                                                                                                                                                                                        |","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"| **Patient List**      | Shows a list of **Patient Cards**. This list can be manipulated through commands.\u003cbr\u003e\u003cbr\u003eUpon starting the app, this list will reflect all patients in Docedex.\u003cbr\u003e\u003cbr\u003eUpon selection of a **Doctor Card**, this list will filter to show patients assigned to said doctor. |","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"| **Patient Card**      | Displays key information about a patient, such as name, phone number, email and tags.                                                                                                                                                                                       |","lastModifiedDate":"2023-04-05"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"| **Information Card**  | Displays all information about a selected doctor or patient.                                                                                                                                                                                                                |","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"| **Footer**            | Shows the location of the Docedex storage.                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"### Notes about the GUI","lastModifiedDate":"2023-04-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"#### Selecting doctors or patients through commands**","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"Certain commands involve the selection of doctors","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"and patients immediately after they are entered.","lastModifiedDate":"2023-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"For example, when you type in the `add-doc` command, Docedex will automatically select","lastModifiedDate":"2023-04-05"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"the newly added doctor and display their details to you. This gives the user (you!)","lastModifiedDate":"2023-04-05"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"a nice visual feedback that the command is successful.","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"Upon selecting a doctor, the Patient List displays the patients assigned","lastModifiedDate":"2023-04-05"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"to the selected doctor. However, if the doctor is newly added, said doctor will have","lastModifiedDate":"2023-04-05"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"no patients, and thus the Patient List will be empty.","lastModifiedDate":"2023-04-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"This behaviour will also exist if the user adds a patient instead too.","lastModifiedDate":"2023-04-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-error\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"Some users have mentioned being alarmed by sudden disappearances of","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"their Doctor Cards and Patient Cards within their respective lists","lastModifiedDate":"2023-04-05"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":"after entering certain commands. The explainer above details why this happens.","lastModifiedDate":"2023-04-05"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"Fret not, as this is part of the functionality of Docedex. Your storage is still secure.","lastModifiedDate":"2023-04-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":151,"author":{"gitId":"vigonometry"},"content":"#### Unselecting doctors or patients**","lastModifiedDate":"2023-04-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":153,"author":{"gitId":"praveenkrishna0512"},"content":"Unselecting doctors and patients is currently not supported in Docedex. If you wish to","lastModifiedDate":"2023-04-05"},{"lineNumber":154,"author":{"gitId":"praveenkrishna0512"},"content":"look through all the doctors and patients in Docedex, please use the","lastModifiedDate":"2023-04-05"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"[`list-doc`](#listing-all-doctors) and [`list-ptn`](#listing-all-patients) commands instead.","lastModifiedDate":"2023-04-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":157,"author":{"gitId":"praveenkrishna0512"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":159,"author":{"gitId":"vigonometry"},"content":"## **Notes about the command format**","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"vigonometry"},"content":"| Notes                                                                                                        | Explanation                                                                  | Examples                                                                                          |","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"vigonometry"},"content":"|--------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":163,"author":{"gitId":"vigonometry"},"content":"| Words in `UPPER_CASE`                                                                                        | These are parameter values that are supplied by the user                     | `add-doc n/NAME...` can be used as `add-doc n/John Doe...`                                        |","lastModifiedDate":"2023-04-06"},{"lineNumber":164,"author":{"gitId":"vigonometry"},"content":"| Items in square brackets                                                                                     | These are optional parameters (can be left empty by user)                    | `add-doc n/NAME ... [t/TAG]` can be used as `add-doc n/John Doe t/friend` or `add-doc n/John Doe` |","lastModifiedDate":"2023-04-06"},{"lineNumber":165,"author":{"gitId":"vigonometry"},"content":"| Items with `…`​ after them                                                                                   | These are parameters that can be used multiple times (or omitted completely) | `add-doc ... [t/TAG]…​` can be used as `add-doc ... t/friend t/surgeon` or `add-doc ...`          |","lastModifiedDate":"2023-04-06"},{"lineNumber":166,"author":{"gitId":"vigonometry"},"content":"| Parameters can be in any order.                                                                              | N/A                                                                          | `add-doc n/NAME p/PHONE_NUMBER ...` is equivalent to `add-doc p/PHONE_NUMBER n/NAME`              |","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"vigonometry"},"content":"| If a parameter is **expected only once** and entered multiple times, only the latest occurrence is accepted. | N/A                                                                          | `add-doc n/John Doe n/Shawn Koh ...` is equivalent to `add-doc n/Shawn Koh ...`                   |","lastModifiedDate":"2023-04-06"},{"lineNumber":168,"author":{"gitId":"vigonometry"},"content":"| Extraneous parameters for commands that do not take in parameters will be ignored.                           | N/A                                                                          | `help 123`, `list 123` is equivalent to `help` or `list`                                          |","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"vigonometry"},"content":"## **Command Summary**","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":174,"author":{"gitId":"owen-yap"},"content":"| Command               | Shorthand   | What it does                                                                              |","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"vigonometry"},"content":"|-----------------------|-------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"vigonometry"},"content":"| `add-doc / add-ptn`   | `ad / ap`   | Adds a doctor or patient into Docedex.                                                    |","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"vigonometry"},"content":"| `edit-doc / edit-ptn` | `ed / ep`   | Edits the specified doctor or patient.                                                    |","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"vigonometry"},"content":"| `del-doc / del-ptn`   | `dd / dp`   | Removes the specified doctor or patient from Docedex. **This action cannot be undone.**   |","lastModifiedDate":"2023-03-31"},{"lineNumber":179,"author":{"gitId":"vigonometry"},"content":"| `find-doc / find-ptn` | `fd / fp`   | Finds the doctor(s) and patient(s) which matches the search query.                        |","lastModifiedDate":"2023-03-31"},{"lineNumber":180,"author":{"gitId":"vigonometry"},"content":"| `list-doc / list-ptn` | `lsd / lsp` | Lists all doctors or patients.                                                            |","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"vigonometry"},"content":"| `assign-ptn`          | `asn`       | Assigns a patient to a doctor.                                                            |","lastModifiedDate":"2023-03-31"},{"lineNumber":182,"author":{"gitId":"vigonometry"},"content":"| `unassign-ptn`        | `uasn`      | Unassigns a patient from a doctor.                                                        |","lastModifiedDate":"2023-03-31"},{"lineNumber":183,"author":{"gitId":"vigonometry"},"content":"| `sd / sp`             | `sd / sp`   | Selects the specified doctor or patient and displays the person\u0027s information on the GUI. |","lastModifiedDate":"2023-03-31"},{"lineNumber":184,"author":{"gitId":"vigonometry"},"content":"| `help`                | N/A         | Displays the link to the User Guide.                                                      |","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"vigonometry"},"content":"| `clear`               | N/A         | Clears all entries from Docedex. **This action cannot be undone.**                        |","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"vigonometry"},"content":"| `exit`                | N/A         | Exits the application (equivalent to closing the application).                            |","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":190,"author":{"gitId":"praveenkrishna0512"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":191,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":192,"author":{"gitId":"vigonometry"},"content":"## **Docedex Tutorial (for new users)**","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":194,"author":{"gitId":"vigonometry"},"content":"This is a tutorial for **first-time** Docedex users.","lastModifiedDate":"2023-04-05"},{"lineNumber":195,"author":{"gitId":"vigonometry"},"content":"1. Launch Docedex. You may refer to the instructions [here](#quick-start)","lastModifiedDate":"2023-04-05"},{"lineNumber":196,"author":{"gitId":"vigonometry"},"content":"   - Note: On launch, Docedex will not contain any doctor or patient records.","lastModifiedDate":"2023-04-05"},{"lineNumber":197,"author":{"gitId":"vigonometry"},"content":"2. Let us try **adding a doctor** to our Docedex. Enter the command `add-doc n/John Doe p/98765432 e/johnd@example.com s/Cardiology y/5 t/surgeon` in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":198,"author":{"gitId":"vigonometry"},"content":"   - Note: On adding a new doctor, the patients\u0027 list is filtered to show only patients associated with the doctor. To view all patient records, simply type `list-ptn` in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":199,"author":{"gitId":"vigonometry"},"content":"     ![AddDoc](images/AddDoc.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":200,"author":{"gitId":"vigonometry"},"content":"3. Let us try **adding a patient** to our Docedex. Enter the command `add-ptn n/Patrick Bateman p/85167604 e/psigma@gmail.com h/1.88 w/80.5 d/Rhinitis st/Outpatient r/Dust allergy t/pendingReview` in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":201,"author":{"gitId":"vigonometry"},"content":"   - Note: On adding a new patient, the doctors\u0027 list is filtered to show only doctors associated with the patient. To view all doctor records, simply type `list-doc` in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":202,"author":{"gitId":"vigonometry"},"content":"     ![AddPtn](images/AddPtn.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":203,"author":{"gitId":"vigonometry"},"content":"4. Add a few more doctors and patients to Docedex!","lastModifiedDate":"2023-04-05"},{"lineNumber":204,"author":{"gitId":"vigonometry"},"content":"5. Let us try **assigning the patient to the doctor**. Enter the command `assign-ptn ptn/1 doc/1` in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":205,"author":{"gitId":"vigonometry"},"content":"   - Note: On assigning a patient to a doctor, the doctors\u0027 list is filtered to show only doctors associated with the patient. To view all doctor records, simply type `list-doc` in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":206,"author":{"gitId":"vigonometry"},"content":"     ![AssignPtn](images/AssignPtnAft.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"vigonometry"},"content":"6. Let us try **selecting the doctor**. Enter the command `sd 1` in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":208,"author":{"gitId":"vigonometry"},"content":"   - Note: On selecting the doctor, the patients\u0027 list is filtered to display only patients associated with the doctor. To view all patients use `list-ptn`.","lastModifiedDate":"2023-04-05"},{"lineNumber":209,"author":{"gitId":"vigonometry"},"content":"     ![SelectDoctor](images/SelectDoctor.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":210,"author":{"gitId":"vigonometry"},"content":"7. Let us try **selecting the patient**. Enter the command `sp 1` in the command box. This time, the doctors\u0027 list is filtered instead.","lastModifiedDate":"2023-04-05"},{"lineNumber":211,"author":{"gitId":"vigonometry"},"content":"   - Note: On selecting the patient, the doctors\u0027 list is filtered to display only patients associated with the patient. To view all doctors use `list-doc`.","lastModifiedDate":"2023-04-05"},{"lineNumber":212,"author":{"gitId":"vigonometry"},"content":"8. Let us try **undoing the assignment of the patient from the doctor**. Enter the command `unassign-ptn ptn/1 doc/1` in the command box.","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"vigonometry"},"content":"   ![UnassignPtn](images/UnassignPtn.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":214,"author":{"gitId":"vigonometry"},"content":"9. Let us try **finding a doctor** named John. Enter the command `find-doc n/John` in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":215,"author":{"gitId":"vigonometry"},"content":"10. Let us try **finding a patient** with the name Patrick. Enter `find-ptn n/Patrick` in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":216,"author":{"gitId":"vigonometry"},"content":"11. Let us try **deleting a doctor** from Docedex. Enter the command `del-doc 1` in the command box. This removes the first displayed doctor in the doctors\u0027 list.","lastModifiedDate":"2023-04-05"},{"lineNumber":217,"author":{"gitId":"vigonometry"},"content":"12. Let us try **deleting a patient** from Docedex. Enter the command `del-ptn 1` in the command box. This removes the first displayed patient in the patients\u0027 list.","lastModifiedDate":"2023-04-05"},{"lineNumber":218,"author":{"gitId":"vigonometry"},"content":"13. Let us try **listing all doctors**. Enter the command `list-doc` in the command box. This lists all the doctors within Docedex.","lastModifiedDate":"2023-04-05"},{"lineNumber":219,"author":{"gitId":"vigonometry"},"content":"14. Let us try **listing all patients**. Enter the command `list-ptn` in the command box. This lists all the patients within Docedex.","lastModifiedDate":"2023-04-05"},{"lineNumber":220,"author":{"gitId":"vigonometry"},"content":"15. Congratulations! You are now ready to use Docedex.","lastModifiedDate":"2023-04-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"vigonometry"},"content":"  To view all our features, you may visit our [features section](#features).","lastModifiedDate":"2023-04-05"},{"lineNumber":223,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":224,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-05"},{"lineNumber":225,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":226,"author":{"gitId":"praveenkrishna0512"},"content":"---","lastModifiedDate":"2023-04-06"},{"lineNumber":227,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":228,"author":{"gitId":"vigonometry"},"content":"## **Features**","lastModifiedDate":"2023-04-08"},{"lineNumber":229,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":230,"author":{"gitId":"vigonometry"},"content":"### Doctor Commands","lastModifiedDate":"2023-03-31"},{"lineNumber":231,"author":{"gitId":"vigonometry"},"content":"#### Adding a doctor","lastModifiedDate":"2023-03-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"vigonometry"},"content":"```add-doc n/NAME p/PHONE_NUMBER e/EMAIL s/SPECIALITY y/YEARS_OF_EXPERIENCE [t/TAGS]…```","lastModifiedDate":"2023-04-06"},{"lineNumber":234,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":235,"author":{"gitId":"vigonometry"},"content":"- What it does: Adds a new doctor to the doctors list and filters the patients\u0027 list to display only associate patients.","lastModifiedDate":"2023-04-06"},{"lineNumber":236,"author":{"gitId":"vigonometry"},"content":"- Possible use cases: A new doctor has joined your department/you are setting Docedex up for the first time.","lastModifiedDate":"2023-04-06"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"vigonometry"},"content":"- Examples:","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"vigonometry"},"content":"    - `add-doc n/John Doe p/98765432 e/johnd@example.com s/Cardiology y/5 t/surgeon`","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"vigonometry"},"content":"    - `add-doc n/Gabriel Tan p/98765432 e/gabt@example.com s/Neurosurgery y/5`","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":243,"author":{"gitId":"vigonometry"},"content":"Adding doctor command, also calls select doctor to display the recently added information in the Enlarged Contact Card.","lastModifiedDate":"2023-04-08"},{"lineNumber":244,"author":{"gitId":"vigonometry"},"content":"**If no patients appear in the patients list**, it is because none have been assigned to the doctor.","lastModifiedDate":"2023-04-09"},{"lineNumber":245,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"vigonometry"},"content":"For more information see: [Selecting doctors or patients through commands](#selecting-doctors-or-patients-through-commands--)","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":249,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"vigonometry"},"content":"#### Editing a doctor","lastModifiedDate":"2023-03-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":253,"author":{"gitId":"vigonometry"},"content":"```edit-doc INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [s/SPECIALTY] [y/YOE] [t/TAGS]…```","lastModifiedDate":"2023-04-06"},{"lineNumber":254,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":255,"author":{"gitId":"vigonometry"},"content":"- What it does: Edits the doctor at the specified `INDEX`.","lastModifiedDate":"2023-04-06"},{"lineNumber":256,"author":{"gitId":"vigonometry"},"content":"- Possible use cases: Updating contact information of a doctor.","lastModifiedDate":"2023-04-06"},{"lineNumber":257,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":258,"author":{"gitId":"vigonometry"},"content":"**WARNING**: This command overwrites existing data within Docedex, proceed with caution.","lastModifiedDate":"2023-04-06"},{"lineNumber":259,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":260,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":261,"author":{"gitId":"vigonometry"},"content":"- Note to users:","lastModifiedDate":"2023-03-31"},{"lineNumber":262,"author":{"gitId":"vigonometry"},"content":"    - The index refers to the index number shown in the displayed doctor list.","lastModifiedDate":"2023-04-06"},{"lineNumber":263,"author":{"gitId":"vigonometry"},"content":"    - Users can edit specific doctors in the clinic by providing at least one of the optional parameters. Specified parameters will be updated to the input values and all other parameter values will remain the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":264,"author":{"gitId":"vigonometry"},"content":"    - At least one of the optional parameters must be provided.","lastModifiedDate":"2023-04-06"},{"lineNumber":265,"author":{"gitId":"vigonometry"},"content":"    - When editing tags, the existing tags of the person will be removed i.e., adding of tags is not cumulative. You can remove all the person’s tags by typing `t/` without any tag string.","lastModifiedDate":"2023-04-06"},{"lineNumber":266,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"vigonometry"},"content":"- Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":268,"author":{"gitId":"vigonometry"},"content":"    - `edit-doc 1 p/91234567` Edits the phone number of the 1st doctor to be `91234567`.","lastModifiedDate":"2023-03-31"},{"lineNumber":269,"author":{"gitId":"vigonometry"},"content":"    - `edit-doc 2 n/Gabriel Tan p/12345678 t/` Edits the name and phone number of the 2nd doctor to be `Gabriel Tan` and `91234567` respectively. Adding t/ also clears all existing tags.","lastModifiedDate":"2023-03-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":271,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":272,"author":{"gitId":"vigonometry"},"content":"Edit doctor command, also calls select doctor to display the recently updated information in the Enlarged Contact Card.","lastModifiedDate":"2023-04-08"},{"lineNumber":273,"author":{"gitId":"vigonometry"},"content":"**If no patients appear in the patients list**, it is because none have been assigned to the doctor.","lastModifiedDate":"2023-04-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":275,"author":{"gitId":"vigonometry"},"content":"For more information see: [Selecting doctors or patients through commands](#selecting-doctors-or-patients-through-commands--)","lastModifiedDate":"2023-04-08"},{"lineNumber":276,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":278,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":280,"author":{"gitId":"vigonometry"},"content":"#### Deleting a doctor","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":282,"author":{"gitId":"vigonometry"},"content":"```del-doc INDEX```","lastModifiedDate":"2023-04-06"},{"lineNumber":283,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":284,"author":{"gitId":"vigonometry"},"content":"- What it does: Deletes the specified doctor from the address book.","lastModifiedDate":"2023-03-31"},{"lineNumber":285,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":286,"author":{"gitId":"vigonometry"},"content":"**WARNING**: This command is destructive. Doctor\u0027s removed will need to be added back.","lastModifiedDate":"2023-04-06"},{"lineNumber":287,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":288,"author":{"gitId":"vigonometry"},"content":"- Note to user:","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"vigonometry"},"content":"    - The index refers to the index number shown in the displayed doctor list.","lastModifiedDate":"2023-03-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":292,"author":{"gitId":"vigonometry"},"content":"* `list-doc` followed by `del-doc 2` deletes the 2nd doctor in the address book.","lastModifiedDate":"2023-03-31"},{"lineNumber":293,"author":{"gitId":"vigonometry"},"content":"* `find-doc Gabriel` followed by `del-doc 1` deletes the 1st doctor in the results of the `find-doc` command.","lastModifiedDate":"2023-03-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":295,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":297,"author":{"gitId":"vigonometry"},"content":"#### Finding a doctor","lastModifiedDate":"2023-03-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":299,"author":{"gitId":"vigonometry"},"content":"```find-doc [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [s/SPECIALTY] [y/YEARS_OF_EXPERIENCE] [t/TAGS]…```","lastModifiedDate":"2023-04-06"},{"lineNumber":300,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":301,"author":{"gitId":"vigonometry"},"content":"- What it does: Find doctors with specified parameter value","lastModifiedDate":"2023-04-06"},{"lineNumber":302,"author":{"gitId":"vigonometry"},"content":"- Possible use cases: Retrieval of doctor records","lastModifiedDate":"2023-04-06"},{"lineNumber":303,"author":{"gitId":"vigonometry"},"content":"- Note to user:","lastModifiedDate":"2023-03-31"},{"lineNumber":304,"author":{"gitId":"vigonometry"},"content":"    - Matches are case-insensitive.","lastModifiedDate":"2023-03-31"},{"lineNumber":305,"author":{"gitId":"vigonometry"},"content":"    - Parameters are matched if they contain the search value (if there are two doctors named Gabriel and Gabriella in Docedex, using the command with search value `n/Gabriel` retrieves both records).","lastModifiedDate":"2023-04-06"},{"lineNumber":306,"author":{"gitId":"vigonometry"},"content":"    - At least one of the parameters must be provided.","lastModifiedDate":"2023-04-06"},{"lineNumber":307,"author":{"gitId":"vigonometry"},"content":"    - More than one tag can be provided.","lastModifiedDate":"2023-03-31"},{"lineNumber":308,"author":{"gitId":"vigonometry"},"content":"    - Blank parameters will be ignored.","lastModifiedDate":"2023-04-06"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"vigonometry"},"content":"- Examples:","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"vigonometry"},"content":"    - `find-doc n/Gabriel` matches any doctor with the name containing the string `Gabriel`.","lastModifiedDate":"2023-03-31"},{"lineNumber":312,"author":{"gitId":"vigonometry"},"content":"    - `find-doc n/Gabriel t/friend t/expert` matches any doctor with the name containing the string `Gabriel` and has tags `friend` and `expert`.","lastModifiedDate":"2023-03-31"},{"lineNumber":313,"author":{"gitId":"vigonometry"},"content":"    - `find-doc y/3` matches any doctor that has the number 3 in their years of experience, i.e. `3`,`30`,`23` will be matched but `5` and `10` will not be matched.","lastModifiedDate":"2023-03-31"},{"lineNumber":314,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":315,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-31"},{"lineNumber":316,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":317,"author":{"gitId":"vigonometry"},"content":"#### Select doctor","lastModifiedDate":"2023-03-31"},{"lineNumber":318,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":319,"author":{"gitId":"vigonometry"},"content":"```sd INDEX```","lastModifiedDate":"2023-04-06"},{"lineNumber":320,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":321,"author":{"gitId":"vigonometry"},"content":"- What it does: This command mimics a mouse click on a doctor\u0027s contact card. It shows the information of the doctor and filters the patients\u0027 list to only show assigned patients.","lastModifiedDate":"2023-04-06"},{"lineNumber":322,"author":{"gitId":"vigonometry"},"content":"- Possible use cases: Find which patients were treated by a doctor","lastModifiedDate":"2023-04-06"},{"lineNumber":323,"author":{"gitId":"vigonometry"},"content":"- Note to user:","lastModifiedDate":"2023-03-31"},{"lineNumber":324,"author":{"gitId":"vigonometry"},"content":"  - The index refers to the index number shown in the displayed doctor list.","lastModifiedDate":"2023-03-31"},{"lineNumber":325,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":326,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":327,"author":{"gitId":"vigonometry"},"content":"Selecting doctor command displays only the recently queried doctor\u0027s information in the Enlarged Contact Card.","lastModifiedDate":"2023-04-08"},{"lineNumber":328,"author":{"gitId":"vigonometry"},"content":"**If no patients appear in the patients list**, it is because none have been assigned to the doctor.","lastModifiedDate":"2023-04-09"},{"lineNumber":329,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":330,"author":{"gitId":"vigonometry"},"content":"For more information see: [Selecting doctors or patients through commands](#selecting-doctors-or-patients-through-commands--)","lastModifiedDate":"2023-04-08"},{"lineNumber":331,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":334,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-31"},{"lineNumber":335,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":336,"author":{"gitId":"vigonometry"},"content":"#### Listing all doctors","lastModifiedDate":"2023-03-31"},{"lineNumber":337,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":338,"author":{"gitId":"vigonometry"},"content":"`list-doc`","lastModifiedDate":"2023-04-06"},{"lineNumber":339,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":340,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":341,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-31"},{"lineNumber":342,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":343,"author":{"gitId":"vigonometry"},"content":"### Patient Commands","lastModifiedDate":"2023-03-31"},{"lineNumber":344,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":345,"author":{"gitId":"vigonometry"},"content":"#### Adding a patient","lastModifiedDate":"2023-03-31"},{"lineNumber":346,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":347,"author":{"gitId":"vigonometry"},"content":"```add-ptn n/NAME p/PHONE e/EMAIL h/HEIGHT w/WEIGHT d/DIAGNOSIS st/STATUS [r/REMARK] [t/TAGS]…```","lastModifiedDate":"2023-04-06"},{"lineNumber":348,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":349,"author":{"gitId":"vigonometry"},"content":"- Possible use cases: Adding a new patient visiting a clinic to the address book.","lastModifiedDate":"2023-04-06"},{"lineNumber":350,"author":{"gitId":"vigonometry"},"content":"- What it does: Adds a new patient to the patients\u0027 list and filters the doctors\u0027 list to show only associated doctors.","lastModifiedDate":"2023-04-06"},{"lineNumber":351,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":352,"author":{"gitId":"vigonometry"},"content":"- Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":353,"author":{"gitId":"vigonometry"},"content":"  - `add-ptn n/Patrick Bateman p/85167604 e/psigma@gmail.com h/1.88 w/80.5 d/Rhinitis st/Outpatient r/Dust allergy t/brother`","lastModifiedDate":"2023-03-30"},{"lineNumber":354,"author":{"gitId":"vigonometry"},"content":"  - `add-ptn n/Patrick Bateman p/85167604 e/psigma@gmail.com h/1.88 w/80.5 d/Rhinitis st/Outpatient`","lastModifiedDate":"2023-03-30"},{"lineNumber":355,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":356,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":357,"author":{"gitId":"vigonometry"},"content":"Adding patient command, also calls select patient to display the recently added information in the Enlarged Contact Card.","lastModifiedDate":"2023-04-08"},{"lineNumber":358,"author":{"gitId":"vigonometry"},"content":"**If no doctors appear in the doctors list**, it is because the patient has not been assigned to any doctor.","lastModifiedDate":"2023-04-09"},{"lineNumber":359,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":360,"author":{"gitId":"vigonometry"},"content":"For more information see: [Selecting doctors or patients through commands](#selecting-doctors-or-patients-through-commands--)","lastModifiedDate":"2023-04-08"},{"lineNumber":361,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":363,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":365,"author":{"gitId":"vigonometry"},"content":"#### Assigning a patient to a doctor","lastModifiedDate":"2023-03-31"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":367,"author":{"gitId":"vigonometry"},"content":"```assign-ptn ptn/PATIENT_INDEX doc/DOCTOR_INDEX```","lastModifiedDate":"2023-04-06"},{"lineNumber":368,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":369,"author":{"gitId":"vigonometry"},"content":"- What it does: Performs an assignment operation and filters the doctors\u0027 list to show only the doctors associated with the patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":370,"author":{"gitId":"vigonometry"},"content":"- Possible use cases: Assigning a newly arrived patient to an available doctor.","lastModifiedDate":"2023-04-06"},{"lineNumber":371,"author":{"gitId":"Bobfree546"},"content":"- Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":372,"author":{"gitId":"Bobfree546"},"content":"  - `assign-ptn ptn/1 doc/1` assigns the first patient to the first doctor.","lastModifiedDate":"2023-03-30"},{"lineNumber":373,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":374,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":375,"author":{"gitId":"vigonometry"},"content":"Assign patient command, also calls select patient to display the recently added information in the Enlarged Contact Card.","lastModifiedDate":"2023-04-08"},{"lineNumber":376,"author":{"gitId":"vigonometry"},"content":"The doctors that appear in the doctors list, are those that the patient has been assigned to.","lastModifiedDate":"2023-04-08"},{"lineNumber":377,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":378,"author":{"gitId":"vigonometry"},"content":"For more information see: [Selecting doctors or patients through commands](#selecting-doctors-or-patients-through-commands--)","lastModifiedDate":"2023-04-08"},{"lineNumber":379,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":380,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":381,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":382,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":383,"author":{"gitId":"vigonometry"},"content":"#### Undoing assignment of a patient from a doctor","lastModifiedDate":"2023-04-06"},{"lineNumber":384,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":385,"author":{"gitId":"vigonometry"},"content":"```unassign-ptn ptn/PATIENT_INDEX doc/DOCTOR_INDEX```","lastModifiedDate":"2023-04-06"},{"lineNumber":386,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":387,"author":{"gitId":"vigonometry"},"content":"- What it does: Undoes the assignment of a patient from a doctor. Filters the doctors list to highlight only doctors associated with the patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":388,"author":{"gitId":"vigonometry"},"content":"- Possible use cases: Transferring a patient\u0027s case from one doctor to another","lastModifiedDate":"2023-04-06"},{"lineNumber":389,"author":{"gitId":"Bobfree546"},"content":"- Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"vigonometry"},"content":"  - `unassign-ptn ptn/1 doc/1` undoes the assignment of the first patient from the first doctor.","lastModifiedDate":"2023-04-06"},{"lineNumber":391,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":392,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":393,"author":{"gitId":"vigonometry"},"content":"Unassign (undo assignment) patient command, also calls select patient to display the recently added information in the Enlarged Contact Card.","lastModifiedDate":"2023-04-08"},{"lineNumber":394,"author":{"gitId":"vigonometry"},"content":"The doctors that appear in the doctors list, are those that the patient has been assigned to (if no doctors are displayed, the patient is assigned to no doctors).","lastModifiedDate":"2023-04-08"},{"lineNumber":395,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":396,"author":{"gitId":"vigonometry"},"content":"For more information see: [Selecting doctors or patients through commands](#selecting-doctors-or-patients-through-commands--)","lastModifiedDate":"2023-04-08"},{"lineNumber":397,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":398,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":399,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":400,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":401,"author":{"gitId":"vigonometry"},"content":"#### Editing a patient","lastModifiedDate":"2023-03-31"},{"lineNumber":402,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":403,"author":{"gitId":"vigonometry"},"content":"```edit-ptn [INDEX] [n/NAME] [p/PHONE] [e/EMAIL] [h/HEIGHT] [w/WEIGHT] [d/DIAGNOSIS] [st/STATUS] [r/REMARK] [t/TAGS]…```","lastModifiedDate":"2023-04-06"},{"lineNumber":404,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":405,"author":{"gitId":"vigonometry"},"content":"- What it does: Edits the patient at the specified `INDEX`.","lastModifiedDate":"2023-04-06"},{"lineNumber":406,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":407,"author":{"gitId":"vigonometry"},"content":"**WARNING**: This command overwrites existing data within Docedex, proceed with caution.","lastModifiedDate":"2023-04-06"},{"lineNumber":408,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":409,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":410,"author":{"gitId":"vigonometry"},"content":"- Note to users:","lastModifiedDate":"2023-03-30"},{"lineNumber":411,"author":{"gitId":"vigonometry"},"content":"    - The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2023-04-06"},{"lineNumber":412,"author":{"gitId":"vigonometry"},"content":"    - Users can edit specific patients in the clinic by providing at least one of the optional parameters. Specified parameters will be updated to the input values and all other parameter values will remain the same.","lastModifiedDate":"2023-04-06"},{"lineNumber":413,"author":{"gitId":"vigonometry"},"content":"    - At least one of the optional parameters must be provided.","lastModifiedDate":"2023-04-06"},{"lineNumber":414,"author":{"gitId":"vigonometry"},"content":"    - When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative. You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2023-03-30"},{"lineNumber":415,"author":{"gitId":"vigonometry"},"content":"      specifying any tags after it.","lastModifiedDate":"2023-03-30"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"vigonometry"},"content":"- Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":418,"author":{"gitId":"vigonometry"},"content":"    - `edit-ptn 1 n/Daenerys Targaryen` Edits the name of the 1st patient to be `Daenerys Targaryen`.","lastModifiedDate":"2023-03-30"},{"lineNumber":419,"author":{"gitId":"vigonometry"},"content":"    - `edit-ptn 2 n/Daenerys Targaryen st/Inpatient t/` Edits the name and status of the 2nd patient to be `Daenerys Targaryen` and `Inpatient` respectively. Adding t/ also clears all existing tags.","lastModifiedDate":"2023-03-30"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-heading\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":422,"author":{"gitId":"vigonometry"},"content":"Edit patient command, also calls select patient to display the recently updated information in the Enlarged Contact Card.","lastModifiedDate":"2023-04-08"},{"lineNumber":423,"author":{"gitId":"vigonometry"},"content":"The doctors that appear in the doctors list, are those that the patient has been assigned to (if no doctors are displayed, the patient has not been assigned to any doctor). ","lastModifiedDate":"2023-04-08"},{"lineNumber":424,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":425,"author":{"gitId":"vigonometry"},"content":"For more information see: [Selecting doctors or patients through commands](#selecting-doctors-or-patients-through-commands--)","lastModifiedDate":"2023-04-08"},{"lineNumber":426,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":427,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":428,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":429,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":430,"author":{"gitId":"vigonometry"},"content":"#### Deleting a patient","lastModifiedDate":"2023-03-31"},{"lineNumber":431,"author":{"gitId":"vigonometry"},"content":"- Command format: `del-ptn INDEX`","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"vigonometry"},"content":"- What it does: Deletes the specified patient from the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":433,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":434,"author":{"gitId":"vigonometry"},"content":"**WARNING**: This command is destructive. Patients removed will need to be added back.","lastModifiedDate":"2023-04-06"},{"lineNumber":435,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":436,"author":{"gitId":"vigonometry"},"content":"- Note to user:","lastModifiedDate":"2023-03-30"},{"lineNumber":437,"author":{"gitId":"vigonometry"},"content":"  - The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2023-03-30"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"vigonometry"},"content":"* `list-ptn` followed by `del-ptn 2` deletes the 2nd patient in the address book.","lastModifiedDate":"2023-03-23"},{"lineNumber":441,"author":{"gitId":"vigonometry"},"content":"* `find-ptn Gabriel` followed by `del-ptn 1` deletes the 1st patient in the results of the `find-ptn` command.","lastModifiedDate":"2023-03-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":444,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":445,"author":{"gitId":"vigonometry"},"content":"#### Finding a patient","lastModifiedDate":"2023-03-31"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":447,"author":{"gitId":"vigonometry"},"content":"```find-ptn [n/NAME] [p/PHONE] [e/EMAIL] [h/HEIGHT] [w/WEIGHT] [d/DIAGNOSIS] [st/STATUS] [r/REMARK] [t/TAGS]…```","lastModifiedDate":"2023-04-06"},{"lineNumber":448,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":449,"author":{"gitId":"vigonometry"},"content":"- What it does: Find patients with specified parameter value","lastModifiedDate":"2023-04-06"},{"lineNumber":450,"author":{"gitId":"vigonometry"},"content":"- Possible use cases: Retrieval of patient records","lastModifiedDate":"2023-04-06"},{"lineNumber":451,"author":{"gitId":"vigonometry"},"content":"- Note to user:","lastModifiedDate":"2023-04-06"},{"lineNumber":452,"author":{"gitId":"Bobfree546"},"content":"    - Matches are case-insensitive.","lastModifiedDate":"2023-03-30"},{"lineNumber":453,"author":{"gitId":"vigonometry"},"content":"    - Parameters are matched if they contain the search value (if there are two patients named Gabriel and Gabriella in Docedex, using the command with search value `n/Gabriel` retrieves both records).","lastModifiedDate":"2023-04-06"},{"lineNumber":454,"author":{"gitId":"vigonometry"},"content":"    - At least one of the parameters must be provided.","lastModifiedDate":"2023-04-06"},{"lineNumber":455,"author":{"gitId":"Bobfree546"},"content":"    - More than one tag can be provided.","lastModifiedDate":"2023-03-30"},{"lineNumber":456,"author":{"gitId":"vigonometry"},"content":"    - Blank parameters will be ignored.","lastModifiedDate":"2023-04-06"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":458,"author":{"gitId":"vigonometry"},"content":"- Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":459,"author":{"gitId":"Bobfree546"},"content":"  - `find-ptn n/Alice` matches any patient with the name containing the string `Alice`.","lastModifiedDate":"2023-03-30"},{"lineNumber":460,"author":{"gitId":"Bobfree546"},"content":"  - `find-ptn h/1` match any patient with the height containing the string `1`, i.e. `1.70` and `0.91` will be matched but `0.99` and `2.00` will not be matched.","lastModifiedDate":"2023-03-30"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":462,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":464,"author":{"gitId":"vigonometry"},"content":"#### Select patient","lastModifiedDate":"2023-03-31"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":466,"author":{"gitId":"vigonometry"},"content":"```sp INDEX```","lastModifiedDate":"2023-04-06"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":468,"author":{"gitId":"vigonometry"},"content":"- To view parameter information click [here](#parameter-information)","lastModifiedDate":"2023-04-06"},{"lineNumber":469,"author":{"gitId":"vigonometry"},"content":"- What it does: This command mimics a mouse click on a patient\u0027s contact card. It shows the information of the patient and filters the doctors\u0027 list to only show assigned doctors.","lastModifiedDate":"2023-04-06"},{"lineNumber":470,"author":{"gitId":"vigonometry"},"content":"- Possible use cases: Find which doctors treated a patient","lastModifiedDate":"2023-04-06"},{"lineNumber":471,"author":{"gitId":"vigonometry"},"content":"- Note to user:","lastModifiedDate":"2023-03-30"},{"lineNumber":472,"author":{"gitId":"vigonometry"},"content":"    - The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2023-03-30"},{"lineNumber":473,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":474,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":475,"author":{"gitId":"vigonometry"},"content":"Selecting patient command only displays the recently queried patients\u0027 information in the Enlarged Contact Card.","lastModifiedDate":"2023-04-08"},{"lineNumber":476,"author":{"gitId":"vigonometry"},"content":"**If no doctors appear in the doctors list**, it is because the patient has not been assigned to any doctor.","lastModifiedDate":"2023-04-09"},{"lineNumber":477,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":478,"author":{"gitId":"vigonometry"},"content":"For more information see: [Selecting doctors or patients through commands](#selecting-doctors-or-patients-through-commands--)","lastModifiedDate":"2023-04-08"},{"lineNumber":479,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":480,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":481,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":482,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":483,"author":{"gitId":"vigonometry"},"content":"#### Listing all patients","lastModifiedDate":"2023-03-31"},{"lineNumber":484,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":485,"author":{"gitId":"vigonometry"},"content":"`list-ptn`","lastModifiedDate":"2023-04-06"},{"lineNumber":486,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":487,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":488,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":489,"author":{"gitId":"vigonometry"},"content":"### Common Commands","lastModifiedDate":"2023-03-31"},{"lineNumber":490,"author":{"gitId":"vigonometry"},"content":"#### Viewing help","lastModifiedDate":"2023-03-31"},{"lineNumber":491,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":492,"author":{"gitId":"vigonometry"},"content":"- Command format: `help`","lastModifiedDate":"2023-03-31"},{"lineNumber":493,"author":{"gitId":"vigonometry"},"content":"- What it does: Shows a message explaining how to access this help page.","lastModifiedDate":"2023-04-06"},{"lineNumber":494,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":495,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"vigonometry"},"content":"#### Exiting the program","lastModifiedDate":"2023-03-31"},{"lineNumber":498,"author":{"gitId":"vigonometry"},"content":"- Command format: `exit`","lastModifiedDate":"2023-03-30"},{"lineNumber":499,"author":{"gitId":"vigonometry"},"content":"- What it does: This command is equivalent to closing the application (exits the program).","lastModifiedDate":"2023-03-30"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"vigonometry"},"content":"#### Clearing all data","lastModifiedDate":"2023-03-31"},{"lineNumber":504,"author":{"gitId":"vigonometry"},"content":"- Command format: `clear`","lastModifiedDate":"2023-03-30"},{"lineNumber":505,"author":{"gitId":"vigonometry"},"content":"- What it does: This command will clear all data in Docedex.","lastModifiedDate":"2023-03-30"},{"lineNumber":506,"author":{"gitId":"vigonometry"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":507,"author":{"gitId":"vigonometry"},"content":"**WARNING**","lastModifiedDate":"2023-04-06"},{"lineNumber":508,"author":{"gitId":"vigonometry"},"content":"  - This command will clear all data in Docedex. This includes all doctors and patients.","lastModifiedDate":"2023-03-30"},{"lineNumber":509,"author":{"gitId":"vigonometry"},"content":"  - This command **cannot be undone**.","lastModifiedDate":"2023-03-30"},{"lineNumber":510,"author":{"gitId":"vigonometry"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":511,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":512,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex data is saved automatically after any command that changes data. There is no need to save manually.","lastModifiedDate":"2023-03-01"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":520,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":522,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex data is saved as a JSON file at this specified path: `[JAR file location]/data/docedex.json`.","lastModifiedDate":"2023-03-01"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":524,"author":{"gitId":"praveenkrishna0512"},"content":"DO NOT modify data directly, as it might result in the malfunction of the application. In the worst case scenario, all your data may be reset. Only modify data directly if you know what you are doing and accept the risks of such actions.","lastModifiedDate":"2023-03-01"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":527,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":528,"author":{"gitId":"praveenkrishna0512"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":529,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":530,"author":{"gitId":"vigonometry"},"content":"## **FAQ**","lastModifiedDate":"2023-04-08"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"vigonometry"},"content":"### Launching Docedex","lastModifiedDate":"2023-03-30"},{"lineNumber":533,"author":{"gitId":"vigonometry"},"content":"**Q**: How can I launch docedex if the clicking on the JAR file does not work?\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":534,"author":{"gitId":"vigonometry"},"content":"**A**: There are two possible methods to launch Docedex.","lastModifiedDate":"2023-03-30"},{"lineNumber":535,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":536,"author":{"gitId":"vigonometry"},"content":"Method 1: For users familiar with the command prompt","lastModifiedDate":"2023-03-30"},{"lineNumber":537,"author":{"gitId":"vigonometry"},"content":"1. Open the command prompt","lastModifiedDate":"2023-03-30"},{"lineNumber":538,"author":{"gitId":"vigonometry"},"content":"2. Navigate to the directory where the JAR file is located using `cd [JAR file location]`","lastModifiedDate":"2023-03-30"},{"lineNumber":539,"author":{"gitId":"vigonometry"},"content":"3. Type `java -jar docedex.jar` and press enter","lastModifiedDate":"2023-03-30"},{"lineNumber":540,"author":{"gitId":"vigonometry"},"content":"4. Docedex should launch","lastModifiedDate":"2023-03-30"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":542,"author":{"gitId":"vigonometry"},"content":"Method 2: For users that wish to create a script to launch Docedex (**Recommended**)","lastModifiedDate":"2023-03-30"},{"lineNumber":543,"author":{"gitId":"vigonometry"},"content":"1. Create a new text file","lastModifiedDate":"2023-03-30"},{"lineNumber":544,"author":{"gitId":"vigonometry"},"content":"2. Copy and paste the following into the text file:","lastModifiedDate":"2023-03-30"},{"lineNumber":545,"author":{"gitId":"vigonometry"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":546,"author":{"gitId":"vigonometry"},"content":"java -jar [JAR file location]/docedex.jar","lastModifiedDate":"2023-03-30"},{"lineNumber":547,"author":{"gitId":"vigonometry"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":548,"author":{"gitId":"vigonometry"},"content":"3. Save the text file as `docedex.bat` (Windows) or `docedex.sh` (MacOS/Linux)","lastModifiedDate":"2023-03-30"},{"lineNumber":549,"author":{"gitId":"vigonometry"},"content":"4. Change the admin settings of the script to allow it to run as a program:","lastModifiedDate":"2023-03-30"},{"lineNumber":550,"author":{"gitId":"vigonometry"},"content":"   1. Windows: Right-click on the script and select `Properties`. Under `General`, check the box that says `Allow this file to run as a program`.","lastModifiedDate":"2023-03-30"},{"lineNumber":551,"author":{"gitId":"vigonometry"},"content":"   2. MacOS/Linux: Open the terminal and navigate to the directory where the script is located. Type `chmod +x [script name]` and press enter. (`chmod +x` changes permissions of the script to allow it to be executed.)","lastModifiedDate":"2023-03-30"},{"lineNumber":552,"author":{"gitId":"vigonometry"},"content":"5. Double-click on the script to launch Docedex","lastModifiedDate":"2023-03-30"},{"lineNumber":553,"author":{"gitId":"vigonometry"},"content":"6. Docedex should launch","lastModifiedDate":"2023-03-30"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":555,"author":{"gitId":"vigonometry"},"content":"If you have any further issues, please raise an issue on our [GitHub page](https://github.com/AY2223S2-CS2103T-F12-1/tp/issues). We will attend to you as soon as we can.","lastModifiedDate":"2023-03-30"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":557,"author":{"gitId":"vigonometry"},"content":"### Checking Java version","lastModifiedDate":"2023-03-30"},{"lineNumber":558,"author":{"gitId":"vigonometry"},"content":"**Q**: How can I check my Java version?\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":559,"author":{"gitId":"vigonometry"},"content":"**A**: Open a command prompt and type `java -version`. If you do not have Java installed, you can download it [here](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html).","lastModifiedDate":"2023-03-30"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":561,"author":{"gitId":"vigonometry"},"content":"For Mac Users you may wish to follow the instructions listed [here](https://nus-cs2103-ay2223s2.github.io/website/admin/programmingLanguages.html)","lastModifiedDate":"2023-03-30"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":563,"author":{"gitId":"vigonometry"},"content":"### Loading Data from another computer","lastModifiedDate":"2023-03-30"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":565,"author":{"gitId":"praveenkrishna0512"},"content":"**Q**: How can I load data from another computer into Docedex installed on another computer?\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":566,"author":{"gitId":"praveenkrishna0512"},"content":"**A**: Delete the `docedex.json` file (stored at `[JAR file location]/data/docedex.json`) from the computer that you wish to use Docedex on. Then, copy over the `docedex.json` file from the computer which you no longer wish to use Docedex on. After which, boot up Docedex to check whether your doctor information is properly loaded into the new computer.","lastModifiedDate":"2023-03-01"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":568,"author":{"gitId":"praveenkrishna0512"},"content":"### Using Docedex","lastModifiedDate":"2023-04-05"},{"lineNumber":569,"author":{"gitId":"praveenkrishna0512"},"content":"**Q**: I entered a command and my doctor/patient list was cleared. What happenned?","lastModifiedDate":"2023-04-05"},{"lineNumber":570,"author":{"gitId":"praveenkrishna0512"},"content":"**A**: Within the [Notes about the GUI](#notes-about-the-gui) section, refer to the","lastModifiedDate":"2023-04-05"},{"lineNumber":571,"author":{"gitId":"praveenkrishna0512"},"content":"subsection titled _\"Selecting doctors or patients through commands\"_ for an explanation of why this occurs.","lastModifiedDate":"2023-04-05"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":573,"author":{"gitId":"vigonometry"},"content":"[Scroll back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Bobfree546":10,"owen-yap":3,"praveenkrishna0512":74,"vigonometry":384,"-":102}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"praveenkrishna0512"},"content":"    content: \"Docedex\";","lastModifiedDate":"2023-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"praveenkrishna0512":1,"-":294}},{"path":"docs/diagrams/AddDoctorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"participant \":AddDoctorCommandParser\" as AddDoctorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"participant \"a:AddDoctorCommand\" as AddDoctorCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"participant \":Doctor\" as Doctor USER_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"[-\u003e LogicManager : execute(\"add-doc args\")","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add-doc args\")","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"create AddDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"AddressBookParser -\u003e AddDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"activate AddDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"AddDoctorCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"deactivate AddDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"AddressBookParser -\u003e AddDoctorCommandParser : parse(\"args\")","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"activate AddDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"create AddDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"AddDoctorCommandParser -\u003e AddDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"activate AddDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"AddDoctorCommand --\u003e AddDoctorCommandParser : a","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"deactivate AddDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"AddDoctorCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"deactivate AddDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"AddDoctorCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"destroy AddDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"LogicManager -\u003e AddDoctorCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"activate AddDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"create Doctor","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"AddDoctorCommand -\u003e Doctor: new","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"activate Doctor","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"Doctor --\u003e AddDoctorCommand : doctor","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"deactivate Doctor","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"AddDoctorCommand -\u003e Model : addDoctor(doctor)","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"Model --\u003e AddDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"AddDoctorCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"CommandResult --\u003e AddDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"AddDoctorCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"deactivate AddDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":77}},{"path":"docs/diagrams/AddPatientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"participant \":AddPatientCommandParser\" as AddPatientCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"participant \"a:AddPatientCommand\" as AddPatientCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"participant \":Patient\" as Patient USER_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"[-\u003e LogicManager : execute(\"add-ptn args\")","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add-ptn args\")","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"create AddPatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"AddressBookParser -\u003e AddPatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"activate AddPatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"AddPatientCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"deactivate AddPatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"AddressBookParser -\u003e AddPatientCommandParser : parse(\"args\")","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"activate AddPatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"create AddPatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"AddPatientCommandParser -\u003e AddPatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"activate AddPatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"AddPatientCommand --\u003e AddPatientCommandParser : a","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"deactivate AddPatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"AddPatientCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"deactivate AddPatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"AddPatientCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"destroy AddPatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"LogicManager -\u003e AddPatientCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"activate AddPatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"create Patient","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"AddPatientCommand -\u003e Patient : new","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"activate Patient","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"Patient --\u003e AddPatientCommand : patient","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"deactivate Patient","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"AddPatientCommand -\u003e Model : addPatient(patient)","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"Model --\u003e AddPatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"AddPatientCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"CommandResult --\u003e AddPatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"AddPatientCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"deactivate AddPatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":78}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"praveenkrishna0512":1,"-":38}},{"path":"docs/diagrams/ArchitectureSequenceDiagramUpdated.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"!include style.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"user -[USER_COLOR]\u003e ui : \"del-doc 1\"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"activate ui UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"del-doc 1\")","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteDoctor(d)","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"deactivate model","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"deactivate storage","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"deactivate storage","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"deactivate logic","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"deactivate ui","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"@enduml","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"vigonometry":39}},{"path":"docs/diagrams/ContactDisplayClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"!include style.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"left to right direction","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"skinparam dpi 250","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"package ContactDisplay \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"Class ContactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"package EnlargedInfoCard \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"Class \"{abstract}\\nEnlargedInfoCard\" as EnlargedInfoCard","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"Class EnlargedDoctorInfoCard","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"Class EnlargedPatientInfoCard","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"package Panels \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"Class DoctorCard","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"Class DoctorListPanel","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"Class PatientCard","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"Class PatientListPanel","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"Class \"{abstract}\\nContactCard\" as ContactCard","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"ContactDisplay --\u003e Logic","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"ContactDisplay *-up-\u003e DoctorListPanel","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"ContactDisplay *-up-\u003e PatientListPanel","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"ContactDisplay *--\u003e EnlargedDoctorInfoCard","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"ContactDisplay *-up-\u003e EnlargedPatientInfoCard","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"EnlargedDoctorInfoCard -right-|\u003e EnlargedInfoCard","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"EnlargedPatientInfoCard ---|\u003e EnlargedInfoCard","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"DoctorCard -up-|\u003e ContactCard","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"DoctorCard --\u003e ContactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"PatientCard -up-|\u003e ContactCard","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"PatientCard --\u003e ContactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"DoctorListPanel *-up DoctorCard","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"PatientListPanel *-up PatientCard","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"ContactCard ..\u003e Model","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"EnlargedInfoCard .up.\u003e Model","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"praveenkrishna0512":54}},{"path":"docs/diagrams/ContactDisplaySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"!include style.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"skinparam dpi 250","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"box Ui UI_COLOR_T0","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \":MainWindow\" as mainWindow UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \":ContactDisplay\" as contactDisplay UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \":DoctorListPanel\" as doctorListPanel UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \":EnlargedDoctorInfoCard\" as enlargedDoctorInfoCard UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \"enlargedInfoCardPlaceholder:StackPane\" as enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"end box","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \":LogicManager\" as logicManager LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"end box","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"user -[USER_COLOR]\u003e mainWindow : \"sd 1\"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"activate mainWindow UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"mainWindow -[UI_COLOR]\u003e contactDisplay : setFeedbackToUser(commandResult)","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"activate contactDisplay UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay -[UI_COLOR]\u003e logicManager : updateFilteredPatientListBasedOnDoctor(selectedDoctor)","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"activate logicManager LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"logicManager --[LOGIC_COLOR]\u003e contactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate logicManager LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay -[UI_COLOR]\u003e doctorListPanel : selectDoctor(selectedDoctor)","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"activate doctorListPanel UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"doctorListPanel --[UI_COLOR]\u003e contactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate doctorListPanel UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay -[UI_COLOR]\u003e enlargedDoctorInfoCard : updateSelectedDoctor(doctor)","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"activate enlargedDoctorInfoCard UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"enlargedDoctorInfoCard --[UI_COLOR]\u003e contactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate enlargedDoctorInfoCard UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay -[UI_COLOR]\u003e enlargedPersonInfoCardPlaceholder : clear children nodes","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"activate enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"enlargedPersonInfoCardPlaceholder --[UI_COLOR]\u003e contactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay -[UI_COLOR]\u003e enlargedPersonInfoCardPlaceholder : add EnlargedDoctorInfoCard as child node","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"activate enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"enlargedPersonInfoCardPlaceholder --[UI_COLOR]\u003e contactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay --[UI_COLOR]\u003e mainWindow","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate contactDisplay UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"mainWindow --[UI_COLOR]\u003e user","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate mainWindow UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"praveenkrishna0512":61}},{"path":"docs/diagrams/DeleteDoctorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"participant \":DeleteDoctorCommandParser\" as DeleteDoctorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"participant \"d:DeleteDoctorCommand\" as DeleteDoctorCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"[-\u003e LogicManager : execute(\"del-doc 1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"del-doc 1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"create DeleteDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"AddressBookParser -\u003e DeleteDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"activate DeleteDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"DeleteDoctorCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"deactivate DeleteDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"AddressBookParser -\u003e DeleteDoctorCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"activate DeleteDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"create DeleteDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"DeleteDoctorCommandParser -\u003e DeleteDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"activate DeleteDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"DeleteDoctorCommand --\u003e DeleteDoctorCommandParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"deactivate DeleteDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"DeleteDoctorCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"deactivate DeleteDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"DeleteDoctorCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"destroy DeleteDoctorCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"LogicManager -\u003e DeleteDoctorCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"activate DeleteDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"DeleteDoctorCommand -\u003e Model : deleteDoctor(1)","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"Model --\u003e DeleteDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"DeleteDoctorCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"CommandResult --\u003e DeleteDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"DeleteDoctorCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"deactivate DeleteDoctorCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":69}},{"path":"docs/diagrams/DeletePatientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"participant \":DeletePatientCommandParser\" as DeletePatientCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"participant \"d:DeletePatientCommand\" as DeletePatientCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"[-\u003e LogicManager : execute(\"del-ptn 1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"del-ptn 1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"create DeletePatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"AddressBookParser -\u003e DeletePatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"activate DeletePatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"DeletePatientCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"deactivate DeletePatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"AddressBookParser -\u003e DeletePatientCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"activate DeletePatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"create DeletePatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"DeletePatientCommandParser -\u003e DeletePatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"activate DeletePatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"DeletePatientCommand --\u003e DeletePatientCommandParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"deactivate DeletePatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"DeletePatientCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"deactivate DeletePatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"DeletePatientCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"destroy DeletePatientCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"LogicManager -\u003e DeletePatientCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"activate DeletePatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"DeletePatientCommand -\u003e Model : deletePatient(1)","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"Model --\u003e DeletePatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"DeletePatientCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"CommandResult --\u003e DeletePatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"DeletePatientCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"deactivate DeletePatientCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":69}},{"path":"docs/diagrams/EditDoctorActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"start","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":":User executes edit-doc command;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"if () then ([correct format])","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"    :Doctor is edited;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"    :Save Doctor to","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"    filteredDoctorList;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"else ([else])","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    :System throws","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"    ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"endif","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"stop","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"owen-yap":16}},{"path":"docs/diagrams/EditDoctorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"participant \":EditDoctorCommandParser\" as EditDoctorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"participant \":EditDoctorDescriptor\" as EditDoctorDescriptor LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"participant \"d:EditDoctorCommand\" as EditDoctorCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"[-\u003e LogicManager : execute(\"edit-doc 1 n/Simon\")","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit-doc 1 n/Simon\")","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"create EditDoctorCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"AddressBookParser -\u003e EditDoctorCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"activate EditDoctorCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"EditDoctorCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"deactivate EditDoctorCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"AddressBookParser -\u003e EditDoctorCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"activate EditDoctorCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"create EditDoctorDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"EditDoctorCommandParser -\u003e EditDoctorDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"activate EditDoctorDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"EditDoctorDescriptor --\u003e EditDoctorCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"deactivate EditDoctorDescriptor","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"create EditDoctorCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"EditDoctorCommandParser -\u003e EditDoctorCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"activate EditDoctorCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"EditDoctorCommand --\u003e EditDoctorCommandParser : d","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"deactivate EditDoctorCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"EditDoctorCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"deactivate EditDoctorCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"EditDoctorCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"destroy EditDoctorCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"LogicManager -\u003e EditDoctorCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"activate EditDoctorCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"EditDoctorCommand -\u003e Model : editDoctor(1)","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"Model --\u003e EditDoctorCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"EditDoctorCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"CommandResult --\u003e EditDoctorCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"EditDoctorCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"deactivate EditDoctorCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"owen-yap":77}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"note right of XYZCommand: XYZCommand \u003d AddDoctorCommand, \\nFindDoctorCommand, etc","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vigonometry":1,"-":45}},{"path":"docs/diagrams/PersonPackageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"@startuml","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"!include style.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"Package Person {","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"    Class Person","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"    Class Email","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"    Class Name","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"    Class Phone","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"    Class Tag","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"    Person *--\u003e \"1\" Email","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    Person *--\u003e \"1\" Name","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"    Person *--\u003e \"1\" Phone","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"        Package Doctor {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"            Class Doctor","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"            Class Specialty","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"            Class Yoe","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"            Doctor -up---|\u003e Person.Person","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"            Doctor *--\u003e \"1\" Specialty","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"            Doctor *--\u003e \"1\" Yoe","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"        Package Patient {","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"            Class Diagnosis","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"            Class Height","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"            Class Remark","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"            Class Status","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"            Class Weight","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"            Patient -up---|\u003e Person.Person","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"            Patient *--\u003e \"1\" Diagnosis","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"            Patient *--\u003e \"1\" Height","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"            Patient *--\u003e \"1\" Status","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"            Patient *--\u003e \"1\" Weight","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"            Patient *--\u003e \"0..1\" Remark","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"vigonometry":45}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"top to bottom direction","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"skinparam dpi 200","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"Class JsonAdaptedDoctor","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"Class JsonAdaptedPatient","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedDoctor","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPatient","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"JsonAdaptedDoctor ..|\u003e JsonAdaptedPerson","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"JsonAdaptedDoctor .right.\u003e JsonAdaptedPatient","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"JsonAdaptedPatient ..|\u003e JsonAdaptedPerson","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"Model \u003c.. JsonSerializableAddressBook","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"praveenkrishna0512":15,"-":42}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"Class ContactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"MainWindow *-down-\u003e \"1\" ContactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"ContactDisplay --|\u003e UiPart","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"ContactDisplay ..\u003e Model","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"MainWindow -right-\u003e Logic","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"ContactDisplay -up-\u003e Logic","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"ContactDisplay -[hidden]left- HelpWindow","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"praveenkrishna0512":7,"-":50}},{"path":"docs/diagrams/UpdatedModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"@startuml","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"!include style.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"Package Model {","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"    Class \"ModelManager\" as ModelManager","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"    Class \"AddressBook\" as AddressBook","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"    Class \"UserPrefs\" as UserPrefs","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"    Class \"UniqueDoctorList\" as UniqueDoctorList","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    Class \"UniquePatientList\" as UniquePatientList","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"Package Person {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    Package Doctor {","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"        Class \"Doctor\" as Doctor","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"    Package Patient {","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"        Class \"Patient\" as Patient","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    Class \"Person\" as Person","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    Doctor.Doctor -down-|\u003ePerson","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    Patient.Patient -down-|\u003e Person","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    UniqueDoctorList ----\u003e \"~* all\" Person.Doctor.Doctor","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    UniquePatientList -----\u003e \"~* all\" Person.Patient.Patient","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"    AddressBook *---\u003e UniqueDoctorList","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    AddressBook *---\u003e UniquePatientList","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"    AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    ModelManager .up.|\u003e Model","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    ModelManager -\u003e \"1\" AddressBook","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"    UserPrefs \"1\" \u003c- ModelManager","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"    ModelManager ---\u003e \"~* filteredDoctors\" Person.Doctor.Doctor","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    ModelManager ---\u003e \"~* filteredPatients\" Person.Patient.Patient","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"vigonometry":50}},{"path":"docs/diagrams/UserClickDoctorCardSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"skinparam dpi 200","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"box Ui UI_COLOR_T0","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \":DoctorListViewCell\" as doctorListViewCell UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \":ContactDisplay\" as contactDisplay UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \":EnlargedDoctorInfoCard\" as enlargedDoctorInfoCard UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"Participant \"enlargedInfoCardPlaceholder:StackPane\" as enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"user -[USER_COLOR]\u003e doctorListViewCell : MOUSE_CLICKED","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"activate doctorListViewCell UI_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"doctorListViewCell -[UI_COLOR]\u003e contactDisplay : setFeedbackUponSelectingDoctor(doctor)","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"activate contactDisplay UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay -[UI_COLOR]\u003e enlargedDoctorInfoCard : updateSelectedDoctor(doctor)","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"activate enlargedDoctorInfoCard UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"enlargedDoctorInfoCard --[UI_COLOR]\u003e contactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate enlargedDoctorInfoCard UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay -[UI_COLOR]\u003e enlargedPersonInfoCardPlaceholder : clear children nodes","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"activate enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"enlargedPersonInfoCardPlaceholder --[UI_COLOR]\u003e contactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay -[UI_COLOR]\u003e enlargedPersonInfoCardPlaceholder : add EnlargedDoctorInfoCard as child node","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"activate enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"enlargedPersonInfoCardPlaceholder --[UI_COLOR]\u003e contactDisplay","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate enlargedPersonInfoCardPlaceholder UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"contactDisplay --[UI_COLOR]\u003e doctorListViewCell : setFeedbackUponSelectingDoctor(doctor)","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate contactDisplay UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"doctorListViewCell--[UI_COLOR]\u003e user","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"deactivate doctorListViewCell","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"praveenkrishna0512":42}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"!define UI_COLOR_T0 #AEDBA2","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"praveenkrishna0512":1,"-":75}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"title: Welcome to Docedex","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-F12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-F12-1/tp/actions)","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-F12-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-F12-1/tp/)","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"![NewUi](images/NewUi.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"***Taking control of hospital administrative management is just a few keystrokes away!***","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex is a **desktop application** built for **medical administrative assistants**","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"to manage doctors and patients within clinics.","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"Here\u0027s a **quick snapshot** of how Docedex can help you","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"streamline your hospital management processes.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"- Store and edit information about your patients and doctors","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"- Track the status of your patients and doctors","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"- Assign patients to doctors upon triaging","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"On top of these functionalities, we believe that patient management must be **efficient**.","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"Therefore, Docedex is **optimized for** use via a **Command Line Interface (CLI)**","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"while still having the benefits of a **Graphical User Interface (GUI).**","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"If you type fast, Docedex can get your hospital management tasks done faster","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"than current GUI apps in the industry.","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"* If you are interested in using Docedex, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"* If you are interested about developing Docedex, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"* Libraries used: [JavaFX](https://openjfx.io/),","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"[Jackson](https://github.com/FasterXML/jackson),","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"[JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"praveenkrishna0512":21,"vigonometry":3,"-":12}},{"path":"docs/team/bobfree546.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"title: Amos Hung\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"### Docédex","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"Docédex is a **desktop application for managing doctors and patients within hospitals**, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you type fast, Docédex can get your patient management tasks done faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"* Table of Contents","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"{:toc}","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"#### Code contributed:","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"* View [RepoSense](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbobfree546\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"#### Enhancements implemented:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"#### Contributions to the User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"#### Contributions to the Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"#### Contributions to team-based tasks:","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"#### Review/mentoring contributions:","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"#### Other contributions:","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"* To be added soon","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Bobfree546":42}},{"path":"docs/team/owen-yap.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"layout: page","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"title: Owen Yap\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"### Project: Docedex","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"Docedex is a **desktop application** built for **medical administrative assistants**","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"to manage doctors and patients within clinics.","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"Here\u0027s a **quick snapshot** of how Docedex can help you","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"streamline your hospital management processes.","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"- Store and edit information about your patients and doctors","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"- Track the status of your patients and doctors","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"- Assign patients to doctors upon triaging","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"Docedex is a **desktop application** built for **medical administrative assistants**","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"to manage doctors and patients within clinics.","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"#### Code contributed","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"My code contributions can be visualised through [RepoSense](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dF12-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtotalCommits%20dsc\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17).","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"Here are my contributions to the project.","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"**Features:**","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"- Functional code: Implement patient and doctor models","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"  - What it does: Creates the patient and doctor models which extend AB3 person class","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"  - Justification: Each command relies on the doctor / patient model to be implemented first.","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"- New Feature: `edit-doc / edit-ptn` - Edits a doctor / patient in Docedex","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"  - What it does: Allows the user to make changes to the doctor / patient","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"  - Justification: User may need to change the doctor\u0027s details or modify the patient\u0027s status according to the hospital\u0027s workflow.","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"- New Feature: `sd` - Selects a doctor from the doctor\u0027s list through the CLI","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"  - What it does: Allows the user to select a doctor to view their details through the CLI","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"  - Justification: As Docedex is optimized for fast typers, we need a convenient way for users to view doctor / patient details without having to touch their mouse to click on the specific doctor / patient card.","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"  - Highlights: Use of Java\u0027s `Optional` to pass the doctor object to the GUI to be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"- New Feature: Loads mock data into file if data folder is not found","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"  - What it does: Loads Docedex with seeded data.","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"  - Justification: New users who first start the application are probably still adjusting to the application. Seeded data allows users to have something to perform commands on. This helps the users orientate themselves quickly to the application.","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"Here are my contributions to the UG.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"- Adding a command summary for quick reference by the users.","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"- Added descriptions for editing a doctor and editing a patient","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"Here are my contributions to the DG","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"- Sections","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"  - (to be added)","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"- UML diagrams","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"  - (to be added)","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"Here are my contributions to team-based tasks","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"- Brainstorming of user stories and use cases","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"- Envisioning product design (ie. problem statement, target audience)","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"- Project management: Created, assigned and closed issues for milestones 1.2, 1.2b, 1.3","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"#### Review/mentoring contributions","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"Here are the PRs that I have reviewed (with non-trivial comments).","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"- [#80](https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/80)","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"- [#253](https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/253#pullrequestreview-1375393252)","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"Here are some ways through which I have aided my team members","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"- (to be added)","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"owen-yap":69}},{"path":"docs/team/praveenkrishna0512.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"title: Praveen\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"### Docedex","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"Docedex is a **desktop application** built for **medical administrative assistants**","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"to manage doctors and patients within clinics.","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"Here\u0027s a **quick snapshot** of how Docedex can help you","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"streamline your hospital management processes.","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"- Store and edit information about your patients and doctors","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"- Track the status of your patients and doctors","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"- Assign patients to doctors upon triaging","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"#### Code contributed","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"My code contributions can be visualised through [RepoSense](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dpraveenkrishna0512\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other).","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"Here is a summary of the enhancements I implemented.","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"User Interface","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"  - Modify User Interface to display information of doctors and patients","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"Storage","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"  - Enable proper saving and loading of Doctor and Patient objects","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"Here are my contributions to the UG","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"- Implementing the template of the UG","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"- Adding a section on Navigating the GUI","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"- Adding description for **_Saving the data file_** and **_Editing the data file_**","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"Here are my contributions to the DG","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"Sections","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"  - Aided in crafting and formatting of [user stories](../DeveloperGuide.md#user-stories)","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"  - Aided in crafting and formatting of [use cases](../DeveloperGuide.md#use-cases)","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"  - Detailed the implementation of the Enlarged Info Card","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"under [GUI Features](../DeveloperGuide.md#gui-features)","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"UML diagrams","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"  - Sequence diagrams under [GUI Features](../DeveloperGuide.md#gui-features)","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"Here are my contributions to team-based tasks","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"Pre-development","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"- Brainstormed user stories and use cases","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"- Envisioned the design of the product design","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"Development","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"- Updated the team on relevant deadlines and critical information, when necessary","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"- Led project management for milestone v1.3","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"- Captured bugs within the application and alerting team members","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"- Reviewed pull requests from team members","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"- Provided links through Telegram to important information related to","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"project development.","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"#### Review/mentoring contributions","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"Here are some of the PRs that I have reviewed","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/228","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/180","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/163","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/141","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/127","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/97","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/76","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/48","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/46","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"- https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/17","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"For a full view of all PRs I have reviewed, please head to our","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"[Pull Requests](https://github.com/AY2223S2-CS2103T-F12-1/tp/pulls)","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"page within our GitHub repository.","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"praveenkrishna0512":75,"-":12}},{"path":"docs/team/vigonometry.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"title: Vigneshwar Hariharan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"### Docédex","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"{:.no_toc}","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"Docedex is a **desktop application** built for **medical administrative assistants**","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"to manage doctors and patients within clinics.","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"Here\u0027s a **quick snapshot** of how Docedex can help you","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"streamline your hospital management processes.","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"- Store and edit information about your patients and doctors","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"- Track the status of your patients and doctors","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"- Assign patients to doctors upon triaging","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"* Table of Contents","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"  {:toc}","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"- Created various Command classes (`AddDoctorCommand`, `AddPatientCommand`, `DeleteDoctorCommand`, `DeletePatientCommand`, `SelectPatientCommand`) and associated Parser classes.","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"- Updated Command handlers in ParserUtil","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"- Created a LightTheme for Docedex Users to be used in future ThemeSelector","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"- Created various testing classes to improve code coverage of commands to 67% (including Exceptions).","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"#### Code contributed","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"My code contributions can be visualised through [RepoSense](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dvigonometry\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dvigonometry\u0026tabRepo\u003dAY2223S2-CS2103T-F12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse).","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"#### Enhancements implemented","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"- Created various Command classes (`AddDoctorCommand`, `AddPatientCommand`, `DeleteDoctorCommand`, `DeletePatientCommand`, `SelectPatientCommand`) and associated Parser classes.","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"- Updated Command handlers in ParserUtil","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"- Created a LightTheme for Docedex Users to be used in future ThemeSelector","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"Here are my contributions to the UG.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"- Sections","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"  - Created the template for [User Guide](../UserGuide.md)","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"  - Added parameters section in the [glossary](../UserGuide.md#glossary) for ease of reference","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"  - Added section on [features provided by Docedex](../UserGuide.md#features) and associated sub-sections","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"  - Aided in development of [command summary](../UserGuide.md#command-summary).","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"  - Created a [tutorial section](../UserGuide.md#docedex-tutorial--for-new-users-) for new users to get started with Docedex","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"  - Created a [FAQ section](../UserGuide.md#faq) to address common user queries","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"  - Created a [quick start](../UserGuide.md#quick-start) section to help users get started with Docedex","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"Here are my contributions to the DG","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"- Sections","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"  - Aided in crafting and formatting of [user stories](../DeveloperGuide.md#user-stories)","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"  - Aided in crafting and formatting of [use cases](../DeveloperGuide.md#use-cases)","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"    - UC1: Add a doctor, UC2: Delete a doctor","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"  - Detailed implementation details of [`AddDoctorCommand`](../DeveloperGuide.md#add-doctor-feature), [`AddPatientCommand`](../DeveloperGuide.md#add-patient-feature), [`DeleteDoctorComand`](../DeveloperGuide.md#delete-doctor-feature) and [`DeletePatientCommand`](../DeveloperGuide.md#delete-patient-feature).","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"  - Detailed implementation details of [Logic](../DeveloperGuide.md#logic-component) and [Model](../DeveloperGuide.md#model-component) components.","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"- UML diagrams","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    - Class Diagrams: Created class diagrams for Logic and Model classes","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"    - Sequence Diagrams: Created sequence diagrams for `AddDoctorCommand`, `AddPatientCommand`, `DeleteDoctorComand`, `DeletePatientCommand`","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"Here are my contributions to team-based tasks","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"- Pre-development","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"  - Brainstorming of user stories and use cases","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"  - Envisioning product design (ie. problem statement, target audience)","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"  - Setting up of project repository","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"  - Setting up of project website","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"- Development","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"  - Updated team on relevant deadlines and critical information whenever necessary","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"  - Led project management and bug triaging for v1.4","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"  - Reviewed pull requests from other team members","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"  - Provided links to relevant development resources through communication channels","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"  - Co-led code-cleanup in v1.4 through PR reviews and discussions","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"  - Improved test coverage by 7%","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"- Meeting related:","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"  - Creation of meeting agenda","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"  - Scribing of meetings","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"#### Review/mentoring contributions","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"Here are some of the PRs that I have reviewed","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"- Feat/developer guide v0.2 [(#14)](https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/14)","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"- Fix/About Us v0.1 [(#15)](https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/15)","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"- Add Find-Doc Command [(#55)](https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/55)","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"- Edit Command [(#56)](https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/56)","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"- Enable proper storing, loading and display of doctors [(#80)](https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/80)","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"- Add tests for edit-doc parser and command [(#90)](https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/90)","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"- Change example in add-doc command [(#93)](https://github.com/AY2223S2-CS2103T-F12-1/tp/pull/93)","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"For a more comprehensive view of all PRs I have reviewed, please head to our","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"[Pull Requests](https://github.com/AY2223S2-CS2103T-F12-1/tp/pulls)","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"page within our GitHub repository.","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"vigonometry":94}},{"path":"docs/templates/DeveloperGuideFeature.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"### XYZ Features","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"### XYZ Doctor Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"### What it does","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"_Insert what code does_","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"Example Use: `xyz-doc ...`","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"### Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"Upon entry of the xyz command, an `XYZCommand` class is created. The `XYZCommand` class extends the abstract `Command` class and implements the `execute()` method. Upon execution of this method, a `XYZ` object is _insert functional details_ to the model’s list of doctors...","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"Given below is an example usage scenario of how the add xyz command behaves at each step.","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"Step 1. User launches the application","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"Step 2. User executes `xyz-doc` to save a doctor.","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"Step 3. The doctor is....","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"The following sequence diagram illustrates how the add doctor operation works:","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"vigonometry":25}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"praveenkrishna0512"},"content":"Simply add the following to [`seedu.address.ui.DoctorCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"praveenkrishna0512":1,"-":400}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"#Wed Mar 29 18:33:43 SGT 2023","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-7.5-bin.zip","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owen-yap":2,"-":4}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 3, true);","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Docedex ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"        ReadOnlyAddressBook initialData \u003d new AddressBook();","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"            if (addressBookOptional.isPresent()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"                initialData \u003d addressBookOptional.get();","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"                logger.info(\"Data file not found. Will be starting with\"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"                        + \" an empty doctor and patient list\");","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with\"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"                    + \" an empty doctor and patient list\");","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with\"","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"                    + \" an empty doctor and patient list\");","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with\"","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"praveenkrishna0512"},"content":"                    + \"an empty doctor and patient list\");","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"praveenkrishna0512"},"content":"        logger.info(\"Starting Docedex \" + MainApp.VERSION);","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"praveenkrishna0512"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Docedex ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":16,"-":169}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String LOG_FILE \u003d \"docedex.log\";","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX \u003d \"The doctor index provided is invalid\";","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"    public static final String MESSAGE_DOCTORS_LISTED_OVERVIEW \u003d \"%1$d doctor(s) listed!\";","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d patient(s) listed!\";","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"owen-yap":1,"vigonometry":3,"-":12}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"     * Returns true if the {@code sentence} contains the {@code substring}.","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"     *   Ignores case, whitespaces are matched","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"AC\") \u003d\u003d false","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"CD\") \u003d\u003d false //whitespace","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"Bobfree546"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"     * @param substring cannot be null","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Bobfree546"},"content":"    public static boolean containsSubstringIgnoreCase(String sentence, String substring) {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(substring);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"        return sentence.toLowerCase().contains(substring.toLowerCase());","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Bobfree546":20,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    /** Returns an unmodifiable view of the filtered list of doctors */","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the filter of the filtered doctor list in {@code Model}","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"     * to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the filter of the filtered patient list in {@code Model}","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"     * to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates filtered doctor list in {@code Model}","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"     * to contain doctors associated with the {@code Patient} supplied.","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"    void updateFilteredDoctorListBasedOnPatient(Patient patient);","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates filtered patient list in {@code Model}","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"     * to contain patients associated with the {@code Doctor} supplied.","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"    void updateFilteredPatientListBasedOnDoctor(Doctor doctor);","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"owen-yap":4,"praveenkrishna0512":31,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.doctor.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.doctor.DoctorFilter;","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.PatientFilter;","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        return model.getFilteredDoctorList();","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"        model.updateFilteredDoctorList(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateFilteredPatientListBasedOnDoctor(Doctor doctor) {","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"        PatientFilter patientContainsDoctor \u003d","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"                new PatientFilter(doctor);","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"        Predicate\u003cPatient\u003e patientsOfDoctorPredicate \u003d","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"                new PatientContainsKeywordsPredicate(patientContainsDoctor);","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"        this.updateFilteredPatientList(patientsOfDoctorPredicate);","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateFilteredDoctorListBasedOnPatient(Patient patient) {","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"        DoctorFilter doctorContainsPatient \u003d","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"                new DoctorFilter(patient);","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        Predicate\u003cDoctor\u003e doctorsOfPatientPredicate \u003d","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"                new DoctorContainsKeywordsPredicate(doctorContainsPatient);","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"        this.updateFilteredDoctorList(doctorsOfPatientPredicate);","lastModifiedDate":"2023-04-05"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"owen-yap":6,"praveenkrishna0512":46,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":" * Adds a doctor to the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"public class AddDoctorCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    public static final String COMMAND_WORD \u003d \"add-doc\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"ad\";","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"            + \": Adds a doctor to the address book. \"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_SPECIALTY + \"SPECIALTY \"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_YOE + \"YEARS OF EXPERIENCE \"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_SPECIALTY + \"Cardiology \"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_YOE + \"5 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_TAG + \"surgeon\";","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"New doctor added: %1$s\";","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"This doctor already exists in the address book\";","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    private final Doctor toAdd;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"     * Creates an AddDoctorCommand to add the specified {@code Doctor}","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    public AddDoctorCommand(Doctor doctor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        toAdd \u003d doctor;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        if (model.hasDoctor(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        model.addDoctor(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"                toAdd);","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageDuplicateDoctor() {","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_DUPLICATE_DOCTOR;","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"                || (other instanceof AddDoctorCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 toAdd.equals(((AddDoctorCommand) other).toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"owen-yap":6,"vigonometry":76,"praveenkrishna0512":3}},{"path":"src/main/java/seedu/address/logic/commands/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":" * Adds a patient to the address book.","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"public class AddPatientCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    public static final String COMMAND_WORD \u003d \"add-ptn\";","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"ap\";","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"            + \": Adds a patient to the address book.\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_HEIGHT + \"HEIGHT \"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_WEIGHT + \"WEIGHT \"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_DIAGNOSIS + \"DIAGNOSIS \"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_EMAIL + \"jdoe@gmail.com \"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_HEIGHT + \"1.85 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_WEIGHT + \"70.5 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_DIAGNOSIS + \"Fever \"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_STATUS + \"Outpatient \"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_REMARK + \"No known allergies \"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"            + PREFIX_TAG + \"pendingReview\";","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the address book\";","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    private final Patient toAdd;","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"     * Creates an AddPatientCommand to add the specified {@code Patient}","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageDuplicatePatient() {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_DUPLICATE_PATIENT;","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"        if (model.hasPatient(toAdd)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"        model.addPatient(toAdd);","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"                toAdd);","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"                || (other instanceof AddPatientCommand // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 toAdd.equals(((AddPatientCommand) other).toAdd));","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"owen-yap":2,"vigonometry":90,"praveenkrishna0512":3}},{"path":"src/main/java/seedu/address/logic/commands/AssignPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":" * Assigns a patient to a doctor in the address book.","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"public class AssignPatientCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"    public static final String COMMAND_WORD \u003d \"assign-ptn\";","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"asn\";","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"            + \": Assigns patient identified by the patient index number used in the displayed patients list \"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"            + \"with the doctor identified by the doctor index number used in the displayed doctor list.\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"            + PREFIX_PATIENT + \"PATIENT_INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"            + PREFIX_DOCTOR + \"DOCTOR_INDEX (must be a positive integer) \";","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_ASSIGN_PATIENT_SUCCESS \u003d \"Assigned Patient %1s to Doctor %2s.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_PATIENT_ALREADY_ASSIGNED \u003d \"Patient %1s is already assigned to Doctor %2s.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"    private final Index patientIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"    private final Index doctorIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"     * @param patientIndex of the patient in the filtered patient list to assign","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"     * @param doctorIndex of the doctor in the filtered doctor list to assign to","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"     **/","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"    public AssignPatientCommand(Index patientIndex, Index doctorIndex) {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"        this.patientIndex \u003d patientIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"        this.doctorIndex \u003d doctorIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    //TODO: Implement tests that invoke this method","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_ASSIGN_PATIENT_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"        List\u003cDoctor\u003e lastShownDoctorList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"        List\u003cPatient\u003e lastShownPatientList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"        if (patientIndex.getZeroBased() \u003e\u003d lastShownPatientList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"        if (doctorIndex.getZeroBased() \u003e\u003d lastShownDoctorList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"        Patient patientToAssign \u003d lastShownPatientList.get(patientIndex.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"        Doctor doctorToAssign \u003d lastShownDoctorList.get(doctorIndex.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Bobfree546"},"content":"        Doctor doctorWithAssign \u003d createDoctorWithAssign(doctorToAssign, patientToAssign);","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"        Patient patientWithAssign \u003d createPatientWithAssign(doctorToAssign, patientToAssign);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Bobfree546"},"content":"        model.setDoctor(doctorToAssign, doctorWithAssign);","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"        model.setPatient(patientToAssign, patientWithAssign);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Bobfree546"},"content":"        return new CommandResult(String.format(MESSAGE_ASSIGN_PATIENT_SUCCESS,","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"                patientToAssign.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"                doctorToAssign.getName().getValue()), patientWithAssign);","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"Bobfree546"},"content":"    private static Doctor createDoctorWithAssign(Doctor doctorToAssign, Patient patientToAssign)","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"Bobfree546"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"Bobfree546"},"content":"        assert doctorToAssign !\u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"Bobfree546"},"content":"        assert patientToAssign !\u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cPatient\u003e patientsSet \u003d doctorToAssign.getPatients();","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"Bobfree546"},"content":"        if (patientsSet.contains(patientToAssign)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"Bobfree546"},"content":"            throw new CommandException(String.format(MESSAGE_PATIENT_ALREADY_ASSIGNED,","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"                    patientToAssign.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"                    doctorToAssign.getName().getValue()));","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"Bobfree546"},"content":"        patientsSet.add(patientToAssign);","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Bobfree546"},"content":"        return new Doctor(doctorToAssign.getName(),","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"Bobfree546"},"content":"                doctorToAssign.getPhone(),","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"Bobfree546"},"content":"                doctorToAssign.getEmail(),","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"Bobfree546"},"content":"                doctorToAssign.getSpecialty(),","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"Bobfree546"},"content":"                doctorToAssign.getYoe(),","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"Bobfree546"},"content":"                doctorToAssign.getTags(),","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"Bobfree546"},"content":"                patientsSet);","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"    private static Patient createPatientWithAssign(Doctor doctorToAssign, Patient patientToAssign)","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"        assert doctorToAssign !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"        assert patientToAssign !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"        Set\u003cDoctor\u003e doctorsSet \u003d patientToAssign.getDoctors();","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        if (doctorsSet.contains(doctorToAssign)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new CommandException(String.format(MESSAGE_PATIENT_ALREADY_ASSIGNED,","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"                    patientToAssign.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"                    doctorToAssign.getName().getValue()));","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorsSet.add(doctorToAssign);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Patient(patientToAssign.getName(),","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"                patientToAssign.getPhone(),","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"                patientToAssign.getEmail(),","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"                patientToAssign.getHeight(),","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"                patientToAssign.getWeight(),","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"                patientToAssign.getDiagnosis(),","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"                patientToAssign.getStatus(),","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"                patientToAssign.getRemark(),","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"                patientToAssign.getTags(),","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"                doctorsSet);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"Bobfree546"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"Bobfree546"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"Bobfree546"},"content":"                || (other instanceof AssignPatientCommand // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 patientIndex.equals(((AssignPatientCommand) other).patientIndex)","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 doctorIndex.equals(((AssignPatientCommand) other).doctorIndex)); // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":91,"owen-yap":2,"vigonometry":19,"praveenkrishna0512":28}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"public class ClearCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears all entries from the address book.\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vigonometry":11,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vigonometry":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/CommandInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"interface CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"    static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"        return \"No usage found\";","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"    static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"        return \"No success message found\";","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"vigonometry":13}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    /** Feedback to be shown to the user through CLI. */","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    private String cliFeedbackToUser \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    private boolean shouldShowHelp \u003d false;","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    private boolean shouldExit \u003d false;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    /** This command interacts directly with the GUI */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private boolean hasGuiInteraction \u003d false;","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    /** Doctor selected by user through command. This value can be null */","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    private Doctor selectedDoctor \u003d null;","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    /** Patient selected by user through command. This value can be null */","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    private Patient selectedPatient \u003d null;","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"     * Constructs a {@code CommandResult} with the specified arguments,","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"     * and other fields set to its default value.","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    public CommandResult(String cliFeedbackToUser, boolean shouldShowHelp, boolean shouldExit) {","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"        this.cliFeedbackToUser \u003d requireNonNull(cliFeedbackToUser);","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        this.shouldShowHelp \u003d shouldShowHelp;","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        this.shouldExit \u003d shouldExit;","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    public CommandResult(String cliFeedbackToUser) {","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        this.cliFeedbackToUser \u003d requireNonNull(cliFeedbackToUser);","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"     * Constructs a {@code CommandResult} with selected doctor.","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"    public CommandResult(String cliFeedbackToUser,","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"                         Doctor selectedDoctor) {","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"        this.cliFeedbackToUser \u003d requireNonNull(cliFeedbackToUser);","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"        this.selectedDoctor \u003d requireNonNull(selectedDoctor);","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        this.hasGuiInteraction \u003d true;","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"     * Constructs a {@code CommandResult} with selected patient.","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"    public CommandResult(String cliFeedbackToUser,","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"                         Patient selectedPatient) {","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        this.cliFeedbackToUser \u003d requireNonNull(cliFeedbackToUser);","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        this.selectedPatient \u003d requireNonNull(selectedPatient);","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        this.hasGuiInteraction \u003d true;","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"    public String getCliFeedbackToUser() {","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"        return cliFeedbackToUser;","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean shouldShowHelp() {","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"        return shouldShowHelp;","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"        return shouldExit;","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean hasGuiInteraction() {","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.hasGuiInteraction;","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"    public Optional\u003cDoctor\u003e getSelectedDoctor() {","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"        return Optional.ofNullable(selectedDoctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"    public Optional\u003cPatient\u003e getSelectedPatient() {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"        return Optional.ofNullable(selectedPatient);","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"        return cliFeedbackToUser.equals(otherCommandResult.cliFeedbackToUser)","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 shouldShowHelp \u003d\u003d otherCommandResult.shouldShowHelp","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 shouldExit \u003d\u003d otherCommandResult.shouldExit","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 hasGuiInteraction \u003d\u003d otherCommandResult.hasGuiInteraction;","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"        return Objects.hash(cliFeedbackToUser, shouldShowHelp, shouldExit,","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"                hasGuiInteraction);","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"owen-yap":2,"praveenkrishna0512":60,"-":59}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":" * Deletes doctor from the address book","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"public class DeleteDoctorCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    public static final String COMMAND_WORD \u003d \"del-doc\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"dd\";","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"            + \": Deletes the doctor identified by the index number used in the displayed doctor list.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_DELETE_DOCTOR_SUCCESS \u003d \"Deleted Doctor: %1$s\";","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    public DeleteDoctorCommand(Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_DELETE_DOCTOR_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        Doctor doctorToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        model.deleteDoctor(doctorToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DOCTOR_SUCCESS, doctorToDelete));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"                || (other instanceof DeleteDoctorCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteDoctorCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":3,"vigonometry":57}},{"path":"src/main/java/seedu/address/logic/commands/DeletePatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":" * Deletes patient from the address book","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"public class DeletePatientCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    public static final String COMMAND_WORD \u003d \"del-ptn\";","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"dp\";","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    public DeletePatientCommand(Index targetIndex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_DELETE_PATIENT_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        Patient patientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        model.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"                || (other instanceof DeletePatientCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePatientCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"owen-yap":2,"vigonometry":58}},{"path":"src/main/java/seedu/address/logic/commands/EditDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DOCTORS;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Specialty;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Yoe;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":" * Edits the details of an existing doctor in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"public class EditDoctorCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    public static final String COMMAND_WORD \u003d \"edit-doc\";","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"ed\";","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"            + \": Edits the details of the doctor identified \"","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"            + \"by the index number used in the displayed doctors list. \"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_SPECIALTY + \"SPECIALTY \"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_YOE + \"YEARS OF EXPERIENCE \"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_SPECIALTY + \"Family Medicine \";","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_EDIT_DOCTOR_SUCCESS \u003d \"Edited Doctor: %1$s\";","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"This doctor already exists in the address book.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"    private final Index index;","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"    private final EditDoctorDescriptor editDoctorDescriptor;","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"     * @param index of the doctor in the filtered doctor list to edit","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"     * @param editDoctorDescriptor details to edit the doctor with","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorCommand(Index index, EditDoctorDescriptor editDoctorDescriptor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(editDoctorDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"        this.editDoctorDescriptor \u003d new EditDoctorDescriptor(editDoctorDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_EDIT_DOCTOR_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageDuplicate() {","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_DUPLICATE_DOCTOR;","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageFailure() {","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_NOT_EDITED;","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"        Doctor doctorToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"        Doctor editedDoctor \u003d createEditedDoctor(doctorToEdit, editDoctorDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        if (!doctorToEdit.isSameDoctor(editedDoctor) \u0026\u0026 model.hasDoctor(editedDoctor)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"        changeAssignmentInPatients(doctorToEdit, editedDoctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"        model.setDoctor(doctorToEdit, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"        model.updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_DOCTOR_SUCCESS, editedDoctor),","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"                editedDoctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"     * Creates and returns a {@code Doctor} with the details of {@code doctorToEdit}","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"     * edited with {@code editDoctorDescriptor}.","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"    private static Doctor createEditedDoctor(Doctor doctorToEdit, EditDoctorDescriptor editDoctorDescriptor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"        assert doctorToEdit !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"        Name updatedName \u003d editDoctorDescriptor.getName().orElse(doctorToEdit.getName());","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        Phone updatedPhone \u003d editDoctorDescriptor.getPhone().orElse(doctorToEdit.getPhone());","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"        Email updatedEmail \u003d editDoctorDescriptor.getEmail().orElse(doctorToEdit.getEmail());","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"        Specialty updatedSpecialty \u003d editDoctorDescriptor.getSpecialty().orElse(doctorToEdit.getSpecialty());","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"        Yoe updatedYoe \u003d editDoctorDescriptor.getYoe().orElse(doctorToEdit.getYoe());","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"        Set\u003cTag\u003e updatedTags \u003d editDoctorDescriptor.getTags().orElse(doctorToEdit.getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"        Set\u003cPatient\u003e updatedPatients \u003d editDoctorDescriptor.getPatients().orElse(doctorToEdit.getPatients());","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"        return new Doctor(updatedName, updatedPhone, updatedEmail, updatedSpecialty, updatedYoe, updatedTags,","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"                updatedPatients);","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"     * Assigns all patients of {@code doctorToEdit} to {@code editedPatient}.","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param doctorToEdit a doctor to edit","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param editedDoctor a new edited doctor","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"    private static void changeAssignmentInPatients(Doctor doctorToEdit,","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"                                                   Doctor editedDoctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"        assert doctorToEdit !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"        assert editedDoctor !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"        for (Patient patient : doctorToEdit.getPatients()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":"            patient.removeDoctorIfAssigned(doctorToEdit);","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"            patient.assignDoctor(editedDoctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"        if (!(other instanceof EditDoctorCommand)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"        // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand e \u003d (EditDoctorCommand) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 editDoctorDescriptor.equals(e.editDoctorDescriptor);","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"owen-yap"},"content":"     * Stores the details to edit the doctor with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"owen-yap"},"content":"     * corresponding field value of the doctor.","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"owen-yap"},"content":"    public static class EditDoctorDescriptor {","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"owen-yap"},"content":"        private Name name;","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"owen-yap"},"content":"        private Phone phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"owen-yap"},"content":"        private Email email;","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"owen-yap"},"content":"        private Specialty specialty;","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"owen-yap"},"content":"        private Yoe yoe;","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"owen-yap"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"praveenkrishna0512"},"content":"        private Set\u003cPatient\u003e patients;","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"owen-yap"},"content":"        public EditDoctorDescriptor() {}","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"owen-yap"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"owen-yap"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"owen-yap"},"content":"        public EditDoctorDescriptor(EditDoctorDescriptor toCopy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"owen-yap"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"owen-yap"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"owen-yap"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"owen-yap"},"content":"            setSpecialty(toCopy.specialty);","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"owen-yap"},"content":"            setYoe(toCopy.yoe);","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"owen-yap"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"praveenkrishna0512"},"content":"            setPatients(toCopy.patients);","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"owen-yap"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"owen-yap"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"praveenkrishna0512"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, specialty, yoe, tags, patients);","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"owen-yap"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"owen-yap"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-11"},{"lineNumber":208,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":211,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":213,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":214,"author":{"gitId":"owen-yap"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-11"},{"lineNumber":215,"author":{"gitId":"owen-yap"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":216,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":217,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-11"},{"lineNumber":219,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-11"},{"lineNumber":220,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":221,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":222,"author":{"gitId":"owen-yap"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-11"},{"lineNumber":223,"author":{"gitId":"owen-yap"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-11"},{"lineNumber":224,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":225,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":226,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"owen-yap"},"content":"        public void setSpecialty(Specialty specialty) {","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"owen-yap"},"content":"            this.specialty \u003d specialty;","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cSpecialty\u003e getSpecialty() {","lastModifiedDate":"2023-03-11"},{"lineNumber":235,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(specialty);","lastModifiedDate":"2023-03-11"},{"lineNumber":236,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":237,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"owen-yap"},"content":"        public void setYoe(Yoe yoe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":239,"author":{"gitId":"owen-yap"},"content":"            this.yoe \u003d yoe;","lastModifiedDate":"2023-03-11"},{"lineNumber":240,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":241,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cYoe\u003e getYoe() {","lastModifiedDate":"2023-03-11"},{"lineNumber":243,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(yoe);","lastModifiedDate":"2023-03-11"},{"lineNumber":244,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":245,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":246,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":247,"author":{"gitId":"owen-yap"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-11"},{"lineNumber":248,"author":{"gitId":"owen-yap"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-11"},{"lineNumber":249,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":250,"author":{"gitId":"owen-yap"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-11"},{"lineNumber":251,"author":{"gitId":"owen-yap"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-11"},{"lineNumber":252,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":253,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":254,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-11"},{"lineNumber":255,"author":{"gitId":"owen-yap"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-11"},{"lineNumber":256,"author":{"gitId":"owen-yap"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-11"},{"lineNumber":257,"author":{"gitId":"owen-yap"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-11"},{"lineNumber":258,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-11"},{"lineNumber":259,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-11"},{"lineNumber":260,"author":{"gitId":"owen-yap"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-03-11"},{"lineNumber":261,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":262,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":263,"author":{"gitId":"praveenkrishna0512"},"content":"        /**","lastModifiedDate":"2023-03-19"},{"lineNumber":264,"author":{"gitId":"praveenkrishna0512"},"content":"         * Sets {@code patients} to this object\u0027s {@code patients}.","lastModifiedDate":"2023-03-19"},{"lineNumber":265,"author":{"gitId":"praveenkrishna0512"},"content":"         * A defensive copy of {@code patients} is used internally.","lastModifiedDate":"2023-03-19"},{"lineNumber":266,"author":{"gitId":"praveenkrishna0512"},"content":"         */","lastModifiedDate":"2023-03-19"},{"lineNumber":267,"author":{"gitId":"praveenkrishna0512"},"content":"        public void setPatients(Set\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-19"},{"lineNumber":268,"author":{"gitId":"praveenkrishna0512"},"content":"            this.patients \u003d (patients !\u003d null) ? new HashSet\u003c\u003e(patients) : null;","lastModifiedDate":"2023-03-19"},{"lineNumber":269,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":270,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":271,"author":{"gitId":"praveenkrishna0512"},"content":"        /**","lastModifiedDate":"2023-03-19"},{"lineNumber":272,"author":{"gitId":"praveenkrishna0512"},"content":"         * Returns an unmodifiable patients set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-19"},{"lineNumber":273,"author":{"gitId":"praveenkrishna0512"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-19"},{"lineNumber":274,"author":{"gitId":"praveenkrishna0512"},"content":"         * Returns {@code Optional#empty()} if {@code patients} is null.","lastModifiedDate":"2023-03-19"},{"lineNumber":275,"author":{"gitId":"praveenkrishna0512"},"content":"         */","lastModifiedDate":"2023-03-19"},{"lineNumber":276,"author":{"gitId":"praveenkrishna0512"},"content":"        public Optional\u003cSet\u003cPatient\u003e\u003e getPatients() {","lastModifiedDate":"2023-03-19"},{"lineNumber":277,"author":{"gitId":"praveenkrishna0512"},"content":"            return (patients !\u003d null) ? Optional.of(Collections.unmodifiableSet(patients)) : Optional.empty();","lastModifiedDate":"2023-03-19"},{"lineNumber":278,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":279,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":280,"author":{"gitId":"owen-yap"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":281,"author":{"gitId":"owen-yap"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":282,"author":{"gitId":"owen-yap"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":283,"author":{"gitId":"owen-yap"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":284,"author":{"gitId":"owen-yap"},"content":"                return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":285,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":286,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":287,"author":{"gitId":"owen-yap"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":288,"author":{"gitId":"owen-yap"},"content":"            if (!(other instanceof EditDoctorDescriptor)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":289,"author":{"gitId":"owen-yap"},"content":"                return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":290,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":291,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":292,"author":{"gitId":"owen-yap"},"content":"            // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":293,"author":{"gitId":"owen-yap"},"content":"            EditDoctorDescriptor e \u003d (EditDoctorDescriptor) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":294,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":295,"author":{"gitId":"owen-yap"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":296,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-11"},{"lineNumber":297,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-11"},{"lineNumber":298,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getSpecialty().equals(e.getSpecialty())","lastModifiedDate":"2023-03-11"},{"lineNumber":299,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getYoe().equals(e.getYoe())","lastModifiedDate":"2023-03-11"},{"lineNumber":300,"author":{"gitId":"praveenkrishna0512"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-19"},{"lineNumber":301,"author":{"gitId":"praveenkrishna0512"},"content":"                    \u0026\u0026 getPatients().equals(e.getPatients());","lastModifiedDate":"2023-03-19"},{"lineNumber":302,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":303,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":304,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"owen-yap":239,"praveenkrishna0512":45,"vigonometry":20}},{"path":"src/main/java/seedu/address/logic/commands/EditPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Diagnosis;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Height;","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Remark;","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Weight;","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":" * Edits the details of an existing patient in the address book.","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"public class EditPatientCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"    public static final String COMMAND_WORD \u003d \"edit-ptn\";","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"ep\";","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"            + \": Edits the details of the patient identified \"","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"            + \"by the index number used in the displayed patients list. \"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_HEIGHT + \"HEIGHT \"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_WEIGHT + \"WEIGHT \"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_DIAGNOSIS + \"DIAGNOSIS \"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"            + PREFIX_HEIGHT + \"1.63 \";","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the address book.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    private final Index index;","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"    public EditPatientCommand(Index index, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_EDIT_PATIENT_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageDuplicate() {","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_DUPLICATE_PATIENT;","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageFailure() {","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_NOT_EDITED;","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"        if (!patientToEdit.isSamePatient(editedPatient) \u0026\u0026 model.hasPatient(editedPatient)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"        changeAssignmentInDoctors(patientToEdit, editedPatient);","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient),","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"                editedPatient);","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"        Email updatedEmail \u003d editPatientDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"        Height updatedHeight \u003d editPatientDescriptor.getHeight().orElse(patientToEdit.getHeight());","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"        Weight updatedWeight \u003d editPatientDescriptor.getWeight().orElse(patientToEdit.getWeight());","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"        Diagnosis updatedDiagnosis \u003d editPatientDescriptor.getDiagnosis().orElse(patientToEdit.getDiagnosis());","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"        Status updatedStatus \u003d editPatientDescriptor.getStatus().orElse(patientToEdit.getStatus());","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"        Remark updatedRemark \u003d editPatientDescriptor.getRemark().orElse(patientToEdit.getRemark());","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatientDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"        Set\u003cDoctor\u003e updatedDoctors \u003d editPatientDescriptor.getDoctors().orElse(patientToEdit.getDoctors());","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmail, updatedHeight, updatedWeight,","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"                updatedDiagnosis, updatedStatus, updatedRemark, updatedTags, updatedDoctors);","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"     * Assigns all doctors of {@code patientToEdit} to {@code editedPatient}.","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param patientToEdit a patient to edit","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param editedPatient a new edited patient","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"praveenkrishna0512"},"content":"    private static void changeAssignmentInDoctors(Patient patientToEdit,","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"praveenkrishna0512"},"content":"                                                  Patient editedPatient) {","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"praveenkrishna0512"},"content":"        assert editedPatient !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"praveenkrishna0512"},"content":"        for (Doctor doctor : patientToEdit.getDoctors()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"praveenkrishna0512"},"content":"            doctor.removePatientIfAssigned(patientToEdit);","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"praveenkrishna0512"},"content":"            doctor.assignPatient(editedPatient);","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"owen-yap"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"owen-yap"},"content":"        if (!(other instanceof EditPatientCommand)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"owen-yap"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"owen-yap"},"content":"        // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand e \u003d (EditPatientCommand) other;","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"owen-yap"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 editPatientDescriptor.equals(e.editPatientDescriptor);","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"owen-yap"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"owen-yap"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"owen-yap"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"owen-yap"},"content":"        private Name name;","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"owen-yap"},"content":"        private Phone phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"owen-yap"},"content":"        private Email email;","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"owen-yap"},"content":"        private Height height;","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"owen-yap"},"content":"        private Weight weight;","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"owen-yap"},"content":"        private Diagnosis diagnosis;","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"owen-yap"},"content":"        private Status status;","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"owen-yap"},"content":"        private Remark remark;","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"owen-yap"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"owen-yap"},"content":"        private Set\u003cDoctor\u003e doctors;","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"owen-yap"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2023-03-22"},{"lineNumber":199,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"owen-yap"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-22"},{"lineNumber":202,"author":{"gitId":"owen-yap"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-22"},{"lineNumber":203,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"owen-yap"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"owen-yap"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"owen-yap"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"owen-yap"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"owen-yap"},"content":"            setHeight(toCopy.height);","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"owen-yap"},"content":"            setWeight(toCopy.weight);","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"owen-yap"},"content":"            setDiagnosis(toCopy.diagnosis);","lastModifiedDate":"2023-03-22"},{"lineNumber":211,"author":{"gitId":"owen-yap"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-03-22"},{"lineNumber":212,"author":{"gitId":"owen-yap"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"owen-yap"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-22"},{"lineNumber":214,"author":{"gitId":"owen-yap"},"content":"            setDoctors(toCopy.doctors);","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"owen-yap"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"owen-yap"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"owen-yap"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, height, weight, diagnosis, status, remark, tags);","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"owen-yap"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"owen-yap"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"owen-yap"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"owen-yap"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"owen-yap"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"owen-yap"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":247,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"owen-yap"},"content":"        public void setHeight(Height height) {","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"owen-yap"},"content":"            this.height \u003d height;","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":251,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cHeight\u003e getHeight() {","lastModifiedDate":"2023-03-22"},{"lineNumber":253,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(height);","lastModifiedDate":"2023-03-22"},{"lineNumber":254,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":255,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":256,"author":{"gitId":"owen-yap"},"content":"        public void setWeight(Weight weight) {","lastModifiedDate":"2023-03-22"},{"lineNumber":257,"author":{"gitId":"owen-yap"},"content":"            this.weight \u003d weight;","lastModifiedDate":"2023-03-22"},{"lineNumber":258,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":259,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":260,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cWeight\u003e getWeight() {","lastModifiedDate":"2023-03-22"},{"lineNumber":261,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(weight);","lastModifiedDate":"2023-03-22"},{"lineNumber":262,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":263,"author":{"gitId":"owen-yap"},"content":"        public void setDiagnosis(Diagnosis diagnosis) {","lastModifiedDate":"2023-03-22"},{"lineNumber":264,"author":{"gitId":"owen-yap"},"content":"            this.diagnosis \u003d diagnosis;","lastModifiedDate":"2023-03-22"},{"lineNumber":265,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":266,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cDiagnosis\u003e getDiagnosis() {","lastModifiedDate":"2023-03-22"},{"lineNumber":267,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(diagnosis);","lastModifiedDate":"2023-03-22"},{"lineNumber":268,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":269,"author":{"gitId":"owen-yap"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2023-03-22"},{"lineNumber":270,"author":{"gitId":"owen-yap"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-03-22"},{"lineNumber":271,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":272,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2023-03-22"},{"lineNumber":273,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-03-22"},{"lineNumber":274,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":275,"author":{"gitId":"owen-yap"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-03-22"},{"lineNumber":276,"author":{"gitId":"owen-yap"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-03-22"},{"lineNumber":277,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":278,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-03-22"},{"lineNumber":279,"author":{"gitId":"owen-yap"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-03-22"},{"lineNumber":280,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":281,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":282,"author":{"gitId":"owen-yap"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-22"},{"lineNumber":283,"author":{"gitId":"owen-yap"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-22"},{"lineNumber":284,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":285,"author":{"gitId":"owen-yap"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-22"},{"lineNumber":286,"author":{"gitId":"owen-yap"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-22"},{"lineNumber":287,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":288,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":289,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":290,"author":{"gitId":"owen-yap"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-22"},{"lineNumber":291,"author":{"gitId":"owen-yap"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-22"},{"lineNumber":292,"author":{"gitId":"owen-yap"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-22"},{"lineNumber":293,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":294,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-22"},{"lineNumber":295,"author":{"gitId":"owen-yap"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-03-22"},{"lineNumber":296,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":297,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"owen-yap"},"content":"         * Sets {@code doctors} to this object\u0027s {@code doctors}.","lastModifiedDate":"2023-03-27"},{"lineNumber":299,"author":{"gitId":"owen-yap"},"content":"         * A defensive copy of {@code doctors} is used internally.","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":301,"author":{"gitId":"owen-yap"},"content":"        public void setDoctors(Set\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-03-27"},{"lineNumber":302,"author":{"gitId":"owen-yap"},"content":"            this.doctors \u003d (doctors !\u003d null) ? new HashSet\u003c\u003e(doctors) : null;","lastModifiedDate":"2023-03-27"},{"lineNumber":303,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":305,"author":{"gitId":"owen-yap"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":306,"author":{"gitId":"owen-yap"},"content":"         * Returns an unmodifiable doctor set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-27"},{"lineNumber":307,"author":{"gitId":"owen-yap"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-27"},{"lineNumber":308,"author":{"gitId":"owen-yap"},"content":"         * Returns {@code Optional#empty()} if {@code doctors} is null.","lastModifiedDate":"2023-03-27"},{"lineNumber":309,"author":{"gitId":"owen-yap"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":310,"author":{"gitId":"owen-yap"},"content":"        public Optional\u003cSet\u003cDoctor\u003e\u003e getDoctors() {","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"owen-yap"},"content":"            return (doctors !\u003d null) ? Optional.of(Collections.unmodifiableSet(doctors)) : Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":312,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":313,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":314,"author":{"gitId":"owen-yap"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":315,"author":{"gitId":"owen-yap"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":316,"author":{"gitId":"owen-yap"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":317,"author":{"gitId":"owen-yap"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-22"},{"lineNumber":318,"author":{"gitId":"owen-yap"},"content":"                return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":319,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":320,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":321,"author":{"gitId":"owen-yap"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":322,"author":{"gitId":"owen-yap"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":323,"author":{"gitId":"owen-yap"},"content":"                return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":324,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":325,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":326,"author":{"gitId":"owen-yap"},"content":"            // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":327,"author":{"gitId":"owen-yap"},"content":"            EditPatientDescriptor e \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2023-03-22"},{"lineNumber":328,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":329,"author":{"gitId":"owen-yap"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-22"},{"lineNumber":330,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-22"},{"lineNumber":331,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-22"},{"lineNumber":332,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getHeight().equals(e.getHeight())","lastModifiedDate":"2023-03-22"},{"lineNumber":333,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getWeight().equals(e.getWeight())","lastModifiedDate":"2023-03-22"},{"lineNumber":334,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getDiagnosis().equals(e.getDiagnosis())","lastModifiedDate":"2023-03-22"},{"lineNumber":335,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2023-03-22"},{"lineNumber":336,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2023-03-22"},{"lineNumber":337,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-27"},{"lineNumber":338,"author":{"gitId":"owen-yap"},"content":"                    \u0026\u0026 getDoctors().equals(e.getDoctors());","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":340,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":341,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"owen-yap":299,"vigonometry":21,"praveenkrishna0512":21}},{"path":"src/main/java/seedu/address/logic/commands/FindDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":" * Finds and lists all doctors in address book matching the respective parameters.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":" * Parameter matching is case-insensitive and substrings are matched.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":" * At least one parameter is required","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":" * Tags are matched fully","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"public class FindDoctorCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"    public static final String COMMAND_WORD \u003d \"find-doc\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"fd\";","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"            + \": Finds a doctor in the address book. \"","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_SPECIALTY + \"SPECIALITY] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_YOE + \"YEARS OF EXPERIENCE] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"            + \"At least one of the parameters must be present. \\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"            + \"Only one of each parameter (excluding \" + PREFIX_TAG + \"TAG) may be present. \\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"            + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"    private final DoctorContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"    public FindDoctorCommand(DoctorContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        return Messages.MESSAGE_DOCTORS_LISTED_OVERVIEW;","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        model.updateFilteredDoctorList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"                String.format(Messages.MESSAGE_DOCTORS_LISTED_OVERVIEW, model.getFilteredDoctorList().size()));","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"                || (other instanceof FindDoctorCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 predicate.equals(((FindDoctorCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bobfree546":55,"owen-yap":4,"vigonometry":11,"praveenkrishna0512":1}},{"path":"src/main/java/seedu/address/logic/commands/FindPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.patient.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":" * Finds and lists all patients in address book matching the respective parameters.","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":" * Parameter matching is case-insensitive and substrings are matched.","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":" * At least one parameter is required","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":" * Tags are matched fully","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"public class FindPatientCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"    public static final String COMMAND_WORD \u003d \"find-ptn\";","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"fp\";","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"            + \": Finds a patient in the address book. \"","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_HEIGHT + \"HEIGHT] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_DIAGNOSIS + \"DIAGNOSIS] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"            + \"At least one of the parameters must be present. \\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"            + \"Only one of each parameter (excluding \" + PREFIX_TAG + \"TAG) may be present. \\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"            + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"    private final PatientContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"    public FindPatientCommand(PatientContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"        return Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"                || (other instanceof FindPatientCommand // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 predicate.equals(((FindPatientCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":63,"owen-yap":1,"vigonometry":10,"praveenkrishna0512":2}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"public class HelpCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    private static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"        return SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vigonometry":11,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ListDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DOCTORS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":" * Lists all doctors in Docedex to the user.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"public class ListDoctorCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"    public static final String COMMAND_WORD \u003d \"list-doc\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"lsd\";","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all doctors in Docedex.\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Listed all doctors\";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"        model.updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Bobfree546":22,"owen-yap":2,"vigonometry":12}},{"path":"src/main/java/seedu/address/logic/commands/ListPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":" * Lists all patients in Docedex to the user.","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"public class ListPatientCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"    public static final String COMMAND_WORD \u003d \"list-ptn\";","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"lsp\";","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all patients in Docedex.\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":22,"owen-yap":2,"vigonometry":10}},{"path":"src/main/java/seedu/address/logic/commands/SelectDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":" * Lists a specific doctor in Docedex to the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"public class SelectDoctorCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public static final String COMMAND_WORD \u003d \"sd\";","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"            + \": Selects the doctor identified by the index number used in the displayed doctor list.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_SELECT_DOCTOR_SUCCESS \u003d \"Selected doctor %1$s\";","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    public SelectDoctorCommand(Index targetIndex) {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_SELECT_DOCTOR_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        List\u003cDoctor\u003e lastShownList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        Doctor doctorToShow \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_DOCTOR_SUCCESS, doctorToShow),","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"                doctorToShow);","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"owen-yap":40,"praveenkrishna0512":3,"vigonometry":11}},{"path":"src/main/java/seedu/address/logic/commands/SelectPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":" * Lists a specific patient in Docedex to the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"public class SelectPatientCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"    public static final String COMMAND_WORD \u003d \"sp\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"            + \": Selects the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_SELECT_PATIENT_SUCCESS \u003d \"Selected patient %1$s\";","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    public SelectPatientCommand(Index targetIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_SELECT_PATIENT_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        Patient patientToShow \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_PATIENT_SUCCESS, patientToShow),","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"                patientToShow);","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"vigonometry":53,"praveenkrishna0512":1}},{"path":"src/main/java/seedu/address/logic/commands/UnassignPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":" * Unassigns a patient to a doctor in the address book.","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"public class UnassignPatientCommand extends Command implements CommandInterface {","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"    public static final String COMMAND_WORD \u003d \"unassign-ptn\";","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"uasn\";","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"            + \": Removes the assignment of \"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"            + \"patient identified by the patient index number used in the displayed patients list \"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"            + \"with the doctor identified by the doctor index number used in the displayed doctor list.\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"            + PREFIX_PATIENT + \"PATIENT_INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"            + PREFIX_DOCTOR + \"DOCTOR_INDEX (must be a positive integer) \";","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_UNASSIGN_PATIENT_SUCCESS \u003d \"Unassigned Patient %1s to Doctor %2s.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_PATIENT_NOT_ASSIGNED \u003d \"Patient %1s is not assigned to Doctor %2s.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"    private final Index patientIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"    private final Index doctorIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"     * @param patientIndex of the patient in the filtered patient list to unassign","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"     * @param doctorIndex of the doctor in the filtered doctor list to unassign from","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"     **/","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"    public UnassignPatientCommand(Index patientIndex, Index doctorIndex) {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"        this.patientIndex \u003d patientIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"        this.doctorIndex \u003d doctorIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_UNASSIGN_PATIENT_SUCCESS;","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    public static String getMessagePatientNotAssigned() {","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        return MESSAGE_PATIENT_NOT_ASSIGNED;","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"        List\u003cDoctor\u003e lastShownDoctorList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"        List\u003cPatient\u003e lastShownPatientList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"        if (patientIndex.getZeroBased() \u003e\u003d lastShownPatientList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"        if (doctorIndex.getZeroBased() \u003e\u003d lastShownDoctorList.size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Bobfree546"},"content":"        Patient patientToUnassign \u003d lastShownPatientList.get(patientIndex.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Bobfree546"},"content":"        Doctor doctorToUnassign \u003d lastShownDoctorList.get(doctorIndex.getZeroBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Bobfree546"},"content":"        Doctor doctorWithoutAssign \u003d createDoctorWithoutAssign(doctorToUnassign, patientToUnassign);","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"Bobfree546"},"content":"        Patient patientWithoutAssign \u003d createPatientWithoutAssign(doctorToUnassign, patientToUnassign);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"Bobfree546"},"content":"        model.setDoctor(doctorToUnassign, doctorWithoutAssign);","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"Bobfree546"},"content":"        model.setPatient(patientToUnassign, patientWithoutAssign);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Bobfree546"},"content":"        return new CommandResult(String.format(MESSAGE_UNASSIGN_PATIENT_SUCCESS,","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"                patientToUnassign.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"                doctorToUnassign.getName().getValue()), patientWithoutAssign);","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"Bobfree546"},"content":"    private static Doctor createDoctorWithoutAssign(Doctor doctorToUnassign, Patient patientToUnassign)","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"Bobfree546"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"Bobfree546"},"content":"        assert doctorToUnassign !\u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"Bobfree546"},"content":"        assert patientToUnassign !\u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cPatient\u003e patientsSet \u003d doctorToUnassign.getPatients();","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"Bobfree546"},"content":"        if (!patientsSet.contains(patientToUnassign)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"Bobfree546"},"content":"            throw new CommandException(String.format(MESSAGE_PATIENT_NOT_ASSIGNED,","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"                    patientToUnassign.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"                    doctorToUnassign.getName().getValue()));","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"Bobfree546"},"content":"        patientsSet.remove(patientToUnassign);","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"Bobfree546"},"content":"        return new Doctor(doctorToUnassign.getName(),","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"Bobfree546"},"content":"                doctorToUnassign.getPhone(),","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"Bobfree546"},"content":"                doctorToUnassign.getEmail(),","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"Bobfree546"},"content":"                doctorToUnassign.getSpecialty(),","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"Bobfree546"},"content":"                doctorToUnassign.getYoe(),","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"Bobfree546"},"content":"                doctorToUnassign.getTags(),","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"Bobfree546"},"content":"                patientsSet);","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"Bobfree546"},"content":"    private static Patient createPatientWithoutAssign(Doctor doctorToUnassign, Patient patientToUnassign)","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Bobfree546"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Bobfree546"},"content":"        assert doctorToUnassign !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Bobfree546"},"content":"        assert patientToUnassign !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cDoctor\u003e doctorsSet \u003d patientToUnassign.getDoctors();","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Bobfree546"},"content":"        if (!doctorsSet.contains(doctorToUnassign)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Bobfree546"},"content":"            throw new CommandException(String.format(MESSAGE_PATIENT_NOT_ASSIGNED,","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"                    patientToUnassign.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"                    doctorToUnassign.getName().getValue()));","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"Bobfree546"},"content":"        doctorsSet.remove(doctorToUnassign);","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"Bobfree546"},"content":"        return new Patient(patientToUnassign.getName(),","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"Bobfree546"},"content":"                patientToUnassign.getPhone(),","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"Bobfree546"},"content":"                patientToUnassign.getEmail(),","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"Bobfree546"},"content":"                patientToUnassign.getHeight(),","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"Bobfree546"},"content":"                patientToUnassign.getWeight(),","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"Bobfree546"},"content":"                patientToUnassign.getDiagnosis(),","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"Bobfree546"},"content":"                patientToUnassign.getStatus(),","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"Bobfree546"},"content":"                patientToUnassign.getRemark(),","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"Bobfree546"},"content":"                patientToUnassign.getTags(),","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"Bobfree546"},"content":"                doctorsSet);","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"Bobfree546"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"Bobfree546"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"Bobfree546"},"content":"                || (other instanceof UnassignPatientCommand // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 patientIndex.equals(((UnassignPatientCommand) other).patientIndex)","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 doctorIndex.equals(((UnassignPatientCommand) other).doctorIndex)); // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":120,"owen-yap":2,"vigonometry":22}},{"path":"src/main/java/seedu/address/logic/parser/AddDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Specialty;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Yoe;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"public class AddDoctorCommandParser implements Parser\u003cAddDoctorCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDoctorCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"     * and returns an AddDoctorCommand object for execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    public AddDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE,","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE)","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.getCommandUsage()));","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        Specialty specialty \u003d ParserUtil.parseSpecialty(argMultimap.getValue(PREFIX_SPECIALTY).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        Yoe yoe \u003d ParserUtil.parseYoe(argMultimap.getValue(PREFIX_YOE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        Doctor doctor \u003d new Doctor(name, phone, email, specialty, yoe, tagList);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        return new AddDoctorCommand(doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"owen-yap":7,"vigonometry":12,"-":46}},{"path":"src/main/java/seedu/address/logic/parser/AddPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Diagnosis;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Height;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Remark;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Weight;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":" * Parses input arguments and creates a new AddPatientCommand object","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"public class AddPatientCommandParser implements Parser\u003cAddPatientCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPatientCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"     * and returns an AddPatientCommand object for execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    public AddPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HEIGHT, PREFIX_WEIGHT,","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"                        PREFIX_DIAGNOSIS, PREFIX_STATUS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HEIGHT, PREFIX_WEIGHT,","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"                PREFIX_DIAGNOSIS, PREFIX_STATUS)","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"                    AddPatientCommand.getCommandUsage()));","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        Height height \u003d ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"        Weight weight \u003d ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        Diagnosis diagnosis \u003d ParserUtil.parseDiagnosis(argMultimap.getValue(PREFIX_DIAGNOSIS).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        Remark remark \u003d argMultimap.getValue(PREFIX_REMARK).isPresent() ? ParserUtil.parseRemark(argMultimap","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"                .getValue(PREFIX_REMARK).get()) : new Remark(\"NIL\");","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"        Patient patient \u003d new Patient(name, phone, email, height, weight, diagnosis, status, remark, tagList);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"vigonometry":77}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.AssignPatientCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.EditDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.FindDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.FindPatientCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.ListDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.ListPatientCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.SelectDoctorCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.SelectPatientCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.UnassignPatientCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.getCommandUsage()));","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        case AddDoctorCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        case AddDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"            return new AddDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"        case AddPatientCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        case AddPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"            return new AddPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"        case AssignPatientCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"        case AssignPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"            return new AssignPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        case UnassignPatientCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"        case UnassignPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"            return new UnassignPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"        case EditDoctorCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"        case EditDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"            return new EditDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        case EditPatientCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        case EditPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"            return new EditPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        case DeleteDoctorCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        case DeleteDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"            return new DeleteDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        case DeletePatientCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"        case DeletePatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"            return new DeletePatientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"        case FindDoctorCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"Bobfree546"},"content":"        case FindDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"Bobfree546"},"content":"            return new FindDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        case FindPatientCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"Bobfree546"},"content":"        case FindPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"Bobfree546"},"content":"            return new FindPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"        case ListDoctorCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"Bobfree546"},"content":"        case ListDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"Bobfree546"},"content":"            return new ListDoctorCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        case ListPatientCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"Bobfree546"},"content":"        case ListPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"Bobfree546"},"content":"            return new ListPatientCommand();","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"        case SelectDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"            return new SelectDoctorCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"        case SelectPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"            return new SelectPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Bobfree546":22,"owen-yap":22,"vigonometry":20,"-":61}},{"path":"src/main/java/seedu/address/logic/parser/AssignPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.AssignPatientCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":" * Parses input arguments and creates a new AssignPatientCommand object","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"public class AssignPatientCommandParser implements Parser\u003cAssignPatientCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"    public AssignPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PATIENT, PREFIX_DOCTOR);","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_PATIENT, PREFIX_DOCTOR)","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"                        AssignPatientCommand.getCommandUsage()));","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"            Index patientIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_PATIENT).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"            Index doctorIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_DOCTOR).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"            return new AssignPatientCommand(patientIndex, doctorIndex);","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignPatientCommand.getCommandUsage()), pe);","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":39,"vigonometry":2}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"    // Generic commands","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"    // Doctor specific commands","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"    public static final Prefix PREFIX_DOCTOR \u003d new Prefix(\"doc/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public static final Prefix PREFIX_SPECIALTY \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"    public static final Prefix PREFIX_YOE \u003d new Prefix(\"y/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    // Patient specific commands","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"    public static final Prefix PREFIX_PATIENT \u003d new Prefix(\"ptn/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public static final Prefix PREFIX_HEIGHT \u003d new Prefix(\"h/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"w/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    public static final Prefix PREFIX_DIAGNOSIS \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"st/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Bobfree546":2,"owen-yap":10,"vigonometry":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":" * Parses input arguments and creates a new DeleteDoctorCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"public class DeleteDoctorCommandParser implements Parser\u003cDeleteDoctorCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    public DeleteDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"            return new DeleteDoctorCommand(index);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"                    String.format(\"%s\\n%s\", pe.getMessage(), DeleteDoctorCommand.getCommandUsage()), pe);","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"vigonometry":29}},{"path":"src/main/java/seedu/address/logic/parser/DeletePatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":" * Parses input arguments and creates a new DeletePatientCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"public class DeletePatientCommandParser implements Parser\u003cDeletePatientCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    public DeletePatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"            return new DeletePatientCommand(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"                    String.format(\"%s\\n%s\", pe.getMessage(), DeletePatientCommand.getCommandUsage()), pe);","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":28,"praveenkrishna0512":1}},{"path":"src/main/java/seedu/address/logic/parser/EditDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditDoctorCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":" * Parses input arguments and creates a new EditDoctorCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"public class EditDoctorCommandParser implements Parser\u003cEditDoctorCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"     * Parses the given {@code String} of arguments in the context of the EditDoctorCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"     * and returns an EditDoctorCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE,","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(\"%s\\n%s\", pe.getMessage(),","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"                    EditDoctorCommand.getCommandUsage()), pe);","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor editDoctorDescriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_SPECIALTY).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setSpecialty(ParserUtil.parseSpecialty(argMultimap.getValue(PREFIX_SPECIALTY).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_YOE).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"            editDoctorDescriptor.setYoe(ParserUtil.parseYoe(argMultimap.getValue(PREFIX_YOE).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editDoctorDescriptor::setTags);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"        if (!editDoctorDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(EditDoctorCommand.getMessageFailure());","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        return new EditDoctorCommand(index, editDoctorDescriptor);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"owen-yap":23,"vigonometry":3,"-":61}},{"path":"src/main/java/seedu/address/logic/parser/EditPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":" * Parses input arguments and creates a new EditPatientCommand object","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"public class EditPatientCommandParser implements Parser\u003cEditPatientCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPatientCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"     * and returns an EditPatientCommand object for execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"    public EditPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HEIGHT, PREFIX_WEIGHT,","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"                        PREFIX_DIAGNOSIS, PREFIX_STATUS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        Index index;","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(\"%s\\n%s\", pe.getMessage(),","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"                    EditPatientCommand.getCommandUsage()), pe);","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"            editPatientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_HEIGHT).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"            editPatientDescriptor.setHeight(ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_WEIGHT).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"            editPatientDescriptor.setWeight(ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_DIAGNOSIS).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"            editPatientDescriptor.setDiagnosis(ParserUtil.parseDiagnosis(argMultimap.getValue(PREFIX_DIAGNOSIS).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"            editPatientDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"            editPatientDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPatientDescriptor::setTags);","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(EditPatientCommand.getMessageFailure());","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        return new EditPatientCommand(index, editPatientDescriptor);","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"owen-yap":96,"vigonometry":3}},{"path":"src/main/java/seedu/address/logic/parser/FindDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.FindDoctorCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.DoctorFilter;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":" * Parses input arguments and creates a new FindDoctorCommand object","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"public class FindDoctorCommandParser implements Parser\u003cFindDoctorCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"    public FindDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE,","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"        if (!hasAtLeastOnePrefix(argMultimap, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"                PREFIX_EMAIL, PREFIX_SPECIALTY, PREFIX_YOE, PREFIX_TAG)","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"                    FindDoctorCommand.getCommandUsage()));","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"        String name \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\").trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"        String phone \u003d argMultimap.getValue(PREFIX_PHONE).orElse(\"\").trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"        String email \u003d argMultimap.getValue(PREFIX_EMAIL).orElse(\"\").trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        String specialty \u003d argMultimap.getValue(PREFIX_SPECIALTY).orElse(\"\").trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"        String yoe \u003d argMultimap.getValue(PREFIX_YOE).orElse(\"\").trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cString\u003e tagList \u003d argMultimap.getAllValues(PREFIX_TAG)","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"                .stream().filter(tag -\u003e !tag.isBlank())","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"                .map(tag -\u003e tag.toLowerCase().trim()).collect(Collectors.toSet());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"        if (name.isEmpty() \u0026\u0026 phone.isEmpty() \u0026\u0026 email.isEmpty()","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 specialty.isEmpty() \u0026\u0026 yoe.isEmpty() \u0026\u0026 tagList.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"                    FindDoctorCommand.getCommandUsage()));","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"        DoctorFilter doctorFilter \u003d new DoctorFilter(name, phone, email, specialty, yoe, tagList);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"        return new FindDoctorCommand(new DoctorContainsKeywordsPredicate(doctorFilter));","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"     * Returns true if at least one of the prefix contains {@code Optional} values in the given","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"    private static boolean hasAtLeastOnePrefix(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bobfree546":59,"owen-yap":6,"vigonometry":4}},{"path":"src/main/java/seedu/address/logic/parser/FindPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.FindPatientCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.patient.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.patient.PatientFilter;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":" * Parses input arguments and creates a new FindPatientCommand object","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"public class FindPatientCommandParser implements Parser\u003cFindPatientCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPatientCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"     * and returns a FindPatientCommand object for execution.","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"    public FindPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HEIGHT, PREFIX_WEIGHT,","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"                        PREFIX_DIAGNOSIS, PREFIX_STATUS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"        if (!hasAtLeastOnePrefix(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_HEIGHT, PREFIX_WEIGHT,","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"                PREFIX_DIAGNOSIS, PREFIX_STATUS, PREFIX_REMARK, PREFIX_TAG)","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"                    FindPatientCommand.getCommandUsage()));","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"        String name \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\").trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"        String phone \u003d argMultimap.getValue(PREFIX_PHONE).orElse(\"\").trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"        String email \u003d argMultimap.getValue(PREFIX_EMAIL).orElse(\"\").trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"        String height \u003d argMultimap.getValue(PREFIX_HEIGHT).orElse(\"\").trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"        String weight \u003d argMultimap.getValue(PREFIX_WEIGHT).orElse(\"\").trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Bobfree546"},"content":"        String diagnosis \u003d argMultimap.getValue(PREFIX_DIAGNOSIS).orElse(\"\").trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"        String status \u003d argMultimap.getValue(PREFIX_STATUS).orElse(\"\").trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\").trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cString\u003e tagList \u003d argMultimap.getAllValues(PREFIX_TAG)","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Bobfree546"},"content":"                .stream().filter(tag -\u003e !tag.isBlank())","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"                .map(tag -\u003e tag.toLowerCase().trim()).collect(Collectors.toSet());","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"        if (name.isEmpty() \u0026\u0026 phone.isEmpty() \u0026\u0026 email.isEmpty() \u0026\u0026 height.isEmpty() \u0026\u0026 weight.isEmpty()","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 diagnosis.isEmpty() \u0026\u0026 status.isEmpty() \u0026\u0026 remark.isEmpty() \u0026\u0026 tagList.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"                    FindPatientCommand.getCommandUsage()));","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"        PatientFilter patientFilter \u003d new PatientFilter(name, phone, email, height, weight,","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"                diagnosis, status, remark, tagList);","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"        return new FindPatientCommand(new PatientContainsKeywordsPredicate(patientFilter));","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"     * Returns true if at least one of the prefix contains {@code Optional} values in the given","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Bobfree546"},"content":"    private static boolean hasAtLeastOnePrefix(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Bobfree546"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":72,"vigonometry":4}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Specialty;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Yoe;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Diagnosis;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Height;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Remark;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Weight;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"    public static final String MESSAGE_INVALID_INDEXES \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"            \"There should be exactly two non-zero unsigned integer indexes provided.\";","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    private static final String MAX_SIZE \u003d \"2147483649\";","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_OUT_OF_BOUNDS \u003d \"Index provided is out of bounds\";","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        if (trimmedIndex.length() \u003e\u003d MAX_SIZE.length() \u0026\u0026 trimmedIndex.compareTo(MAX_SIZE) \u003e\u003d 0) {","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(MESSAGE_OUT_OF_BOUNDS);","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"    //METHODS FOR DOCTOR","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"     * Parses a {@code String speciality} into an {@code Speciality}.","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the given {@code speciality} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"    public static Specialty parseSpecialty(String speciality) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(speciality);","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"vigonometry"},"content":"        String trimmedSpeciality \u003d speciality.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"vigonometry"},"content":"        if (!Specialty.isValidSpecialty(trimmedSpeciality)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(Specialty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"vigonometry"},"content":"        return new Specialty(trimmedSpeciality);","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"vigonometry"},"content":"     * Parses a {@code String yoe} into an {@code Yoe}.","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"vigonometry"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"vigonometry"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the given {@code yoe} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"vigonometry"},"content":"    public static Yoe parseYoe(String yoe) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"vigonometry"},"content":"        requireNonNull(yoe);","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"vigonometry"},"content":"        String trimmedYoe \u003d yoe.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"vigonometry"},"content":"        if (!Yoe.isValidYoe(trimmedYoe)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(Yoe.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"vigonometry"},"content":"        return new Yoe(trimmedYoe);","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"vigonometry"},"content":"    //METHODS FOR PATIENT","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"     * @throws ParseException if the given {@code height} is invalid.","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"    public static Height parseHeight(String height) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(height);","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"        String trimmedHeight \u003d height.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"vigonometry"},"content":"        if (!Height.isValidHeight(height)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"            throw new ParseException(Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"owen-yap"},"content":"        return new Height(trimmedHeight);","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"owen-yap"},"content":"     * Parses a {@code String weight} into an {@code Weight}.","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"owen-yap"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"owen-yap"},"content":"     * @throws ParseException if the given {@code weight} is invalid.","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"owen-yap"},"content":"    public static Weight parseWeight(String weight) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(weight);","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"owen-yap"},"content":"        String trimmedWeight \u003d weight.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"vigonometry"},"content":"        if (!Weight.isValidWeight(weight)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"owen-yap"},"content":"            throw new ParseException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"owen-yap"},"content":"        return new Weight(trimmedWeight);","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"owen-yap"},"content":"     * Parses a {@code String diagnosis} into an {@code Diagnosis}.","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"owen-yap"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"owen-yap"},"content":"     * @throws ParseException if the given {@code diagnosis} is invalid.","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"owen-yap"},"content":"    public static Diagnosis parseDiagnosis(String diagnosis) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(diagnosis);","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"owen-yap"},"content":"        String trimmedDiagnosis \u003d diagnosis.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"vigonometry"},"content":"        if (!Diagnosis.isValidDiagnosis(diagnosis)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"owen-yap"},"content":"            throw new ParseException(Diagnosis.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":199,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"owen-yap"},"content":"        return new Diagnosis(trimmedDiagnosis);","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":202,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":203,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"owen-yap"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"owen-yap"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"owen-yap"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"owen-yap"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-22"},{"lineNumber":211,"author":{"gitId":"owen-yap"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":212,"author":{"gitId":"vigonometry"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"owen-yap"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":214,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"owen-yap"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"owen-yap"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"owen-yap"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"owen-yap"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"owen-yap"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"owen-yap"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"vigonometry"},"content":"        if (!Remark.isValidRemark(remark)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"owen-yap"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"owen-yap"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Bobfree546":2,"owen-yap":77,"vigonometry":45,"-":108}},{"path":"src/main/java/seedu/address/logic/parser/SelectDoctorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.SelectDoctorCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":" * Parses input arguments and creates a new SelectDoctorCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"public class SelectDoctorCommandParser implements Parser\u003cSelectDoctorCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"    public SelectDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"            return new SelectDoctorCommand(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectDoctorCommand.getCommandUsage()), pe);","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"owen-yap":4,"praveenkrishna0512":1,"vigonometry":1,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/SelectPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.SelectPatientCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":" * Parses input arguments and creates a new SelectPatientCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"public class SelectPatientCommandParser implements Parser\u003cSelectPatientCommand\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectPatientCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"     * and returns a SelectPatientCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"    public SelectPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"            return new SelectPatientCommand(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectPatientCommand.getCommandUsage()), pe);","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"vigonometry":26,"praveenkrishna0512":3}},{"path":"src/main/java/seedu/address/logic/parser/UnassignPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.AssignPatientCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.UnassignPatientCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":" * Parses input arguments and creates a new UnassignPatientCommand object","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"public class UnassignPatientCommandParser implements Parser\u003cUnassignPatientCommand\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"    public UnassignPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PATIENT, PREFIX_DOCTOR);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_PATIENT, PREFIX_DOCTOR)","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"                        AssignPatientCommand.getCommandUsage()));","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"            Index patientIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_PATIENT).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"            Index doctorIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_DOCTOR).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"            return new UnassignPatientCommand(patientIndex, doctorIndex);","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnassignPatientCommand.getCommandUsage()), pe);","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":40,"vigonometry":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Objects;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.UniqueDoctorList;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.UniquePatientList;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBook.class);","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    private final UniqueDoctorList doctors;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private final UniquePatientList patients;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        doctors \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"     * Replaces the contents of the doctor list with {@code doctors}.","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"     * {@code doctors} must not contain duplicate doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"        this.doctors.setDoctors(doctors);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"     * Replaces the contents of the patients list with {@code patients}.","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        setDoctors(newData.getDoctorList());","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a doctor with the same identity as {@code doctor} exists in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        return doctors.contains(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"     * Adds a doctor to the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"     * The doctor must not already exist in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"     * @param doctor","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"    public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"        if (doctor \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"            logger.warning(\"Trying to add null into doctors in AddressBook is not allowed!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"            return;","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"        doctors.add(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"     * The patient must not already exist in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param patient","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"            logger.warning(\"Trying to add null into patients in AddressBook is not allowed!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"            return;","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":"        patients.add(patient);","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"     * Replaces the given doctor {@code target} in the list with {@code editedDoctor}.","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"     * The doctor identity of {@code editedDoctor} must not be the same as another existing doctor in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"owen-yap"},"content":"        doctors.setDoctor(target, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"owen-yap"},"content":"    public Doctor getDoctor(int target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"owen-yap"},"content":"        return doctors.getDoctor(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":179,"author":{"gitId":"praveenkrishna0512"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"praveenkrishna0512"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"praveenkrishna0512"},"content":"     * The patient identity of {@code editedPatient} must not be the same as","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"praveenkrishna0512"},"content":"     * another existing patient in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setPatient(Patient target, Patient editedPerson) {","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"praveenkrishna0512"},"content":"        patients.setPatient(target, editedPerson);","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"praveenkrishna0512"},"content":"     * Removes {@code key} from {@code persons}.","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"praveenkrishna0512"},"content":"     * {@code key} must exist in {@code persons}.","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"praveenkrishna0512"},"content":"     * Removes {@code key} from {@code doctors}.","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"praveenkrishna0512"},"content":"     * {@code key} must exist in {@code doctors}.","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"vigonometry"},"content":"    public void removeDoctor(Doctor key) {","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"vigonometry"},"content":"        doctors.remove(key);","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"praveenkrishna0512"},"content":"        key.getPatients()","lastModifiedDate":"2023-04-07"},{"lineNumber":205,"author":{"gitId":"praveenkrishna0512"},"content":"                .forEach((patient -\u003e patient.removeDoctorIfAssigned(key)));","lastModifiedDate":"2023-04-07"},{"lineNumber":206,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":209,"author":{"gitId":"praveenkrishna0512"},"content":"     * Removes {@code key} from {@code patients}.","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"praveenkrishna0512"},"content":"     * {@code key} must exist in {@code patients}.","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"praveenkrishna0512"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-03-18"},{"lineNumber":213,"author":{"gitId":"praveenkrishna0512"},"content":"        patients.remove(key);","lastModifiedDate":"2023-03-18"},{"lineNumber":214,"author":{"gitId":"praveenkrishna0512"},"content":"        key.getDoctors()","lastModifiedDate":"2023-04-07"},{"lineNumber":215,"author":{"gitId":"praveenkrishna0512"},"content":"                .forEach((doctor -\u003e doctor.removePatientIfAssigned(key)));","lastModifiedDate":"2023-04-07"},{"lineNumber":216,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":217,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"praveenkrishna0512"},"content":"        return doctors.asUnmodifiableObservableList().size() + \" doctors\"","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"praveenkrishna0512"},"content":"                + \" and \" + patients.asUnmodifiableObservableList().size() + \" patients\";","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":231,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"owen-yap"},"content":"    public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"owen-yap"},"content":"        return doctors.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":235,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":236,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":237,"author":{"gitId":"praveenkrishna0512"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":238,"author":{"gitId":"praveenkrishna0512"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-18"},{"lineNumber":239,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":240,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":241,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"praveenkrishna0512"},"content":"    public ObservableList\u003cPatient\u003e getUnassignedPatientList() {","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"praveenkrishna0512"},"content":"        UniquePatientList unassignedPatients \u003d new UniquePatientList();","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"praveenkrishna0512"},"content":"        for (Patient patient : patients) {","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"praveenkrishna0512"},"content":"            if (!patient.hasDoctors()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":246,"author":{"gitId":"praveenkrishna0512"},"content":"                unassignedPatients.add(patient);","lastModifiedDate":"2023-03-22"},{"lineNumber":247,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"praveenkrishna0512"},"content":"        return unassignedPatients.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":251,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":257,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2023-03-18"},{"lineNumber":258,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 doctors.equals(((AddressBook) other).doctors)","lastModifiedDate":"2023-03-18"},{"lineNumber":259,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 patients.equals(((AddressBook) other).patients));","lastModifiedDate":"2023-03-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":264,"author":{"gitId":"praveenkrishna0512"},"content":"        return Objects.hash(doctors, patients);","lastModifiedDate":"2023-04-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owen-yap":51,"praveenkrishna0512":94,"vigonometry":6,"-":115}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    Predicate\u003cDoctor\u003e PREDICATE_SHOW_ALL_DOCTORS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"     * Returns true if a doctor with the same identity as {@code doctor} exists in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    boolean hasDoctor(Doctor doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"    boolean hasPatient(Patient patient);","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"     * Deletes the given doctor.","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"    void deleteDoctor(Doctor target);","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"     * Deletes the given patient.","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"    void deletePatient(Patient target);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"     * Adds the given doctor.","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"     * {@code doctor} must not already exist in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"    void addDoctor(Doctor doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"     * Adds the given patient.","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"     * {@code patient} must not already exist in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"     * Replaces the given doctor {@code target} with {@code editedDoctor}.","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"     * The doctor identity of {@code editedDoctor} must not be the same as another existing doctor in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"    void setDoctor(Doctor target, Doctor editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"     * The patient identity of {@code editedPatient} must not be the same","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"     * as another existing patient in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"    void setPatient(Patient target, Patient editedPatient);","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"    /** Returns an unmodifiable view of the filtered doctor list */","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"     * Updates the filter of the filtered doctor list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"Bobfree546"},"content":"    void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"praveenkrishna0512"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Bobfree546":1,"owen-yap":17,"praveenkrishna0512":38,"vigonometry":15,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    private final FilteredList\u003cDoctor\u003e filteredDoctors;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        filteredDoctors \u003d new FilteredList\u003c\u003e(this.addressBook.getDoctorList());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPatientList());","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        return addressBook.hasDoctor(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"        return addressBook.hasPatient(patient);","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"    public void deleteDoctor(Doctor target) {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"        addressBook.removeDoctor(target);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"    public void deletePatient(Patient patient) {","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"        addressBook.removePatient(patient);","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":135,"author":{"gitId":"vigonometry"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"vigonometry"},"content":"    public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"vigonometry"},"content":"        addressBook.addDoctor(doctor);","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"        updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"        updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(target, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"        addressBook.setDoctor(target, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"    public Doctor getDoctor(int target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"        return addressBook.getDoctor(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"praveenkrishna0512"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"praveenkrishna0512"},"content":"        addressBook.setPatient(target, editedPatient);","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"owen-yap"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"owen-yap"},"content":"        return filteredDoctors;","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"praveenkrishna0512"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"praveenkrishna0512"},"content":"        return filteredPatients;","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":201,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"Bobfree546"},"content":"    public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"Bobfree546"},"content":"        filteredDoctors.setPredicate(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":208,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":209,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"praveenkrishna0512"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":229,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 filteredDoctors.equals(other.filteredDoctors)","lastModifiedDate":"2023-03-18"},{"lineNumber":231,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 filteredPatients.equals(other.filteredPatients);","lastModifiedDate":"2023-03-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Bobfree546":2,"owen-yap":33,"praveenkrishna0512":40,"vigonometry":10,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"     * Returns an unmodifiable view of the doctors list.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"     * This list will not contain any duplicate doctors.","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    ObservableList\u003cDoctor\u003e getDoctorList();","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns an unmodifiable view of the patients list.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"     * This list will not contain any duplicate patients.","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns an unmodifiable view of a list of unassigned patients.","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"     * This list will not contain any duplicate patients.","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    ObservableList\u003cPatient\u003e getUnassignedPatientList();","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"owen-yap":5,"praveenkrishna0512":12,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"docedex.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":1,"-":86}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    private final String value;","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        return value;","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vigonometry":5,"-":70}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    private final String fullName;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        return fullName;","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vigonometry":5,"-":58}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().getValue(), keyword));","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"vigonometry":1,"-":30}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    public Person(Name name, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"                .append(getEmail());","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"owen-yap":4,"-":111}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    private static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"    private final String value;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        return value;","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vigonometry":5,"-":51}},{"path":"src/main/java/seedu/address/model/person/doctor/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":" * Represents a Doctor in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"public class Doctor extends Person {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    // Identity fields","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    private final Specialty specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    private final Yoe yoe;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private final Set\u003cPatient\u003e patients;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    public Doctor(Name name, Phone phone, Email email,","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"                  Specialty specialty, Yoe yoe, Set\u003cTag\u003e tags, Set\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        requireAllNonNull(name, phone, email, specialty, yoe, tags, patients);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        this.yoe \u003d yoe;","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"        this.patients \u003d patients;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"     * Initializes {@code Doctor} object without {@code patients}.","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    public Doctor(Name name, Phone phone, Email email, Specialty specialty, Yoe yoe, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        requireAllNonNull(name, phone, email, specialty, yoe, tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        this.yoe \u003d yoe;","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        this.patients \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    public Specialty getSpecialty() {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        return specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"    public Yoe getYoe() {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"        return yoe;","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    public Set\u003cPatient\u003e getPatients() {","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"        return patients;","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean hasPatients() {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"        return patients.size() \u003e 0;","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns true if doctor contains supplied patient.","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param patient a patient.","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"     * Adds a patient if it does not exist in doctor\u0027s patient list.","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param patient a patient.","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"    public void assignPatient(Patient patient) {","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!this.hasPatient(patient)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"            patients.add(patient);","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"     * Removes a patient if it exists in doctor\u0027s patient list.","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param patient a patient.","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"    public void removePatientIfAssigned(Patient patient) {","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"        if (this.hasPatient(patient)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"            patients.remove(patient);","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"     * Returns true if both doctors have the same name.","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"     * This defines a weaker notion of equality between two doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"    public boolean isSameDoctor(Doctor otherDoctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"        if (otherDoctor \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"        return otherDoctor !\u003d null","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getName().equals(getName());","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"     * Returns true if both doctors have the same identity and data fields.","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"     * This defines a stronger notion of equality between two doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"        if (!(other instanceof Doctor)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        Doctor otherDoctor \u003d (Doctor) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"        return otherDoctor.getName().equals(getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getSpecialty().equals(getSpecialty())","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherDoctor.getYoe().equals(getYoe())","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 otherDoctor.getTags().equals(getTags())","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 otherDoctor.getPatients().equals(getPatients());","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getSpecialty(), getYoe(), getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"                .append(getPhone())","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Specialty: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"                .append(getSpecialty())","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"owen-yap"},"content":"                .append(\"; YOE: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"owen-yap"},"content":"                .append(getYoe());","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"praveenkrishna0512"},"content":"        Set\u003cPatient\u003e patients \u003d getPatients();","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!patients.isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"praveenkrishna0512"},"content":"            builder.append(\"; Patients: | \");","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"praveenkrishna0512"},"content":"            patients.forEach((Patient patient) -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"praveenkrishna0512"},"content":"                builder.append(patient.getName() + \" | \");","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"praveenkrishna0512"},"content":"            });","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"owen-yap":97,"praveenkrishna0512":71}},{"path":"src/main/java/seedu/address/model/person/doctor/DoctorContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":" * Tests that a {@code Doctor\u0027s fields} matches the {@code DoctorFilter} given.","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"public class DoctorContainsKeywordsPredicate implements Predicate\u003cDoctor\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"    private final DoctorFilter doctorFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"    public DoctorContainsKeywordsPredicate(DoctorFilter doctorFilter) {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"        this.doctorFilter \u003d doctorFilter;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"    public boolean test(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"        return doctorFilter.isMatch((Doctor) doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"                || (other instanceof DoctorContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"                \u0026\u0026 doctorFilter.equals(((DoctorContainsKeywordsPredicate) other).doctorFilter)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bobfree546":26,"owen-yap":1,"vigonometry":1}},{"path":"src/main/java/seedu/address/model/person/doctor/DoctorFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":" * Filter Class for passing to DoctorContainsKeywordsPredicate","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"public class DoctorFilter {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"    //Filter fields","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    private String nameFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    private String phoneFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    private String emailFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    private String specialtyFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    private String yoeFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private Set\u003cString\u003e tagsFilter \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    private Patient patientFilter \u003d null;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"     * Constructs a {@code DoctorFilter}.","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"     * @param name name in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"     * @param phone phone in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"     * @param email email in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"     * @param specialty specialty in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"     * @param yoe yoe in string (can be empty string).","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"     * @param tags set of tags in string (can be empty list).","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    public DoctorFilter(String name, String phone, String email,","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"                        String specialty, String yoe, Set\u003cString\u003e tags) {","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"        this.nameFilter \u003d name;","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"        this.phoneFilter \u003d phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"        this.emailFilter \u003d email;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"        this.specialtyFilter \u003d specialty;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"        this.yoeFilter \u003d yoe;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"        this.tagsFilter \u003d tags;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"     * Constructs a {@code DoctorFilter}.","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param patient a patient object (can be null).","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"    public DoctorFilter(Patient patient) {","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        this.patientFilter \u003d patient;","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Bobfree546"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Bobfree546"},"content":"     * Matches filter fields to doctor","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"     * Returns true if each filter field is a substring of the respective field of doctor","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"    public boolean isMatch(Doctor doctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"        boolean result \u003d StringUtil.containsSubstringIgnoreCase(doctor.getName().getValue(), nameFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(doctor.getPhone().getValue(), phoneFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(doctor.getEmail().getValue(), emailFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(doctor.getSpecialty().getValue(), specialtyFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(doctor.getYoe().getValue(), yoeFilter);","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"        if (!tagsFilter.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"            Set\u003cString\u003e tagStringSet \u003d doctor","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"                    .getTags()","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"                    .stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"                    .map(tag -\u003e tag.getTagName().toLowerCase())","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"                    .collect(Collectors.toSet());","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"            result \u003d result \u0026\u0026 tagStringSet.containsAll(tagsFilter","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"Bobfree546"},"content":"                    .stream()","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"Bobfree546"},"content":"                    .map(String::toLowerCase)","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"Bobfree546"},"content":"                    .collect(Collectors.toSet()));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"Bobfree546"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"        if (patientFilter !\u003d null) {","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d result \u0026\u0026 doctor.hasPatient(patientFilter);","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Bobfree546"},"content":"        return result;","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Bobfree546"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Bobfree546"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"            return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!(other instanceof DoctorFilter)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"        DoctorFilter otherFilter \u003d (DoctorFilter) other;","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"        boolean isSamePatientFilter;","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"        if (this.patientFilter \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"            isSamePatientFilter \u003d otherFilter.patientFilter \u003d\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"            isSamePatientFilter \u003d this.patientFilter.equals(otherFilter.patientFilter);","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.nameFilter.equals(otherFilter.nameFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.phoneFilter.equals(otherFilter.phoneFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.emailFilter.equals(otherFilter.emailFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.specialtyFilter.equals(otherFilter.specialtyFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.yoeFilter.equals(otherFilter.yoeFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.tagsFilter.equals(otherFilter.tagsFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 isSamePatientFilter;","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bobfree546":56,"owen-yap":1,"praveenkrishna0512":48,"vigonometry":5}},{"path":"src/main/java/seedu/address/model/person/doctor/Specialty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":" * Represents a Doctor\u0027s specialty in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSpecialty(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class Specialty {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"            \"Specialty should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    /*","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"     * The first character of the specialty must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    private final String specialty;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code Specialty}.","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"     * @param specialty A valid specialty.","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    public Specialty(String specialty) {","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(specialty);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        checkArgument(isValidSpecialty(specialty), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a given string is a valid specialty.","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    public static boolean isValidSpecialty(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        return specialty;","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof Specialty // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 specialty.equals(((Specialty) other).specialty)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"        return specialty.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"        return specialty;","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"owen-yap":55,"vigonometry":6}},{"path":"src/main/java/seedu/address/model/person/doctor/UniqueDoctorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":" * A list of doctors that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":" * A doctor is considered unique by comparing using {@code Doctor#isSameDoctor(Doctor)}. As such, adding and updating of","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":" * doctors uses Doctor#isSameDoctor(Doctor) for equality so as to ensure that the doctor being added or updated is","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":" * unique in terms of identity in the UniqueDoctorList. However, the removal of a doctor uses Doctor#equals(Object) so","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":" * as to ensure that the doctor with exactly the same fields will be removed.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":" *","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":" *","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":" * @see Doctor#isSameDoctor(Doctor)","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"public class UniqueDoctorList implements Iterable\u003cDoctor\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    private final ObservableList\u003cDoctor\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    private final ObservableList\u003cDoctor\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"     * Returns true if the list contains an equivalent doctor as the given argument.","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"    public boolean contains(Doctor toCheck) {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"     * Adds a doctor to the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"     * The doctor must not already exist in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    public void add(Doctor toAdd) {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"     * Replaces the doctor {@code target} in the list with {@code editedDoctor}.","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"     * The doctor identity of {@code editedDoctor} must not be the same as another existing doctor in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(target, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"        if (!target.isSameDoctor(editedDoctor) \u0026\u0026 contains(editedDoctor)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        internalList.set(index, editedDoctor);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"    public Doctor getDoctor(int target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"        Doctor doctor \u003d internalList.get(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"        if (isNull(doctor)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        return doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"     * Removes the equivalent doctor from the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"     * The doctor must exist in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"    public void remove(Doctor toRemove) {","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors(UniqueDoctorList replacement) {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"     * Replaces the contents of this list with {@code doctors}.","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"     * {@code doctors} must not contain duplicate doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(doctors);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        if (!doctorsAreUnique(doctors)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"        internalList.setAll(doctors);","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"    public ObservableList\u003cDoctor\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"    public Iterator\u003cDoctor\u003e iterator() {","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof UniqueDoctorList // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 internalList.equals(((UniqueDoctorList) other).internalList));","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"     * Returns true if {@code doctors} contains only unique doctors.","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"    private boolean doctorsAreUnique(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"        for (int i \u003d 0; i \u003c doctors.size() - 1; i++) {","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"            for (int j \u003d i + 1; j \u003c doctors.size(); j++) {","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"                if (doctors.get(i).isSameDoctor(doctors.get(j))) {","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"                    return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"                }","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"        return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"owen-yap":149}},{"path":"src/main/java/seedu/address/model/person/doctor/Yoe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":" * Represents a Doctor\u0027s Years of Experience (YOE) in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidYoe(String)}","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class Yoe {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"            \"Years of Experience (YOE) should only contain numbers, and it should be at most 2 digits long\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"    private static final String VALIDATION_REGEX \u003d \"^0*[0-9][0-9]{0,1}$\";","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    private final String value;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code YOE}.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"     * @param yoe A valid number of years.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    public Yoe(String yoe) {","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(yoe);","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        checkArgument(isValidYoe(yoe), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"        yoe \u003d yoe.replaceFirst(\"^0+(?!$)\", \"\");","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"        value \u003d yoe;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a given string is a valid years of experience.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    public static boolean isValidYoe(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        return value;","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof Yoe // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 value.equals(((Yoe) other).value)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        return value;","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"owen-yap":51,"vigonometry":6}},{"path":"src/main/java/seedu/address/model/person/patient/Diagnosis.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":" * Represents a Patient\u0027s diagnosis in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDiagnosis(String)}","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class Diagnosis {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"            \"Diagnosis should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    /*","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"     * The first character of the diagnosis must not be a whitespace,","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    private final String diagnosis;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code Diagnosis}.","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"     * @param diagnosis A valid diagnosis.","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    public Diagnosis(String diagnosis) {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(diagnosis);","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        checkArgument(isValidDiagnosis(diagnosis), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a given string is a valid diagnosis.","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    public static boolean isValidDiagnosis(String test) {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        return diagnosis;","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof Diagnosis // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 diagnosis.equals(((Diagnosis) other).diagnosis)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        return diagnosis.hashCode();","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        return diagnosis;","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"owen-yap":58,"vigonometry":5}},{"path":"src/main/java/seedu/address/model/person/patient/Height.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":" * Represents a Patient\u0027s height in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHeight(String)}","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class Height {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"            \"Height should be a positive decimal point number with two decimal places representing the patient\u0027s height\"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"                    + \" in metres and should not be blank\";","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"    /*","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"     * The first character of the specialty must not be a whitespace,","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\s*\\\\d{1}\\\\.\\\\d{2}\\\\s*$\";","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    private final String value;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code Height}.","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"     * @param height A valid height.","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    public Height(String height) {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(height);","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        checkArgument(isValidHeight(height), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        String trimmedHeight \u003d height.trim();","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        this.value \u003d trimmedHeight;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a given string is a valid height.","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    public static boolean isValidHeight(String test) {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        return value + \" m\";","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof Height // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 value.equals(((Height) other).value)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        return value;","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"owen-yap":58,"vigonometry":5}},{"path":"src/main/java/seedu/address/model/person/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"public class Patient extends Person {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"    // Identity fields","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    private final Height height;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    private final Weight weight;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    private final Diagnosis diagnosis;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    private final Status status;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    private final Set\u003cDoctor\u003e doctors;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"    public Patient(Name name, Phone phone, Email email, Height height, Weight weight,","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"                   Diagnosis diagnosis, Status status, Remark remark, Set\u003cTag\u003e tags, Set\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(height, weight, diagnosis, status, remark, tags, doctors);","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        this.height \u003d height;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        this.doctors \u003d doctors;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"     * Initializes {@code Patient} object without {@code doctors}.","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"    public Patient(Name name, Phone phone, Email email, Height height, Weight weight,","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"                   Diagnosis diagnosis, Status status, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"        super(name, phone, email, tags);","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(height, weight, diagnosis, status, remark, tags);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        this.height \u003d height;","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"        this.doctors \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"    public Height getHeight() {","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"        return height;","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"    public Weight getWeight() {","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"        return weight;","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"    public Diagnosis getDiagnosis() {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"        return diagnosis;","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"        return status;","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"        return remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"    public Set\u003cDoctor\u003e getDoctors() {","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"        return doctors;","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"     * Returns true if patient contains supplied doctor.","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"     * @param doctor a doctor.","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return true if patient contains supplied doctor, and false otherwise.","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        return doctors.contains(doctor);","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns true if patient is assigned to any doctor","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return true if patient is assigned to any doctor, and false otherwise.","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean hasDoctors() {","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"        return doctors.size() \u003e 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"     * Removes a doctor if it exists in doctor\u0027s doctor list.","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"     * @param doctor a doctor.","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"    public void removeDoctorIfAssigned(Doctor doctor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"        if (this.hasDoctor(doctor)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"            doctors.remove(doctor);","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"     * Assigns a doctor if doctor does not exist in patient\u0027s doctor list.","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param doctor a doctor.","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"    public void assignDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!this.hasDoctor(doctor)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"            doctors.add(doctor);","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"     * Returns true if both patients have the same name.","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"    public boolean isSamePatient(Patient otherPatient) {","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherPatient.getName().equals(getName());","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"     * Returns true if both patients have the same identity and data fields.","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"        return otherPatient.getName().equals(getName())","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherPatient.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherPatient.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherPatient.getHeight().equals(getHeight())","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherPatient.getWeight().equals(getWeight())","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherPatient.getDiagnosis().equals(getDiagnosis())","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherPatient.getStatus().equals(getStatus())","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 otherPatient.getRemark().equals(getRemark())","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 otherPatient.getTags().equals(getTags());","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getHeight(), getWeight(), getDiagnosis(),","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"                getStatus(), getRemark(), getTags());","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"                .append(getPhone())","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"owen-yap"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Diagnosis: \")","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"owen-yap"},"content":"                .append(getDiagnosis())","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"owen-yap"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"owen-yap"},"content":"                .append(getStatus());","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"owen-yap"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"owen-yap"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"owen-yap"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"owen-yap"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"owen-yap"},"content":"        Set\u003cDoctor\u003e doctors \u003d getDoctors();","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"owen-yap"},"content":"        if (!doctors.isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"praveenkrishna0512"},"content":"            builder.append(\"; Doctors: | \");","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"owen-yap"},"content":"            doctors.forEach((Doctor doctor) -\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"praveenkrishna0512"},"content":"                builder.append(doctor.getName()).append(\" | \");","lastModifiedDate":"2023-04-07"},{"lineNumber":187,"author":{"gitId":"owen-yap"},"content":"            });","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"owen-yap"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"owen-yap":167,"praveenkrishna0512":24}},{"path":"src/main/java/seedu/address/model/person/patient/PatientContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":" * Tests that a {@code Patient\u0027s fields} matches the {@code PatientFilter} given.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"public class PatientContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"    private final PatientFilter patientFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public PatientContainsKeywordsPredicate(PatientFilter patientFilter) {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"        this.patientFilter \u003d patientFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"        return patientFilter.isMatch((Patient) patient);","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof PatientContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 patientFilter.equals(((PatientContainsKeywordsPredicate) other).patientFilter)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"owen-yap":28}},{"path":"src/main/java/seedu/address/model/person/patient/PatientFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":" * Filter Class for passing to PatientContainsKeywordsPredicate","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"public class PatientFilter {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    //Filter fields","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    private String nameFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    private String phoneFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    private String emailFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    private String heightFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    private String weightFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private String diagnosisFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    private String statusFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    private String remarkFilter \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private Set\u003cString\u003e tagsFilter \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private Doctor doctorFilter \u003d null;","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code PatientFilter}.","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"     * @param name name in string (can be empty string).","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"     * @param phone phone in string (can be empty string).","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"     * @param email email in string (can be empty string).","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"     * @param height height in string (can be empty string).","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"     * @param weight weight in string (can be empty string).","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"     * @param diagnosis diagnosis in string (can be empty string).","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"     * @param status status in string (can be empty string).","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"     * @param remark remark in string (can be empty string).","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"     * @param tags set of tags in string (can be empty list).","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientFilter(String name,","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"                         String phone,","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"                         String email,","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"                         String height,","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"                         String weight,","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"                         String diagnosis,","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"                         String status,","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"                         String remark, Set\u003cString\u003e tags) {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        this.nameFilter \u003d name;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        this.phoneFilter \u003d phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        this.emailFilter \u003d email;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        this.heightFilter \u003d height;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"        this.weightFilter \u003d weight;","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"        this.diagnosisFilter \u003d diagnosis;","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"        this.statusFilter \u003d status;","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"        this.remarkFilter \u003d remark;","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        this.tagsFilter \u003d tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"     * Constructs a {@code PatientFilter}.","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param doctor a doctor object (can be null).","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientFilter(Doctor doctor) {","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        this.doctorFilter \u003d doctor;","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"     * Matches filter fields to patient","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"     * Returns true if each filter field is a substring of the respective field of patient","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"    public boolean isMatch(Patient patient) {","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"        boolean result \u003d StringUtil.containsSubstringIgnoreCase(patient.getName().getValue(), nameFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(patient.getPhone().getValue(), phoneFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(patient.getEmail().getValue(), emailFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(patient.getHeight().getValue(), heightFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(patient.getWeight().getValue(), weightFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(patient.getDiagnosis().getValue(), diagnosisFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(patient.getStatus().getValue(), statusFilter)","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"                \u0026\u0026 StringUtil.containsSubstringIgnoreCase(patient.getRemark().getValue(), remarkFilter);","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        if (!tagsFilter.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"            Set\u003cString\u003e tagStringSet \u003d patient","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"                    .getTags()","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"                    .stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"                    .map(tag -\u003e tag.getTagName().toLowerCase())","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"                    .collect(Collectors.toSet());","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"            result \u003d result \u0026\u0026 tagStringSet.containsAll(tagsFilter","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"                    .stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"                    .map(String::toLowerCase)","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"                    .collect(Collectors.toSet()));","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"        if (doctorFilter !\u003d null) {","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"            result \u003d result \u0026\u0026 patient.hasDoctor(doctorFilter);","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"        return result;","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"            return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!(other instanceof PatientFilter)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"        PatientFilter otherFilter \u003d (PatientFilter) other;","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        boolean isSameDoctorFilter;","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"        if (this.doctorFilter \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"            isSameDoctorFilter \u003d otherFilter.doctorFilter \u003d\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"            isSameDoctorFilter \u003d this.doctorFilter.equals(otherFilter.doctorFilter);","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.nameFilter.equals(otherFilter.nameFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.phoneFilter.equals(otherFilter.phoneFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.emailFilter.equals(otherFilter.emailFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.heightFilter.equals(otherFilter.heightFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.weightFilter.equals(otherFilter.weightFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.diagnosisFilter.equals(otherFilter.diagnosisFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.statusFilter.equals(otherFilter.statusFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.remarkFilter.equals(otherFilter.remarkFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 this.tagsFilter.equals(otherFilter.tagsFilter)","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 isSameDoctorFilter; // state check","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"owen-yap":63,"praveenkrishna0512":60,"vigonometry":8}},{"path":"src/main/java/seedu/address/model/person/patient/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":" * Represents any remarks for a person in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class Remark {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remark should not be blank\";","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"    /*","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"     * Remark should not be blank","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s*$).+\";","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    private final String remark;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code Remarks}.","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        return remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 remark.equals(((Remark) other).remark)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        return remark.hashCode();","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        return remark;","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"owen-yap":47,"vigonometry":5,"praveenkrishna0512":2}},{"path":"src/main/java/seedu/address/model/person/patient/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":" * Represents a Patient\u0027s hospitalization status in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"public class Status {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"            \"Status should be one of the following: Inpatient, Outpatient, Observation, Emergency Department,\"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"                    + \" Intensive Care Unit, Transitional Care\";","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    private static final String VALIDATION_REGEX \u003d \"(?i)^(Inpatient|Outpatient|Observation|Emergency Department\"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"            + \"|Intensive Care Unit|Transitional Care)$\";","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Status.class);","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final ArrayList\u003cString\u003e possibleStatuses \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"            List.of(\"Inpatient\", \"Outpatient\", \"Observation\", \"Emergency Department\",","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"                    \"Intensive Care Unit\", \"Transitional Care\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    private final String status;","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"     * @param status A valid hospitalization status.","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"    public Status(String status) {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        this.status \u003d toTitleCase(status);","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a given string is a valid hospitalization status.","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"     * @param test the input string to test the validation regex against","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns a valid Status string.","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid Status string.","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"    public static String getDummyValidStatus() {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        return getDummyValidStatus(0);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns a valid Status string corresponding with the given index.","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param i an index specifying the status to retrieve.","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid Status string.","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"    public static String getDummyValidStatus(int i) {","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        if (i \u003e\u003d possibleStatuses.size()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"            logger.warning(String.format(\"Received an invalid index of %d,\"","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"                                    + \"when number of statuses available is %d\",","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"                    i, possibleStatuses.size()));","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"            logger.info(\"Retrieving default valid status instead\");","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"            return getDummyValidStatus();","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        return possibleStatuses.get(i);","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"     * Converts the input string to title case.","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"     * @param input the input string","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"    private static String toTitleCase(String input) {","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        StringBuilder titleCase \u003d new StringBuilder();","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        boolean nextTitleCase \u003d true;","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"        for (char c : input.toCharArray()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"            if (Character.isWhitespace(c)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"                nextTitleCase \u003d true;","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"            } else if (nextTitleCase) {","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"                c \u003d Character.toTitleCase(c);","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"                nextTitleCase \u003d false;","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"            titleCase.append(c);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"        return titleCase.toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"        return status;","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 status.equalsIgnoreCase(((Status) other).status)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"        return status.toLowerCase().hashCode();","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"        return status;","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"owen-yap":77,"praveenkrishna0512":38,"vigonometry":6}},{"path":"src/main/java/seedu/address/model/person/patient/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":" * A list of patients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":" * A patient is considered unique by comparing using {@code Patient#isSamePatient(Patient)}. As such, adding and","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":" * updating of patients uses Patient#isSamePatient(Patient) for equality to ensure that the patient being added","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":" * or updated is unique in terms of identity in the UniquePatientList. However, the removal of a patient uses","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":" * Patient#equals(Object) so as to ensure that the patient with exactly the same fields will be removed.","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":" *","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":" *","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":" * @see Patient#isSamePatient(Patient)","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"     * Returns true if the list contains an equivalent patient as the given argument.","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"     * Adds a patient to the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"     * The patient must not already exist in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"        if (!target.isSamePatient(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"     * Removes the equivalent patient from the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"     * The patient must exist in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    public void setPatients(UniquePatientList replacement) {","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"     * Replaces the contents of this list with {@code patients}.","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        if (!patientsAreUnique(patients)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof UniquePatientList // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 internalList.equals(((UniquePatientList) other).internalList));","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"     * Returns true if {@code patients} contains only unique patients.","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"    private boolean patientsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"                if (patients.get(i).isSamePatient(patients.get(j))) {","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"                    return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"                }","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"        return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"owen-yap":137}},{"path":"src/main/java/seedu/address/model/person/patient/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":" * Represents a Patient\u0027s weight in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidWeight(String)}","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class Weight {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"            \"Weight should be in kilograms (kg), can have at most 1 decimal place, and not equal to 0.\";","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    private static final String VALIDATION_REGEX \u003d \"^\\\\s*\\\\d+(\\\\.\\\\d)?\\\\s*$\";","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    private final String value;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code Weight}.","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"     * @param weight A valid weight in kilograms (kg).","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    public Weight(String weight) {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"        requireNonNull(weight);","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"        checkArgument(isValidWeight(weight), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"        String trimmedWeight \u003d weight.trim();","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        this.value \u003d trimmedWeight;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"     * Returns true if a given string is a valid weight.","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    public static boolean isValidWeight(String test) {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.equals(\"0\") \u0026\u0026 !test.equals(\"0.0\");","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        return value + \" kg\";","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"                || (other instanceof Weight // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"                \u0026\u0026 value.equals(((Weight) other).value)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    public String getValue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        return value;","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"owen-yap":52,"vigonometry":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String tagName;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns the tag name.","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return the tag name.","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    public String getTagName() {","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        return this.tagName;","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"            return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"        return otherTag.getTagName().equals(getTagName());","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"praveenkrishna0512":20,"-":50}},{"path":"src/main/java/seedu/address/model/util/LoaderUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"public class LoaderUtil {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"                .map(Tag::new)","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"     * Returns a patient set containing the list of patients given.","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"    public static Set\u003cPatient\u003e getPatientSet(Patient... patients) {","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"        return Arrays.stream(patients)","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"     * Returns a patient set containing the list of patients given.","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    public static Set\u003cDoctor\u003e getDoctorSet(Doctor... doctors) {","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"        return Arrays.stream(doctors)","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"vigonometry":40}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDoctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Specialty;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Yoe;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":" * Jackson-friendly version of {@link Doctor}.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"class JsonAdaptedDoctor extends JsonAdaptedPerson {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Doctor\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String specialty;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String yearsOfExperience;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"     * Constructs a {@code JsonAdaptedDoctor} with the given doctor details.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    public JsonAdaptedDoctor(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"specialty\") String specialty,","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"yearsOfExperience\") String yearsOfExperience,","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"        super(name, phone, email, tagged);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        this.specialty \u003d specialty;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        this.yearsOfExperience \u003d yearsOfExperience;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        if (patients !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"            this.patients.addAll(patients);","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     * Converts a given {@code Doctor} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    public JsonAdaptedDoctor(Doctor source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"        super(source);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        yearsOfExperience \u003d source.getYoe().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        specialty \u003d source.getSpecialty().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        patients.addAll(source.getPatients().stream()","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"                .map(JsonAdaptedPatient::new)","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Doctor} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted doctor.","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    public Doctor toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        final Specialty modelSpecialty \u003d validateSpecialty();","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        final Yoe modelYearsOfExperience \u003d validateYearsOfExperience();","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        final Set\u003cPatient\u003e modelPatients \u003d validatePatient();","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        Person doctorPerson \u003d super.toModelType();","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Doctor(doctorPerson.getName(), doctorPerson.getPhone(), doctorPerson.getEmail(),","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"                modelSpecialty, modelYearsOfExperience, doctorPerson.getTags(), modelPatients);","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the specialty supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid specialty object.","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if specialty supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"    private Specialty validateSpecialty() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"        if (specialty \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Specialty.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!Specialty.isValidSpecialty(specialty)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(Specialty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Specialty(specialty);","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the years of experience supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid years of experience object.","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if years of experience supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"    private Yoe validateYearsOfExperience() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"        if (yearsOfExperience \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Yoe.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!Yoe.isValidYoe(yearsOfExperience)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(Yoe.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Yoe(yearsOfExperience);","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the patients supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid set of patients","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if patients supplied are not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"    private Set\u003cPatient\u003e validatePatient() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"        final List\u003cPatient\u003e patientsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"        for (JsonAdaptedPatient patient : patients) {","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"            patientsList.add(patient.toModelType());","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"        return new HashSet\u003c\u003e(patientsList);","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"owen-yap":5,"praveenkrishna0512":114,"vigonometry":2}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Diagnosis;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Height;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Remark;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Weight;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"class JsonAdaptedPatient extends JsonAdaptedPerson {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String height;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String weight;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String diagnosis;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String status;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private final String remark;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"height\") String height,","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"weight\") String weight, @JsonProperty(\"diagnosis\") String diagnosis,","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"status\") String status, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"        super(name, phone, email, tagged);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        this.height \u003d height;","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"        super(source);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        this.height \u003d source.getHeight().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        this.weight \u003d source.getWeight().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        this.diagnosis \u003d source.getDiagnosis().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"        this.status \u003d source.getStatus().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"        this.remark \u003d source.getRemark().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted doctor.","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        final Height modelHeight \u003d validateHeight();","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        final Weight modelWeight \u003d validateWeight();","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        final Diagnosis modelDiagnosis \u003d validateDiagnosis();","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        final Status modelStatus \u003d validateStatus();","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        final Remark modelRemark \u003d validateRemark();","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"        Person patientPerson \u003d super.toModelType();","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Patient(patientPerson.getName(), patientPerson.getPhone(),","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"                patientPerson.getEmail(), modelHeight, modelWeight,","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"                modelDiagnosis, modelStatus, modelRemark, patientPerson.getTags());","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the height supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid height object.","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if height supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"    private Height validateHeight() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"        if (height \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Height.class.getSimpleName()));","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!Height.isValidHeight(height)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Height(height);","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the weight supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid weight object.","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if weight supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"    private Weight validateWeight() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"        if (weight \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName()));","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!Weight.isValidWeight(weight)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Weight(weight);","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the diagnosis supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid diagnosis object.","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if diagnosis supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"    private Diagnosis validateDiagnosis() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"        if (diagnosis \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Diagnosis.class.getSimpleName()));","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!Diagnosis.isValidDiagnosis(diagnosis)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(Diagnosis.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Diagnosis(diagnosis);","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the status supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid status object.","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if status supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"    private Status validateStatus() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Status(status);","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the remark supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid remark object.","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if remark supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"praveenkrishna0512"},"content":"    private Remark validateRemark() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"praveenkrishna0512"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":153,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-04-07"},{"lineNumber":154,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-04-07"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":156,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!Remark.isValidRemark(remark)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Remark(remark);","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"praveenkrishna0512":158,"vigonometry":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        name \u003d source.getName().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        phone \u003d source.getPhone().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        email \u003d source.getEmail().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        final Name modelName \u003d validateName();","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        final Phone modelPhone \u003d validatePhone();","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        final Email modelEmail \u003d validateEmail();","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        final Set\u003cTag\u003e modelTags \u003d validateTags();","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelTags);","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the name supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid name object.","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if name supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    private Name validateName() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Name(name);","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the phone supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid phone object.","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if phone supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"    private Phone validatePhone() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Phone(phone);","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the email supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid email object.","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if email supplied is not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"    private Email validateEmail() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Email(email);","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"     * Validate the tags supplied from storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a valid set of tags","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException if tags supplied are not valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"    private Set\u003cTag\u003e validateTags() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"        return new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"owen-yap":1,"praveenkrishna0512":49,"vigonometry":3,"-":82}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"praveenkrishna0512":1,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"praveenkrishna0512":1,"-":79}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"@JsonRootName(value \u003d \"docedex\")","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    public static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"Doctors list contains duplicate doctors(s).\";","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patients list contains duplicate patient(s).\";","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    private final List\u003cJsonAdaptedDoctor\u003e doctors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    private final List\u003cJsonAdaptedPatient\u003e unassignedPatients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given doctors and patients.","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"doctors\") List\u003cJsonAdaptedDoctor\u003e doctors,","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"                                       @JsonProperty(\"unassignedPatients\")","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"                                               List\u003cJsonAdaptedPatient\u003e unassignedPatients) {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"        this.doctors.addAll(doctors);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        this.unassignedPatients.addAll(unassignedPatients);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        doctors.addAll(source.getDoctorList().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"                .map(JsonAdaptedDoctor::new)","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"        unassignedPatients.addAll(source.getUnassignedPatientList().stream()","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"                .map(JsonAdaptedPatient::new)","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        loadDoctorsAndTheirAssignedPatients(addressBook);","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        loadAssignmentOfPatientsToDoctors(addressBook);","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        loadUnassignedPatients(addressBook);","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        return addressBook;","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"     * Load the doctors and their assigned patients into the address book.","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param addressBook the address book to load","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException when doctor or patients have illegal values as attributes","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"    private void loadDoctorsAndTheirAssignedPatients(AddressBook addressBook)","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"            throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"        for (JsonAdaptedDoctor jsonAdaptedDoctor : doctors) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"            Doctor doctor \u003d jsonAdaptedDoctor.toModelType();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"            if (addressBook.hasDoctor(doctor)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"            addressBook.addDoctor(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"            Set\u003cPatient\u003e patientsAdded \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"            for (Patient patient : doctor.getPatients()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"                // Do not perform a check for duplicate patients here","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"                // as the patients are bound to be stored multiple","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"                // times under the different doctors they are assigned to.","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"                if (patientsAdded.contains(patient)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"                    throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"                if (!addressBook.hasPatient(patient)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"                    addressBook.addPatient(patient);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"                patientsAdded.add(patient);","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"     * Load the assignment of patients to their respective doctors into the address book.","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param addressBook the address book to load","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"    private void loadAssignmentOfPatientsToDoctors(AddressBook addressBook) {","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"        ObservableList\u003cPatient\u003e addressBookPatientList \u003d addressBook.getPatientList();","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"        ObservableList\u003cDoctor\u003e addressBookDoctorList \u003d addressBook.getDoctorList();","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"        for (Patient patient : addressBookPatientList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"            for (Doctor doctor : addressBookDoctorList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"                if (doctor.hasPatient(patient)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"                    patient.assignDoctor(doctor);","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"     * Load the unassigned patients into the address book.","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param addressBook the address book to load","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"     * @throws IllegalValueException when the patients have illegal values as attributes","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"    private void loadUnassignedPatients(AddressBook addressBook)","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"            throws IllegalValueException {","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"        for (JsonAdaptedPatient jsonAdaptedPatient : unassignedPatients) {","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"            Patient patient \u003d jsonAdaptedPatient.toModelType();","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"            if (addressBook.hasPatient(patient)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"            addressBook.addPatient(patient);","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"owen-yap":3,"praveenkrishna0512":80,"-":52}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code JsonUserPrefsStorage} with the given {@code filePath}.","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param filePath the filepath to the user preference storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"praveenkrishna0512":5,"-":47}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private final AddressBookStorage addressBookStorage;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        logger.log(Level.INFO, \"Updating the file manually may result in unexpected behaviour and/or data loss\");","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vigonometry":1,"praveenkrishna0512":3,"-":76}},{"path":"src/main/java/seedu/address/ui/ContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":" * A UI component that displays key information about a Doctor or Patient","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":" * within a list view.","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"abstract class ContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code ContactCard}","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    public ContactCard(String fxmlFilePath) {","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"        super(fxmlFilePath);","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"     * Adds a tag to the flow pane containing all tags.","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param tag a tag.","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    protected void addTagToFlowPane(Tag tag) {","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"        TagLabel tagLabel \u003d new TagLabel(tag);","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        tags.getChildren().add(tagLabel);","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"praveenkrishna0512":34}},{"path":"src/main/java/seedu/address/ui/ContactDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":" * The Contact Display displaying the list of doctors,","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":" * patients and their respective information.","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"public class ContactDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"ContactDisplay.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ContactDisplay.class);","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private Logic logic;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    private EnlargedDoctorInfoCard enlargedDoctorInfoCard;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    private EnlargedPatientInfoCard enlargedPatientInfoCard;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    private DoctorListPanel doctorListPanel;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    private GridPane contactDisplay;","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    private StackPane enlargedPersonInfoCardPlaceholder;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"    private StackPane doctorListPanelPlaceholder;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code ContactDisplay}","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"     * with the given {@code Logic}.","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    public ContactDisplay(Logic logic) {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"        fillInnerParts();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"     * Fills up all the placeholders of this {@code ContactDisplay}.","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"    private void fillInnerParts() {","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedDoctorInfoCard \u003d new EnlargedDoctorInfoCard();","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedPatientInfoCard \u003d new EnlargedPatientInfoCard();","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedPersonInfoCardPlaceholder.getChildren().add(enlargedDoctorInfoCard.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList(), this);","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListPanel \u003d new DoctorListPanel(logic.getFilteredDoctorList(), this);","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListPanelPlaceholder.getChildren().add(doctorListPanel.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the contact display based on user command.","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param commandResult a command result.","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setFeedbackToUser(CommandResult commandResult) {","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"        // If command does not need GUI Interaction, function call ends.","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!commandResult.hasGuiInteraction()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"            logger.info(\"Command did not result in GUI Interaction\");","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"        setFeedbackIfDoctorSelected(commandResult);","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"        setFeedbackIfPatientSelected(commandResult);","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the contact display if user selected a doctor.","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param commandResult a command result.","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"    private void setFeedbackIfDoctorSelected(CommandResult commandResult) {","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"        Optional\u003cDoctor\u003e selectedDoctor \u003d commandResult.getSelectedDoctor();","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"        selectedDoctor.ifPresent(this::setFeedbackUponSelectingDoctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the contact display to show the doctor selected by user.","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param selectedDoctor a doctor selected by user.","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"    protected void setFeedbackUponSelectingDoctor(Doctor selectedDoctor) {","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(selectedDoctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"        logic.updateFilteredPatientListBasedOnDoctor(selectedDoctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListPanel.selectDoctor(selectedDoctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedDoctorInfoCard.updateSelectedDoctor(selectedDoctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedPersonInfoCardPlaceholder.getChildren().clear();","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedPersonInfoCardPlaceholder.getChildren().add(enlargedDoctorInfoCard.getRoot());","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the contact display if user selected a patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param commandResult a command result.","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"    private void setFeedbackIfPatientSelected(CommandResult commandResult) {","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"        Optional\u003cPatient\u003e selectedPatient \u003d commandResult.getSelectedPatient();","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"        selectedPatient.ifPresent(this::setFeedbackUponSelectingPatient);","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the contact display to show the patient selected by user.","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param selectedPatient a patient selected by user.","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"    protected void setFeedbackUponSelectingPatient(Patient selectedPatient) {","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(selectedPatient);","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"        logic.updateFilteredDoctorListBasedOnPatient(selectedPatient);","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"        patientListPanel.selectPatient(selectedPatient);","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedPatientInfoCard.updateSelectedPatient(selectedPatient);","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedPersonInfoCardPlaceholder.getChildren().clear();","lastModifiedDate":"2023-04-06"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"        enlargedPersonInfoCardPlaceholder.getChildren().add(enlargedPatientInfoCard.getRoot());","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"praveenkrishna0512":135}},{"path":"src/main/java/seedu/address/ui/DoctorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":" * An UI component that displays the name, phone number, email and tags of a {@code Doctor}.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"public class DoctorCard extends ContactCard {","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"DoctorListCard.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    public final Doctor doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code DoctorCard} with the given {@code Doctor} and index to display.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"    public DoctorCard(Doctor doctor, int displayedIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        name.setText(doctor.getName().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        phone.setText(doctor.getPhone().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        email.setText(doctor.getEmail().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        doctor.getTags().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"                .sorted(Comparator.comparing(Tag::getTagName))","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"                .forEach(this::addTagToFlowPane);","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!(other instanceof DoctorCard)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        DoctorCard card \u003d (DoctorCard) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 doctor.equals(card.doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"owen-yap":1,"praveenkrishna0512":16,"vigonometry":3,"-":48}},{"path":"src/main/java/seedu/address/ui/DoctorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":" * Panel containing the list of doctors.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"public class DoctorListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"DoctorListPanel.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DoctorListPanel.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private ListView\u003cDoctor\u003e doctorListView;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code DoctorListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    public DoctorListPanel(ObservableList\u003cDoctor\u003e doctorList,","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"                           ContactDisplay parent) {","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        super(FXML);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListView.setItems(doctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListView.setCellFactory(listView -\u003e new DoctorListViewCell(parent));","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"     * Selects the {@code DoctorListViewCell} of the {@code Doctor} supplied.","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param doctor selected doctor.","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    public void selectDoctor(Doctor doctor) {","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"        doctorListView.getSelectionModel().select(doctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Doctor} using a {@code DoctorCard}.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    class DoctorListViewCell extends ListCell\u003cDoctor\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"        private Doctor doctor;","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        public DoctorListViewCell(ContactDisplay grandparent) {","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"            super();","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"            this.addEventHandler(MouseEvent.MOUSE_CLICKED, event -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"                if (doctor \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"                    logger.warning(\"DoctorListViewCell is not populated\");","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"                    return;","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"                }","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"                grandparent.setFeedbackUponSelectingDoctor(doctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"            });","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        protected void updateItem(Doctor doctor, boolean empty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"            super.updateItem(doctor, empty);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"            if (empty || doctor \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"                setText(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"                setGraphic(new DoctorCard(doctor, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":1,"praveenkrishna0512":78}},{"path":"src/main/java/seedu/address/ui/EnlargedDoctorInfoCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":" * An UI component that displays all information of a {@code Doctor}.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"public class EnlargedDoctorInfoCard extends EnlargedInfoCard {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"EnlargedDoctorInfoCard.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private Doctor selectedDoctor;","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private VBox enlargedDoctorInfoCard;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label name;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label email;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label specialty;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label yearsOfExperience;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates an empty {@code EnlargedDoctorInfoCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    public EnlargedDoctorInfoCard() {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        super(FXML);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        clearDisplay();","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the selected doctor stored in {@code EnlargedDoctorInfoCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param selectedDoctor the given {@code Doctor}","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateSelectedDoctor(Doctor selectedDoctor) {","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"        this.selectedDoctor \u003d selectedDoctor;","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"        updateDisplay();","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the information shown on the {@code EnlargedDoctorInfoCard}","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"     * with that of the stored {@code Doctor}.","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"     * If no doctor is stored, then the {@code EnlargedDoctorInfoCard} is cleared.","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    private void updateDisplay() {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        clearDisplay();","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        if (selectedDoctor \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"            return;","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"        name.setText(selectedDoctor.getName().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"        phone.setText(selectedDoctor.getPhone().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        email.setText(selectedDoctor.getEmail().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"        specialty.setText(selectedDoctor.getSpecialty().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"        yearsOfExperience.setText(selectedDoctor.getYoe().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"        selectedDoctor.getTags().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"                .sorted(Comparator.comparing(Tag::getTagName))","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"                .forEach(this::addTagToFlowPane);","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"     * Clears the information shown on the {@code EnlargedDoctorInfoCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"    public void clearDisplay() {","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"        name.setText(\"\");","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"        phone.setText(\"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"        email.setText(\"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"        specialty.setText(\"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        yearsOfExperience.setText(\"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"        this.clearTags();","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!(other instanceof EnlargedDoctorInfoCard)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"        // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"        EnlargedDoctorInfoCard card \u003d (EnlargedDoctorInfoCard) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"        if (selectedDoctor \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"            return card.selectedDoctor \u003d\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"        return selectedDoctor.equals(card.selectedDoctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"owen-yap":1,"praveenkrishna0512":105,"vigonometry":5}},{"path":"src/main/java/seedu/address/ui/EnlargedInfoCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":" * A UI component that displays all information about a Doctor or Patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"abstract class EnlargedInfoCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code EnlargedInfoCard}","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    public EnlargedInfoCard(String fxmlFilePath) {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"        super(fxmlFilePath);","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"     * Adds a tag to the flow pane containing all tags.","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param tag a tag.","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    protected void addTagToFlowPane(Tag tag) {","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"        TagLabel tagLabel \u003d new TagLabel(tag);","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"        tags.getChildren().add(tagLabel);","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"     * Clears all tags in the flow pane.","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    protected void clearTags() {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"praveenkrishna0512":40}},{"path":"src/main/java/seedu/address/ui/EnlargedPatientInfoCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":" * An UI component that displays all information of a {@code Patient}.","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"public class EnlargedPatientInfoCard extends EnlargedInfoCard {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"EnlargedPatientInfoCard.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private Patient selectedPatient;","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private VBox enlargedPatientInfoCard;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label name;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label email;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label height;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label weight;","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label diagnosis;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label status;","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label remark;","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates an empty {@code EnlargedPatientInfoCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"    public EnlargedPatientInfoCard() {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"        clearDisplay();","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the selected patient stored in {@code EnlargedPatientInfoCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param selectedPatient the given {@code Patient}","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateSelectedPatient(Patient selectedPatient) {","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"        this.selectedPatient \u003d selectedPatient;","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"        updateDisplay();","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"     * Updates the information shown on the {@code EnlargedPatientInfoCard}","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"     * with that of the stored {@code Patient}.","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"     * If no patient is stored, then the {@code EnlargedPatientInfoCard} is cleared.","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"    private void updateDisplay() {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        clearDisplay();","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"        if (selectedPatient \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"            return;","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"        name.setText(selectedPatient.getName().getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        phone.setText(selectedPatient.getPhone().getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"        email.setText(selectedPatient.getEmail().getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"        height.setText(selectedPatient.getHeight().getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"        weight.setText(selectedPatient.getWeight().getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"        diagnosis.setText(selectedPatient.getDiagnosis().getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"        status.setText(selectedPatient.getStatus().getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"        remark.setText(selectedPatient.getRemark().getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"        selectedPatient.getTags().stream()","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"                .sorted(Comparator.comparing(Tag::getTagName))","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"                .forEach(this::addTagToFlowPane);","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"     * Clears the information shown on the {@code EnlargedPatientInfoCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"    public void clearDisplay() {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"        name.setText(\"\");","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"        phone.setText(\"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"        email.setText(\"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"        height.setText(\"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"        weight.setText(\"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"        diagnosis.setText(\"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"        status.setText(\"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"        remark.setText(\"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"        this.clearTags();","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!(other instanceof EnlargedPatientInfoCard)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"        // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"        EnlargedPatientInfoCard card \u003d (EnlargedPatientInfoCard) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"        if (selectedPatient \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"            return card.selectedPatient \u003d\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"        return selectedPatient.equals(card.selectedPatient);","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"praveenkrishna0512":122}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":" * A UI component representing the Help Window.","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-f12-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"praveenkrishna0512":2,"-":100}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    private ContactDisplay contactDisplay;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    private StackPane contactDisplayPlaceholder;","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"    private StackPane statusBarPlaceholder;","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        contactDisplay \u003d new ContactDisplay(logic);","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"        contactDisplayPlaceholder.getChildren().add(contactDisplay.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"        statusBarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"praveenkrishna0512"},"content":"            logger.info(\"Result: \" + commandResult.getCliFeedbackToUser());","lastModifiedDate":"2023-04-05"},{"lineNumber":175,"author":{"gitId":"praveenkrishna0512"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getCliFeedbackToUser());","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"praveenkrishna0512"},"content":"            contactDisplay.setFeedbackToUser(commandResult);","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"praveenkrishna0512"},"content":"            if (commandResult.shouldShowHelp()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"praveenkrishna0512"},"content":"            if (commandResult.shouldExit()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"praveenkrishna0512":11,"-":182}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":" * An UI component that displays the name, phone number, email and tags of a {@code Patient}.","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"public class PatientCard extends ContactCard {","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    public final Patient patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label name;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label id;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    private Label email;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code PatientCard} with the given {@code Patient} and index to display.","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        name.setText(patient.getName().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        phone.setText(patient.getPhone().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        email.setText(patient.getEmail().getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        patient.getTags().stream()","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"                .sorted(Comparator.comparing(Tag::getTagName))","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"                .forEach(this::addTagToFlowPane);","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        if (!(other instanceof PatientCard)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        PatientCard card \u003d (PatientCard) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"                \u0026\u0026 patient.equals(card.patient);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"praveenkrishna0512":65,"vigonometry":3}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":" * Panel containing the list of patients.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientListPanel.class);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList,","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"                            ContactDisplay parent) {","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell(parent));","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"     * Selects the {@code PatientListViewCell} of the {@code Patient} supplied.","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"     * @param patient selected patient.","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    public void selectPatient(Patient patient) {","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        patientListView.getSelectionModel().select(patient);","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"        private Patient patient;","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        public PatientListViewCell(ContactDisplay grandparent) {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"            super();","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"            this.addEventHandler(MouseEvent.MOUSE_CLICKED, event -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"                if (patient \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"                    logger.warning(\"PatientListViewCell is not populated\");","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"                    return;","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"                }","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"                grandparent.setFeedbackUponSelectingPatient(patient);","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"            });","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"                setText(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"            } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"praveenkrishna0512":78}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":" * A UI component for the result display that provides feedback to the user upon commands.","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"praveenkrishna0512":1,"-":27}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":" * A UI component representing the status bar that is displayed at the footer of the application.","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":1,"-":27}},{"path":"src/main/java/seedu/address/ui/TagLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":" * An UI component that displays the tag of a doctor or patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"public class TagLabel extends Label {","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code TagLabel}.","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    public TagLabel(Tag tag) {","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"        this.setText(tag.getTagName());","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"        double tagMaxWidth \u003d 150.0;","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"        this.setMaxWidth(tagMaxWidth);","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        boolean tagWrapText \u003d true;","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"        this.setWrapText(tagWrapText);","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"praveenkrishna0512":22}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/css/DarkTheme.css\");","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"praveenkrishna0512":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cStackPane styleClass\u003d\"command-box, primary-border\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"praveenkrishna0512":1,"-":8}},{"path":"src/main/resources/view/ContactDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cGridPane fx:id\u003d\"contactDisplay\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"          prefHeight\u003d\"99999\" minWidth\u003d\"850.0\" prefWidth\u003d\"850.0\"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"          alignment\u003d\"CENTER_LEFT\" hgap\u003d\"10\" vgap\u003d\"10\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cInsets top\u003d\"5\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"250\" prefWidth\u003d\"250\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cVBox fx:id\u003d\"doctorList\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"          GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cStackPane fx:id\u003d\"doctorListPanelPlaceholder\" prefHeight\u003d\"99999\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"250\" prefWidth\u003d\"250\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cVBox fx:id\u003d\"patientList\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"          GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" prefHeight\u003d\"99999\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"350\" prefWidth\u003d\"350\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cVBox fx:id\u003d\"enlargedContactPane\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"          GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cStackPane fx:id\u003d\"enlargedPersonInfoCardPlaceholder\" prefHeight\u003d\"99999\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"praveenkrishna0512":33}},{"path":"src/main/resources/view/DoctorListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" styleClass\u003d\"contact-card-pane\"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cInsets right\u003d\"5\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"          styleClass\u003d\"only-bottom-primary-border\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" minWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":9,"-":31}},{"path":"src/main/resources/view/DoctorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"primary-border\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"only-bottom-primary-border\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel fx:id\u003d\"contactListTitle\" styleClass\u003d\"label-header-3\" text\u003d\"Doctors\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cListView fx:id\u003d\"doctorListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"contact-listview\"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":7,"-":6}},{"path":"src/main/resources/view/EnlargedDoctorInfoCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cVBox fx:id\u003d\"enlargedDoctorInfoCard\" styleClass\u003d\"enlarged-contact-card, primary-border\"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"title-background, only-bottom-primary-border\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel text\u003d\"Selected Doctor\" styleClass\u003d\"label-header-3\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cScrollPane fitToWidth\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"              styleClass\u003d\"enlarged-contacts-details-scroll-pane, edge-to-edge\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cVBox styleClass\u003d\"enlarged-contacts-details-pane\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cInsets top\u003d\"15\" right\u003d\"15\" bottom\u003d\"15\" left\u003d\"15\"/\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Name:\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"value-label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Phone Number:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"value-label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Email:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"value-label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Specialty:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"specialty\" styleClass\u003d\"value-label\" text\u003d\"\\$specialty\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Years of Experience:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"yearsOfExperience\" styleClass\u003d\"value-label\" text\u003d\"\\$yearsOfExperience\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Tags:\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" minWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"praveenkrishna0512":35}},{"path":"src/main/resources/view/EnlargedPatientInfoCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cVBox fx:id\u003d\"enlargedPatientInfoCard\" styleClass\u003d\"enlarged-contact-card, primary-border\"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"title-background, only-bottom-primary-border\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel text\u003d\"Selected Patient\" styleClass\u003d\"label-header-3\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cScrollPane fitToWidth\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"              styleClass\u003d\"enlarged-contacts-details-scroll-pane, edge-to-edge\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cVBox styleClass\u003d\"enlarged-contacts-details-pane\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cInsets top\u003d\"15\" right\u003d\"15\" bottom\u003d\"15\" left\u003d\"15\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Name:\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"value-label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Phone Number:\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"value-label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Email:\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"value-label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Height:\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"height\" styleClass\u003d\"value-label\" text\u003d\"\\$height\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Weight:\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"weight\" styleClass\u003d\"value-label\" text\u003d\"\\$weight\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Diagnosis:\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"diagnosis\" styleClass\u003d\"value-label\" text\u003d\"\\$diagnosis\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Status:\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"value-label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Remark:\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"value-label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cLabel styleClass\u003d\"description-label\" text\u003d\"Tags:\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" minWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"praveenkrishna0512":41}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cURL value\u003d\"@css/HelpWindow.css\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"praveenkrishna0512":1,"-":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"         title\u003d\"Docedex\" minWidth\u003d\"1000\" minHeight\u003d\"750\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cURL value\u003d\"@css/DarkTheme.css\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"        \u003cURL value\u003d\"@css/Extensions.css\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cVBox styleClass\u003d\"background\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\" styleClass\u003d\"menu-bar\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"          \u003cVBox styleClass\u003d\"body\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\"","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"                       minHeight\u003d\"125\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"contactDisplayPlaceholder\"","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"                       minHeight\u003d\"250\" maxHeight\u003d\"700\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"          \u003cStackPane fx:id\u003d\"statusBarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"praveenkrishna0512":15,"-":46}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" styleClass\u003d\"contact-card-pane\"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cInsets right\u003d\"5\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"          styleClass\u003d\"only-bottom-primary-border\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" minWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"praveenkrishna0512":9,"-":31}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"primary-border\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"only-bottom-primary-border\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"    \u003cLabel fx:id\u003d\"contactListTitle\" styleClass\u003d\"label-header-3\" text\u003d\"Patients\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cListView fx:id\u003d\"patientListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"contact-listview\"/\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"praveenkrishna0512":13}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"\u003cStackPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"praveenkrishna0512":2,"-":6}},{"path":"src/main/resources/view/css/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":" * Background Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #0A1928;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"    background-color: #0A1928; /* Used in the default.html file */","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":" * Menu Bar Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":".menu-bar {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #0059B2;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":".menu .left-container {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":" * Application Body Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":".body {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 5 5 5 5;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":" * Command Box Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":".command-box {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #2A3745;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":" * Result Display Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":".result-display {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-control-inner-background: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":" * Contact Pane Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":".contact-listview {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":".contact-listview .scroll-bar:vertical {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":" * Contact Card Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":".contact-card-pane {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"#cardPane {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #000534;","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":" * Enlarged Contact Card Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contact-card {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contacts-details-scroll-pane {","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background: #001E3C;","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contacts-details-scroll-pane .scroll-bar:vertical {","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contacts-details-pane {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contact-card .description-label {","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: #828282;","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 4 0 0 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":".enlarged-contact-card .value-label {","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-min-width: 250;","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":" * Scroll Bar styles","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar {","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-color: #A0A0A0;","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-width: 0px 0px 0px 1px;","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #99CCFF;","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-radius: 100px;","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":" * Label Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":".title-background {","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #0A1928;","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"praveenkrishna0512"},"content":".label-header-3 {","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: #3399FF;","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"praveenkrishna0512"},"content":" * Border Styles","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"praveenkrishna0512"},"content":".primary-border {","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-color: #A0A0A0;","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"praveenkrishna0512"},"content":".only-bottom-primary-border {","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-color: #A0A0A0;","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"praveenkrishna0512"},"content":" * ID based stylings","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"praveenkrishna0512"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"praveenkrishna0512"},"content":"#commandTextField {","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"praveenkrishna0512"},"content":"#filterField, #doctorListPanel, #personWebpage {","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"praveenkrishna0512"},"content":"#tags {","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"praveenkrishna0512"},"content":"#tags .label {","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":231,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":232,"author":{"gitId":"praveenkrishna0512"},"content":"#resultDisplay .scroll-bar:vertical {","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"praveenkrishna0512"},"content":"   -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-31"},{"lineNumber":234,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":235,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":236,"author":{"gitId":"praveenkrishna0512"},"content":"#resultDisplay .scroll-bar:horizontal {","lastModifiedDate":"2023-03-31"},{"lineNumber":237,"author":{"gitId":"praveenkrishna0512"},"content":"   -fx-background-color: #001E3C;","lastModifiedDate":"2023-03-31"},{"lineNumber":238,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":239,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":240,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":241,"author":{"gitId":"praveenkrishna0512"},"content":"/*","lastModifiedDate":"2023-03-09"},{"lineNumber":242,"author":{"gitId":"praveenkrishna0512"},"content":" * Unorganized styles","lastModifiedDate":"2023-03-09"},{"lineNumber":243,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":308,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2023-03-21"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"praveenkrishna0512"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2023-03-21"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":345,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":351,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":354,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":358,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":387,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":389,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":391,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":393,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":398,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":410,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":412,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":415,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":416,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":417,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":419,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":425,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":427,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":431,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":433,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":436,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":438,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":440,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":442,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":444,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":446,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":448,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":450,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":454,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":456,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":458,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":460,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":465,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":216,"-":249}},{"path":"src/main/resources/view/css/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":" * Background Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #FEFAE0;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"    background-color: #FEFAE0; /* Used in the default.html file */","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":" * Menu Bar Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":".menu-bar {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #7D6D61;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":".menu .left-container {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":" * Application Body Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":".body {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    -fx-padding: 5 5 5 5;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":" * Command Box Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":".command-box {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #FEFEFA;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":" * Result Display Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":".result-display {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"    -fx-control-inner-background: #FEFEFA;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    -fx-text-fill: #0A1928;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":" * Contact Pane Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":".contact-listview {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #FEFAE0;","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":" * Contact Card Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":".contact-card-pane {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #7D6D61;","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"#cardPane {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #7D6D61;","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #A4BEF3;","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":" * Enlarged Contact Card Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":".enlarged-contact-card {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #FEFAE0;","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":".enlarged-contacts-details-pane {","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #7D6D61;","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":".enlarged-contact-card .description-label {","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"    -fx-text-fill: #FEFEFA;","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"    -fx-padding: 4 0 0 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":".enlarged-contact-card .value-label {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"    -fx-text-fill: #FEFEFA;","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":" * Scroll Bar styles","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":".scroll-bar {","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"    -fx-border-color: #A0A0A0;","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"    -fx-border-width: 0px 0px 0px 1px;","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #99CCFF;","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"    -fx-border-radius: 100px;","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":" * Label Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"vigonometry"},"content":".label-header-3 {","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"vigonometry"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"vigonometry"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"vigonometry"},"content":"    -fx-text-fill: #0A1928;","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"vigonometry"},"content":" * Border Styles","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"vigonometry"},"content":".primary-border {","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"vigonometry"},"content":"    -fx-border-color: #A0A0A0;","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"vigonometry"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"vigonometry"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"vigonometry"},"content":".only-bottom-primary-border {","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"vigonometry"},"content":"    -fx-border-color: #A0A0A0;","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"vigonometry"},"content":"    -fx-border-width: 0px 0px 1px 0px;","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"vigonometry"},"content":" * ID based stylings","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"vigonometry"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"vigonometry"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"vigonometry"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"vigonometry"},"content":"#commandTextField {","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"vigonometry"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"vigonometry"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"vigonometry"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"vigonometry"},"content":"    -fx-text-fill: #0A1928;","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"vigonometry"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"vigonometry"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"vigonometry"},"content":"#tags {","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"vigonometry"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"vigonometry"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"vigonometry"},"content":"#tags .label {","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"vigonometry"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"vigonometry"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"vigonometry"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"vigonometry"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"vigonometry"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"vigonometry"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"vigonometry"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"vigonometry"},"content":" * Unorganized styles","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2023-03-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-03-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-03-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2023-03-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2023-03-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-03-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2023-03-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2023-03-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2023-03-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-03-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-03-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2023-03-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-03-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2023-03-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-03-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-03-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2023-03-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2023-03-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-03-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2023-03-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":440,"author":{"gitId":"vigonometry"},"content":"/** Empty Cell background color */","lastModifiedDate":"2023-03-23"},{"lineNumber":441,"author":{"gitId":"vigonometry"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-23"},{"lineNumber":442,"author":{"gitId":"vigonometry"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-03-23"},{"lineNumber":443,"author":{"gitId":"vigonometry"},"content":"    -fx-background: #FEFAE0;","lastModifiedDate":"2023-03-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":192,"-":252}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.ListDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"        String listDoctorCommand \u003d ListDoctorCommand.COMMAND_WORD;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(listDoctorCommand, ListDoctorCommand.getMessageSuccess(), model);","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"    public void getFilteredDoctorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredDoctorList().remove(0));","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPatientList().remove(0));","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"    public void updateFilteredDoctorList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"        assertDoesNotThrow(() -\u003e logic.updateFilteredDoctorList(p -\u003e true));","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"    public void updateFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"        assertDoesNotThrow(() -\u003e logic.updateFilteredPatientList(p -\u003e true));","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"    public void updateFilteredDoctorListBasedOnPatient_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"        assertDoesNotThrow(() -\u003e logic.updateFilteredDoctorListBasedOnPatient(new PatientBuilder().build()));","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"    public void updateFilteredPatientListBasedOnDoctor_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"        assertDoesNotThrow(() -\u003e logic.updateFilteredPatientListBasedOnDoctor(new DoctorBuilder().build()));","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"    public void getAddressBookFilePath_success() {","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        Path expectedPath \u003d java.nio.file.Paths.get(\"data/docedex.json\");","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"        assertEquals(logic.getAddressBookFilePath(), expectedPath);","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"    public void getGuiSettings_success() {","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"        assertEquals(logic.getGuiSettings(), model.getGuiSettings());","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"    public void setGuiSettings_success() {","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"        logic.setGuiSettings(model.getGuiSettings());","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"        assertEquals(logic.getGuiSettings(), model.getGuiSettings());","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"        assertEquals(expectedMessage, result.getCliFeedbackToUser());","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Bobfree546":2,"vigonometry":50,"praveenkrishna0512":1,"-":136}},{"path":"src/test/java/seedu/address/logic/commands/AddDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.ModelStub;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"public class AddDoctorCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    public void constructor_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDoctorCommand(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    public void execute_doctorAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommandTest.ModelStubAcceptingDoctorAdded modelStub \u003d new AddDoctorCommandTest","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"                .ModelStubAcceptingDoctorAdded();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        CommandResult commandResult \u003d new AddDoctorCommand(validDoctor).execute(modelStub);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        assertEquals(String.format(AddDoctorCommand.getMessageSuccess(), validDoctor),","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"                commandResult.getCliFeedbackToUser());","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        assertEquals(Arrays.asList(validDoctor), modelStub.doctorsAdded);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    public void execute_duplicateDoctor_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommand addDoctorCommand \u003d new AddDoctorCommand(validDoctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        ModelStub modelStub \u003d new AddDoctorCommandTest.ModelStubWithDoctor(validDoctor);","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        assertThrows(CommandException.class, AddDoctorCommand.getMessageDuplicateDoctor(), () -\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"                addDoctorCommand.execute(modelStub));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsage_success() {","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d AddDoctorCommand.COMMAND_WORD + \" (short form: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"                + AddDoctorCommand.SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"                + \": Adds a doctor to the address book. \"","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_SPECIALTY + \"SPECIALTY \"","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_YOE + \"YEARS OF EXPERIENCE \"","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + AddDoctorCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_SPECIALTY + \"Cardiology \"","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_YOE + \"5 \"","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_TAG + \"surgeon\";","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"        assertEquals(AddDoctorCommand.getCommandUsage(), messageUsage);","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"    public void execute_addDoctor_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"New doctor added: %1$s\";","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"        assertEquals(String.format(AddDoctorCommand.getMessageSuccess(), validDoctor), String.format(messageSuccess,","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"                validDoctor));","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"    public void execute_addDoctor_getMessageDuplicateDoctorSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"        String messageDuplicateDoctor \u003d \"This doctor already exists in the address book\";","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"        assertEquals(AddDoctorCommand.getMessageDuplicateDoctor(), messageDuplicateDoctor);","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"        Doctor alice \u003d new DoctorBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"        Doctor bob \u003d new DoctorBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommand addAliceCommand \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommand addBobCommand \u003d new AddDoctorCommand(bob);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"        AddDoctorCommand addAliceCommandCopy \u003d new AddDoctorCommand(alice);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"     * A Model stub that contains a single doctor.","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"    private class ModelStubWithDoctor extends ModelStub {","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"        private final Doctor doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"        ModelStubWithDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"vigonometry"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"vigonometry"},"content":"            return this.doctor.isSameDoctor(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"vigonometry"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"vigonometry"},"content":"    private class ModelStubAcceptingDoctorAdded extends ModelStub {","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"vigonometry"},"content":"        final ArrayList\u003cDoctor\u003e doctorsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"vigonometry"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"vigonometry"},"content":"            return doctorsAdded.stream().anyMatch(doctor::isSamePerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"vigonometry"},"content":"        public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"vigonometry"},"content":"            doctorsAdded.add(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"vigonometry"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"vigonometry"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":1,"vigonometry":159,"praveenkrishna0512":3}},{"path":"src/test/java/seedu/address/logic/commands/AddPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ModelStub;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"public class AddPatientCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPatientCommand(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"        AddPatientCommandTest.ModelStubAcceptingPatientAdded modelStub \u003d new AddPatientCommandTest","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"                .ModelStubAcceptingPatientAdded();","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        CommandResult commandResult \u003d new AddPatientCommand(validPatient).execute(modelStub);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        assertEquals(String.format(AddPatientCommand.getMessageSuccess(), validPatient),","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"                commandResult.getCliFeedbackToUser());","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.patientsAdded);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        AddPatientCommand addPatientCommand \u003d new AddPatientCommand(validPatient);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        ModelStub modelStub \u003d new AddPatientCommandTest.ModelStubWithPatient(validPatient);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        assertThrows(CommandException.class, AddPatientCommand.getMessageDuplicatePatient(), () -\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"                addPatientCommand.execute(modelStub));","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsage_success() {","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d AddPatientCommand.COMMAND_WORD + \" (short form: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"                + AddPatientCommand.SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"                + \": Adds a patient to the address book.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_HEIGHT + \"HEIGHT \"","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_WEIGHT + \"WEIGHT \"","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_DIAGNOSIS + \"DIAGNOSIS \"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + AddPatientCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_EMAIL + \"jdoe@gmail.com \"","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_HEIGHT + \"1.85 \"","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_WEIGHT + \"70.5 \"","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_DIAGNOSIS + \"Fever \"","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_STATUS + \"Outpatient \"","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_REMARK + \"No known allergies \"","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_TAG + \"pendingReview\";","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"        assertEquals(AddPatientCommand.getCommandUsage(), messageUsage);","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"    public void execute_addPatient_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"        assertEquals(String.format(AddPatientCommand.getMessageSuccess(), validPatient), String.format(messageSuccess,","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"                validPatient));","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"    public void execute_addPatient_getMessageDuplicatePatientSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"        String messageDuplicatePatient \u003d \"This patient already exists in the address book\";","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"        assertEquals(AddPatientCommand.getMessageDuplicatePatient(), messageDuplicatePatient);","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"        AddPatientCommand addAliceCommand \u003d new AddPatientCommand(alice);","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"        AddPatientCommand addBobCommand \u003d new AddPatientCommand(bob);","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"        AddPatientCommand addAliceCommandCopy \u003d new AddPatientCommand(alice);","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"     * A Model stub that contains a single patient.","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"vigonometry"},"content":"    private class ModelStubWithPatient extends ModelStub {","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"vigonometry"},"content":"        private final Patient patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"vigonometry"},"content":"        ModelStubWithPatient(Patient patient) {","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"vigonometry"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"vigonometry"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"vigonometry"},"content":"            return this.patient.isSamePatient(patient);","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"vigonometry"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"vigonometry"},"content":"    private class ModelStubAcceptingPatientAdded extends ModelStub {","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"vigonometry"},"content":"        final ArrayList\u003cPatient\u003e patientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"vigonometry"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"vigonometry"},"content":"            return patientsAdded.stream().anyMatch(patient::isSamePerson);","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"vigonometry"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"vigonometry"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"vigonometry"},"content":"            patientsAdded.add(patient);","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"vigonometry"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"vigonometry"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"vigonometry"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":170,"praveenkrishna0512":1}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.getMessageSuccess(), expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.getMessageSuccess(), expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsage_success() {","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d ClearCommand.COMMAND_WORD + \": Clears all entries from the address book.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + ClearCommand.COMMAND_WORD;","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"        assertEquals(ClearCommand.getCommandUsage(), messageUsage);","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageSuccess_success() {","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"Address book has been cleared!\";","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        assertEquals(ClearCommand.getMessageSuccess(), messageSuccess);","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"vigonometry":14,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"    public void isExit() {","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, true);","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"        assertTrue(commandResult.shouldExit());","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    public void isShowHelp() {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, false);","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"        assertTrue(commandResult.shouldShowHelp());","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"vigonometry":9,"praveenkrishna0512":2,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.DoctorFilter;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.PatientFilter;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.EditDoctorDescriptorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_NAME_YANNIE \u003d \"Yannie Lim\";","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    // Doctor specific","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_SPECIALTY_AMY \u003d \"Orthopaedics\";","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_SPECIALTY_BOB \u003d \"Paediatrics\";","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_YOE_AMY \u003d \"12\";","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_YOE_BOB \u003d \"4\";","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"    // Patient specific","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_HEIGHT_AMY \u003d \"1.45\";","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_HEIGHT_BOB \u003d \"1.92\";","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_WEIGHT_AMY \u003d \"69\";","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_WEIGHT_BOB \u003d \"20\";","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_DIAGNOSIS_AMY \u003d \"Broken Arm\";","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_DIAGNOSIS_BOB \u003d \"Broken Leg\";","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_STATUS_AMY \u003d \"Intensive Care Unit\";","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_STATUS_BOB \u003d \"Transitional Care\";","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_REMARK_AMY \u003d \"some remark amy\";","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"    public static final String VALID_REMARK_BOB \u003d \"some remark bob\";","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"    // Doctor Specific","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"    public static final String SPECIALTY_DESC_AMY \u003d \" \" + PREFIX_SPECIALTY + VALID_SPECIALTY_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"    public static final String SPECIALTY_DESC_BOB \u003d \" \" + PREFIX_SPECIALTY + VALID_SPECIALTY_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"    public static final String YOE_DESC_AMY \u003d \" \" + PREFIX_YOE + VALID_YOE_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    public static final String YOE_DESC_BOB \u003d \" \" + PREFIX_YOE + VALID_YOE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"    // Patient Specific","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"    public static final String HEIGHT_DESC_AMY \u003d \" \" + PREFIX_HEIGHT + VALID_HEIGHT_AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"    public static final String HEIGHT_DESC_BOB \u003d \" \" + PREFIX_HEIGHT + VALID_HEIGHT_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"    public static final String WEIGHT_DESC_AMY \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"    public static final String WEIGHT_DESC_BOB \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"    public static final String DIAGNOSIS_DESC_AMY \u003d \" \" + PREFIX_DIAGNOSIS + VALID_DIAGNOSIS_AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"    public static final String DIAGNOSIS_DESC_BOB \u003d \" \" + PREFIX_DIAGNOSIS + VALID_DIAGNOSIS_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"    public static final String INVALID_SPECIALTY_DESC \u003d \" \" + PREFIX_SPECIALTY + \"GP\u0026\"; // \u0027\u0026\u0027 not allowed in specialty","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public static final String INVALID_YOE_DESC \u003d \" \" + PREFIX_YOE + \"129037\"; // YOE maximum 2 digits","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"    public static final String INVALID_HEIGHT_DESC \u003d \" \" + PREFIX_HEIGHT + \"129037\"; // Height should be 2 decimal place","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"    public static final String INVALID_WEIGHT_DESC \u003d \" \" + PREFIX_WEIGHT + \"34.333\"; // Weight maximum 1 decimal place","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"    public static final String INVALID_DIAGNOSIS_DESC \u003d \" \" + PREFIX_DIAGNOSIS + \"A!DS\"; // \u0027!\u0027 not allowed in diagnosis","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"hospitalised\"; // Wrong status","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"    public static final String INVALID_REMARK_DESC \u003d \" \" + PREFIX_REMARK + \"\"; // Empty remark","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"    public static final EditDoctorCommand.EditDoctorDescriptor DESC_DR_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"    public static final EditDoctorCommand.EditDoctorDescriptor DESC_DR_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"    public static final EditPatientCommand.EditPatientDescriptor DESC_PTN_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"    public static final EditPatientCommand.EditPatientDescriptor DESC_PTN_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"        DESC_DR_AMY \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withSpecialty(VALID_SPECIALTY_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"                .withYoe(VALID_YOE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"        DESC_DR_BOB \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withSpecialty(VALID_SPECIALTY_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"                .withYoe(VALID_YOE_BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"        DESC_PTN_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withHeight(VALID_HEIGHT_AMY)","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"                .withWeight(VALID_WEIGHT_AMY).withDiagnosis(VALID_DIAGNOSIS_AMY).withStatus(VALID_STATUS_AMY)","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"                .withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"        DESC_PTN_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withHeight(VALID_HEIGHT_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"                .withWeight(VALID_WEIGHT_BOB).withDiagnosis(VALID_DIAGNOSIS_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"                .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"praveenkrishna0512"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-31"},{"lineNumber":167,"author":{"gitId":"praveenkrishna0512"},"content":"     * that takes a string {@code expectedMessage} and a doctor {@code selectedDoctor}.","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":169,"author":{"gitId":"praveenkrishna0512"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-03-31"},{"lineNumber":170,"author":{"gitId":"praveenkrishna0512"},"content":"                                            Doctor selectedDoctor, Model expectedModel) {","lastModifiedDate":"2023-03-31"},{"lineNumber":171,"author":{"gitId":"praveenkrishna0512"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":172,"author":{"gitId":"praveenkrishna0512"},"content":"                new CommandResult(expectedMessage, selectedDoctor);","lastModifiedDate":"2023-04-06"},{"lineNumber":173,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":174,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"praveenkrishna0512"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"praveenkrishna0512"},"content":"     * that takes a string {@code expectedMessage} and a doctor {@code selectedDoctor}.","lastModifiedDate":"2023-03-31"},{"lineNumber":179,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":180,"author":{"gitId":"praveenkrishna0512"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"praveenkrishna0512"},"content":"                                            Patient selectedPatient, Model expectedModel) {","lastModifiedDate":"2023-03-31"},{"lineNumber":182,"author":{"gitId":"praveenkrishna0512"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":183,"author":{"gitId":"praveenkrishna0512"},"content":"                new CommandResult(expectedMessage, selectedPatient);","lastModifiedDate":"2023-04-06"},{"lineNumber":184,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":211,"author":{"gitId":"vigonometry"},"content":"        final String[] splitName \u003d person.getName().getValue().split(\"\\\\s+\");","lastModifiedDate":"2023-04-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":216,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"vigonometry"},"content":"     * Updates {@code model}\u0027s filtered list to show only the doctor at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"vigonometry"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"vigonometry"},"content":"    public static void showDoctorAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"vigonometry"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredDoctorList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"vigonometry"},"content":"        Doctor doctor \u003d model.getFilteredDoctorList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"vigonometry"},"content":"        final String[] splitName \u003d doctor.getName().getValue().split(\"\\\\s+\");","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"vigonometry"},"content":"        model.updateFilteredDoctorList(new DoctorContainsKeywordsPredicate(new DoctorFilter(splitName[0], \"\",","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"vigonometry"},"content":"                \"\", \"\", \"\", new HashSet\u003c\u003e())));","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"vigonometry"},"content":"        assertEquals(1, model.getFilteredDoctorList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"owen-yap"},"content":"     * Updates {@code model}\u0027s filtered list to show only the patient at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"owen-yap"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"owen-yap"},"content":"    public static void showPatientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"owen-yap"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"owen-yap"},"content":"        Patient patient \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"vigonometry"},"content":"        final String[] splitName \u003d patient.getName().getValue().split(\"\\\\s+\");","lastModifiedDate":"2023-04-07"},{"lineNumber":239,"author":{"gitId":"owen-yap"},"content":"        model.updateFilteredPatientList(new PatientContainsKeywordsPredicate(new PatientFilter(splitName[0], \"\",","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"owen-yap"},"content":"                \"\", \"\", \"\", \"\", \"\", \"\", new HashSet\u003c\u003e())));","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"owen-yap"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"owen-yap":93,"vigonometry":16,"praveenkrishna0512":22,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/DeleteDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":" * {@code DeleteDoctorCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"public class DeleteDoctorCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"        Doctor doctorToDelete \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteDoctorCommand \u003d new DeleteDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(DeleteDoctorCommand.getMessageSuccess(), doctorToDelete);","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"        expectedModel.deleteDoctor(doctorToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(deleteDoctorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteDoctorCommand \u003d new DeleteDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(deleteDoctorCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        Doctor doctorToDelete \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteDoctorCommand \u003d new DeleteDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(DeleteDoctorCommand.getMessageSuccess(), doctorToDelete);","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        expectedModel.deleteDoctor(doctorToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        showNoDoctor(expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(deleteDoctorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getDoctorList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteDoctorCommand \u003d new DeleteDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(deleteDoctorCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsage_success() {","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d DeleteDoctorCommand.COMMAND_WORD + \" (short form: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"                + DeleteDoctorCommand.SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"                + \": Deletes the doctor identified by the index number used in the displayed doctor list.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + DeleteDoctorCommand.COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"        assertEquals(DeleteDoctorCommand.getCommandUsage(), messageUsage);","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"    public void execute_deleteDoctor_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"        Doctor doctorToDelete \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"Deleted Doctor: %1$s\";","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(messageSuccess, doctorToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"        assertEquals(String.format(DeleteDoctorCommand.getMessageSuccess(), doctorToDelete), expectedMessage);","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteFirstCommand \u003d new DeleteDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteSecondCommand \u003d new DeleteDoctorCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"        DeleteDoctorCommand deleteFirstCommandCopy \u003d new DeleteDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"        // different doctor -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"    private void showNoDoctor(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"        model.updateFilteredDoctorList(p -\u003e false);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"        assertTrue(model.getFilteredDoctorList().isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":1,"vigonometry":130}},{"path":"src/test/java/seedu/address/logic/commands/DeletePatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsOnlyAddressBook;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":" * {@code DeletePatientCommand}.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"public class DeletePatientCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientsOnlyAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(DeletePatientCommand.getMessageSuccess(), patientToDelete);","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"        expectedModel.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(deletePatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(deletePatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(DeletePatientCommand.getMessageSuccess(), patientToDelete);","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        expectedModel.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        showNoPatient(expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(deletePatientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"        DeletePatientCommand deletePatientCommand \u003d new DeletePatientCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(deletePatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsage_success() {","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d DeletePatientCommand.COMMAND_WORD + \" (short form: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"                + DeletePatientCommand.SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"                + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + DeletePatientCommand.COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"        assertEquals(DeletePatientCommand.getCommandUsage(), messageUsage);","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"    public void execute_deletePatient_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(messageSuccess, patientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"        assertEquals(String.format(DeletePatientCommand.getMessageSuccess(), patientToDelete), expectedMessage);","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"        DeletePatientCommand deleteFirstCommand \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"        DeletePatientCommand deleteSecondCommand \u003d new DeletePatientCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"        DeletePatientCommand deleteFirstCommandCopy \u003d new DeletePatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"        // different doctor -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"    private void showNoPatient(Model model) {","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"        model.updateFilteredPatientList(p -\u003e false);","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":128,"praveenkrishna0512":2}},{"path":"src/test/java/seedu/address/logic/commands/EditDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DR_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DR_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YOE_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.EditDoctorDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditDoctorCommand.","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"public class EditDoctorCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        Doctor editedDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder(editedDoctor).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(EditDoctorCommand.getMessageSuccess(), editedDoctor);","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"        expectedModel.setDoctor(model.getFilteredDoctorList().get(0), editedDoctor);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, editedDoctor, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"        Index indexLastDoctor \u003d Index.fromOneBased(model.getFilteredDoctorList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        Doctor lastDoctor \u003d model.getFilteredDoctorList().get(indexLastDoctor.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"        DoctorBuilder doctorInList \u003d new DoctorBuilder(lastDoctor);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        Doctor editedDoctor \u003d doctorInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"                .withSpecialty(VALID_SPECIALTY_BOB).withYoe(VALID_YOE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_BOB).withSpecialty(VALID_SPECIALTY_BOB).withYoe(VALID_YOE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(indexLastDoctor, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(EditDoctorCommand.getMessageSuccess(), editedDoctor);","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        expectedModel.setDoctor(lastDoctor, editedDoctor);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, editedDoctor, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_FIRST_PERSON, new EditDoctorDescriptor());","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        Doctor editedDoctor \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(EditDoctorCommand.getMessageSuccess(), editedDoctor);","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, editedDoctor, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"        Doctor doctorInFilteredList \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"        Doctor editedDoctor \u003d new DoctorBuilder(doctorInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"                new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(EditDoctorCommand.getMessageSuccess(), editedDoctor);","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"        expectedModel.setDoctor(model.getFilteredDoctorList().get(0), editedDoctor);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, editedDoctor, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"    public void execute_duplicateDoctorUnfilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"        Doctor firstDoctor \u003d model.getFilteredDoctorList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder(firstDoctor).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(editCommand, model, EditDoctorCommand.getMessageDuplicate());","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"    public void execute_duplicateDoctorFilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        // edit doctor in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"        Doctor doctorInList \u003d model.getAddressBook().getDoctorList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"                new EditDoctorDescriptorBuilder(doctorInList).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(editCommand, model, EditDoctorCommand.getMessageDuplicate());","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"    public void execute_invalidDoctorIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"    public void execute_invalidDoctorIndexFilteredList_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"owen-yap"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getDoctorList().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand editCommand \u003d new EditDoctorCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"                new EditDoctorDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsageSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d EditDoctorCommand.COMMAND_WORD + \" (short form: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":161,"author":{"gitId":"vigonometry"},"content":"                + EditDoctorCommand.SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"vigonometry"},"content":"                + \": Edits the details of the doctor identified \"","lastModifiedDate":"2023-04-08"},{"lineNumber":163,"author":{"gitId":"vigonometry"},"content":"                + \"by the index number used in the displayed doctors list. \"","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"vigonometry"},"content":"                + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_SPECIALTY + \"SPECIALTY \"","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_YOE + \"YEARS OF EXPERIENCE \"","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + EditDoctorCommand.COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_SPECIALTY + \"Family Medicine \";","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"vigonometry"},"content":"        assertEquals(EditDoctorCommand.getCommandUsage(), messageUsage);","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":180,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"vigonometry"},"content":"        Doctor editedDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"Edited Doctor: %1$s\";","lastModifiedDate":"2023-04-08"},{"lineNumber":183,"author":{"gitId":"vigonometry"},"content":"        assertEquals(String.format(EditDoctorCommand.getMessageSuccess(), editedDoctor),","lastModifiedDate":"2023-04-08"},{"lineNumber":184,"author":{"gitId":"vigonometry"},"content":"                String.format(messageSuccess, editedDoctor));","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageDuplicateSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"vigonometry"},"content":"        String messageDuplicate \u003d \"This doctor already exists in the address book.\";","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"vigonometry"},"content":"        assertEquals(EditDoctorCommand.getMessageDuplicate(), messageDuplicate);","lastModifiedDate":"2023-04-08"},{"lineNumber":191,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":192,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":194,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageFailureSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":195,"author":{"gitId":"vigonometry"},"content":"        String messageFailure \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-04-08"},{"lineNumber":196,"author":{"gitId":"vigonometry"},"content":"        assertEquals(EditDoctorCommand.getMessageFailure(), messageFailure);","lastModifiedDate":"2023-04-08"},{"lineNumber":197,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":198,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"owen-yap"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"owen-yap"},"content":"        final EditDoctorCommand standardCommand \u003d new EditDoctorCommand(INDEX_FIRST_PERSON, DESC_DR_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"owen-yap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor copyDescriptor \u003d new EditDoctorDescriptor(DESC_DR_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand commandWithSameValues \u003d new EditDoctorCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"owen-yap"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"owen-yap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"owen-yap"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"owen-yap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"owen-yap"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"owen-yap"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"owen-yap"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"owen-yap"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"owen-yap"},"content":"        assertFalse(standardCommand.equals(new EditDoctorCommand(INDEX_SECOND_PERSON, DESC_DR_AMY)));","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"owen-yap"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"owen-yap"},"content":"        assertFalse(standardCommand.equals(new EditDoctorCommand(INDEX_FIRST_PERSON, DESC_DR_BOB)));","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"owen-yap":166,"vigonometry":54,"praveenkrishna0512":4}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_PTN_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_PTN_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DIAGNOSIS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsOnlyAddressBook;","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPatientCommand.","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"public class EditPatientCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientsOnlyAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand editCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.getMessageSuccess(), editedPatient);","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, editedPatient, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"        Index indexLastPatient \u003d Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        Patient lastPatient \u003d model.getFilteredPatientList().get(indexLastPatient.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(lastPatient);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        Patient editedPatient \u003d patientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"                .withHeight(VALID_HEIGHT_BOB).withWeight(VALID_WEIGHT_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"                .withDiagnosis(VALID_DIAGNOSIS_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"                .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_BOB).withHeight(VALID_HEIGHT_BOB).withWeight(VALID_WEIGHT_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"                .withDiagnosis(VALID_DIAGNOSIS_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"                .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand editCommand \u003d new EditPatientCommand(indexLastPatient, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.getMessageSuccess(), editedPatient);","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        expectedModel.setPatient(lastPatient, editedPatient);","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, editedPatient, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand editCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON, new EditPatientDescriptor());","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.getMessageSuccess(), editedPatient);","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, editedPatient, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"        Patient editedPatient \u003d new PatientBuilder(patientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand editCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"        String expectedMessage \u003d String.format(EditPatientCommand.getMessageSuccess(), editedPatient);","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, editedPatient, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"    public void execute_duplicatePatientUnfilteredList_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(firstPatient).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand editCommand \u003d new EditPatientCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(editCommand, model, EditPatientCommand.getMessageDuplicate());","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"    public void execute_duplicatePatientFilteredList_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"        // edit patient in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"        Patient patientInList \u003d model.getAddressBook().getPatientList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand editCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"                new EditPatientDescriptorBuilder(patientInList).build());","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(editCommand, model, EditPatientCommand.getMessageDuplicate());","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand editCommand \u003d new EditPatientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"owen-yap"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand editCommand \u003d new EditPatientCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsageSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d EditPatientCommand.COMMAND_WORD + \" (short form: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"vigonometry"},"content":"                + EditPatientCommand.SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"vigonometry"},"content":"                + \": Edits the details of the patient identified \"","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"vigonometry"},"content":"                + \"by the index number used in the displayed patients list. \"","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"vigonometry"},"content":"                + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_HEIGHT + \"HEIGHT \"","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_WEIGHT + \"WEIGHT \"","lastModifiedDate":"2023-04-08"},{"lineNumber":180,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_DIAGNOSIS + \"DIAGNOSIS \"","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2023-04-08"},{"lineNumber":183,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":184,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + EditPatientCommand.COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_HEIGHT + \"1.63 \";","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":191,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":192,"author":{"gitId":"vigonometry"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2023-04-08"},{"lineNumber":194,"author":{"gitId":"vigonometry"},"content":"        assertEquals(String.format(EditPatientCommand.getMessageSuccess(), editedPatient),","lastModifiedDate":"2023-04-08"},{"lineNumber":195,"author":{"gitId":"vigonometry"},"content":"                String.format(messageSuccess, editedPatient));","lastModifiedDate":"2023-04-08"},{"lineNumber":196,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":197,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":198,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageDuplicateSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":200,"author":{"gitId":"vigonometry"},"content":"        String messageDuplicate \u003d \"This patient already exists in the address book.\";","lastModifiedDate":"2023-04-08"},{"lineNumber":201,"author":{"gitId":"vigonometry"},"content":"        assertEquals(EditPatientCommand.getMessageDuplicate(), messageDuplicate);","lastModifiedDate":"2023-04-08"},{"lineNumber":202,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":203,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":204,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageFailureSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"vigonometry"},"content":"        String messageFailure \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"vigonometry"},"content":"        assertEquals(EditPatientCommand.getMessageFailure(), messageFailure);","lastModifiedDate":"2023-04-08"},{"lineNumber":208,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":209,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":210,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"owen-yap"},"content":"    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"owen-yap"},"content":"        final EditPatientCommand standardCommand \u003d new EditPatientCommand(INDEX_FIRST_PERSON, DESC_PTN_AMY);","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"owen-yap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_PTN_AMY);","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand commandWithSameValues \u003d new EditPatientCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"owen-yap"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"owen-yap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"owen-yap"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"owen-yap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"owen-yap"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"owen-yap"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"owen-yap"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"owen-yap"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"owen-yap"},"content":"        assertFalse(standardCommand.equals(new EditPatientCommand(INDEX_SECOND_PERSON, DESC_PTN_AMY)));","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"owen-yap"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"owen-yap"},"content":"        assertFalse(standardCommand.equals(new EditPatientCommand(INDEX_FIRST_PERSON, DESC_PTN_BOB)));","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"owen-yap":170,"vigonometry":59,"praveenkrishna0512":6}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"vigonometry":1,"-":20}},{"path":"src/test/java/seedu/address/logic/commands/FindDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DOCTORS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALTY;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalDoctors.ALICE;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalDoctors.BENSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.DoctorFilter;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"public class FindDoctorCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cString\u003e bensonTags \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"                .map(t -\u003e t.getTagName()).collect(Collectors.toSet());","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"        DoctorFilter emptyFilter \u003d new DoctorFilter(\"\", \"\",","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"                \"\", \"\", \"\", new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        DoctorFilter aliceFilter \u003d new DoctorFilter(ALICE.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"                ALICE.getPhone().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"                ALICE.getEmail().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"                ALICE.getSpecialty().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"                ALICE.getYoe().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        DoctorFilter bensonFilter \u003d new DoctorFilter(BENSON.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"                BENSON.getPhone().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"                BENSON.getEmail().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"                BENSON.getSpecialty().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"                BENSON.getYoe().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"                bensonTags);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"        DoctorContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"                new DoctorContainsKeywordsPredicate(emptyFilter);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"        DoctorContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"                new DoctorContainsKeywordsPredicate(bensonFilter);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"        DoctorContainsKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"                new DoctorContainsKeywordsPredicate(aliceFilter);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"        FindDoctorCommand findFirstCommand \u003d new FindDoctorCommand(firstPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"        FindDoctorCommand findSecondCommand \u003d new FindDoctorCommand(secondPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"        FindDoctorCommand findThirdCommand \u003d new FindDoctorCommand(thirdPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Bobfree546"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Bobfree546"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"Bobfree546"},"content":"        FindDoctorCommand findFirstCommandCopy \u003d new FindDoctorCommand(firstPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Bobfree546"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Bobfree546"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Bobfree546"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findSecondCommand.equals(findThirdCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findFirstCommand.equals(findThirdCommand));","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"Bobfree546"},"content":"    public void execute_exactKeywords_onePersonFound() {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cString\u003e bensonTags \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"                .map(t -\u003e t.getTagName()).collect(Collectors.toSet());","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"        DoctorFilter bensonFilter \u003d new DoctorFilter(BENSON.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"                BENSON.getPhone().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"                BENSON.getEmail().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"                BENSON.getSpecialty().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"                BENSON.getYoe().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"Bobfree546"},"content":"                bensonTags);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"Bobfree546"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DOCTORS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Bobfree546"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d new DoctorContainsKeywordsPredicate(bensonFilter);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"Bobfree546"},"content":"        FindDoctorCommand command \u003d new FindDoctorCommand(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"Bobfree546"},"content":"        expectedModel.updateFilteredDoctorList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Bobfree546"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Bobfree546"},"content":"        assertEquals(List.of(BENSON), model.getFilteredDoctorList());","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsageSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d FindDoctorCommand.COMMAND_WORD + \" (short form: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"vigonometry"},"content":"                + FindDoctorCommand.SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"                + \": Finds a doctor in the address book. \"","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_SPECIALTY + \"SPECIALITY] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_YOE + \"YEARS OF EXPERIENCE] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"                + \"At least one of the parameters must be present. \\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"                + \"Only one of each parameter (excluding \" + PREFIX_TAG + \"TAG) may be present. \\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + FindDoctorCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageUsage, FindDoctorCommand.getCommandUsage());","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"%1$d doctor(s) listed!\";","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageSuccess, FindDoctorCommand.getMessageSuccess());","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Bobfree546":85,"owen-yap":2,"vigonometry":47,"praveenkrishna0512":2}},{"path":"src/test/java/seedu/address/logic/commands/FindPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalPatients.YANNIE;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalPatients.ZAYDEN;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsOnlyAddressBook;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.patient.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.patient.PatientFilter;","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"public class FindPatientCommandTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientsOnlyAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPatientsOnlyAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"    public void equals() {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cString\u003e zaydenTags \u003d ZAYDEN.getTags().stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"                .map(t -\u003e t.getTagName()).collect(Collectors.toSet());","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"        PatientFilter emptyFilter \u003d new PatientFilter(\"\", \"\",","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"                \"\", \"\", \"\", \"\", \"\", \"\", new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        PatientFilter yannieFilter \u003d new PatientFilter(YANNIE.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"                YANNIE.getPhone().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"                YANNIE.getEmail().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"                YANNIE.getHeight().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"                YANNIE.getWeight().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"                YANNIE.getDiagnosis().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"                YANNIE.getStatus().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"                YANNIE.getRemark().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        PatientFilter zaydenFilter \u003d new PatientFilter(ZAYDEN.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getPhone().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getEmail().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getHeight().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getWeight().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getDiagnosis().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getStatus().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getRemark().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"                zaydenTags);","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"        PatientContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"                new PatientContainsKeywordsPredicate(emptyFilter);","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Bobfree546"},"content":"        PatientContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Bobfree546"},"content":"                new PatientContainsKeywordsPredicate(zaydenFilter);","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Bobfree546"},"content":"        PatientContainsKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Bobfree546"},"content":"                new PatientContainsKeywordsPredicate(yannieFilter);","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"Bobfree546"},"content":"        FindPatientCommand findFirstCommand \u003d new FindPatientCommand(firstPredicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"Bobfree546"},"content":"        FindPatientCommand findSecondCommand \u003d new FindPatientCommand(secondPredicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"Bobfree546"},"content":"        FindPatientCommand findThirdCommand \u003d new FindPatientCommand(thirdPredicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"Bobfree546"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"Bobfree546"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"Bobfree546"},"content":"        FindPatientCommand findFirstCommandCopy \u003d new FindPatientCommand(firstPredicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"Bobfree546"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"Bobfree546"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"Bobfree546"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findSecondCommand.equals(findThirdCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"Bobfree546"},"content":"        assertFalse(findFirstCommand.equals(findThirdCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"Bobfree546"},"content":"    public void execute_exactKeywords_onePersonFound() {","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"Bobfree546"},"content":"        Set\u003cString\u003e zaydenTags \u003d ZAYDEN.getTags().stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"                .map(t -\u003e t.getTagName()).collect(Collectors.toSet());","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"        PatientFilter zaydenFilter \u003d new PatientFilter(ZAYDEN.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getPhone().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getEmail().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getHeight().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getWeight().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getDiagnosis().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getStatus().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getRemark().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"Bobfree546"},"content":"                zaydenTags);","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"Bobfree546"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"Bobfree546"},"content":"        PatientContainsKeywordsPredicate predicate \u003d new PatientContainsKeywordsPredicate(zaydenFilter);","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"Bobfree546"},"content":"        FindPatientCommand command \u003d new FindPatientCommand(predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"Bobfree546"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"Bobfree546"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"Bobfree546"},"content":"        assertEquals(List.of(ZAYDEN), model.getFilteredPatientList());","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsageSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d FindPatientCommand.COMMAND_WORD + \" (short form: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"vigonometry"},"content":"                + FindPatientCommand.SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"vigonometry"},"content":"                + \": Finds a patient in the address book. \"","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: \"","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_HEIGHT + \"HEIGHT] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_WEIGHT + \"WEIGHT] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_DIAGNOSIS + \"DIAGNOSIS] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2023-04-08"},{"lineNumber":137,"author":{"gitId":"vigonometry"},"content":"                + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"vigonometry"},"content":"                + \"At least one of the parameters must be present. \\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":139,"author":{"gitId":"vigonometry"},"content":"                + \"Only one of each parameter (excluding \" + PREFIX_TAG + \"TAG) may be present. \\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":140,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + FindPatientCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-04-08"},{"lineNumber":141,"author":{"gitId":"vigonometry"},"content":"                + PREFIX_NAME + \"John Doe\";","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageUsage, FindPatientCommand.getCommandUsage());","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"%1$d patient(s) listed!\";","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageSuccess, FindPatientCommand.getMessageSuccess());","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":84,"vigonometry":61,"praveenkrishna0512":5}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpCommand.getMessageSuccess(),","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"                true, false);","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"vigonometry":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/ListDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"public class ListDoctorCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(new ListDoctorCommand(), model, ListDoctorCommand.getMessageSuccess(), expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(new ListDoctorCommand(), model, ListDoctorCommand.getMessageSuccess(), expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsageSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d ListDoctorCommand.COMMAND_WORD + \": Lists all doctors in Docedex.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + ListDoctorCommand.COMMAND_WORD;","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageUsage, ListDoctorCommand.getCommandUsage());","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"Listed all doctors\";","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageSuccess, ListDoctorCommand.getMessageSuccess());","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Bobfree546":4,"vigonometry":16,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/ListPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsOnlyAddressBook;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"public class ListPatientCommandTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"    private Model model;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"        model \u003d new ModelManager(getTypicalPatientsOnlyAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(new ListPatientCommand(), model, ListPatientCommand.getMessageSuccess(), expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"        assertCommandSuccess(new ListPatientCommand(), model, ListPatientCommand.getMessageSuccess(), expectedModel);","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsageSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d ListPatientCommand.COMMAND_WORD + \": Lists all patients in Docedex.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + ListPatientCommand.COMMAND_WORD;","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageUsage, ListPatientCommand.getCommandUsage());","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"Listed all patients\";","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageSuccess, ListPatientCommand.getMessageSuccess());","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":35,"vigonometry":18,"praveenkrishna0512":2}},{"path":"src/test/java/seedu/address/logic/commands/SelectDoctorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showDoctorAtIndex;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":" * {@code SelectDoctorCommand}.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"public class SelectDoctorCommandTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredDoctorList().size() + 1);","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"        SelectDoctorCommand selectDoctorCommand \u003d new SelectDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(selectDoctorCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"        showDoctorAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getDoctorList().size());","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        SelectDoctorCommand selectDoctorCommand \u003d new SelectDoctorCommand(outOfBoundIndex);","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(selectDoctorCommand, model, Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsageSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d SelectDoctorCommand.COMMAND_WORD","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"                + \": Selects the doctor identified by the index number used in the displayed doctor list.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + SelectDoctorCommand.COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageUsage, SelectDoctorCommand.getCommandUsage());","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"Selected doctor %1$s\";","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageSuccess, SelectDoctorCommand.getMessageSuccess());","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"    public void equals() {","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"        SelectDoctorCommand selectFirstCommand \u003d new SelectDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"        SelectDoctorCommand selectSecondCommand \u003d new SelectDoctorCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommand));","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"        // same values -\u003e returns false since list has been filtered once already","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"        SelectDoctorCommand selectFirstCommandCopy \u003d new SelectDoctorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"        assertFalse(selectFirstCommand.equals(selectFirstCommandCopy));","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"        assertFalse(selectFirstCommand.equals(1));","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"        assertFalse(selectFirstCommand.equals(null));","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"        // different doctor -\u003e returns false","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"        assertFalse(selectFirstCommand.equals(selectSecondCommand));","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"    private void showNoDoctor(Model model) {","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"        model.updateFilteredDoctorList(p -\u003e false);","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"        assertTrue(model.getFilteredDoctorList().isEmpty());","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"vigonometry":97}},{"path":"src/test/java/seedu/address/logic/commands/SelectPatientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalPatientsOnlyAddressBook;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":" * {@code SelectPatientCommand}.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"public class SelectPatientCommandTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientsOnlyAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"        SelectPatientCommand selectPatientCommand \u003d new SelectPatientCommand(outOfBoundIndex);","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(selectPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        SelectPatientCommand selectPatientCommand \u003d new SelectPatientCommand(outOfBoundIndex);","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        assertCommandFailure(selectPatientCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    public void execute_getCommandUsageSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        String messageUsage \u003d SelectPatientCommand.COMMAND_WORD","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"                + \": Selects the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"                + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"                + \"Example: \" + SelectPatientCommand.COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageUsage, SelectPatientCommand.getCommandUsage());","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    public void execute_getMessageSuccessSuccessful() {","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        String messageSuccess \u003d \"Selected patient %1$s\";","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        assertEquals(messageSuccess, SelectPatientCommand.getMessageSuccess());","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"    public void equals() {","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"        SelectPatientCommand selectFirstCommand \u003d new SelectPatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"        SelectPatientCommand selectSecondCommand \u003d new SelectPatientCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommand));","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"        // same values -\u003e returns false since list has been filtered once already","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"        SelectPatientCommand selectFirstCommandCopy \u003d new SelectPatientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"        assertFalse(selectFirstCommand.equals(selectFirstCommandCopy));","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"        assertFalse(selectFirstCommand.equals(1));","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"        assertFalse(selectFirstCommand.equals(null));","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"        assertFalse(selectFirstCommand.equals(selectSecondCommand));","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"    private void showNoPatient(Model model) {","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"        model.updateFilteredPatientList(p -\u003e false);","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"vigonometry":93,"praveenkrishna0512":2}},{"path":"src/test/java/seedu/address/logic/commands/exceptions/CommandExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"public class CommandExceptionTest {","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE \u003d \"Invalid Command!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"    public void constructor() {","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"        CommandException ce \u003d new CommandException(MESSAGE);","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"        assertEquals(MESSAGE, ce.getMessage());","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"    public void constructorWithCause() {","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"        CommandException ce \u003d new CommandException(MESSAGE, new Throwable());","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"        assertEquals(MESSAGE, ce.getMessage());","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"vigonometry":22}},{"path":"src/test/java/seedu/address/logic/parser/AddDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIALTY_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.YOE_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.YOE_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalDoctors.BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"import seedu.address.testutil.TypicalDoctors;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"public class AddDoctorCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    private AddDoctorCommandParser parser \u003d new AddDoctorCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"        Doctor expectedDoctor \u003d new DoctorBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"                + SPECIALTY_DESC_BOB + YOE_DESC_BOB + TAG_DESC_FRIEND, new AddDoctorCommand(expectedDoctor));","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"                + SPECIALTY_DESC_BOB + YOE_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddDoctorCommand(expectedDoctor));","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"                + SPECIALTY_DESC_BOB + YOE_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddDoctorCommand(expectedDoctor));","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"                + SPECIALTY_DESC_BOB + YOE_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddDoctorCommand(expectedDoctor));","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        // multiple specialties - last specialty accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"                + SPECIALTY_DESC_AMY + SPECIALTY_DESC_BOB + YOE_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddDoctorCommand(expectedDoctor));","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        // multiple years of experience - last year of experience accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"                + SPECIALTY_DESC_BOB + YOE_DESC_AMY + YOE_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddDoctorCommand(expectedDoctor));","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"        Doctor expectedDoctorMultipleTags \u003d new DoctorBuilder(TypicalDoctors.BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"                .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"                + SPECIALTY_DESC_BOB + YOE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddDoctorCommand(expectedDoctorMultipleTags));","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":75}},{"path":"src/test/java/seedu/address/logic/parser/AddPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DIAGNOSIS_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DIAGNOSIS_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"import seedu.address.testutil.TypicalPatients;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"public class AddPatientCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"    private AddPatientCommandParser parser \u003d new AddPatientCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        // multiple heights - last height accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_AMY + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"        // multiple weights - last weight accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_AMY + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        // multiple diagnosis - last diagnosis accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_AMY + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"        // multiple status - last status accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_AMY + STATUS_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        // multiple remark - last remark accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB + REMARK_DESC_AMY","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatient));","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"        Patient expectedPatientMultipleTags \u003d new PatientBuilder(TypicalPatients.BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"                .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPatientCommand(expectedPatientMultipleTags));","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":97}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.ListDoctorCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.ListPatientCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"    public void parseCommand_list_doc() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(parser.parseCommand(ListDoctorCommand.COMMAND_WORD) instanceof ListDoctorCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(parser.parseCommand(ListDoctorCommand.COMMAND_WORD + \" 3\") instanceof ListDoctorCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"    public void parseCommand_list_ptn() throws Exception {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(parser.parseCommand(ListPatientCommand.COMMAND_WORD) instanceof ListPatientCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"        assertTrue(parser.parseCommand(ListPatientCommand.COMMAND_WORD + \" 3\") instanceof ListPatientCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        Executable exec \u003d () -\u003e parser.parseCommand(\"\");","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.getCommandUsage()),","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"                exec);","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Bobfree546":9,"vigonometry":4,"-":50}},{"path":"src/test/java/seedu/address/logic/parser/DeleteDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":" * outside of the DeleteDoctorCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":" * same path through the DeleteDoctorCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"public class DeleteDoctorCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(\"%s\\n%s\", ParserUtil.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"            DeleteDoctorCommand.getCommandUsage());","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    private DeleteDoctorCommandParser parser \u003d new DeleteDoctorCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"    public void parse_validArgs_returnsDeleteDoctorCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, \"1\", new DeleteDoctorCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":35}},{"path":"src/test/java/seedu/address/logic/parser/DeletePatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.logic.commands.DeletePatientCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":" * outside of the DeletePatientCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":" * same path through the DeletePatientCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"public class DeletePatientCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(\"%s\\n%s\", ParserUtil.MESSAGE_INVALID_INDEX,","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"            DeletePatientCommand.getCommandUsage());","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"    private DeletePatientCommandParser parser \u003d new DeletePatientCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    public void parse_validArgs_returnsDeleteDoctorCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"        assertParseSuccess(parser, \"1\", new DeletePatientCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"vigonometry":34}},{"path":"src/test/java/seedu/address/logic/parser/EditDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SPECIALTY_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_YOE_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIALTY_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIALTY_DESC_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YOE_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YOE_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.YOE_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.YOE_DESC_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditDoctorCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Specialty;","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Yoe;","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.EditDoctorDescriptorBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"public class EditDoctorCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"            String.format(\"%s\\n%s\", ParserUtil.MESSAGE_INVALID_INDEX, EditDoctorCommand.getCommandUsage());","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"    private EditDoctorCommandParser parser \u003d new EditDoctorCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"        assertParseFailure(parser, \"1\", EditDoctorCommand.getMessageFailure());","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SPECIALTY_DESC, Specialty.MESSAGE_CONSTRAINTS); // invalid specialty","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_YOE_DESC, Yoe.MESSAGE_CONSTRAINTS); // invalid yoe","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Doctor} being edited,","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + SPECIALTY_DESC_BOB + YOE_DESC_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"                .withSpecialty(VALID_SPECIALTY_BOB).withYoe(VALID_YOE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"        // specialty","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + SPECIALTY_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptorBuilder().withSpecialty(VALID_SPECIALTY_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"owen-yap"},"content":"        // yoe","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + YOE_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptorBuilder().withYoe(VALID_YOE_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"owen-yap"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"owen-yap"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"owen-yap"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"owen-yap"},"content":"        EditDoctorDescriptor descriptor \u003d new EditDoctorDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"owen-yap"},"content":"        EditDoctorCommand expectedCommand \u003d new EditDoctorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"owen-yap":60,"vigonometry":2,"-":161}},{"path":"src/test/java/seedu/address/logic/parser/EditPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DIAGNOSIS_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DIAGNOSIS_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEIGHT_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DIAGNOSIS_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HEIGHT_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REMARK_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_WEIGHT_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DIAGNOSIS_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DIAGNOSIS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.WEIGHT_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditPatientCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Diagnosis;","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Height;","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Remark;","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Weight;","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"public class EditPatientCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"            String.format(\"%s\\n%s\", ParserUtil.MESSAGE_INVALID_INDEX, EditPatientCommand.getCommandUsage());","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"    private EditPatientCommandParser parser \u003d new EditPatientCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        // no index specified","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        // no field specified","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"        assertParseFailure(parser, \"1\", EditPatientCommand.getMessageFailure());","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        // no index and no field specified","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"        // negative index","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        // zero index","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_HEIGHT_DESC, Height.MESSAGE_CONSTRAINTS); // invalid height","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_WEIGHT_DESC, Weight.MESSAGE_CONSTRAINTS); // invalid weight","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DIAGNOSIS_DESC,","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"                Diagnosis.MESSAGE_CONSTRAINTS); // invalid diagnosis","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STATUS_DESC, Status.MESSAGE_CONSTRAINTS); // invalid status","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_REMARK_DESC, Remark.MESSAGE_CONSTRAINTS); // invalid remark","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Patient} being edited,","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"                + HEIGHT_DESC_BOB + WEIGHT_DESC_BOB + DIAGNOSIS_DESC_BOB + STATUS_DESC_BOB + REMARK_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"                .withHeight(VALID_HEIGHT_BOB).withWeight(VALID_WEIGHT_BOB).withDiagnosis(VALID_DIAGNOSIS_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"                .withStatus(VALID_STATUS_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"        // name","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"owen-yap"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"owen-yap"},"content":"        // phone","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"owen-yap"},"content":"        // email","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"owen-yap"},"content":"        // height","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + HEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withHeight(VALID_HEIGHT_AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"owen-yap"},"content":"        // weight","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + WEIGHT_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withWeight(VALID_WEIGHT_AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"owen-yap"},"content":"        // diagnosis","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + DIAGNOSIS_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withDiagnosis(VALID_DIAGNOSIS_AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"owen-yap"},"content":"        // status","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + STATUS_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withStatus(VALID_STATUS_AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"owen-yap"},"content":"        // remark","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"owen-yap"},"content":"        // tags","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"owen-yap"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"owen-yap"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"owen-yap"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"owen-yap"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"owen-yap"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"owen-yap"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"owen-yap"},"content":"                .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"owen-yap"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"owen-yap"},"content":"        // no other valid values specified","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"owen-yap"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"owen-yap"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"owen-yap"},"content":"        // other valid values specified","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"owen-yap"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"owen-yap"},"content":"        expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":253,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":255,"author":{"gitId":"owen-yap"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"owen-yap"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"owen-yap"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"owen-yap"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"owen-yap"},"content":"        EditPatientCommand expectedCommand \u003d new EditPatientCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"owen-yap"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"owen-yap":262,"vigonometry":2}},{"path":"src/test/java/seedu/address/logic/parser/FindDoctorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalDoctors.ALICE;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.FindDoctorCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.DoctorFilter;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Bobfree546"},"content":"public class FindDoctorCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"            FindDoctorCommand.getCommandUsage());","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"    private FindDoctorCommandParser parser \u003d new FindDoctorCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"        //Empty String","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"        //Whitespace","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" \\t\\r\\n\",","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"        //Missing Prefix","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" bob\",","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"        //Missing Values","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" n/\",","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" p/\",","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" e/\",","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" s/\",","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" y/\",","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" t/\",","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" n/ p/ e/ s/ y/ t/\",","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"        //Invalid Prefix Sequence","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \"n /bob\",","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" n /bob\",","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"    public void parse_validArgs_returnsFindDoctorCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"        // Exact Strings","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"        DoctorFilter expectedDoctorFilter \u003d new DoctorFilter(ALICE.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"                ALICE.getPhone().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"                ALICE.getEmail().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"                ALICE.getSpecialty().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"                ALICE.getYoe().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"Bobfree546"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"        String userInput \u003d \" n/\" + ALICE.getName().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"                + \" p/\" + ALICE.getPhone().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"                + \" e/\" + ALICE.getEmail().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"                + \" s/\" + ALICE.getSpecialty().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"                + \" y/\" + ALICE.getYoe().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"Bobfree546"},"content":"        FindDoctorCommand expectedFindDoctorCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Bobfree546"},"content":"                new FindDoctorCommand(new DoctorContainsKeywordsPredicate(expectedDoctorFilter));","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Bobfree546"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"Bobfree546"},"content":"        assertParseSuccess(parser, userInput, expectedFindDoctorCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Bobfree546":61,"owen-yap":2,"vigonometry":27}},{"path":"src/test/java/seedu/address/logic/parser/FindPatientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bobfree546"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Bobfree546"},"content":"import static seedu.address.testutil.TypicalPatients.ZAYDEN;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Bobfree546"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Bobfree546"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.logic.commands.FindPatientCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.patient.PatientContainsKeywordsPredicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Bobfree546"},"content":"import seedu.address.model.person.patient.PatientFilter;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Bobfree546"},"content":"public class FindPatientCommandParserTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"            FindPatientCommand.getCommandUsage());","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"Bobfree546"},"content":"    private FindPatientCommandParser parser \u003d new FindPatientCommandParser();","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Bobfree546"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Bobfree546"},"content":"        //Empty String","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Bobfree546"},"content":"        //Whitespace","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" \\t\\r\\n\",","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Bobfree546"},"content":"        //Missing Prefix","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" bob\",","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Bobfree546"},"content":"        //Missing Values","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" n/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" p/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" e/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" h/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" w/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" d/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" st/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" r/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" t/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" n/ p/ e/ h/ w/ d/ st/ r/ t/\",","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Bobfree546"},"content":"        //Invalid Prefix Sequence","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \"n /bob\",","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"Bobfree546"},"content":"        assertParseFailure(parser, \" n /bob\",","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Bobfree546"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Bobfree546"},"content":"    public void parse_validArgs_returnsFindPatientCommand() {","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Bobfree546"},"content":"        // Exact Strings","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"        PatientFilter expectedPatientFilter \u003d new PatientFilter(ZAYDEN.getName().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getPhone().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getEmail().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getHeight().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getWeight().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getDiagnosis().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getStatus().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"                ZAYDEN.getRemark().getValue(),","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"Bobfree546"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"        String userInput \u003d \" n/\" + ZAYDEN.getName().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"                + \" p/\" + ZAYDEN.getPhone().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"                + \" e/\" + ZAYDEN.getEmail().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"                + \" h/\" + ZAYDEN.getHeight().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"                + \" w/\" + ZAYDEN.getWeight().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"                + \" d/\" + ZAYDEN.getDiagnosis().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"                + \" st/\" + ZAYDEN.getStatus().getValue()","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"                + \" r/\" + ZAYDEN.getRemark().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"Bobfree546"},"content":"        FindPatientCommand expectedFindPatientCommand \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"Bobfree546"},"content":"                new FindPatientCommand(new PatientContainsKeywordsPredicate(expectedPatientFilter));","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"Bobfree546"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"Bobfree546"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"Bobfree546"},"content":"        assertParseSuccess(parser, userInput, expectedFindPatientCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"Bobfree546"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"Bobfree546"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Bobfree546":64,"vigonometry":35}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"        private final ObservableList\u003cDoctor\u003e doctors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"        private final ObservableList\u003cPatient\u003e patients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"        private final ObservableList\u003cPatient\u003e unassignedPatients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"            return doctors;","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"        public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"            return patients;","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"        public ObservableList\u003cPatient\u003e getUnassignedPatientList() {","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"            return unassignedPatients;","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"owen-yap":9,"praveenkrishna0512":13,"-":98}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"vigonometry"},"content":"        String[] keywords \u003d ALICE.getName().getValue().split(\"\\\\s+\");","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"vigonometry":1,"-":131}},{"path":"src/test/java/seedu/address/model/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":" * A default model stub that have all the methods failing.","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"    public void deleteDoctor(Doctor target) {","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"    public void deletePatient(Patient target) {","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"praveenkrishna0512":145}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validEmail_returnsEmail() {","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        String email \u003d \"peter_jack@very-very-very-long-example.com\";","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"        Email validEmail \u003d new Email(email);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"        assertEquals(validEmail.getValue(), email);","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"vigonometry":8,"-":68}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"owen-yap":1,"-":74}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validName_returnsName() {","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        String name \u003d \"peter jack\";","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        Name validName \u003d new Name(name);","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        assertEquals(validName.getValue(), name);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"vigonometry":8,"-":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"owen-yap":1,"-":85}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validPhone_returnsPhone() {","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        String validPhone \u003d \"911\";","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        Phone phone \u003d new Phone(validPhone);","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        assertEquals(phone.getValue(), validPhone);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"vigonometry":8,"-":40}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"owen-yap":2,"-":166}},{"path":"src/test/java/seedu/address/model/person/doctor/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YOE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalDoctors.ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalDoctors.BENSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"public class DoctorTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"        Doctor doctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e doctor.getTags().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    public void isSameDoctor() {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ALICE.isSameDoctor(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.isSameDoctor(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"                .withSpecialty(VALID_SPECIALTY_BOB).withYoe(VALID_YOE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ALICE.isSameDoctor(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.isSameDoctor(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        Doctor editedBenson \u003d new DoctorBuilder(BENSON).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        assertFalse(BENSON.isSameDoctor(editedBenson));","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        editedBenson \u003d new DoctorBuilder(BENSON).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        assertFalse(BENSON.isSameDoctor(editedBenson));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        Doctor aliceCopy \u003d new DoctorBuilder(ALICE).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(BENSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"        // different specialty -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withSpecialty(VALID_SPECIALTY_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"        // different yoe -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withYoe(VALID_YOE_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        editedAlice \u003d new DoctorBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":96}},{"path":"src/test/java/seedu/address/model/person/doctor/SpecialtyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class SpecialtyTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Specialty(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public void constructor_invalidSpecialty_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"        String invalidSpecialty \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Specialty(invalidSpecialty));","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    public void isValidSpecialty() {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"        // null name","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e Specialty.isValidSpecialty(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        // invalid name","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Specialty.isValidSpecialty(\"\")); // empty string","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Specialty.isValidSpecialty(\" \")); // spaces only","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Specialty.isValidSpecialty(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Specialty.isValidSpecialty(\"medicine*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        // valid name","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"general medicine\")); // alphabets only","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"12345\")); // numbers only","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"general medicine 2nd year\")); // alphanumeric characters","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"General Medicine\")); // with capital letters","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Specialty.isValidSpecialty(\"general medicine and family medicine\")); // long names","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validSpecialty_returnsSpecialty() {","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        String validSpecialty \u003d \"General Medicine\";","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        Specialty specialty \u003d new Specialty(validSpecialty);","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        assertEquals(specialty.getValue(), validSpecialty);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":40,"vigonometry":8}},{"path":"src/test/java/seedu/address/model/person/doctor/UniqueDoctorListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalDoctors.ALICE;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalDoctors.BENSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"public class UniqueDoctorListTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    private final UniqueDoctorList uniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    public void contains_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.contains(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"    public void contains_doctorNotInList_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        assertFalse(uniqueDoctorList.contains(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"    public void contains_doctorInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertTrue(uniqueDoctorList.contains(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"    public void contains_doctorWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        assertTrue(uniqueDoctorList.contains(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"    public void add_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.add(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"    public void add_duplicateDoctor_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueDoctorList.add(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_nullTargetDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctor(null, ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_nullEditedDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctor(ALICE, null));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_targetDoctorNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueDoctorList.setDoctor(ALICE, ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_editedDoctorIsSameDoctor_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctor(ALICE, ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_editedDoctorHasSameIdentity_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"        Doctor editedAlice \u003d new DoctorBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctor(ALICE, editedAlice);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(editedAlice);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_editedDoctorHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctor(ALICE, BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"    public void setDoctor_editedDoctorHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueDoctorList.setDoctor(ALICE, BENSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"    public void remove_nullDoctor_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.remove(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"    public void remove_doctorDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueDoctorList.remove(ALICE));","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"    public void remove_existingDoctor_removesDoctor() {","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.remove(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_nullUniqueDoctorList_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctors((UniqueDoctorList) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_uniqueDoctorList_replacesOwnListWithProvidedUniqueDoctorList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctors(expectedUniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueDoctorList.setDoctors((List\u003cDoctor\u003e) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.add(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"owen-yap"},"content":"        List\u003cDoctor\u003e doctorList \u003d Collections.singletonList(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"owen-yap"},"content":"        uniqueDoctorList.setDoctors(doctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"owen-yap"},"content":"        UniqueDoctorList expectedUniqueDoctorList \u003d new UniqueDoctorList();","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"owen-yap"},"content":"        expectedUniqueDoctorList.add(BENSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"owen-yap"},"content":"        assertEquals(expectedUniqueDoctorList, uniqueDoctorList);","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"owen-yap"},"content":"    public void setDoctors_listWithDuplicateDoctors_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"owen-yap"},"content":"        List\u003cDoctor\u003e listWithDuplicateDoctors \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"owen-yap"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniqueDoctorList.setDoctors(listWithDuplicateDoctors));","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"owen-yap"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"owen-yap"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"owen-yap"},"content":"                -\u003e uniqueDoctorList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":168}},{"path":"src/test/java/seedu/address/model/person/doctor/YoeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class YoeTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    public void constructor_validYoe_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"        Yoe yoe \u003d new Yoe(\"00005\");","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"5\", yoe.getValue());","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Yoe(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public void constructor_invalidYoe_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        String invalidYoe \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Yoe(invalidYoe));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    public void isValidYoe() {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        // null yoe number","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e Yoe.isValidYoe(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        // invalid yoe numbers","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"\")); // empty string","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\" \")); // spaces only","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"912\")); // more than 2 digits","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"yoe\")); // non-numeric","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"p3\")); // alphabets within digits","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"0x1\")); // hexadecimal digits","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"5a\")); // hexadecimal digits","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Yoe.isValidYoe(\"1 2\")); // spaces within digits","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        // valid yoe numbers","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Yoe.isValidYoe(\"91\")); // exactly 2 numbers","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Yoe.isValidYoe(\"1\")); // exactly 1 numbers","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Yoe.isValidYoe(\"000012\")); // leading 0s with 2 digits","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validYoe_returnsYoe() {","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        String validYoe \u003d \"00005\";","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        String expectedYoe \u003d \"5\";","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        Yoe yoe \u003d new Yoe(validYoe);","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        assertEquals(yoe.getValue(), expectedYoe);","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":47,"vigonometry":9}},{"path":"src/test/java/seedu/address/model/person/patient/DiagnosisTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"public class DiagnosisTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Diagnosis(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"    public void constructor_invalidDiagnosis_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"        String invalidDiagnosis \u003d \"\";","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Diagnosis(invalidDiagnosis));","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    public void isValidDiagnosis() {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e Diagnosis.isValidDiagnosis(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        // invalid diagnosis","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Diagnosis.isValidDiagnosis(\"\")); // empty string","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Diagnosis.isValidDiagnosis(\" \")); // spaces only","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Diagnosis.isValidDiagnosis(\"@#$%\")); // special characters","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Diagnosis.isValidDiagnosis(\"-123\")); // numbers","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        // valid diagnosis","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Diagnosis.isValidDiagnosis(\"diagnosis with spaces \")); // ends with spaces","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Diagnosis.isValidDiagnosis(\"Diabetes\")); // alphanumeric only","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Diagnosis.isValidDiagnosis(\"Asthma and allergies\")); // alphanumeric and spaces","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Diagnosis.isValidDiagnosis(\"Acute Upper Respiratory Infection\")); // long diagnosis","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    public void equals() {","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        Diagnosis diagnosis \u003d new Diagnosis(\"diagnosis\");","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        Diagnosis diagnosisCopy \u003d new Diagnosis(\"diagnosis\");","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        Diagnosis diagnosis2 \u003d new Diagnosis(\"diagnosis2\");","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        assertEquals(diagnosis, diagnosis);","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        assertEquals(diagnosis, diagnosisCopy);","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        // different diagnosis -\u003e returns false","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        assertNotEquals(diagnosis, diagnosis2);","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validDiagnosis_returnsDiagnosis() {","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        String diagnosis \u003d \"diagnosis\";","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        Diagnosis validDiagnosis \u003d new Diagnosis(diagnosis);","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        assertEquals(validDiagnosis.getValue(), diagnosis);","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"owen-yap":39,"vigonometry":25}},{"path":"src/test/java/seedu/address/model/person/patient/HeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class HeightTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    private static final String VALID_HEIGHT \u003d \"1.75\";","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"    private static final String INVALID_HEIGHT \u003d \"1.7501\";","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"    private static final String BLANK_HEIGHT \u003d \"\";","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Height(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    public void constructor_invalidHeight_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Height(INVALID_HEIGHT));","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    public void isValidHeight() {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        // null height","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e Height.isValidHeight(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        // invalid heights","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Height.isValidHeight(\"\")); // empty string","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Height.isValidHeight(\" \")); // spaces only","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Height.isValidHeight(\"1\")); // less than 2 decimal places","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Height.isValidHeight(\"1.0\")); // less than 2 decimal places","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Height.isValidHeight(\"1.7501\")); // more than 2 decimal places","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Height.isValidHeight(\"1.750.5\")); // multiple decimal points","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Height.isValidHeight(\"1.75a\")); // non-numeric characters","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        // valid heights","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Height.isValidHeight(\"1.70\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Height.isValidHeight(\"2.00\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"    public void equals() {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"        Height height1 \u003d new Height(VALID_HEIGHT);","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        Height height2 \u003d new Height(VALID_HEIGHT);","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        assertTrue(height1.equals(height1));","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"        assertTrue(height1.equals(height2));","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        assertFalse(height1.equals(\"1.75\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"        assertFalse(height1.equals(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"    public void toString_validHeight_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"        Height height \u003d new Height(VALID_HEIGHT);","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        assertEquals(height.toString(), \"1.75 m\");","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validHeight_returnsHeight() {","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"        Height height \u003d new Height(VALID_HEIGHT);","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"        assertEquals(height.getValue(), VALID_HEIGHT);","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"owen-yap":69,"vigonometry":6}},{"path":"src/test/java/seedu/address/model/person/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DIAGNOSIS_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_YANNIE;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalPatients.YANNIE;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import static seedu.address.testutil.TypicalPatients.ZAYDEN;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"public class PatientTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getTags().remove(0));","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    public void isSamePatient() {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ZAYDEN.isSamePatient(ZAYDEN));","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.isSamePatient(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        Patient editedZayden \u003d new PatientBuilder(ZAYDEN).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"                .withHeight(VALID_HEIGHT_BOB).withWeight(VALID_WEIGHT_BOB).withDiagnosis(VALID_DIAGNOSIS_BOB)","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"                .withStatus(VALID_STATUS_BOB).withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ZAYDEN.isSamePatient(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        editedZayden \u003d new PatientBuilder(ZAYDEN).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.isSamePatient(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        Patient editedYannie \u003d new PatientBuilder(YANNIE).withName(VALID_NAME_YANNIE.toLowerCase()).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"        assertFalse(YANNIE.isSamePatient(editedYannie));","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"        editedYannie \u003d new PatientBuilder(YANNIE).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        assertFalse(YANNIE.isSamePatient(editedYannie));","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"    public void equals() {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"        Patient zaydenCopy \u003d new PatientBuilder(ZAYDEN).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ZAYDEN.equals(zaydenCopy));","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        assertTrue(ZAYDEN.equals(ZAYDEN));","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(5));","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(YANNIE));","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        Patient editedZayden \u003d new PatientBuilder(ZAYDEN).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"        editedZayden \u003d new PatientBuilder(ZAYDEN).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"        editedZayden \u003d new PatientBuilder(ZAYDEN).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"        // different height -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"        editedZayden \u003d new PatientBuilder(ZAYDEN).withHeight(VALID_HEIGHT_BOB).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        // different weight -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"        editedZayden \u003d new PatientBuilder(ZAYDEN).withWeight(VALID_WEIGHT_BOB).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"        // different diagnosis -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"        editedZayden \u003d new PatientBuilder(ZAYDEN).withDiagnosis(VALID_DIAGNOSIS_BOB).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"        editedZayden \u003d new PatientBuilder(ZAYDEN).withStatus(VALID_STATUS_BOB).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"        editedZayden \u003d new PatientBuilder(ZAYDEN).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"        editedZayden \u003d new PatientBuilder(ZAYDEN).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"        assertFalse(ZAYDEN.equals(editedZayden));","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"owen-yap":113}},{"path":"src/test/java/seedu/address/model/person/patient/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class RemarkTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public void constructor_invalidRemark_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"        String invalidRemark \u003d \"\";","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemark));","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    public void isValidRemark() {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        // invalid remark","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Remark.isValidRemark(\"\")); // empty string","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Remark.isValidRemark(\" \")); // spaces only","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Remark.isValidRemark(\"       \")); // many spaces","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        // valid remark","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Remark.isValidRemark(\"@#$%\")); // special characters","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Remark.isValidRemark(\"-123\")); // numbers","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Remark.isValidRemark(\"remark with spaces \")); // ends with spaces","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Remark.isValidRemark(\" remark with spaces\")); // starts with spaces","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Remark.isValidRemark(\"Diabetes\")); // alphanumeric only","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Remark.isValidRemark(\"Asthma and allergies\")); // alphanumeric and spaces","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Remark.isValidRemark(\"Acute Upper Respiratory Infection\")); // long remark","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validRemark_returnsRemark() {","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        String remark \u003d \"Asthma\";","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        Remark validRemark \u003d new Remark(remark);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        assertEquals(validRemark.getValue(), remark);","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"    public void toString_validRemark_returnsRemark() {","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        String remark \u003d \"Asthma\";","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        Remark validRemark \u003d new Remark(remark);","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        assertEquals(validRemark.toString(), remark);","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"owen-yap":41,"vigonometry":15}},{"path":"src/test/java/seedu/address/model/person/patient/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"public class StatusTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"        String invalidStatus \u003d \"Invalid Status\";","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    public void isValidStatus() {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"        // valid statuses","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Status.isValidStatus(\"Inpatient\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Status.isValidStatus(\"Outpatient\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Status.isValidStatus(\"Observation\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Status.isValidStatus(\"Emergency Department\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Status.isValidStatus(\"Intensive Care Unit\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Status.isValidStatus(\"Transitional Care\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Status.isValidStatus(\"inpatient\")); // case insensitive","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Status.isValidStatus(\"InPatient\")); // case insensitive","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        // invalid statuses","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Status.isValidStatus(\"Invalid Status\")); // invalid status string","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validStatus_returnsStatus() {","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        //valid statuses","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        Status status1 \u003d new Status(\"Inpatient\");","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        Status status2 \u003d new Status(\"Outpatient\");","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"        Status status3 \u003d new Status(\"Observation\");","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        Status status4 \u003d new Status(\"Emergency Department\");","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        Status status5 \u003d new Status(\"Intensive Care Unit\");","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        Status status6 \u003d new Status(\"Transitional Care\");","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"Inpatient\", status1.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"Outpatient\", status2.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"Observation\", status3.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"Emergency Department\", status4.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"Intensive Care Unit\", status5.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"Transitional Care\", status6.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"owen-yap":40,"vigonometry":19}},{"path":"src/test/java/seedu/address/model/person/patient/WeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"public class WeightTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Weight(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"    public void constructor_invalidWeight_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"        String invalidWeight \u003d \"70.000\";","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Weight(invalidWeight));","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    public void isValidWeight() {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"        assertThrows(NullPointerException.class, () -\u003e Weight.isValidWeight(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        // invalid weights","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Weight.isValidWeight(\"\")); // empty string","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Weight.isValidWeight(\" \")); // spaces only","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Weight.isValidWeight(\"1.000\")); // more than two decimal places","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Weight.isValidWeight(\"0.0\")); // single digit decimal fraction","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Weight.isValidWeight(\"0.000\")); // three digit decimal fraction","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Weight.isValidWeight(\"1.234\")); // more than two decimal places","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Weight.isValidWeight(\"-60.00\")); // negative weight","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        assertFalse(Weight.isValidWeight(\"0\")); // 0 weight","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        // valid weights","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Weight.isValidWeight(\"0.1\")); // smallest possible value","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Weight.isValidWeight(\"1.0\")); // whole number","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Weight.isValidWeight(\"60\")); // no decimal point","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Weight.isValidWeight(\"600000\")); // large numbers","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Weight.isValidWeight(\"60.1\")); // nonzero decimal fraction","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        assertTrue(Weight.isValidWeight(\"100.5\")); // larger value","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"    public void getValue_validWeight_returnsWeight() {","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        //valid weights","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"        Weight weight1 \u003d new Weight(\"0.1\");","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"        Weight weight2 \u003d new Weight(\"1.0\");","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        Weight weight3 \u003d new Weight(\"60\");","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        Weight weight4 \u003d new Weight(\"600000\");","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        Weight weight5 \u003d new Weight(\"60.1\");","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        Weight weight6 \u003d new Weight(\"100.5\");","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"0.1\", weight1.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"1.0\", weight2.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"60\", weight3.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"600000\", weight4.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"60.1\", weight5.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        assertEquals(\"100.5\", weight6.getValue());","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"owen-yap":45,"vigonometry":19}},{"path":"src/test/java/seedu/address/model/util/LoaderUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.doctor.Specialty;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.doctor.Yoe;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Diagnosis;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Height;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Remark;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.patient.Weight;","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"public class LoaderUtilTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    public void getTagSet_validTags_success() {","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"        tags.add(new Tag(\"tag1\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"        tags.add(new Tag(\"tag2\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"        tags.add(new Tag(\"tag3\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"        assertEquals(tags, LoaderUtil.getTagSet(\"tag1\", \"tag2\", \"tag3\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    public void getTagSet_emptyTags_success() {","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"        assertEquals(tags, LoaderUtil.getTagSet());","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"    public void getDoctorSet_validDoctors_success() {","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        Set\u003cDoctor\u003e doctors \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"        doctors.add(new Doctor(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"                new Specialty(\"Cardiology\"), new Yoe(\"5\"), LoaderUtil.getTagSet(\"intern\"))","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"        );","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"        doctors.add(new Doctor(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"vigonometry"},"content":"                new Specialty(\"Neurology\"), new Yoe(\"10\"), LoaderUtil.getTagSet(\"resident\")));","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"        assertEquals(doctors, LoaderUtil.getDoctorSet(new Doctor(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"                new Specialty(\"Cardiology\"), new Yoe(\"5\"), LoaderUtil.getTagSet(\"intern\")),","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"                new Doctor(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"                new Specialty(\"Neurology\"), new Yoe(\"10\"), LoaderUtil.getTagSet(\"resident\"))));","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    public void getPatientSet_validPatients_success() {","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"        Set\u003cPatient\u003e patients \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"        patients.add(new Patient(new Name(\"Bob Choo\"), new Phone(\"94351253\"), new Email(\"bchoo@gmail.com\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"                new Height(\"1.70\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"                new Weight(\"70.0\"), new Diagnosis(\"Cancer\"), new Status(\"Intensive Care Unit\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"                new Remark(\"Prescribed chemo\"), LoaderUtil.getTagSet(\"pendingReview\")));","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"        assertEquals(patients, LoaderUtil.getPatientSet(new Patient(new Name(\"Bob Choo\"), new Phone(\"94351253\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"                new Email(\"bchoo@gmail.com\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"                new Height(\"1.70\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"                new Weight(\"70.0\"), new Diagnosis(\"Cancer\"), new Status(\"Intensive Care Unit\"),","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"                new Remark(\"Prescribed chemo\"), LoaderUtil.getTagSet(\"pendingReview\"))));","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"vigonometry":73}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedDoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.storage.JsonAdaptedDoctor.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalDoctors.ALICE;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.doctor.Specialty;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.doctor.Yoe;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"public class JsonAdaptedDoctorTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_SPECIALTY \u003d \"#lung-specialist\";","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String EMPTY_SPECIALTY \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_YOE_STRING \u003d \"test\";","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_YOE_NEGATIVE \u003d \"-1\";","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_YOE_DECIMAL \u003d \"2.5\";","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_YOE_TOO_HIGH \u003d \"100\";","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_NAME \u003d ALICE.getName().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_PHONE \u003d ALICE.getPhone().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_EMAIL \u003d ALICE.getEmail().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ALICE.getTags().stream()","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    private static final String VALID_SPECIALTY \u003d ALICE.getSpecialty().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    private static final String VALID_YOE \u003d ALICE.getYoe().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final List\u003cJsonAdaptedPatient\u003e VALID_PATIENTS \u003d ALICE.getPatients().stream()","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"            .map(JsonAdaptedPatient::new)","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_validDoctorDetails_returnsDoctor() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(ALICE);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"        assertEquals(ALICE, doctor.toModelType());","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidSpecialty_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_SPECIALTY,","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_YOE, VALID_TAGS, VALID_PATIENTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Specialty.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_emptySpecialty_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, EMPTY_SPECIALTY,","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_YOE, VALID_TAGS, VALID_PATIENTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Specialty.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_nullSpecialty_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_YOE, VALID_TAGS, VALID_PATIENTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Specialty.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidYoeAsString_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_SPECIALTY,","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"                INVALID_YOE_STRING, VALID_TAGS, VALID_PATIENTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Yoe.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidYoeAsNegative_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_SPECIALTY,","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"                INVALID_YOE_NEGATIVE, VALID_TAGS, VALID_PATIENTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Yoe.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidYoeAsDecimal_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_SPECIALTY,","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"                INVALID_YOE_DECIMAL, VALID_TAGS, VALID_PATIENTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Yoe.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidYoeTooHigh_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_SPECIALTY,","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"                INVALID_YOE_TOO_HIGH, VALID_TAGS, VALID_PATIENTS);","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Yoe.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_nullYoe_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedDoctor doctor \u003d new JsonAdaptedDoctor(","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_SPECIALTY,","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"                null, VALID_TAGS, VALID_PATIENTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"                Yoe.class.getSimpleName());","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, doctor::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"praveenkrishna0512":114,"vigonometry":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.storage.JsonAdaptedPatient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalPatients.ZAYDEN;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Diagnosis;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Height;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Remark;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Weight;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_HEIGHT_STRING \u003d \"five\";","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_HEIGHT_NEGATIVE \u003d \"-3\";","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_HEIGHT_TOO_LITTLE_DECIMAL_POINT \u003d \"2.1\";","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_HEIGHT_TOO_MANY_DECIMAL_POINT \u003d \"2.144\";","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_WEIGHT_STRING \u003d \"thirty\";","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_WEIGHT_NEGATIVE \u003d \"-30\";","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_WEIGHT_TOO_MANY_DECIMAL_POINT \u003d \"30.000\";","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_DIAGNOSIS \u003d \"#$%thyroid\";","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_STATUS \u003d \"Complaining\";","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String INVALID_REMARK \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_NAME \u003d ZAYDEN.getName().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_PHONE \u003d ZAYDEN.getPhone().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_EMAIL \u003d ZAYDEN.getEmail().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ZAYDEN.getTags().stream()","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"    private static final String VALID_HEIGHT \u003d ZAYDEN.getHeight().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"    private static final String VALID_WEIGHT \u003d ZAYDEN.getWeight().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"    private static final String VALID_DIAGNOSIS \u003d ZAYDEN.getDiagnosis().getValue();","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_STATUS \u003d ZAYDEN.getStatus().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_REMARK \u003d ZAYDEN.getRemark().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_validPatientDetails_returnsPatient() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(ZAYDEN);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"        assertEquals(ZAYDEN, patient.toModelType());","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidHeightString_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_HEIGHT_STRING, VALID_WEIGHT,","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Height.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidHeightNegative_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_HEIGHT_NEGATIVE, VALID_WEIGHT,","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Height.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidHeightTooManyDecimalPoint_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_HEIGHT_TOO_MANY_DECIMAL_POINT,","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_WEIGHT, VALID_DIAGNOSIS, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Height.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidHeightTooLittleDecimalPoint_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_HEIGHT_TOO_LITTLE_DECIMAL_POINT,","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_WEIGHT, VALID_DIAGNOSIS, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Height.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_nullHeight_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_WEIGHT,","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"                Height.class.getSimpleName());","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidWeightString_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT, INVALID_WEIGHT_STRING,","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Weight.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidWeightNegative_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT, INVALID_WEIGHT_NEGATIVE,","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Weight.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidWeightTooManyDecimalPoint_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT,","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"                INVALID_WEIGHT_TOO_MANY_DECIMAL_POINT, VALID_DIAGNOSIS, VALID_STATUS,","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Weight.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_nullWeight_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT, null,","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"                Weight.class.getSimpleName());","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidDiagnosis_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT, VALID_WEIGHT,","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"                INVALID_DIAGNOSIS, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Diagnosis.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_nullDiagnosis_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT, VALID_WEIGHT,","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":"                null, VALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"praveenkrishna0512"},"content":"                Diagnosis.class.getSimpleName());","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT, VALID_WEIGHT,","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, INVALID_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT, VALID_WEIGHT,","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, null, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"praveenkrishna0512"},"content":"                Status.class.getSimpleName());","lastModifiedDate":"2023-04-07"},{"lineNumber":169,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":170,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":171,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":173,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidRemark_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":174,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-04-07"},{"lineNumber":175,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT, VALID_WEIGHT,","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, VALID_STATUS, INVALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":177,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d Remark.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":181,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":182,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":183,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(","lastModifiedDate":"2023-04-07"},{"lineNumber":184,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_HEIGHT, VALID_WEIGHT,","lastModifiedDate":"2023-04-07"},{"lineNumber":185,"author":{"gitId":"praveenkrishna0512"},"content":"                VALID_DIAGNOSIS, VALID_STATUS, null, VALID_TAGS);","lastModifiedDate":"2023-04-07"},{"lineNumber":186,"author":{"gitId":"praveenkrishna0512"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-04-07"},{"lineNumber":187,"author":{"gitId":"praveenkrishna0512"},"content":"                Remark.class.getSimpleName());","lastModifiedDate":"2023-04-07"},{"lineNumber":188,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"praveenkrishna0512":189,"vigonometry":3}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().getValue();","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_TAGS);","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidTags);","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"owen-yap":7,"praveenkrishna0512":3,"-":82}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalDoctors.ALICE;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalDoctors.ELLA;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalDoctors.FIONA;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Optional;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"            \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    private Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"                .readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"                DataConversionException.class, () -\u003e readAddressBook(","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"                        \"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    public void readAddressBook_invalidDoctorAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"                DataConversionException.class, () -\u003e readAddressBook(","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"                        \"invalidDoctorAddressBook.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"    public void readAddressBook_invalidAndValidDoctorAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"                DataConversionException.class, () -\u003e readAddressBook(","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"                        \"invalidAndValidDoctorAddressBook.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"    public void readAddressBook_invalidPatientAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"                DataConversionException.class, () -\u003e readAddressBook(","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"                        \"invalidPatientAddressBook.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"    public void readAddressBook_invalidAndValidPatientAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"                DataConversionException.class, () -\u003e readAddressBook(","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"                        \"invalidAndValidPatientAddressBook.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"    public void readAddressBook_noUnassignedPatientsAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"                DataConversionException.class, () -\u003e readAddressBook(","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"                        \"noUnassignedPatientsAddressBook.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"    public void readAddressBook_noDoctorsAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"                DataConversionException.class, () -\u003e readAddressBook(","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"                        \"noDoctorsAddressBook.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"        original.addDoctor(ELLA);","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        original.removeDoctor(ALICE);","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"        original.addDoctor(FIONA);","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"                NullPointerException.class, () -\u003e saveAddressBook(","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"                        null, \"SomeFile.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"                new AddressBook(), null));","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"praveenkrishna0512":61,"-":88}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"            \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path TYPICAL_DOCTORS_FILE \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"            TEST_DATA_FOLDER.resolve(\"typicalDoctorsAddressBook.json\");","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path INVALID_DOCTOR_FILE \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"            TEST_DATA_FOLDER.resolve(\"invalidDoctorAddressBook.json\");","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path DUPLICATE_DOCTOR_FILE \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateDoctorAddressBook.json\");","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path INVALID_PATIENT_FILE \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"            TEST_DATA_FOLDER.resolve(\"invalidPatientAddressBook.json\");","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path DUPLICATE_UNASSIGNED_PATIENT_FILE \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateUnassignedPatientAddressBook.json\");","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path DUPLICATE_ASSIGNED_PATIENT_FILE \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateAssignedPatientAddressBook.json\");","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path PATIENT_ASSIGNED_AND_UNASSIGNED_FILE \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"            TEST_DATA_FOLDER.resolve(\"patientAssignedAndUnassignedAddressBook.json\");","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_typicalDoctorsFile_success() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_DOCTORS_FILE,","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"        AddressBook typicalDoctorsAddressBook \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        assertEquals(addressBookFromFile, typicalDoctorsAddressBook);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidDoctorFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_DOCTOR_FILE,","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_duplicateDoctors_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_DOCTOR_FILE,","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType,","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"                JsonSerializableAddressBook.MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_invalidPatientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PATIENT_FILE,","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_duplicateAssignedPatients_success() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"                DUPLICATE_ASSIGNED_PATIENT_FILE,","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        AddressBook typicalDoctorsAddressBook \u003d getTypicalAddressBook();","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"        assertEquals(addressBookFromFile, typicalDoctorsAddressBook);","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_duplicateUnassignedPatients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"                DUPLICATE_UNASSIGNED_PATIENT_FILE,","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType,","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"                JsonSerializableAddressBook.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"    public void toModelType_patientAssignedAndUnassigned_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"                PATIENT_ASSIGNED_AND_UNASSIGNED_FILE,","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"praveenkrishna0512":63,"-":31}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\",","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"            \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"    public void readUserPrefs_notJsonFormat_throwsDataConversionException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"                \"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500,","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"                300, 100));","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"docedex.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"                null, \"SomeFile.json\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"                new UserPrefs(), null));","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"        original.setGuiSettings(new GuiSettings(1200,","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"                200, 0, 2));","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"        original.setGuiSettings(new GuiSettings(5,","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"                5, 5, 5));","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"praveenkrishna0512":18,"-":113}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"                new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"                new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        original.setGuiSettings(new GuiSettings(300,","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"                600, 4, 6));","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"praveenkrishna0512":7,"-":64}},{"path":"src/test/java/seedu/address/testutil/DoctorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Specialty;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Yoe;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.util.LoaderUtil;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":" * A utility class to help with building Doctor objects.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"public class DoctorBuilder {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_NAME \u003d \"John Appleseed\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_EMAIL \u003d \"johna@nuhs.org\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_SPECIALTY \u003d \"General Medicine\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"    public static final String DEFAULT_YOE \u003d \"5\";","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":"    private Name name;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":"    private Phone phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"    private Email email;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"    private Specialty specialty;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    private Yoe yoe;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    private Set\u003cPatient\u003e patients;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code DoctorBuilder} with the default details.","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder() {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"vigonometry"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"vigonometry"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"        specialty \u003d new Specialty(DEFAULT_SPECIALTY);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"vigonometry"},"content":"        yoe \u003d new Yoe(DEFAULT_YOE);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"        patients \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"     * Initializes the DoctorBuilder with the data of {@code doctorToCopy}.","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder(Doctor doctorToCopy) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"vigonometry"},"content":"        name \u003d doctorToCopy.getName();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"vigonometry"},"content":"        phone \u003d doctorToCopy.getPhone();","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"vigonometry"},"content":"        email \u003d doctorToCopy.getEmail();","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"vigonometry"},"content":"        specialty \u003d doctorToCopy.getSpecialty();","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"vigonometry"},"content":"        yoe \u003d doctorToCopy.getYoe();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"        tags \u003d new HashSet\u003c\u003e(doctorToCopy.getTags());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"        patients \u003d new HashSet\u003c\u003e(doctorToCopy.getPatients());","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Name} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withName(String name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"        this.tags \u003d LoaderUtil.getTagSet(tags);","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Phone} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Email} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Specialty} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withSpecialty(String specialty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"vigonometry"},"content":"        this.specialty \u003d new Specialty(specialty);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"vigonometry"},"content":"     * Sets the {@code Yoe} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"vigonometry"},"content":"    public DoctorBuilder withYoe(String yoe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"vigonometry"},"content":"        this.yoe \u003d new Yoe(yoe);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"vigonometry"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"     * Adds the list of {@code Patient} to the patient list","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"     * of the {@code Doctor} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"    public DoctorBuilder withPatients(Patient ... patients) {","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"vigonometry"},"content":"        this.patients \u003d LoaderUtil.getPatientSet(patients);","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"vigonometry"},"content":"    public Doctor build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Doctor(name, phone, email, specialty, yoe, tags, patients);","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":3,"vigonometry":105,"praveenkrishna0512":16}},{"path":"src/test/java/seedu/address/testutil/EditDoctorDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditDoctorCommand.EditDoctorDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Specialty;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Yoe;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":" * A utility class to help with building EditDoctorDescriptor objects.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"public class EditDoctorDescriptorBuilder {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":"    private EditDoctorDescriptor descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder(EditDoctorDescriptor descriptor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"        this.descriptor \u003d new EditDoctorDescriptor(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"     * Returns an {@code EditDoctorDescriptor} with fields containing {@code doctor}\u0027s details","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder(Doctor doctor) {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditDoctorDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"        descriptor.setName(doctor.getName());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"        descriptor.setPhone(doctor.getPhone());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        descriptor.setEmail(doctor.getEmail());","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        descriptor.setSpecialty(doctor.getSpecialty());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        descriptor.setYoe(doctor.getYoe());","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        descriptor.setTags(doctor.getTags());","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"        descriptor.setPatients(doctor.getPatients());","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Name} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Phone} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Email} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Specialty} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withSpecialty(String specialty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"        descriptor.setSpecialty(new Specialty(specialty));","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Yoe} of the {@code EditDoctorDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withYoe(String yoe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"        descriptor.setYoe(new Yoe(yoe));","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditDoctorDescriptor}","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"     * that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"    public EditDoctorDescriptor build() {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"        return descriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":98,"praveenkrishna0512":1}},{"path":"src/test/java/seedu/address/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"owen-yap"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"owen-yap"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"owen-yap"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"owen-yap"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"owen-yap"},"content":"import seedu.address.logic.commands.EditPatientCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Diagnosis;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Height;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Remark;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.patient.Weight;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"owen-yap"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"owen-yap"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"owen-yap"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"owen-yap"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"owen-yap"},"content":"    private EditPatientDescriptor descriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"owen-yap"},"content":"        this.descriptor \u003d new EditPatientDescriptor(descriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"owen-yap"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"owen-yap"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"owen-yap"},"content":"        descriptor.setEmail(patient.getEmail());","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"owen-yap"},"content":"        descriptor.setHeight(patient.getHeight());","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"owen-yap"},"content":"        descriptor.setWeight(patient.getWeight());","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"        descriptor.setDiagnosis(patient.getDiagnosis());","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"owen-yap"},"content":"        descriptor.setStatus(patient.getStatus());","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"        descriptor.setRemark(patient.getRemark());","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"owen-yap"},"content":"        descriptor.setTags(patient.getTags());","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"        descriptor.setDoctors(patient.getDoctors());","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"owen-yap"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"owen-yap"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Email} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"owen-yap"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Height} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder withHeight(String height) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"owen-yap"},"content":"        descriptor.setHeight(new Height(height));","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Weight} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder withWeight(String weight) {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"owen-yap"},"content":"        descriptor.setWeight(new Weight(weight));","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Diagnosis} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder withDiagnosis(String diagnosis) {","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"owen-yap"},"content":"        descriptor.setDiagnosis(new Diagnosis(diagnosis));","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Status} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"owen-yap"},"content":"     * Sets the {@code Remark} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"owen-yap"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"owen-yap"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"owen-yap"},"content":"     * that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"owen-yap"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"owen-yap"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"owen-yap"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"owen-yap"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"owen-yap"},"content":"        return descriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"owen-yap"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"owen-yap":128,"praveenkrishna0512":1}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Diagnosis;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Height;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Remark;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Weight;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.util.LoaderUtil;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":" * A utility class to help with building {@code Patient} objects.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"praveenkrishna0512"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String DEFAULT_NAME \u003d \"Bobby Bob\";","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String DEFAULT_PHONE \u003d \"12345678\";","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String DEFAULT_EMAIL \u003d \"boby@gmail.org\";","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"owen-yap"},"content":"    public static final String DEFAULT_HEIGHT \u003d \"1.70\";","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String DEFAULT_WEIGHT \u003d \"65\";","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String DEFAULT_DIAGNOSIS \u003d \"Asthma\";","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String DEFAULT_STATUS \u003d Status.getDummyValidStatus();","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final String DEFAULT_REMARK \u003d \"Prescribed 2 doses of budesonide, \"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"            + \"to be taken morning and night daily.\";","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"    private Name name;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"    private Phone phone;","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"    private Email email;","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"    private Height height;","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"    private Weight weight;","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"    private Diagnosis diagnosis;","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    private Status status;","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"    private Remark remark;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"    private Set\u003cDoctor\u003e doctors;","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"        height \u003d new Height(DEFAULT_HEIGHT);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"        weight \u003d new Weight(DEFAULT_WEIGHT);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"        diagnosis \u003d new Diagnosis(DEFAULT_DIAGNOSIS);","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"        doctors \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"        height \u003d patientToCopy.getHeight();","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"praveenkrishna0512"},"content":"        weight \u003d patientToCopy.getWeight();","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"        diagnosis \u003d patientToCopy.getDiagnosis();","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"        status \u003d patientToCopy.getStatus();","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"        remark \u003d patientToCopy.getRemark();","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"        doctors \u003d new HashSet\u003c\u003e(patientToCopy.getDoctors());","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"        this.tags \u003d LoaderUtil.getTagSet(tags);","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"praveenkrishna0512"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"praveenkrishna0512"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder withEmail(String email) {","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"praveenkrishna0512"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"     * Sets the {@code Height} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder withHeight(String height) {","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        this.height \u003d new Height(height);","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"     * Sets the {@code Weight} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder withWeight(String weight) {","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"        this.weight \u003d new Weight(weight);","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"     * Sets the {@code Diagnosis} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder withDiagnosis(String diagnosis) {","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"        this.diagnosis \u003d new Diagnosis(diagnosis);","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"praveenkrishna0512"},"content":"     * Sets the {@code Status} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder withStatus(String status) {","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"praveenkrishna0512"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"praveenkrishna0512"},"content":"     * Sets the {@code Remark} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"praveenkrishna0512"},"content":"    public PatientBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"praveenkrishna0512"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"praveenkrishna0512"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"praveenkrishna0512"},"content":"     * Builds the {@code Patient}.","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a Patient object.","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"praveenkrishna0512"},"content":"    public Patient build() {","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"praveenkrishna0512"},"content":"        return new Patient(name, phone, email, height,","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"praveenkrishna0512"},"content":"                weight, diagnosis, status, remark, tags, doctors);","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"owen-yap":1,"praveenkrishna0512":157,"vigonometry":2}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.util.LoaderUtil;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"        this.tags \u003d LoaderUtil.getTagSet(tags);","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":80,"author":{"gitId":"owen-yap"},"content":"        return new Person(name, phone, email, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"owen-yap":1,"vigonometry":2,"-":80}},{"path":"src/test/java/seedu/address/testutil/TypicalDoctors.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigonometry"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIALTY_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YOE_AMY;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YOE_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalPatients.ZAYDEN;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"import static seedu.address.testutil.TypicalPatients.getUnassignedPatient;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"vigonometry"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"vigonometry"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"vigonometry"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.person.doctor.Doctor;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"vigonometry"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"vigonometry"},"content":" * A utility class containing a list of {@code Doctor} objects to be used in tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"vigonometry"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"vigonometry"},"content":"public class TypicalDoctors {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor ALICE \u003d new DoctorBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"vigonometry"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"vigonometry"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"vigonometry"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"vigonometry"},"content":"            .withSpecialty(\"General Medicine\")","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"vigonometry"},"content":"            .withYoe(\"5\")","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"vigonometry"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor BENSON \u003d new DoctorBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withSpecialty(\"Anaesthesia\")","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"            .withYoe(\"7\").withTags(\"colleagues\", \"friends\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor CARL \u003d new DoctorBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"carlk@example.com\").withSpecialty(\"Orthopaedic\").withYoe(\"9\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor DANIEL \u003d new DoctorBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"danielm@example.com\").withSpecialty(\"Neurosurgery\").withYoe(\"25\")","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"            .withTags(\"HoD\").withPatients(ZAYDEN).build();","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"    // Manually added","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final Doctor ELLA \u003d new DoctorBuilder().withName(\"Ella Belle\").withPhone(\"87345633\")","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"ellab@example.com\").withSpecialty(\"Lung Specialist\").withYoe(\"5\")","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"            .withTags(\"DepartmentHead\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final Doctor FIONA \u003d new DoctorBuilder().withName(\"Fiona Ellen\").withPhone(\"8398631\")","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"fiona.ellen@example.com\").withSpecialty(\"Orthopaedic\").withYoe(\"15\")","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"            .withTags(\"Surgeon\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"vigonometry"},"content":"    // Manually added - Doctor\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor AMY \u003d new DoctorBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"vigonometry"},"content":"            .withEmail(VALID_EMAIL_AMY).withSpecialty(VALID_SPECIALTY_AMY).withYoe(VALID_YOE_AMY)","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"vigonometry"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"vigonometry"},"content":"    public static final Doctor BOB \u003d new DoctorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"vigonometry"},"content":"            .withEmail(VALID_EMAIL_BOB).withSpecialty(VALID_SPECIALTY_BOB).withYoe(VALID_YOE_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"vigonometry"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"vigonometry"},"content":"            .build();","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"vigonometry"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"vigonometry"},"content":"    private TypicalDoctors() {} // prevents instantiation","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"vigonometry"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"vigonometry"},"content":"     * Returns an {@code AddressBook} with all the typical doctors.","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"vigonometry"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"vigonometry"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"vigonometry"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"vigonometry"},"content":"        for (Doctor doctor : getTypicalDoctors()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"vigonometry"},"content":"            ab.addDoctor(doctor);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"            for (Patient patient : doctor.getPatients()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"                patient.assignDoctor(doctor);","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"                ab.addPatient(patient);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"vigonometry"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"        Patient unassignedPatient \u003d getUnassignedPatient();","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"        ab.addPatient(unassignedPatient);","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"vigonometry"},"content":"        return ab;","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"    public static List\u003cDoctor\u003e getTypicalDoctors() {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"praveenkrishna0512"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"praveenkrishna0512"},"content":"                new DoctorBuilder(ALICE).build(),","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"praveenkrishna0512"},"content":"                new DoctorBuilder(BENSON).build(),","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"praveenkrishna0512"},"content":"                new DoctorBuilder(DANIEL).build(),","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"                new DoctorBuilder(CARL).build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"vigonometry"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"vigonometry"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"owen-yap":1,"vigonometry":65,"praveenkrishna0512":29}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"vigonometry":1,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPatients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"praveenkrishna0512"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DIAGNOSIS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEIGHT_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"vigonometry"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEIGHT_BOB;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"praveenkrishna0512"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"owen-yap"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"praveenkrishna0512"},"content":"import seedu.address.model.person.patient.Status;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"vigonometry"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"praveenkrishna0512"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"praveenkrishna0512"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"praveenkrishna0512"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"praveenkrishna0512"},"content":"public class TypicalPatients {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final Patient ZAYDEN \u003d new PatientBuilder()","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"praveenkrishna0512"},"content":"            .withName(\"Zayden Lim\")","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"zayden@gmail.com\")","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"praveenkrishna0512"},"content":"            .withPhone(\"23456978\")","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"praveenkrishna0512"},"content":"            .withTags(\"teenager\")","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"owen-yap"},"content":"            .withHeight(\"1.60\")","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"praveenkrishna0512"},"content":"            .withWeight(\"64\")","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"praveenkrishna0512"},"content":"            .withDiagnosis(\"Asthma\")","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"praveenkrishna0512"},"content":"            .withStatus(Status.getDummyValidStatus(0))","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"praveenkrishna0512"},"content":"            .withRemark(\"Compliant\")","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"praveenkrishna0512"},"content":"            .build();","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final Patient YANNIE \u003d new PatientBuilder()","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"praveenkrishna0512"},"content":"            .withName(\"Yannie Teo\")","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"yannie@hotmail.com\")","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"praveenkrishna0512"},"content":"            .withPhone(\"23456234\")","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"praveenkrishna0512"},"content":"            .withTags(\"highPriority\")","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"praveenkrishna0512"},"content":"            .withHeight(\"1.57\")","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"praveenkrishna0512"},"content":"            .withWeight(\"56\")","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"praveenkrishna0512"},"content":"            .withDiagnosis(\"Cancer\")","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"praveenkrishna0512"},"content":"            .withStatus(Status.getDummyValidStatus(1))","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"praveenkrishna0512"},"content":"            .withRemark(\"Special Attention Needed\")","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"praveenkrishna0512"},"content":"            .build();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final Patient XANNY \u003d new PatientBuilder()","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"praveenkrishna0512"},"content":"            .withName(\"Xanny Peters\")","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"xannypeters@outlook.com\")","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"praveenkrishna0512"},"content":"            .withPhone(\"25466234\")","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"praveenkrishna0512"},"content":"            .withTags(\"lowPriority\")","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"owen-yap"},"content":"            .withHeight(\"1.82\")","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"praveenkrishna0512"},"content":"            .withWeight(\"76\")","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"praveenkrishna0512"},"content":"            .withDiagnosis(\"Pneumonia\")","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"praveenkrishna0512"},"content":"            .withStatus(Status.getDummyValidStatus(3))","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"praveenkrishna0512"},"content":"            .withRemark(\"Needs to be warded\")","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"praveenkrishna0512"},"content":"            .build();","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final Patient WALTER \u003d new PatientBuilder()","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"praveenkrishna0512"},"content":"            .withName(\"Walter White\")","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"breakingbad@outlook.com\")","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"praveenkrishna0512"},"content":"            .withPhone(\"18001800\")","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"praveenkrishna0512"},"content":"            .withTags(\"severePriority\")","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"owen-yap"},"content":"            .withHeight(\"1.91\")","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"praveenkrishna0512"},"content":"            .withWeight(\"68\")","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"praveenkrishna0512"},"content":"            .withDiagnosis(\"Eating Disorder\")","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"praveenkrishna0512"},"content":"            .withStatus(Status.getDummyValidStatus(5))","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"praveenkrishna0512"},"content":"            .withRemark(\"Check back regarding meal plan\")","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"praveenkrishna0512"},"content":"            .build();","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"praveenkrishna0512"},"content":"    // Do not assign this patient to any doctors in test scenarios","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"praveenkrishna0512"},"content":"    public static final Patient UNASSIGNED \u003d new PatientBuilder()","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"praveenkrishna0512"},"content":"            .withName(\"Rob Smith\")","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"praveenkrishna0512"},"content":"            .withEmail(\"robbie@gmail.com\")","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"praveenkrishna0512"},"content":"            .withPhone(\"12346666\")","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"praveenkrishna0512"},"content":"            .withHeight(\"1.74\")","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"praveenkrishna0512"},"content":"            .withWeight(\"63.4\")","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"praveenkrishna0512"},"content":"            .withDiagnosis(\"None\")","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"praveenkrishna0512"},"content":"            .withStatus(\"Outpatient\")","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"praveenkrishna0512"},"content":"            .withRemark(\"Non compliant\")","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"praveenkrishna0512"},"content":"            .build();","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"vigonometry"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"vigonometry"},"content":"    public static final Patient BOB \u003d new PatientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"vigonometry"},"content":"            .withEmail(VALID_EMAIL_BOB).withHeight(VALID_HEIGHT_BOB).withWeight(VALID_WEIGHT_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"vigonometry"},"content":"            .withDiagnosis(VALID_DIAGNOSIS_BOB).withStatus(VALID_STATUS_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"vigonometry"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"praveenkrishna0512"},"content":"    private TypicalPatients() {} // prevents instantiation","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"owen-yap"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"owen-yap"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"owen-yap"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"praveenkrishna0512"},"content":"    public static AddressBook getTypicalPatientsOnlyAddressBook() {","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"owen-yap"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"owen-yap"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"owen-yap"},"content":"            ab.addPatient(patient);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"owen-yap"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"owen-yap"},"content":"        return ab;","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"owen-yap"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"owen-yap"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns a list of typical patients.","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return a list of typical patients.","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"praveenkrishna0512"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"praveenkrishna0512"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"praveenkrishna0512"},"content":"                new PatientBuilder(ZAYDEN).build(),","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"praveenkrishna0512"},"content":"                new PatientBuilder(YANNIE).build(),","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"praveenkrishna0512"},"content":"                new PatientBuilder(XANNY).build(),","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"praveenkrishna0512"},"content":"                new PatientBuilder(WALTER).build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"praveenkrishna0512"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"praveenkrishna0512"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"praveenkrishna0512"},"content":"     * Returns a patient that is not assigned to any doctor","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"praveenkrishna0512"},"content":"     * in test scenarios.","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"praveenkrishna0512"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"praveenkrishna0512"},"content":"     * @return Patient an unassigned patient.","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"praveenkrishna0512"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"praveenkrishna0512"},"content":"    public static Patient getUnassignedPatient() {","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"praveenkrishna0512"},"content":"        return UNASSIGNED;","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"praveenkrishna0512"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"praveenkrishna0512"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"owen-yap":14,"praveenkrishna0512":98,"vigonometry":17}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"owen-yap"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"owen-yap"},"content":"            .withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"owen-yap"},"content":"            .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"owen-yap":10,"-":63}}]
